{"version":3,"sources":["webpack:///./src/app/layout/admin/admin-routing.module.ts","webpack:///./src/app/layout/admin/admin.module.ts","webpack:///./src/app/layout/admin/components/add-allergy/add-allergy.component.css","webpack:///./src/app/layout/admin/components/add-allergy/add-allergy.component.html","webpack:///./src/app/layout/admin/components/add-allergy/add-allergy.component.ts","webpack:///./src/app/layout/admin/components/add-city/add-city.component.css","webpack:///./src/app/layout/admin/components/add-city/add-city.component.html","webpack:///./src/app/layout/admin/components/add-city/add-city.component.ts","webpack:///./src/app/layout/admin/components/add-coupon/add-coupon.component.css","webpack:///./src/app/layout/admin/components/add-coupon/add-coupon.component.html","webpack:///./src/app/layout/admin/components/add-coupon/add-coupon.component.ts","webpack:///./src/app/layout/admin/components/add-deactivate-reason/add-deactivate-reason.component.css","webpack:///./src/app/layout/admin/components/add-deactivate-reason/add-deactivate-reason.component.html","webpack:///./src/app/layout/admin/components/add-deactivate-reason/add-deactivate-reason.component.ts","webpack:///./src/app/layout/admin/components/add-dose/add-dose.component.css","webpack:///./src/app/layout/admin/components/add-dose/add-dose.component.html","webpack:///./src/app/layout/admin/components/add-dose/add-dose.component.ts","webpack:///./src/app/layout/admin/components/add-info-video/add-info-video.component.css","webpack:///./src/app/layout/admin/components/add-info-video/add-info-video.component.html","webpack:///./src/app/layout/admin/components/add-info-video/add-info-video.component.ts","webpack:///./src/app/layout/admin/components/add-state/add-state.component.css","webpack:///./src/app/layout/admin/components/add-state/add-state.component.html","webpack:///./src/app/layout/admin/components/add-state/add-state.component.ts","webpack:///./src/app/layout/admin/components/agency-list/agency-list.component.css","webpack:///./src/app/layout/admin/components/agency-list/agency-list.component.html","webpack:///./src/app/layout/admin/components/agency-list/agency-list.component.ts","webpack:///./src/app/layout/admin/components/parent-list/parent-list.component.css","webpack:///./src/app/layout/admin/components/parent-list/parent-list.component.html","webpack:///./src/app/layout/admin/components/parent-list/parent-list.component.ts","webpack:///./src/app/layout/admin/components/plan-page/plan-page.component.css","webpack:///./src/app/layout/admin/components/plan-page/plan-page.component.html","webpack:///./src/app/layout/admin/components/plan-page/plan-page.component.ts","webpack:///./src/app/layout/admin/components/policy-accept-list/policy-accept-list.component.css","webpack:///./src/app/layout/admin/components/policy-accept-list/policy-accept-list.component.html","webpack:///./src/app/layout/admin/components/policy-accept-list/policy-accept-list.component.ts","webpack:///./src/app/layout/admin/components/pricing-plan/pricing-plan.component.css","webpack:///./src/app/layout/admin/components/pricing-plan/pricing-plan.component.html","webpack:///./src/app/layout/admin/components/pricing-plan/pricing-plan.component.ts","webpack:///./src/app/layout/admin/components/super-admin-dashboard/super-admin-dashboard.component.css","webpack:///./src/app/layout/admin/components/super-admin-dashboard/super-admin-dashboard.component.html","webpack:///./src/app/layout/admin/components/super-admin-dashboard/super-admin-dashboard.component.ts","webpack:///./src/app/layout/admin/components/text-plan/text-plan.component.css","webpack:///./src/app/layout/admin/components/text-plan/text-plan.component.html","webpack:///./src/app/layout/admin/components/text-plan/text-plan.component.ts"],"names":[],"mappings":"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","file":"admin-admin-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AgencyListComponent } from 'src/app/layout/admin/components/agency-list/agency-list.component';\r\nimport { PricingPlanComponent } from 'src/app/layout/admin/components/pricing-plan/pricing-plan.component';\r\nimport { PlanPageComponent } from './components/plan-page/plan-page.component';\r\nimport { SuperAdminDashboardComponent } from './components/super-admin-dashboard/super-admin-dashboard.component';\r\nimport { AddStateComponent } from 'src/app/layout/admin/components/add-state/add-state.component';\r\nimport { AddCityComponent } from 'src/app/layout/admin/components/add-city/add-city.component';\r\nimport { AddInfoVideoComponent } from './components/add-info-video/add-info-video.component';\r\nimport { AddAllergyComponent } from './components/add-allergy/add-allergy.component';\r\nimport { AddCouponComponent } from './components/add-coupon/add-coupon.component';\r\nimport { AddDeactivateReasonComponent } from './components/add-deactivate-reason/add-deactivate-reason.component';\r\nimport { TextPlanComponent } from './components/text-plan/text-plan.component';\r\nimport { AddDoseComponent } from './components/add-dose/add-dose.component';\r\nimport { PolicyAcceptListComponent } from './components/policy-accept-list/policy-accept-list.component';\r\nimport { ParentListComponent } from './components/parent-list/parent-list.component';\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: SuperAdminDashboardComponent,\r\n    },\r\n    {\r\n        path: 'agencylist',\r\n        component: AgencyListComponent\r\n    },\r\n    {\r\n        path: 'pricingplan',\r\n        component: PricingPlanComponent\r\n    },\r\n    {\r\n        path: 'planlist',\r\n        component: PlanPageComponent\r\n    },\r\n    {\r\n        path: 'addstate',\r\n        component: AddStateComponent\r\n    },\r\n    {\r\n        path: 'addcity',\r\n        component: AddCityComponent\r\n    },\r\n    {\r\n        path: 'addinfovideo',\r\n        component: AddInfoVideoComponent\r\n    },\r\n    {\r\n        path: 'addallergy',\r\n        component: AddAllergyComponent\r\n    },\r\n    {\r\n        path: 'addcoupon',\r\n        component: AddCouponComponent\r\n    },\r\n    {\r\n        path: 'addreason',\r\n        component: AddDeactivateReasonComponent\r\n    },\r\n    {\r\n        path: 'textplan',\r\n        component: TextPlanComponent\r\n    },\r\n    {\r\n        path: 'adddose',\r\n        component: AddDoseComponent\r\n    },\r\n    {\r\n        path: 'policyacceptagency',\r\n        component: PolicyAcceptListComponent\r\n    },\r\n    {\r\n        path: 'joinclassroomparent',\r\n        component: ParentListComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AdminRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AdminRoutingModule } from './admin-routing.module';\r\nimport { AgencyListComponent } from './components/agency-list/agency-list.component';\r\nimport { PricingPlanComponent } from './components/pricing-plan/pricing-plan.component';\r\nimport { AddStateComponent } from './components/add-state/add-state.component';\r\nimport { AddCityComponent } from './components/add-city/add-city.component';\r\nimport { PlanPageComponent } from './components/plan-page/plan-page.component';\r\nimport { SuperAdminDashboardComponent } from './components/super-admin-dashboard/super-admin-dashboard.component';\r\nimport { DialogModule } from 'primeng/dialog';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { MultiSelectModule } from 'primeng/multiselect';\r\nimport { CalendarModule } from 'primeng/calendar';\r\nimport { CarouselModule, BsDatepickerModule, TimepickerModule } from 'ngx-bootstrap';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\nimport { PaginatorModule } from 'primeng/paginator';\r\nimport { AutoCompleteModule } from 'primeng/autocomplete';\r\nimport { FileUploadModule } from 'primeng/fileupload';\r\nimport { RadioButtonModule } from 'primeng/radiobutton';\r\nimport { InputSwitchModule } from 'primeng/inputswitch';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { AddInfoVideoComponent } from './components/add-info-video/add-info-video.component';\r\nimport { AddAllergyComponent } from './components/add-allergy/add-allergy.component';\nimport { AddCouponComponent } from './components/add-coupon/add-coupon.component';\nimport { AddDeactivateReasonComponent } from './components/add-deactivate-reason/add-deactivate-reason.component';\nimport { TextPlanComponent } from './components/text-plan/text-plan.component';\nimport { AddDoseComponent } from './components/add-dose/add-dose.component';\nimport { PolicyAcceptListComponent } from './components/policy-accept-list/policy-accept-list.component';\nimport { ParentListComponent } from './components/parent-list/parent-list.component';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    AdminRoutingModule,\r\n    DialogModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    MultiSelectModule,\r\n    CalendarModule,\r\n    CarouselModule,\r\n    NgxSpinnerModule,\r\n    PaginatorModule,\r\n    BsDatepickerModule.forRoot(),\r\n    TimepickerModule.forRoot(),\r\n    AutoCompleteModule,\r\n    SharedModule,\r\n    FileUploadModule,\r\n    RadioButtonModule,\r\n    InputSwitchModule\r\n  ],\r\n  // tslint:disable-next-line: max-line-length\r\n  declarations: [ AgencyListComponent, AddStateComponent, AddCityComponent, PricingPlanComponent, PlanPageComponent, SuperAdminDashboardComponent, AddInfoVideoComponent, AddAllergyComponent, AddCouponComponent, AddDeactivateReasonComponent, TextPlanComponent, AddDoseComponent, PolicyAcceptListComponent, ParentListComponent]\r\n})\r\nexport class AdminModule { }\r\n","module.exports = \".form-control{height: 30px}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L2FkbWluL2NvbXBvbmVudHMvYWRkLWFsbGVyZ3kvYWRkLWFsbGVyZ3kuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxjQUFjLFlBQVkiLCJmaWxlIjoic3JjL2FwcC9sYXlvdXQvYWRtaW4vY29tcG9uZW50cy9hZGQtYWxsZXJneS9hZGQtYWxsZXJneS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZvcm0tY29udHJvbHtoZWlnaHQ6IDMwcHh9Il19 */\"","module.exports = \"<div class=\\\"wrapper\\\">\\n  <div class=\\\"container-fluid\\\">\\n\\n    <div class=\\\"pagetitle\\\">\\n      <div>\\n        <h2>Admin\\n          <span>/ AllergyList </span>\\n        </h2>\\n      </div>\\n      <div>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-send\\\" (click)=\\\"clearAllergyTypeForm()\\\" data-toggle=\\\"modal\\\"\\n          data-target=\\\".addallergytype\\\">Add Allergy Type</button>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-send\\\" (click)=\\\"clearAllergyForm()\\\" data-toggle=\\\"modal\\\"\\n          data-target=\\\".addallergy\\\">Add Allergy</button>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-send\\\" (click)=\\\"clearAllergyReactionForm()\\\" data-toggle=\\\"modal\\\"\\n          data-target=\\\".addallergyreaction\\\">Add Allergy Reaction</button>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"d-flex justify-content-between align-items-center mt-20 subhead\\\">\\n      <div>\\n        <h3>Allergy List</h3>\\n      </div>\\n    </div>\\n\\n    <ul class=\\\"nav nav-pills mt-20\\\" id=\\\"pills-tab\\\" role=\\\"tablist\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link active\\\" id=\\\"allergyType\\\" data-toggle=\\\"pill\\\" href=\\\"#pills-allergyType\\\"\\n          (click)=\\\"this.getAllergyType();\\\" role=\\\"tab\\\" aria-controls=\\\"pills-allergyType\\\" aria-selected=\\\"true\\\">Allergy\\n          Type</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" id=\\\"allergy\\\" data-toggle=\\\"pill\\\" href=\\\"#pills-allergy\\\" role=\\\"tab\\\"\\n          (click)=\\\"this.getAllergyName();\\\" aria-controls=\\\"pills-allergy\\\" aria-selected=\\\"false\\\">Allergy</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" id=\\\"allergyReaction\\\" data-toggle=\\\"pill\\\" href=\\\"#pills-allergyReaction\\\" role=\\\"tab\\\"\\n          (click)=\\\"this.getAllergyReactionType();\\\" aria-controls=\\\"pills-allergyReaction\\\" aria-selected=\\\"false\\\">Allergy\\n          Reaction\\n          Type</a>\\n      </li>\\n    </ul>\\n\\n\\n    <div class=\\\"tab-content\\\" id=\\\"pills-tabContent\\\">\\n\\n      <div class=\\\"tab-pane fade show active\\\" id=\\\"pills-allergyType\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"allergyType\\\">\\n        <div class=\\\"innertable\\\">\\n          <div class=\\\"table-responsive\\\">\\n            <table class=\\\"table\\\">\\n              <thead class=\\\"thead-light\\\">\\n                <tr>\\n                  <th scope=\\\"col\\\">Allergy Type</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr *ngFor=\\\"let allergyType of allergyTypeList\\\">\\n                  <td>{{allergyType.label}}</td>\\n                </tr>\\n              </tbody>\\n            </table>\\n            <div class=\\\"text-center\\\">\\n              <span class=\\\"text-center\\\" *ngIf=\\\"(allergyTypeList.length == 0 && !loader)\\\">No record found</span>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"tab-pane fade \\\" id=\\\"pills-allergy\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"allergy\\\">\\n        <div class=\\\"innertable\\\">\\n          <div class=\\\"table-responsive\\\">\\n            <table class=\\\"table\\\">\\n              <thead class=\\\"thead-light\\\">\\n                <tr>\\n                  <th scope=\\\"col\\\">Allergy Type</th>\\n                  <th scope=\\\"col\\\">Allergy Name</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr *ngFor=\\\"let allergy of allergyList\\\">\\n                  <td> {{allergy.allergyType}}</td>\\n                  <td>{{allergy.label}}</td>\\n                </tr>\\n              </tbody>\\n            </table>\\n            <div class=\\\"text-center\\\">\\n              <span class=\\\"text-center\\\" *ngIf=\\\"(allergyList.length == 0 && !loader)\\\">No record found</span>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"tab-pane fade \\\" id=\\\"pills-allergyReaction\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"allergyReaction\\\">\\n        <div class=\\\"innertable\\\">\\n          <div class=\\\"table-responsive\\\">\\n            <table class=\\\"table\\\">\\n              <thead class=\\\"thead-light\\\">\\n                <tr>\\n                  <th scope=\\\"col\\\">Allergy Type</th>\\n                  <th scope=\\\"col\\\">Allergy Reaction Type</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr *ngFor=\\\"let allergyReaction of allergyReactionList\\\">\\n                  <td> {{allergyReaction.allergyType}}</td>\\n                  <td>{{allergyReaction.label}}</td>\\n                </tr>\\n              </tbody>\\n            </table>\\n            <div class=\\\"text-center\\\">\\n              <span class=\\\"text-center\\\" *ngIf=\\\"(allergyReactionList.length == 0 && !loader)\\\">No record found</span>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n\\n    </div>\\n\\n  </div>\\n</div>\\n\\n\\n<div class=\\\"modal fade addallergytype \\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\n  aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog modal-lg\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLongTitle\\\">Add Allergy Type</h5>\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form [formGroup]=\\\"allergyTypeForm\\\">\\n          <div class=\\\"row mb-20 mt-20\\\">\\n            <div class=\\\"col-lg-12\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"\\\">Allergy Type*</label>\\n                <input type=\\\"text \\\" class=\\\"form-control\\\" id=\\\"\\\" aria-describedby=\\\"\\\" formControlName=\\\"allergytype\\\"\\n                  placeholder=\\\"Allergy Type\\\">\\n                <div *ngIf=\\\"t.allergytype.invalid && (t.allergytype.dirty || t.allergytype.touched)\\\"\\n                  class=\\\"text-left errormsg\\\">\\n                  <span *ngIf=\\\"t.allergytype.errors.required\\\">\\n                    <i class=\\\"fa fa-exclamation-circle\\\"></i> <span class=\\\"\\\"> Please enter allergy type</span>\\n                  </span>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"saveAllergyType()\\\">Add</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"modal fade addallergy\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog modal-lg\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLongTitle\\\">Add Allergy</h5>\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form [formGroup]=\\\"allergyForm\\\">\\n          <div class=\\\"row mb-20\\\">\\n            <div class=\\\"col-lg-6\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"\\\">Allergy Type*</label>\\n                <select class=\\\"form-control\\\" placeholder=\\\"Allergy type\\\" formControlName=\\\"allergytype\\\"\\n                  id=\\\"exampleFormControlSelect1\\\">\\n                  <option value=\\\"\\\">Select Allergy Type</option>\\n                  <option *ngFor=\\\"let allergyType of allergyTypeList\\\" [value]=\\\"allergyType.value\\\">{{allergyType.label}}\\n                  </option>\\n                </select>\\n                <div *ngIf=\\\"a.allergytype.invalid && (a.allergytype.dirty || a.allergytype.touched)\\\"\\n                  class=\\\"text-left errormsg\\\">\\n                  <span *ngIf=\\\"a.allergytype.errors.required\\\">\\n                    <i class=\\\"fa fa-exclamation-circle\\\"></i> <span class=\\\"\\\"> Please select allergy type</span>\\n                  </span>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-lg-6\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"\\\">Allergy Name*</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"\\\" formControlName=\\\"allergyname\\\" aria-describedby=\\\"\\\"\\n                  placeholder=\\\"Enter Allergy Name\\\">\\n                <div *ngIf=\\\"a.allergyname.invalid && (a.allergyname.dirty || a.allergyname.touched)\\\"\\n                  class=\\\"text-left errormsg\\\">\\n                  <span *ngIf=\\\"a.allergyname.errors.required\\\">\\n                    <i class=\\\"fa fa-exclamation-circle\\\"></i> <span class=\\\"\\\"> Please enter allergy name</span>\\n                  </span>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"saveAllergy()\\\">Add </button>\\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\\n\\n<div class=\\\"modal fade addallergyreaction\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\n  aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog modal-lg\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLongTitle\\\">Add Allergy Reaction</h5>\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form [formGroup]=\\\"allergyReactionForm\\\">\\n          <div class=\\\"row mb-20\\\">\\n            <div class=\\\"col-lg-6\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"\\\">Allergy Type*</label>\\n                <select class=\\\"form-control\\\" placeholder=\\\"Allergy type\\\" formControlName=\\\"allergytype\\\"\\n                  id=\\\"exampleFormControlSelect1\\\">\\n                  <option value=\\\"\\\">Select Allergy Type</option>\\n                  <option *ngFor=\\\"let allergyType of allergyTypeList\\\" [value]=\\\"allergyType.value\\\">{{allergyType.label}}\\n                  </option>\\n                </select>\\n                <div *ngIf=\\\"r.allergytype.invalid && (r.allergytype.dirty || r.allergytype.touched)\\\"\\n                  class=\\\"text-left errormsg\\\">\\n                  <span *ngIf=\\\"r.allergytype.errors.required\\\">\\n                    <i class=\\\"fa fa-exclamation-circle\\\"></i> <span class=\\\"\\\"> Please select allergy type</span>\\n                  </span>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-lg-6\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"\\\">Allergy Reaction Name*</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"\\\" formControlName=\\\"allergyreactionname\\\" aria-describedby=\\\"\\\"\\n                  placeholder=\\\"Enter Allergy Reaction Name\\\">\\n                <div\\n                  *ngIf=\\\"r.allergyreactionname.invalid && (r.allergyreactionname.dirty || r.allergyreactionname.touched)\\\"\\n                  class=\\\"text-left errormsg\\\">\\n                  <span *ngIf=\\\"r.allergyreactionname.errors.required\\\">\\n                    <i class=\\\"fa fa-exclamation-circle\\\"></i> <span class=\\\"\\\"> Please enter allergy reaction name</span>\\n                  </span>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"saveAllergyReaction()\\\">Add </button>\\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\\n\\n<app-confirm-box></app-confirm-box>\\n<ngx-spinner type=\\\"ball-atom\\\" size=\\\"medium\\\" color=\\\"#58A7FE\\\"></ngx-spinner>\"","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms';\nimport { AgencyApiService } from '../../../agency-admin/components/shared/services/agency-api-service/agency-api.service';\nimport { ErrorHandlerService } from '../../../../shared/services/error-handler/error-handler.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { NotificationService } from '../../../../shared/services/notification-service/notification.service';\nimport { CommonService } from '../../../../shared/services/common/common.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { ConfirmationService } from 'primeng/api';\nimport { AdminApiService } from '../../shared/services/admin-api.service';\nimport { ParentAPIURLs } from 'src/app/layout/parent/shared/constant';\ndeclare var $: any;\n\n@Component({\n  selector: 'app-add-allergy',\n  templateUrl: './add-allergy.component.html',\n  styleUrls: ['./add-allergy.component.css']\n})\nexport class AddAllergyComponent implements OnInit {\n  allergyForm: FormGroup;\n  allergyTypeForm: FormGroup;\n  allergyReactionForm: FormGroup;\n  allergyList: any[];\n  allergyTypeList: any[];\n  allergyReactionList: any[];\n  constructor(private apiService: AdminApiService, private error: ErrorHandlerService,\n    private spinner: NgxSpinnerService, private notification: NotificationService,\n    public commonService: CommonService, private fb: FormBuilder, private route: ActivatedRoute,\n    private confirmationService: ConfirmationService) { }\n\n  ngOnInit() {\n    this.allergyList = [];\n    this.allergyTypeList = [];\n    this.allergyReactionList = [];\n    this.createAllergyForm();\n    this.createAllergyReactionForm();\n    this.createAllergyTypeForm();\n    this.getAllergyType();\n  }\n\n  createAllergyForm() {\n    this.allergyForm = this.fb.group({\n      allergytype: ['', Validators.required],\n      allergyname: ['', Validators.required]\n    });\n  }\n\n  createAllergyTypeForm() {\n    this.allergyTypeForm = this.fb.group({\n      allergytype: ['', Validators.required]\n    });\n  }\n\n  createAllergyReactionForm() {\n    this.allergyReactionForm = this.fb.group({\n      allergytype: ['', Validators.required],\n      allergyreactionname: ['', Validators.required]\n    });\n  }\n\n  get a() { return this.allergyForm.controls; }\n  get t() { return this.allergyTypeForm.controls; }\n  get r() { return this.allergyReactionForm.controls; }\n\n  getAllergyType() {\n    const req = {\n      'isDeleted': false,\n    };\n    this.apiService.postData(ParentAPIURLs.GetAllergyType, req, null).subscribe(res => {\n      if (res.body.statusCode === 200) {\n        this.allergyTypeList = res.body.data;\n      } else {\n        this.spinner.hide();\n        this.error.unknownError();\n      }\n    }, err => {\n      this.spinner.hide();\n      this.error.commonError(err);\n    }\n    );\n\n  }\n\n\n  getAllergyName() {\n    const req = {\n      'isDeleted': false,\n    };\n\n    this.apiService.postData(ParentAPIURLs.GetAllergyName, req, null).subscribe(res => {\n      if (res.body.statusCode === 200) {\n        this.allergyList = res.body.data;\n      } else {\n        this.spinner.hide();\n        this.error.unknownError();\n      }\n    }, err => {\n      this.spinner.hide();\n      this.error.commonError(err);\n    }\n    );\n\n  }\n\n  getAllergyReactionType() {\n    const req = {\n      'isDeleted': false,\n    };\n\n    this.apiService.postData(ParentAPIURLs.GetAllergyReactionType, req, null).subscribe(res => {\n      if (res.body.statusCode === 200) {\n        this.allergyReactionList = res.body.data;\n      } else {\n        this.spinner.hide();\n        this.error.unknownError();\n      }\n    }, err => {\n      this.spinner.hide();\n      this.error.commonError(err);\n    }\n    );\n  }\n\n\n\n  // Save Allergy\n  saveAllergy() {\n    if (this.allergyForm.valid) {\n        const data = {\n          'id': 0,\n          'AllergyTypeID': this.allergyForm.value.allergytype,\n          'NameOfAllergy': this.allergyForm.value.allergyname,\n          'createdBy': this.commonService.getLoggedInUserId()\n        };\n        this.apiService.postData(ParentAPIURLs.SaveAllergyName, data, null).subscribe(res => {\n          if (res.body.statusCode === 200) {\n            $('.addallergy').modal('hide');\n            this.spinner.hide();\n            this.notification.success({ message: 'Allergy Added successfully', title: '' });\n            this.getAllergyName();\n          } else if (res.body.statusCode === 206) {\n            this.spinner.hide();\n            this.notification.warning({ message: 'Allergy already exists with same name.', title: '' });\n            this.getAllergyName();\n          } else {\n            this.spinner.hide();\n            this.error.unknownError();\n          }\n        }, err => {\n          this.spinner.hide();\n          this.error.commonError(err);\n        });\n    } else {\n      this.spinner.hide();\n      this.commonService.validateAllFields(this.allergyForm);\n    }\n  }\n\n  // Save Allergy Type\n  saveAllergyType() {\n    if (this.allergyTypeForm.valid) {\n        const data = {\n          'id': 0,\n          'AllergyTypeName': this.allergyTypeForm.value.allergytype,\n          'createdBy': this.commonService.getLoggedInUserId()\n        };\n        this.apiService.postData(ParentAPIURLs.SaveAllergyType, data, null).subscribe(res => {\n          if (res.body.statusCode === 200) {\n            $('.addallergytype').modal('hide');\n            this.spinner.hide();\n            this.notification.success({ message: 'Allergy type Added successfully', title: '' });\n            this.getAllergyType();\n          } else if (res.body.statusCode === 206) {\n            this.spinner.hide();\n            this.notification.warning({ message: 'Allergy type already exists with same name.', title: '' });\n          } else {\n            this.spinner.hide();\n            this.error.unknownError();\n          }\n        }, err => {\n          this.spinner.hide();\n          this.error.commonError(err);\n        });\n    } else {\n      this.spinner.hide();\n      this.commonService.validateAllFields(this.allergyTypeForm);\n    }\n  }\n\n  // Save Allergy Reaction Type\n  saveAllergyReaction() {\n    if (this.allergyReactionForm.valid) {\n        const data = {\n          'id': 0,\n          'AllergyTypeID': this.allergyReactionForm.value.allergytype,\n          'AllergyReactionTypeName': this.allergyReactionForm.value.allergyreactionname,\n          'createdBy': this.commonService.getLoggedInUserId()\n        };\n        this.apiService.postData(ParentAPIURLs.SaveAllergyReactionType, data, null).subscribe(res => {\n          if (res.body.statusCode === 200) {\n            $('.addallergyreaction').modal('hide');\n            this.spinner.hide();\n            this.notification.success({ message: 'Allergy Reaction Added successfully', title: '' });\n            this.getAllergyReactionType();\n          } else if (res.body.statusCode === 206) {\n            this.spinner.hide();\n            this.notification.warning({ message: 'Allergy reaction already exists with same name.', title: '' });\n          } else {\n            this.spinner.hide();\n            this.error.unknownError();\n          }\n        }, err => {\n          this.spinner.hide();\n          this.error.commonError(err);\n        });\n    } else {\n      this.spinner.hide();\n      this.commonService.validateAllFields(this.allergyReactionForm);\n    }\n  }\n\n\n\n  clearAllergyForm() {\n    this.createAllergyForm();\n  }\n\n  clearAllergyTypeForm() {\n    this.createAllergyTypeForm();\n  }\n  clearAllergyReactionForm() {\n    this.createAllergyReactionForm();\n  }\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9hZG1pbi9jb21wb25lbnRzL2FkZC1jaXR5L2FkZC1jaXR5LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"wrapper\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n\\r\\n    <div class=\\\"pagetitle\\\">\\r\\n      <div>\\r\\n        <h2>Admin\\r\\n          <span>/ City List </span>\\r\\n        </h2>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"d-flex justify-content-between align-items-center mt-20 subhead\\\">\\r\\n      <div>\\r\\n        <h3>City List</h3>\\r\\n      </div>\\r\\n      <div>\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-send\\\" data-toggle=\\\"modal\\\" (click)=\\\"clearForm()\\\" data-target=\\\".addplan\\\">Add City</button>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n<!-- \\r\\n    <div class=\\\"innertable\\\">\\r\\n      <div class=\\\"table-responsive\\\">\\r\\n        <table class=\\\"table\\\">\\r\\n          <thead class=\\\"thead-light\\\">\\r\\n            <tr>              \\r\\n              <th scope=\\\"col\\\">State Name</th>            \\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr *ngFor=\\\"let plan of stateList\\\">\\r\\n              <td>{{plan.stateName}}</td>            \\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n      </div>\\r\\n    </div> -->\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<div class=\\\"modal fade addplan\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\" aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog modal-lg\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLongTitle\\\">{{addMode? 'Add City' : 'city Details' }}</h5>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <form [formGroup]=\\\"pricingForm\\\">\\r\\n          <div class=\\\"row mb-20 mt-20\\\">\\r\\n            <div class=\\\"col-lg-6\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"exampleInputEmail1\\\">Country*</label>                      \\r\\n                <select class=\\\"form-control\\\" placeholder=\\\"Country\\\" formControlName=\\\"country\\\"\\r\\n                id=\\\"exampleFormControlSelect1\\\" (change)=\\\"getStatesList();\\\">\\r\\n                <option value=\\\"\\\">Select Country</option>\\r\\n                <option *ngFor=\\\"let countries of countryList\\\" [value]=\\\"countries.id\\\" >{{countries.countryName}}</option>\\r\\n              </select>\\r\\n              <div *ngIf=\\\"f.country.invalid && (f.country.dirty || f.country.touched)\\\" class=\\\"text-left errormsg\\\">\\r\\n                <span *ngIf=\\\"f.country.errors.required\\\">\\r\\n                  <i class=\\\"fa fa-exclamation-circle\\\"></i> <span class=\\\"\\\"> Please select country</span>\\r\\n                </span>\\r\\n              </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"exampleFormControlSelect1\\\">State*</label>\\r\\n                    <select class=\\\"form-control\\\" placeholder=\\\"State\\\" formControlName=\\\"state\\\"\\r\\n                    id=\\\"exampleFormControlSelect1\\\">\\r\\n                    <option value=\\\"\\\">Select State</option>\\r\\n                    <option *ngFor=\\\"let states of stateList\\\" [value]=\\\"states.id\\\" >{{states.stateName}}</option>\\r\\n                  </select>\\r\\n                  <div *ngIf=\\\"f.state.invalid && (f.state.dirty || f.state.touched)\\\" class=\\\"text-left errormsg\\\">\\r\\n                    <span *ngIf=\\\"f.state.errors.required\\\">\\r\\n                      <i class=\\\"fa fa-exclamation-circle\\\"></i> <span class=\\\"\\\"> Please select state</span>\\r\\n                    </span>\\r\\n                  </div>\\r\\n                  </div>\\r\\n              </div>\\r\\n          </div>     \\r\\n          \\r\\n          <div class=\\\"row mb-20\\\">\\r\\n              <div class=\\\"col-lg-6\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"\\\">Enter City Name*</label>\\r\\n                    <input type=\\\"text\\\" formControlName=\\\"cityname\\\" maxlength=\\\"25\\\" class=\\\"form-control\\\" id=\\\"\\\" aria-describedby=\\\"\\\" placeholder=\\\"Enter city name\\\">\\r\\n                    <div *ngIf=\\\"f.cityname.invalid && (f.cityname.dirty || f.cityname.touched)\\\" class=\\\"text-left errormsg\\\">\\r\\n                        <span *ngIf=\\\"f.cityname.errors.required\\\">\\r\\n                          <i class=\\\"fa fa-exclamation-circle\\\"></i> <span class=\\\"\\\"> Please enter city name</span>\\r\\n                        </span>\\r\\n                      </div>\\r\\n                  </div>\\r\\n                  </div>\\r\\n          </div>\\r\\n         \\r\\n        </form>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\r\\n        <button type=\\\"button\\\"  class=\\\"btn btn-primary\\\" (click)=\\\"createNewPlan()\\\">{{addMode? 'Add': 'Save Chnage'}}</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<ngx-spinner type=\\\"ball-atom\\\" size=\\\"medium\\\" color=\\\"#58A7FE\\\"></ngx-spinner>\"","import { Component, OnInit } from '@angular/core';\r\nimport { AdminApiService } from '../../shared/services/admin-api.service';\r\nimport { ErrorHandlerService } from '../../../../shared/services/error-handler/error-handler.service';\r\nimport { NotificationService } from '../../../../shared/services/notification-service/notification.service';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { CommonService } from '../../../../shared/services/common/common.service';\r\nimport { ConfirmationService } from 'primeng/api';\r\nimport { AdminAPIURLs } from '../../shared/constant';\r\nimport { PaymentVM } from '../../shared/view-models/agency-view-modal';\r\nimport { TeacherAPIURLs } from 'src/app/layout/teacher/shared/constant';\r\ndeclare var $: any;\r\n@Component({\r\n  selector: 'app-add-city',\r\n  templateUrl: './add-city.component.html',\r\n  styleUrls: ['./add-city.component.css']\r\n})\r\nexport class AddCityComponent implements OnInit {\r\n  totalRecord = 0;\r\n  pricingPlanList: any[] = [];\r\n  pageNo = 0;\r\n  limit = 10;\r\n  planId = 0;\r\n  loader = true;\r\n  pricingForm: FormGroup;\r\n  PaymentVM: PaymentVM = {};\r\n  addMode = true;\r\n\r\n  countryList: any[];\r\n  stateList: any[];\r\n  cityList: any[];\r\n\r\n  constructor(private apiService: AdminApiService, private error: ErrorHandlerService,\r\n    private spinner: NgxSpinnerService, private notification: NotificationService,\r\n    public commonService: CommonService, private fb: FormBuilder, private route: ActivatedRoute,\r\n    private confirmationService: ConfirmationService) { }\r\n\r\n  ngOnInit() {\r\n    this.countryList = [];\r\n    this.cityList = [];\r\n    this.stateList = [];\r\n    this.getAllCountries();\r\n    this.createPlanForm();\r\n  }\r\n\r\n  getStatesList() {\r\n    this.spinner.show();\r\n    this.stateList = [];\r\n    this.cityList = [];\r\n    const req = {\r\n      'CountryId': this.pricingForm.value.country,\r\n      'AgencyID': 4\r\n    };\r\n    this.apiService.postData(TeacherAPIURLs.GetAllStates, req, null).subscribe(res => {\r\n      if (res.body.statusCode === 200) {\r\n        this.stateList = res.body.data;\r\n          this.spinner.hide();\r\n      } else {\r\n           this.spinner.hide();\r\n        this.error.unknownError();\r\n      }\r\n    }, err => {\r\n      this.spinner.hide();\r\n      this.error.commonError(err);\r\n    }\r\n    );\r\n  }\r\n  getAllCountries() {   \r\n    this.countryList = [];\r\n    const req = {\r\n      'AgencyID': 4\r\n    };\r\n    this.apiService.postData(TeacherAPIURLs.GetAllCountry, req, null).subscribe(res => {\r\n      if (res.body.statusCode === 200) {\r\n        this.countryList = res.body.data;        \r\n      } else {\r\n        this.spinner.hide();\r\n        this.error.unknownError();\r\n      }\r\n    }, err => {\r\n      this.spinner.hide();\r\n      this.error.commonError(err);\r\n    }\r\n    );\r\n  }\r\n\r\n  createPlanForm() {\r\n    this.pricingForm = this.fb.group({     \r\n      country: ['', Validators.required],\r\n      state: ['', Validators.required],\r\n      cityname: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n\r\n\r\n  updatePlanForm() {\r\n    this.pricingForm = this.fb.group({\r\n      planname: [ this.PaymentVM.planName, Validators.required],\r\n      noofusers: [ this.PaymentVM.numberofUsers, Validators.required],\r\n      price: [ this.PaymentVM.planPrice, Validators.required],\r\n      remark: [this.PaymentVM.remark],\r\n      limit: [ this.PaymentVM.frequency, Validators.required],\r\n      active: [this.PaymentVM.IsActive]\r\n    });\r\n  }\r\n\r\n  get f() { return this.pricingForm.controls; }\r\n\r\n  getAllstatelist() {\r\n    this.spinner.show();\r\n    this.stateList = [];\r\n    const req = {\r\n      'limit': this.limit,\r\n      'page': this.pageNo\r\n    };\r\n    this.apiService.postData(AdminAPIURLs.GetAllState, req, null).subscribe(res => {\r\n      this.totalRecord = res.body.totalRows;\r\n      if (res.body.statusCode === 200) {\r\n        this.stateList = res.body.data;\r\n        this.spinner.hide();\r\n      } else {\r\n        this.spinner.hide();\r\n        this.error.unknownError();\r\n      }\r\n    }, err => {\r\n      this.spinner.hide();\r\n      this.error.commonError(err);\r\n    }\r\n    );\r\n  }\r\n\r\n\r\n  createNewPlan() {\r\n    this.spinner.show();\r\n    if (this.pricingForm.valid) {\r\n      const req = {        \r\n        'cityname': this.pricingForm.value.cityname,\r\n        'countryId': this.pricingForm.value.country,\r\n        'stateId': this.pricingForm.value.state\r\n      };\r\n\r\n      this.apiService.postData(AdminAPIURLs.SaveCity, req, null).subscribe(res => {\r\n        this.totalRecord = res.body.totalRows;\r\n        if (res.body.statusCode === 200) {\r\n            this.notification.success({ message: this.addMode ? 'City has been created successfully' :\r\n             'Plan has been update successfully', title: '' });\r\n            $('.addplan').modal('hide');\r\n            this.getAllstatelist();\r\n        } else if (res.body.statusCode === 987) {\r\n          this.spinner.hide();\r\n          this.notification.warning({ message: 'This City is already in used ', title: 'Cannnot be updated' });\r\n        } else {\r\n          this.spinner.hide();\r\n          this.error.unknownError();\r\n        }\r\n      }, err => {\r\n        this.spinner.hide();\r\n        this.error.commonError(err);\r\n      }\r\n      );\r\n\r\n    } else {\r\n      this.spinner.hide();\r\n      this.commonService.validateAllFields(this.pricingForm);\r\n    }\r\n  }\r\n\r\n  getPlanDetails(obj) {\r\n    this.addMode = false;\r\n    this.planId = obj.id;\r\n    this.PaymentVM.IsActive = obj.isActive;\r\n    this.PaymentVM.planName = obj.planName;\r\n    this.PaymentVM.numberofUsers = obj.numberofUsers;\r\n    this.PaymentVM.planPrice = obj.planPrice;\r\n    this.PaymentVM.remark = obj.remark;\r\n    this.PaymentVM.frequency = obj.frequency;\r\n    this.updatePlanForm();\r\n  }\r\n\r\n  clearForm() {\r\n    this.planId = 0;\r\n    this.createPlanForm();\r\n    this.addMode = true;\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9hZG1pbi9jb21wb25lbnRzL2FkZC1jb3Vwb24vYWRkLWNvdXBvbi5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"wrapper\\\">\\n  <div class=\\\"container-fluid\\\">\\n\\n    <div class=\\\"pagetitle\\\">\\n      <div>\\n        <h2>Admin\\n          <span>/ CouponList </span>\\n        </h2>\\n      </div>\\n      <div>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-send\\\" (click)=\\\"clearCouponForm()\\\" data-toggle=\\\"modal\\\"\\n          data-target=\\\".addcoupon\\\">Add Coupon</button>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"d-flex justify-content-between align-items-center mt-20 subhead\\\">\\n      <div>\\n        <h3>Coupon List</h3>\\n      </div>\\n    </div>\\n\\n\\n    <div class=\\\"tab-content\\\" id=\\\"pills-tabContent\\\">\\n\\n      <div class=\\\"tab-pane fade show active\\\" id=\\\"pills-allergyType\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"allergyType\\\">\\n        <div class=\\\"innertable\\\">\\n          <div class=\\\"table-responsive\\\">\\n            <table class=\\\"table\\\">\\n              <thead class=\\\"thead-light\\\">\\n                <tr>\\n                  <th scope=\\\"col\\\">Coupon Name</th>\\n                  <th scope=\\\"col\\\">Discount(%)</th>\\n                  <th scope=\\\"col\\\" class=\\\"text-center\\\">Change Status</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr *ngFor=\\\"let coupon of couponList\\\">\\n                  <td>{{coupon.couponName}}</td>\\n                  <td>{{coupon.discount}}</td>\\n                  <td class=\\\"text-center\\\" >\\n                    <button class=\\\"form-control\\\" *ngIf=\\\"!coupon.isDeleted\\\"   class=\\\"btn btn-warning\\\"\\n                      (click)=\\\"deactivateCoupon(coupon)\\\">Deactivate</button>\\n                    <button class=\\\"form-control\\\" *ngIf=\\\"coupon.isDeleted\\\" class=\\\"btn btn-success\\\"\\n                      (click)=\\\"activateCoupon(coupon)\\\">Activate</button>\\n                  </td>\\n                </tr>\\n              </tbody>\\n            </table>\\n            <div class=\\\"text-center\\\">\\n              <span class=\\\"text-center\\\" *ngIf=\\\"(couponList.length == 0 && !loader)\\\">No record found</span>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n\\n    </div>\\n\\n  </div>\\n</div>\\n\\n\\n<div class=\\\"modal fade addcoupon \\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\n  aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog modal-lg\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLongTitle\\\">Add Coupon</h5>\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form [formGroup]=\\\"couponForm\\\">\\n          <div class=\\\"row mb-20 mt-20\\\">\\n            <div class=\\\"col-lg-6\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"\\\">Coupon Name*</label>\\n                <input type=\\\"text \\\" class=\\\"form-control\\\" id=\\\"\\\" aria-describedby=\\\"\\\" formControlName=\\\"couponname\\\"\\n                  placeholder=\\\"Coupon Name\\\">\\n                <div *ngIf=\\\"t.couponname.invalid && (t.couponname.dirty || t.couponname.touched)\\\"\\n                  class=\\\"text-left errormsg\\\">\\n                  <span *ngIf=\\\"t.couponname.errors.required\\\">\\n                    <i class=\\\"fa fa-exclamation-circle\\\"></i> <span class=\\\"\\\"> Please enter coupon name</span>\\n                  </span>\\n                </div>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-lg-6\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"\\\">Discount(%)*</label>\\n                <input type=\\\"text \\\" (keypress)=\\\"commonService.allowOnlyNumber($event)\\\" class=\\\"form-control\\\" id=\\\"\\\"\\n                  aria-describedby=\\\"\\\" formControlName=\\\"discount\\\" placeholder=\\\"Discount\\\">\\n                <div *ngIf=\\\"t.discount.invalid && (t.discount.dirty || t.discount.touched)\\\" class=\\\"text-left errormsg\\\">\\n                  <span *ngIf=\\\"t.discount.errors.required\\\">\\n                    <i class=\\\"fa fa-exclamation-circle\\\"></i> <span class=\\\"\\\"> Please enter discount</span>\\n                  </span>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"saveCoupon()\\\">Add</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n<app-confirm-box></app-confirm-box>\\n<ngx-spinner type=\\\"ball-atom\\\" size=\\\"medium\\\" color=\\\"#58A7FE\\\"></ngx-spinner>\"","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms';\nimport { AgencyApiService } from '../../../agency-admin/components/shared/services/agency-api-service/agency-api.service';\nimport { ErrorHandlerService } from '../../../../shared/services/error-handler/error-handler.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { NotificationService } from '../../../../shared/services/notification-service/notification.service';\nimport { CommonService } from '../../../../shared/services/common/common.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { ConfirmationService } from 'primeng/api';\nimport { AdminApiService } from '../../shared/services/admin-api.service';\nimport { ParentAPIURLs } from 'src/app/layout/parent/shared/constant';\nimport { AdminAPIURLs } from '../../shared/constant';\ndeclare var $: any;\n\n@Component({\n  selector: 'app-add-coupon',\n  templateUrl: './add-coupon.component.html',\n  styleUrls: ['./add-coupon.component.css']\n})\nexport class AddCouponComponent implements OnInit {\n  couponForm: FormGroup;\n  couponList: any[];\n  constructor(private apiService: AdminApiService, private error: ErrorHandlerService,\n    private spinner: NgxSpinnerService, private notification: NotificationService,\n    public commonService: CommonService, private fb: FormBuilder, private route: ActivatedRoute,\n    private confirmationService: ConfirmationService) { }\n\n  ngOnInit() {\n    this.couponList = [];\n    this.createCouponForm();\n    this.getCoupon();\n  }\n\n  createCouponForm() {\n    this.couponForm = this.fb.group({\n      couponname: ['', Validators.required],\n      discount: ['', Validators.required],\n    });\n  }\n\n  get t() { return this.couponForm.controls; }\n\n  getCoupon() {\n    const req = {\n      'isActive': true,\n    };\n    this.apiService.postData(ParentAPIURLs.GetCoupons, req, null).subscribe(res => {\n      if (res.body.statusCode === 200) {\n        this.couponList = res.body.data;\n        this.spinner.hide();\n      } else {\n        this.spinner.hide();\n        this.error.unknownError();\n      }\n    }, err => {\n      this.spinner.hide();\n      this.error.commonError(err);\n    }\n    );\n\n  }\n\n\n  // Save Coupon\n  saveCoupon() {\n    if (this.couponForm.valid) {\n      const data = {\n        'id': 0,\n        'createdBy': this.commonService.getLoggedInUserId(),\n        'CouponName': this.couponForm.value.couponname,\n        'Discount':  this.couponForm.value.discount,\n      };\n      this.apiService.postData(ParentAPIURLs.SaveCoupon, data, null).subscribe(res => {\n        if (res.body.statusCode === 200) {\n          $('.addcoupon').modal('hide');\n          //this.spinner.hide();\n          this.notification.success({ message: 'Coupon Added successfully', title: '' });\n          this.getCoupon();\n        } else if (res.body.statusCode === 206) {\n          this.spinner.hide();\n          this.notification.warning({ message: 'Coupon already exists with same name.', title: '' });\n        } else {\n          this.spinner.hide();\n          this.error.unknownError();\n        }\n      }, err => {\n        this.spinner.hide();\n        this.error.commonError(err);\n      });\n    } else {\n      this.spinner.hide();\n      this.commonService.validateAllFields(this.couponForm);\n    }\n  }\n\n\n  clearCouponForm() {\n    this.createCouponForm();\n  }\n\n   // Method to delete/deactivate Coupon\n deactivateCoupon(value) {\n  this.confirmationService.confirm({\n    message: 'Do you want to deactivate this Coupon?',\n    accept: () => {\n      this.spinner.show();\n      const req = {\n        'Id': value.id,\n        'IsDeleted': true,\n        'DeletedBy': this.commonService.getReleventUserId('userdetails'),\n      };\n      this.apiService.postData(ParentAPIURLs.ActivateDeactivateCoupon, req, null).subscribe(res => {\n        if (res.body.statusCode === 200) {\n          //this.spinner.hide();\n          this.notification.success({ message: 'This Coupon has been deactivated', title: '' });\n          this.getCoupon();\n        } else {\n          this.spinner.hide();\n          this.error.unknownError();\n        }\n      }, err => {\n        this.spinner.hide();\n        this.error.commonError(err);\n      });\n    }\n  });\n}\n\n\n// Method to ActivateAuth Coupon\nactivateCoupon(value) {\n  this.confirmationService.confirm({\n    message: 'Do you want to activate this Coupon?',\n    accept: () => {\n      this.spinner.show();\n      const req = {\n        'Id': value.id,\n        'IsDeleted': false,\n        'UpdatedBy': this.commonService.getReleventUserId('userdetails'),\n      };\n      this.apiService.postData(ParentAPIURLs.ActivateDeactivateCoupon, req, null).subscribe(res => {\n        if (res.body.statusCode === 200) {\n          //this.spinner.hide();\n          this.notification.success({ message: 'This Coupon has been activated', title: '' });\n          this.getCoupon();\n        } else {\n          this.spinner.hide();\n          this.error.unknownError();\n        }\n      }, err => {\n        this.spinner.hide();\n        this.error.commonError(err);\n      });\n    }\n  });\n}\n\n}\n\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9hZG1pbi9jb21wb25lbnRzL2FkZC1kZWFjdGl2YXRlLXJlYXNvbi9hZGQtZGVhY3RpdmF0ZS1yZWFzb24uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"wrapper\\\">\\n  <div class=\\\"container-fluid\\\">\\n\\n    <div class=\\\"pagetitle\\\">\\n      <div>\\n        <h2>Admin\\n          <span>/ DeactivateReasonList </span>\\n        </h2>\\n      </div>\\n      <div>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-send\\\" (click)=\\\"clearDeactivateReasonForm()\\\" data-toggle=\\\"modal\\\"\\n          data-target=\\\".adddeactivatereason\\\">Add Deactivate Reason</button>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"d-flex justify-content-between align-items-center mt-20 subhead\\\">\\n      <div>\\n        <h3>Deactivate Reason List</h3>\\n      </div>\\n    </div>\\n\\n\\n    <div class=\\\"tab-content\\\" id=\\\"pills-tabContent\\\">\\n\\n      <div class=\\\"tab-pane fade show active\\\" id=\\\"pills-allergyType\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"allergyType\\\">\\n        <div class=\\\"innertable\\\">\\n          <div class=\\\"table-responsive\\\">\\n            <table class=\\\"table\\\">\\n              <thead class=\\\"thead-light\\\">\\n                <tr>\\n                  <th scope=\\\"col\\\">Deactivate Reason</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr *ngFor=\\\"let deactivateReason of deactivateReasonList\\\">\\n                  <td>{{deactivateReason.reason}}</td>\\n                </tr>\\n              </tbody>\\n            </table>\\n            <div class=\\\"text-center\\\">\\n              <span class=\\\"text-center\\\" *ngIf=\\\"(deactivateReasonList.length == 0 && !loader)\\\">No record found</span>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n\\n    </div>\\n\\n  </div>\\n</div>\\n\\n\\n<div class=\\\"modal fade adddeactivatereason\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\n  aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog modal-lg\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLongTitle\\\">Add Deactivate Reason</h5>\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form [formGroup]=\\\"deactivateReasonForm\\\">\\n          <div class=\\\"row mb-20 mt-20\\\">\\n            <div class=\\\"col-lg-12\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"\\\">Deactivate Reason*</label>\\n                <input type=\\\"text \\\" class=\\\"form-control\\\" id=\\\"\\\" aria-describedby=\\\"\\\" formControlName=\\\"reason\\\"\\n                  placeholder=\\\"Deactivate Reason\\\">\\n                <div *ngIf=\\\"t.reason.invalid && (t.reason.dirty || t.reason.touched)\\\" class=\\\"text-left errormsg\\\">\\n                  <span *ngIf=\\\"t.reason.errors.required\\\">\\n                    <i class=\\\"fa fa-exclamation-circle\\\"></i> <span class=\\\"\\\"> Please enter deactivate reason</span>\\n                  </span>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"saveDeactivateReason()\\\">Add</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n<app-confirm-box></app-confirm-box>\\n<ngx-spinner type=\\\"ball-atom\\\" size=\\\"medium\\\" color=\\\"#58A7FE\\\"></ngx-spinner>\"","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms';\nimport { ErrorHandlerService } from '../../../../shared/services/error-handler/error-handler.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { NotificationService } from '../../../../shared/services/notification-service/notification.service';\nimport { CommonService } from '../../../../shared/services/common/common.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { ConfirmationService } from 'primeng/api';\nimport { TeacherAPIURLs } from 'src/app/layout/teacher/shared/constant';\nimport { AgencyDetailsVM } from '../../shared/view-models/agency-view-modal';\nimport { AdminAPIURLs } from '../../shared/constant';\nimport { AdminApiService } from '../../shared/services/admin-api.service';\nimport { ParentAPIURLs } from 'src/app/layout/parent/shared/constant';\ndeclare var $: any;\n\n\n@Component({\n  selector: 'app-add-deactivate-reason',\n  templateUrl: './add-deactivate-reason.component.html',\n  styleUrls: ['./add-deactivate-reason.component.css']\n})\nexport class AddDeactivateReasonComponent implements OnInit {\n  deactivateReasonForm: FormGroup;\n  deactivateReasonList: any[];\n  constructor(private apiService: AdminApiService, private error: ErrorHandlerService,\n    private spinner: NgxSpinnerService, private notification: NotificationService,\n    public commonService: CommonService, private fb: FormBuilder, private route: ActivatedRoute,\n    private confirmationService: ConfirmationService) { }\n\n  ngOnInit() {\n    this.deactivateReasonList = [];\n    this.createDeactivateReasonForm();\n    this.getDeactivateReason();\n  }\n\n  createDeactivateReasonForm() {\n    this.deactivateReasonForm = this.fb.group({\n      reason: ['', Validators.required]\n    });\n  }\n\n  get t() { return this.deactivateReasonForm.controls; }\n\n  getDeactivateReason() {\n    const req = {\n      'isDeleted': false,\n      'RoleID': 5 // For Student\n    };\n    this.apiService.postData(ParentAPIURLs.GetDeactivateReason, req, null).subscribe(res => {\n      if (res.body.statusCode === 200) {\n        this.deactivateReasonList = res.body.data;\n      } else {\n        this.spinner.hide();\n        this.error.unknownError();\n      }\n    }, err => {\n      this.spinner.hide();\n      this.error.commonError(err);\n    }\n    );\n\n  }\n\n\n  // Save Deactivate Reason\n  saveDeactivateReason() {\n    if (this.deactivateReasonForm.valid) {\n      const data = {\n        'id': 0,\n        'Reason': this.deactivateReasonForm.value.reason,\n        'RoleID': 5\n      };\n      this.apiService.postData(ParentAPIURLs.SaveDeactivateReason, data, null).subscribe(res => {\n        if (res.body.statusCode === 200) {\n          $('.adddeactivatereason').modal('hide');\n          this.spinner.hide();\n          this.notification.success({ message: 'Deactivate Reason Added successfully', title: '' });\n          this.getDeactivateReason();\n        } else if (res.body.statusCode === 206) {\n          this.spinner.hide();\n          this.notification.warning({ message: 'Deactivate Reason already exists with same name.', title: '' });\n        } else {\n          this.spinner.hide();\n          this.error.unknownError();\n        }\n      }, err => {\n        this.spinner.hide();\n        this.error.commonError(err);\n      });\n    } else {\n      this.spinner.hide();\n      this.commonService.validateAllFields(this.deactivateReasonForm);\n    }\n  }\n\n\n\n  clearDeactivateReasonForm() {\n    this.createDeactivateReasonForm();\n  }\n\n\n}\n","module.exports = \".form-control{height: 30px}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L2FkbWluL2NvbXBvbmVudHMvYWRkLWRvc2UvYWRkLWRvc2UuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxjQUFjLFlBQVkiLCJmaWxlIjoic3JjL2FwcC9sYXlvdXQvYWRtaW4vY29tcG9uZW50cy9hZGQtZG9zZS9hZGQtZG9zZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZvcm0tY29udHJvbHtoZWlnaHQ6IDMwcHh9Il19 */\"","module.exports = \"<div class=\\\"wrapper\\\">\\n  <div class=\\\"container-fluid\\\">\\n\\n    <div class=\\\"pagetitle\\\">\\n      <div>\\n        <h2>Admin\\n          <span>/ AllergyList </span>\\n        </h2>\\n      </div>\\n      <div>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-send\\\" (click)=\\\"cleardoseTypeForm()\\\" data-toggle=\\\"modal\\\"\\n          data-target=\\\".addallergytype\\\">Add Dose Type</button>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"d-flex justify-content-between align-items-center mt-20 subhead\\\">\\n      <div>\\n        <h3>Repeat Dose List</h3>\\n      </div>\\n    </div>\\n\\n    <!-- <ul class=\\\"nav nav-pills mt-20\\\" id=\\\"pills-tab\\\" role=\\\"tablist\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link active\\\" id=\\\"allergyType\\\" data-toggle=\\\"pill\\\" href=\\\"#pills-allergyType\\\"\\n          (click)=\\\"this.getAllDoseRepeat();\\\" role=\\\"tab\\\" aria-controls=\\\"pills-allergyType\\\" aria-selected=\\\"true\\\">Dose\\n          Type</a>\\n      </li>\\n    </ul> -->\\n\\n\\n    <div class=\\\"tab-content\\\" id=\\\"pills-tabContent\\\">\\n\\n      <div class=\\\"tab-pane fade show active\\\" id=\\\"pills-allergyType\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"allergyType\\\">\\n        <div class=\\\"innertable\\\">\\n          <div class=\\\"table-responsive\\\">\\n            <table class=\\\"table\\\">\\n              <thead class=\\\"thead-light\\\">\\n                <tr>\\n                  <th scope=\\\"col\\\">Dose Type</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr *ngFor=\\\"let dose of doseList\\\">\\n                  <td>{{dose.label}}</td>\\n                </tr>\\n              </tbody>\\n            </table>\\n            <div class=\\\"text-center\\\">\\n              <span class=\\\"text-center\\\" *ngIf=\\\"(doseList.length == 0 && !loader)\\\">No record found</span>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n\\n    </div>\\n\\n  </div>\\n</div>\\n\\n\\n<div class=\\\"modal fade addallergytype \\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\"\\n  aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog modal-lg\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLongTitle\\\">Add Dose Type</h5>\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form [formGroup]=\\\"doseTypeForm\\\">\\n          <div class=\\\"row mb-20 mt-20\\\">\\n            <div class=\\\"col-lg-12\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"\\\">Dose Type*</label>\\n                <input type=\\\"text \\\" class=\\\"form-control\\\" id=\\\"\\\" aria-describedby=\\\"\\\" formControlName=\\\"dose\\\"\\n                  placeholder=\\\"Dose Type\\\">\\n                <div *ngIf=\\\"t.dose.invalid && (t.dose.dirty || t.dose.touched)\\\"\\n                  class=\\\"text-left errormsg\\\">\\n                  <span *ngIf=\\\"t.dose.errors.required\\\">\\n                    <i class=\\\"fa fa-exclamation-circle\\\"></i> <span class=\\\"\\\"> Please enter dose type</span>\\n                  </span>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"saveDoseType()\\\">Add</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n<app-confirm-box></app-confirm-box>\\n<ngx-spinner type=\\\"ball-atom\\\" size=\\\"medium\\\" color=\\\"#58A7FE\\\"></ngx-spinner>\"","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms';\nimport { AgencyApiService } from '../../../agency-admin/components/shared/services/agency-api-service/agency-api.service';\nimport { ErrorHandlerService } from '../../../../shared/services/error-handler/error-handler.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { NotificationService } from '../../../../shared/services/notification-service/notification.service';\nimport { CommonService } from '../../../../shared/services/common/common.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { ConfirmationService } from 'primeng/api';\nimport { AdminApiService } from '../../shared/services/admin-api.service';\nimport { ParentAPIURLs } from 'src/app/layout/parent/shared/constant';\ndeclare var $: any;\n\n@Component({\n  selector: 'app-add-dose',\n  templateUrl: './add-dose.component.html',\n  styleUrls: ['./add-dose.component.css']\n})\nexport class AddDoseComponent implements OnInit {\n  doseTypeForm: FormGroup;\n  doseList: any[] = [];\n  constructor(private apiService: AdminApiService, private error: ErrorHandlerService,\n    private spinner: NgxSpinnerService, private notification: NotificationService,\n    public commonService: CommonService, private fb: FormBuilder, private route: ActivatedRoute,\n    private confirmationService: ConfirmationService) { }\n\n  ngOnInit() {\n    this.createDoseForm();\n    this.getAllDoseRepeat();\n  }\n\n  createDoseForm() {\n    this.doseTypeForm = this.fb.group({\n      dose: ['', Validators.required]\n    });\n  }\n\n\n  get t() { return this.doseTypeForm.controls; }\n\n  getAllDoseRepeat() {\n    this.doseList = [];\n    const data = {\n      'agencyID': this.commonService.getAgencyId()\n    };\n    this.apiService.postData(ParentAPIURLs.GetAllDoseRepeat, data, null).subscribe(res => {\n      if (res.body.statusCode === 200) {\n        this.doseList = res.body.data;\n      } else {\n        this.spinner.hide();\n        this.error.unknownError();\n      }\n    }, err => {\n      this.spinner.hide();\n      this.error.commonError(err);\n    }\n    );\n  }\n\n\n  // Save Allergy Type\n  saveDoseType() {\n    if (this.doseTypeForm.valid) {\n      const data = {\n        'id': 0,\n        'agencyID': 4,\n        'DoseRepeatName': this.doseTypeForm.value.dose,\n        'createdBy': this.commonService.getLoggedInUserId()\n      };\n      this.apiService.postData(ParentAPIURLs.SaveAllDoseRepeat, data, null).subscribe(res => {\n        if (res.body.statusCode === 200) {\n          $('.addallergytype').modal('hide');\n          this.spinner.hide();\n          this.notification.success({ message: 'Dose type Added successfully', title: '' });\n          this.getAllDoseRepeat();\n        } else if (res.body.statusCode === 206) {\n          this.spinner.hide();\n          this.notification.warning({ message: 'Dose type already exists with same name.', title: '' });\n        } else {\n          this.spinner.hide();\n          this.error.unknownError();\n        }\n      }, err => {\n        this.spinner.hide();\n        this.error.commonError(err);\n      });\n    } else {\n      this.spinner.hide();\n      this.commonService.validateAllFields(this.doseTypeForm);\n    }\n  }\n\n\n  cleardoseTypeForm() {\n    this.createDoseForm();\n  }\n\n\n\n}\n\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9hZG1pbi9jb21wb25lbnRzL2FkZC1pbmZvLXZpZGVvL2FkZC1pbmZvLXZpZGVvLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"wrapper\\\">\\n  <div class=\\\"container-fluid\\\">\\n\\n    <div class=\\\"pagetitle\\\">\\n      <div>\\n        <h2>Admin\\n          <span>/ Information Videos List </span>\\n        </h2>\\n      </div>\\n    </div>\\n    <div class=\\\"d-flex justify-content-between align-items-center mt-20 subhead\\\">\\n      <div>\\n        <h3>Information Video List</h3>\\n      </div>\\n      <div>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-send\\\" data-toggle=\\\"modal\\\" (click)=\\\"clearForm()\\\" data-target=\\\".addvideo\\\">Add\\n          Information Video</button>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"innertable\\\">\\n      <div class=\\\"table-responsive\\\">\\n        <table class=\\\"table\\\">\\n          <thead class=\\\"thead-light\\\">\\n            <tr>\\n              <th scope=\\\"col\\\">Section</th>\\n              <th scope=\\\"col\\\">Title</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let video of videoList\\\">\\n              <td>{{video.sectionName}}</td>\\n              <td>{{video.title}}</td>            \\n            </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\\n\\n\\n<div class=\\\"modal fade addvideo\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog modal-lg\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLongTitle\\\">Add Information Video</h5>\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form [formGroup]=\\\"VideoUploadForm\\\">\\n\\n          <div class=\\\"row mb-20 mt-20\\\">\\n            <div class=\\\"col-lg-6\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"exampleInputEmail1\\\">Section*</label>\\n                <select class=\\\"form-control\\\" placeholder=\\\"Section\\\" formControlName=\\\"section\\\"\\n                  id=\\\"exampleFormControlSelect1\\\">\\n                  <option value=\\\"\\\">Select Section</option>\\n                <option *ngFor=\\\"let sections of sectionList\\\" [value]=\\\"sections.id\\\" >{{sections.sectionName}}</option>\\n                </select>\\n                <div *ngIf=\\\"f.section.invalid && (f.section.dirty || f.section.touched)\\\" class=\\\"text-left errormsg\\\">\\n                  <span *ngIf=\\\"f.section.errors.required\\\">\\n                    <i class=\\\"fa fa-exclamation-circle\\\"></i> <span class=\\\"\\\"> Please select section</span>\\n                  </span>\\n                </div>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-lg-6\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"\\\">Title*</label>\\n                <input type=\\\"text\\\" formControlName=\\\"title\\\" maxlength=\\\"25\\\" class=\\\"form-control\\\" id=\\\"\\\"\\n                  aria-describedby=\\\"\\\" placeholder=\\\"Enter title\\\">\\n                <div *ngIf=\\\"f.title.invalid && (f.title.dirty || f.title.touched)\\\"\\n                  class=\\\"text-left errormsg\\\">\\n                  <span *ngIf=\\\"f.title.errors.required\\\">\\n                    <i class=\\\"fa fa-exclamation-circle\\\"></i> <span class=\\\"\\\"> Please enter title</span>\\n                  </span>\\n                </div>\\n              </div>\\n            </div>\\n\\n          </div>\\n\\n          <div class=\\\"row mb-20 mt-20\\\">\\n            <div class=\\\"col-lg-12\\\">\\n              <div class=\\\"form-group\\\">\\n                <h4>Upload Video (.mp4 extention only)</h4>\\n                <p-fileUpload name=\\\"myfile[]\\\" #pformvideo uploadLabel=\\\"Post\\\" [accept]=\\\"allowedVideoFileType\\\"\\n                  maxFileSize=\\\"200000000\\\" [showUploadButton]=\\\"showUploadBtn\\\" customUpload=\\\"true\\\"\\n                  (uploadHandler)=\\\"myVideoUploader($event)\\\"></p-fileUpload>\\n              </div>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<ngx-spinner type=\\\"ball-atom\\\" size=\\\"medium\\\" color=\\\"#58A7FE\\\"></ngx-spinner>\"","import { Component, OnInit, AfterViewInit, ElementRef, ViewChild } from '@angular/core';\nimport { AdminApiService } from '../../shared/services/admin-api.service';\nimport { ErrorHandlerService } from '../../../../shared/services/error-handler/error-handler.service';\nimport { NotificationService } from '../../../../shared/services/notification-service/notification.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { CommonService } from '../../../../shared/services/common/common.service';\nimport { ConfirmationService } from 'primeng/api';\nimport { TeacherAPIURLs } from 'src/app/layout/teacher/shared/constant';\nimport { HttpHeaders } from '@angular/common/http';\nimport { TeacherApiService } from 'src/app/layout/teacher/shared/services/teacher-api-service/teacher-api.service';\ndeclare var $: any;\n\n@Component({\n  selector: 'app-add-info-video',\n  templateUrl: './add-info-video.component.html',\n  styleUrls: ['./add-info-video.component.css']\n})\nexport class AddInfoVideoComponent implements OnInit {\n  allowedVideoFileType = 'video/mp4';\n  showUploadBtn = true;\n  flag = false;\n  isImageArray: boolean;\n  formData = new FormData();\n  VideoUploadForm: FormGroup;\n  totalRecord = 0;\n  pricingPlanList: any[] = [];\n  pageNo = 0;\n  limit = 10;\n  planId = 0;\n  loader = true;\n  pricingForm: FormGroup;\n  videoList: any[];\n  sectionList: any[];\n  videoUrlArray: any[] = [];\n  videoPath: any;\n  @ViewChild('pformvideo') pformvideo: any;\n\n  constructor(private apiService: TeacherApiService, private error: ErrorHandlerService,\n    private spinner: NgxSpinnerService, private notification: NotificationService,\n    public commonService: CommonService, private fb: FormBuilder, private route: ActivatedRoute,\n    private confirmationService: ConfirmationService) { }\n\n  ngOnInit() {\n    this.videoList = [];\n    this.createVideoUploadForm();\n    this.GetSectionList();\n    this.GetVideoInfo();\n  }\n\n\n  GetVideoInfo() {\n    this.videoList = [];\n    const req = {\n      'IsDeleted': false\n    };\n    this.apiService.postData(TeacherAPIURLs.GetSectionVideo, req, null).subscribe(res => {\n      if (res.body.statusCode === 200) {\n        this.videoList = res.body.data;\n      } else {\n        this.spinner.hide();\n        this.error.unknownError();\n      }\n    }, err => {\n      this.spinner.hide();\n      this.error.commonError(err);\n    }\n    );\n  }\n\n  GetSectionList() {\n    this.sectionList = [];\n    const req = {\n      'IsDeleted': false\n    };\n    this.apiService.postData(TeacherAPIURLs.GetSectionList, req, null).subscribe(res => {\n      if (res.body.statusCode === 200) {\n        this.sectionList = res.body.data;\n      } else {\n        this.spinner.hide();\n        this.error.unknownError();\n      }\n    }, err => {\n      this.spinner.hide();\n      this.error.commonError(err);\n    }\n    );\n  }\n\n  createVideoUploadForm() {\n    this.VideoUploadForm = this.fb.group({\n      section: ['', Validators.required],\n      title: ['', Validators.required]\n    });\n  }\n\n  get f() { return this.VideoUploadForm.controls; }\n\n  clearForm() {\n    this.videoUrlArray = [];\n    this.createVideoUploadForm();\n    this.pformvideo.clear();\n  }\n\n  myVideoUploader(event) {\n    this.spinner.show();\n    this.flag = true;\n    this.isImageArray = false;\n    this.formData = new FormData();\n    this.formData.append(event.files[0].name, event.files[0]);\n    // this.notification.success({ message: 'Video is ready to upload', title: 'Done!' });\n    this.uploadMedia();\n  }\n\n  uploadMedia() {\n    if (this.VideoUploadForm.valid) {\n      this.videoUrlArray = [];\n      const headers = new HttpHeaders();\n      headers.set('Content-Type', null);\n      headers.set('Accept', 'multipart/form-data');\n      const params = headers;\n      const loggedInId = this.commonService.getLoggedInUserId();\n      const Id = loggedInId.toString();\n      this.formData.append('loggedInId', Id);\n      this.apiService.postData(TeacherAPIURLs.MultipleImageUpload, this.formData, params).subscribe(res => {\n        if (res.body.statusCode === 200) {\n          this.flag = false;\n            res.body.data.forEach(x => {\n              this.videoUrlArray.push({\n                'id': 0,\n                'postActivitiesID': 0,\n                'vedioServerPath': x\n              });\n            });\n          this.saveVideo();\n          this.formData = new FormData();\n        } else {\n          this.spinner.hide();\n          this.error.unknownError();\n          this.formData = new FormData();\n        }\n      }, err => {\n        this.spinner.hide();\n        this.error.commonError(err);\n        this.formData = new FormData();\n      });\n    } else {\n      this.spinner.hide();\n      this.commonService.validateAllFields(this.VideoUploadForm);\n    }\n  }\n\n  saveVideo() {\n    if (this.VideoUploadForm.valid) {\n      if (this.videoUrlArray.length > 0) {\n        const data = {\n          'id': 0,\n          'title': this.VideoUploadForm.value.title,\n          'VideoPath': this.videoUrlArray[0].vedioServerPath,\n          'sectionID' : this.VideoUploadForm.value.section,\n          'createdBy': this.commonService.getLoggedInUserId()\n        };\n\n        this.apiService.postData(TeacherAPIURLs.SaveSectionVideo, data, null).subscribe(res => {\n          if (res.body.statusCode === 200) {\n            $('.addvideo').modal('hide');\n            this.spinner.hide();\n            this.notification.success({ message: 'Video uploaded successfully', title: '' });\n            this.GetVideoInfo();\n          } else {\n            this.spinner.hide();\n            this.error.unknownError();\n          }\n        }, err => {\n          this.spinner.hide();\n          this.error.commonError(err);\n        });\n      } else {\n        this.spinner.hide();\n        this.notification.warning({ message: 'Please upload video', title: '' });\n      }\n    } else {\n      this.spinner.hide();\n      this.commonService.validateAllFields(this.VideoUploadForm);\n    }\n\n  }\n\n\n\n}\n\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9hZG1pbi9jb21wb25lbnRzL2FkZC1zdGF0ZS9hZGQtc3RhdGUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"wrapper\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n\\r\\n    <div class=\\\"pagetitle\\\">\\r\\n      <div>\\r\\n        <h2>Admin\\r\\n          <span>/ State List </span>\\r\\n        </h2>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"d-flex justify-content-between align-items-center mt-20 subhead\\\">\\r\\n      <div>\\r\\n        <h3>State List</h3>\\r\\n      </div>\\r\\n      <div>\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-send\\\" data-toggle=\\\"modal\\\" (click)=\\\"clearForm()\\\" data-target=\\\".addplan\\\">Add State</button>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"innertable\\\">\\r\\n      <div class=\\\"table-responsive\\\">\\r\\n        <table class=\\\"table\\\">\\r\\n          <thead class=\\\"thead-light\\\">\\r\\n            <tr>              \\r\\n              <th scope=\\\"col\\\">State Name</th>             \\r\\n              <!-- <th scope=\\\"col\\\" class=\\\"text-center\\\">Actions</th> -->\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr *ngFor=\\\"let plan of stateList\\\">\\r\\n              <td>{{plan.stateName}}</td>             \\r\\n              <!-- <td class=\\\"text-center\\\">\\r\\n                <a data-toggle=\\\"modal\\\" data-target=\\\".addplan\\\" (click)=\\\"getPlanDetails(plan)\\\">\\r\\n                  <i class=\\\"fa fa-eye\\\" aria-hidden=\\\"true\\\" ></i>\\r\\n                </a>\\r\\n              </td> -->\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<div class=\\\"modal fade addplan\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\" aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog modal-lg\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLongTitle\\\">{{addMode? 'Add State' : 'State Details' }}</h5>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <form [formGroup]=\\\"pricingForm\\\">\\r\\n          <div class=\\\"row mb-20 mt-20\\\">\\r\\n            <div class=\\\"col-lg-6\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"exampleInputEmail1\\\">Country*</label>                      \\r\\n                <select class=\\\"form-control\\\" placeholder=\\\"Country\\\" formControlName=\\\"country\\\"\\r\\n                id=\\\"exampleFormControlSelect1\\\">\\r\\n                <option value=\\\"\\\">Select Country</option>\\r\\n                <option *ngFor=\\\"let countries of countryList\\\" [value]=\\\"countries.id\\\" >{{countries.countryName}}</option>\\r\\n              </select>\\r\\n              <div *ngIf=\\\"f.country.invalid && (f.country.dirty || f.country.touched)\\\" class=\\\"text-left errormsg\\\">\\r\\n                <span *ngIf=\\\"f.country.errors.required\\\">\\r\\n                  <i class=\\\"fa fa-exclamation-circle\\\"></i> <span class=\\\"\\\"> Please select country</span>\\r\\n                </span>\\r\\n              </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"\\\">Enter State Name*</label>\\r\\n                <input type=\\\"text\\\" formControlName=\\\"statename\\\" maxlength=\\\"25\\\" class=\\\"form-control\\\" id=\\\"\\\" aria-describedby=\\\"\\\" placeholder=\\\"Enter state name\\\">\\r\\n                <div *ngIf=\\\"f.statename.invalid && (f.statename.dirty || f.statename.touched)\\\" class=\\\"text-left errormsg\\\">\\r\\n                    <span *ngIf=\\\"f.statename.errors.required\\\">\\r\\n                      <i class=\\\"fa fa-exclamation-circle\\\"></i> <span class=\\\"\\\"> Please enter state name</span>\\r\\n                    </span>\\r\\n                  </div>\\r\\n              </div>\\r\\n              </div>\\r\\n          </div>         \\r\\n        </form>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\r\\n        <button type=\\\"button\\\"  class=\\\"btn btn-primary\\\" (click)=\\\"createNewPlan()\\\">{{addMode? 'Add': 'Save Chnage'}}</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<ngx-spinner type=\\\"ball-atom\\\" size=\\\"medium\\\" color=\\\"#58A7FE\\\"></ngx-spinner>\"","import { Component, OnInit } from '@angular/core';\r\nimport { AdminApiService } from '../../shared/services/admin-api.service';\r\nimport { ErrorHandlerService } from '../../../../shared/services/error-handler/error-handler.service';\r\nimport { NotificationService } from '../../../../shared/services/notification-service/notification.service';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { CommonService } from '../../../../shared/services/common/common.service';\r\nimport { ConfirmationService } from 'primeng/api';\r\nimport { AdminAPIURLs } from '../../shared/constant';\r\nimport { PaymentVM } from '../../shared/view-models/agency-view-modal';\r\nimport { TeacherAPIURLs } from 'src/app/layout/teacher/shared/constant';\r\ndeclare var $: any;\r\n@Component({\r\n  selector: 'app-add-state',\r\n  templateUrl: './add-state.component.html',\r\n  styleUrls: ['./add-state.component.css']\r\n})\r\nexport class AddStateComponent implements OnInit {\r\n  totalRecord = 0;\r\n  pricingPlanList: any[] = [];\r\n  pageNo = 0;\r\n  limit = 10;\r\n  planId = 0;\r\n  loader = true;\r\n  pricingForm: FormGroup;\r\n  PaymentVM: PaymentVM = {};\r\n  addMode = true;\r\n\r\n  countryList: any[];\r\n  stateList: any[];\r\n  cityList: any[];\r\n\r\n  constructor(private apiService: AdminApiService, private error: ErrorHandlerService,\r\n    private spinner: NgxSpinnerService, private notification: NotificationService,\r\n    public commonService: CommonService, private fb: FormBuilder, private route: ActivatedRoute,\r\n    private confirmationService: ConfirmationService) { }\r\n\r\n  ngOnInit() {\r\n    this.countryList = [];\r\n    this.cityList = [];\r\n    this.stateList = [];\r\n\r\n    this.getAllstatelist();\r\n    this.getAllCountries();\r\n    this.createPlanForm();\r\n  }\r\n\r\n  getAllCountries() {   \r\n    this.countryList = [];\r\n    const req = {\r\n      'AgencyID': 4\r\n    };\r\n    this.apiService.postData(TeacherAPIURLs.GetAllCountry, req, null).subscribe(res => {\r\n      if (res.body.statusCode === 200) {\r\n        this.countryList = res.body.data;        \r\n      } else {\r\n        this.spinner.hide();\r\n        this.error.unknownError();\r\n      }\r\n    }, err => {\r\n      this.spinner.hide();\r\n      this.error.commonError(err);\r\n    }\r\n    );\r\n  }\r\n\r\n  createPlanForm() {\r\n    this.pricingForm = this.fb.group({\r\n      statename: ['', Validators.required],      \r\n      country: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n\r\n\r\n  updatePlanForm() {\r\n    this.pricingForm = this.fb.group({\r\n      planname: [ this.PaymentVM.planName, Validators.required],\r\n      noofusers: [ this.PaymentVM.numberofUsers, Validators.required],\r\n      price: [ this.PaymentVM.planPrice, Validators.required],\r\n      remark: [this.PaymentVM.remark],\r\n      limit: [ this.PaymentVM.frequency, Validators.required],\r\n      active: [this.PaymentVM.IsActive]\r\n    });\r\n  }\r\n\r\n  get f() { return this.pricingForm.controls; }\r\n\r\n  getAllstatelist() {\r\n    this.spinner.show();\r\n    this.stateList = [];\r\n    const req = {\r\n      'limit': this.limit,\r\n      'page': this.pageNo\r\n    };\r\n    this.apiService.postData(AdminAPIURLs.GetAllState, req, null).subscribe(res => {\r\n      this.totalRecord = res.body.totalRows;\r\n      if (res.body.statusCode === 200) {\r\n        this.stateList = res.body.data;\r\n        this.spinner.hide();\r\n      } else {\r\n        this.spinner.hide();\r\n        this.error.unknownError();\r\n      }\r\n    }, err => {\r\n      this.spinner.hide();\r\n      this.error.commonError(err);\r\n    }\r\n    );\r\n  }\r\n\r\n\r\n  createNewPlan() {\r\n    this.spinner.show();\r\n    if (this.pricingForm.valid) {\r\n      const req = {        \r\n        'statename': this.pricingForm.value.statename,\r\n        'countryId': this.pricingForm.value.country\r\n      };\r\n\r\n      this.apiService.postData(AdminAPIURLs.SaveState, req, null).subscribe(res => {\r\n        this.totalRecord = res.body.totalRows;\r\n        if (res.body.statusCode === 200) {\r\n            this.notification.success({ message: this.addMode ? 'State has been created successfully' :\r\n             'Plan has been update successfully', title: '' });\r\n            $('.addplan').modal('hide');\r\n            this.getAllstatelist();\r\n        } else if (res.body.statusCode === 987) {\r\n          this.spinner.hide();\r\n          this.notification.warning({ message: 'This State is already in used', title: 'Cannnot be updated' });\r\n        } else {\r\n          this.spinner.hide();\r\n          this.error.unknownError();\r\n        }\r\n      }, err => {\r\n        this.spinner.hide();\r\n        this.error.commonError(err);\r\n      }\r\n      );\r\n\r\n    } else {\r\n      this.spinner.hide();\r\n      this.commonService.validateAllFields(this.pricingForm);\r\n    }\r\n  }\r\n\r\n  getPlanDetails(obj) {\r\n    this.addMode = false;\r\n    this.planId = obj.id;\r\n    this.PaymentVM.IsActive = obj.isActive;\r\n    this.PaymentVM.planName = obj.planName;\r\n    this.PaymentVM.numberofUsers = obj.numberofUsers;\r\n    this.PaymentVM.planPrice = obj.planPrice;\r\n    this.PaymentVM.remark = obj.remark;\r\n    this.PaymentVM.frequency = obj.frequency;\r\n    this.updatePlanForm();\r\n  }\r\n\r\n  clearForm() {\r\n    this.planId = 0;\r\n    this.createPlanForm();\r\n    this.addMode = true;\r\n  }\r\n\r\n}\r\n","module.exports = \".form-control{height: 30px}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L2FkbWluL2NvbXBvbmVudHMvYWdlbmN5LWxpc3QvYWdlbmN5LWxpc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxjQUFjLFlBQVkiLCJmaWxlIjoic3JjL2FwcC9sYXlvdXQvYWRtaW4vY29tcG9uZW50cy9hZ2VuY3ktbGlzdC9hZ2VuY3ktbGlzdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZvcm0tY29udHJvbHtoZWlnaHQ6IDMwcHh9Il19 */\"","module.exports = \"<div class=\\\"wrapper\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n  \\r\\n      <div class=\\\"pagetitle\\\">\\r\\n        <div>\\r\\n          <h2>Admin\\r\\n            <span>/ AgencyList </span>\\r\\n          </h2>\\r\\n        </div>\\r\\n        <div>\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-send\\\" (click)=\\\"clearForm()\\\" data-toggle=\\\"modal\\\" data-target=\\\".addagency\\\">Add Agency</button>\\r\\n          </div>\\r\\n      </div>\\r\\n  \\r\\n  \\r\\n      <div class=\\\"d-flex justify-content-between align-items-center mt-20 subhead\\\">\\r\\n        <div>\\r\\n          <h3>Agency List</h3>\\r\\n        </div>\\r\\n      </div>\\r\\n  \\r\\n      \\r\\n  \\r\\n          <div class=\\\"card cardfilter\\\">\\r\\n            <div class=\\\"row algcenter\\\">   \\r\\n               <div class=\\\"leftfilter\\\">\\r\\n                <div class=\\\"search-date\\\">\\r\\n                  <div class=\\\"pr15 label-text\\\">Search Name : </div>\\r\\n                  <input type=\\\"text\\\" placeholder=\\\"Search Agency Name\\\" (keydown)=\\\"keyDownFunction($event)\\\" [(ngModel)]=\\\"nameSearch\\\"\\r\\n                    class=\\\"form-control mr15\\\" id=\\\"\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n      \\r\\n\\r\\n  \\r\\n      <ul class=\\\"nav nav-pills mt-20\\\" id=\\\"pills-tab\\\" role=\\\"tablist\\\">\\r\\n          <li class=\\\"nav-item\\\">\\r\\n            <a class=\\\"nav-link active\\\" id=\\\"appAgency\\\" data-toggle=\\\"pill\\\" href=\\\"#pills-appAgency\\\" (click)=\\\"this.getUserStatus(1);\\\" role=\\\"tab\\\" aria-controls=\\\"pills-appAgency\\\"\\r\\n              aria-selected=\\\"true\\\">Approve Agency</a>\\r\\n          </li>\\r\\n          <li class=\\\"nav-item\\\">\\r\\n            <a class=\\\"nav-link\\\" id=\\\"penAgency\\\" data-toggle=\\\"pill\\\" href=\\\"#pills-penAgency\\\" role=\\\"tab\\\" (click)=\\\"this.getUserStatus(0);\\\" aria-controls=\\\"pills-penAgency\\\"\\r\\n              aria-selected=\\\"false\\\">Unapprove Agency</a>\\r\\n          </li>\\r\\n        </ul>\\r\\n  \\r\\n  \\r\\n      <div class=\\\"tab-content\\\" id=\\\"pills-tabContent\\\">\\r\\n          <div class=\\\"tab-pane fade show active\\\" id=\\\"pills-appAgency\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"appAgency\\\">\\r\\n    \\r\\n            <div class=\\\"innertable\\\">\\r\\n              <div class=\\\"table-responsive\\\">\\r\\n                <table class=\\\"table\\\">\\r\\n                  <thead class=\\\"thead-light\\\">\\r\\n                    <tr >\\r\\n                                   \\r\\n                      <th scope=\\\"col\\\">Agency</th>\\r\\n                      <th scope=\\\"col\\\">Owner</th>\\r\\n                      <th scope=\\\"col\\\">Email</th>\\r\\n                      <th scope=\\\"col\\\">City</th>\\r\\n                      <th scope=\\\"col\\\">State</th>                     \\r\\n                      <th class=\\\"text-center\\\" scope=\\\"col\\\">Actions</th>\\r\\n                      <th scope=\\\"col\\\" class=\\\"text-center\\\">Change Status</th>\\r\\n                    </tr>\\r\\n                  </thead>\\r\\n                  <tbody>\\r\\n                     <tr *ngFor=\\\"let agency of agencyList\\\">                      \\r\\n                      <td>{{agency.agencyName}}</td>\\r\\n                      <td>{{agency.ownerName}}</td>\\r\\n                      <td>{{agency.emailId}}</td>\\r\\n                      <td>{{agency.cityName}} </td>\\r\\n                      <td>{{agency.stateName}}</td>                \\r\\n                      <td class=\\\"text-center\\\">\\r\\n                        <a (click)=\\\"getAgencyDetials(agency)\\\" title=\\\"View/update\\\" data-toggle=\\\"modal\\\" data-target=\\\".addagency\\\">\\r\\n                          <i class=\\\"fa fa-eye\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                        </a>                       \\r\\n                      </td>\\r\\n\\r\\n                      <td class=\\\"text-center\\\" >\\r\\n                        <button class=\\\"form-control\\\" *ngIf=\\\"!agency.isDeleted\\\"   class=\\\"btn btn-warning\\\"\\r\\n                          (click)=\\\"deleteAgency(agency)\\\">Deactivate</button>\\r\\n                        <button class=\\\"form-control\\\" *ngIf=\\\"agency.isDeleted\\\" class=\\\"btn btn-success\\\"\\r\\n                          (click)=\\\"activateAgency(agency)\\\">Activate</button>\\r\\n                      </td>\\r\\n                    </tr> \\r\\n                  </tbody>\\r\\n                </table>\\r\\n                <div class=\\\"text-center\\\">\\r\\n                    <span class=\\\"text-center\\\" *ngIf=\\\"(agencyList.length == 0 && !loader)\\\">No record found</span>\\r\\n                  </div>\\r\\n              </div>\\r\\n              <p-paginator [alwaysShow]=\\\"false\\\" [rows]=\\\"limit\\\" [totalRecords]=\\\"totalRecord\\\" (onPageChange)=\\\"paginate($event)\\\"></p-paginator>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"tab-pane fade \\\" id=\\\"pills-penAgency\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"penAgency\\\">\\r\\n            <div class=\\\"innertable\\\">\\r\\n              <div class=\\\"table-responsive\\\">\\r\\n                <table class=\\\"table\\\">\\r\\n                  <thead class=\\\"thead-light\\\">\\r\\n                    <tr >                  \\r\\n                      <th scope=\\\"col\\\">Agency</th>\\r\\n                      <th scope=\\\"col\\\">Owner</th>\\r\\n                      <th>Email</th>\\r\\n                      <th>City</th>\\r\\n                      <th>State</th>                    \\r\\n                      <th class=\\\"text-center\\\" scope=\\\"col\\\">Status</th>\\r\\n                    </tr>\\r\\n                  </thead>\\r\\n                  <tbody>\\r\\n                    <tr *ngFor=\\\"let agency of agencyList\\\">                  \\r\\n                      <td> {{agency.agencyName}}</td>\\r\\n                      <td>{{agency.ownerName}}</td>\\r\\n                      <td>{{agency.emailId}}</td>\\r\\n                      <td>{{agency.cityName}} </td>\\r\\n                      <td>{{agency.stateName}}</td>                \\r\\n                      <td class=\\\"text-center\\\">\\r\\n                        <div class=\\\"form-group\\\">                         \\r\\n                          <button   class=\\\"form-control\\\" class=\\\"btn btn-success\\\"\\r\\n                          (click)=\\\"approvedDenyRequest($event,agency)\\\">Approve</button>\\r\\n                        </div>\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                  </tbody>\\r\\n                </table>\\r\\n                <div class=\\\"text-center\\\">\\r\\n                  <span class=\\\"text-center\\\" *ngIf=\\\"(agencyList.length == 0 && !loader)\\\">No record found</span>\\r\\n                </div>\\r\\n              </div>              \\r\\n            </div>\\r\\n          </div>\\r\\n        </div>       \\r\\n    </div>\\r\\n  </div>\\r\\n  \\r\\n  \\r\\n  <div class=\\\"modal fade addagency \\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\" aria-hidden=\\\"true\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n      <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n          <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLongTitle\\\">{{addMode ? 'Add New Agency' : 'Agency Details'}}</h5>\\r\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n          </button>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n          <form [formGroup]=\\\"agencyForm\\\">\\r\\n            <div class=\\\"row mb-20 mt-20\\\">\\r\\n              <div class=\\\"col-lg-12\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"\\\">Agency Name*</label>\\r\\n                  <input type=\\\"text \\\"   class=\\\"form-control\\\" id=\\\"\\\" aria-describedby=\\\"\\\" formControlName=\\\"agencyname\\\" placeholder=\\\"Agency Name\\\">\\r\\n                  <div *ngIf=\\\"f.agencyname.invalid && (f.agencyname.dirty || f.agencyname.touched)\\\" class=\\\"text-left errormsg\\\">\\r\\n                      <span *ngIf=\\\"f.agencyname.errors.required\\\">\\r\\n                        <i class=\\\"fa fa-exclamation-circle\\\"></i> <span class=\\\"\\\"> Please enter agency name</span>\\r\\n                      </span>\\r\\n                    </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n  \\r\\n  \\r\\n            <div class=\\\"row mb-20\\\">\\r\\n              <div class=\\\"col-lg-6\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"\\\">Agency Email*</label>\\r\\n                  <input type=\\\"email \\\" class=\\\"form-control\\\" *ngIf=\\\"addMode\\\" id=\\\"\\\" aria-describedby=\\\"\\\" formControlName=\\\"email\\\" placeholder=\\\"Email Address\\\">\\r\\n                  <input type=\\\"email \\\" class=\\\"form-control\\\" *ngIf=\\\"!addMode\\\" id=\\\"\\\" disabled aria-describedby=\\\"\\\" formControlName=\\\"email\\\" placeholder=\\\"Email Address\\\">\\r\\n                  <div *ngIf=\\\"f.email.invalid && (f.email.dirty || f.email.touched)\\\" class=\\\"text-left errormsg\\\">\\r\\n                      <span *ngIf=\\\"f.email.errors.required\\\">\\r\\n                        <i class=\\\"fa fa-exclamation-circle\\\"></i> <span class=\\\"\\\"> Please enter email</span>\\r\\n                      </span>\\r\\n                      <span *ngIf=\\\"f.email.errors.pattern\\\">\\r\\n                          <i class=\\\"fa fa-exclamation-circle errtext\\\" ></i> <span class=\\\"errtext\\\"> Please enter valid email address</span> \\r\\n                      </span>\\r\\n                    </div>\\r\\n                \\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"col-lg-6\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"\\\">Agency Phone*</label>\\r\\n                  <input type=\\\"text\\\"  maxlength=\\\"10\\\" (keypress)=\\\"commonService.allowOnlyNumber($event)\\\"  class=\\\"form-control\\\" id=\\\"\\\" aria-describedby=\\\"\\\" formControlName=\\\"phone\\\" placeholder=\\\"phone\\\">\\r\\n                  <div *ngIf=\\\"f.phone.invalid && (f.phone.dirty || f.phone.touched)\\\" class=\\\"text-left errormsg\\\">\\r\\n                      <span *ngIf=\\\"f.phone.errors.required\\\">\\r\\n                        <i class=\\\"fa fa-exclamation-circle\\\"></i> <span class=\\\"\\\"> Please enter phone number</span>\\r\\n                      </span>\\r\\n                    </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n  \\r\\n            <div class=\\\"row mb-20\\\">\\r\\n              <div class=\\\"col-lg-6\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"\\\">First Name*</label>\\r\\n                  <input type=\\\"text \\\" (keypress)=\\\"commonService.allowAlphabetOnly($event)\\\" class=\\\"form-control\\\" id=\\\"\\\" aria-describedby=\\\"\\\" formControlName=\\\"firstname\\\" placeholder=\\\"First Name\\\">\\r\\n                  <div *ngIf=\\\"f.firstname.invalid && (f.firstname.dirty || f.firstname.touched)\\\" class=\\\"text-left errormsg\\\">\\r\\n                      <span *ngIf=\\\"f.firstname.errors.required\\\">\\r\\n                        <i class=\\\"fa fa-exclamation-circle\\\"></i> <span class=\\\"\\\"> Please enter first name</span>\\r\\n                      </span>\\r\\n                    </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"col-lg-6\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"\\\">Last Name*</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" (keypress)=\\\"commonService.allowAlphabetOnly($event)\\\" id=\\\"\\\" aria-describedby=\\\"\\\" formControlName=\\\"lastname\\\" placeholder=\\\"Last Name\\\">\\r\\n                  <div *ngIf=\\\"f.lastname.invalid && (f.lastname.dirty || f.lastname.touched)\\\" class=\\\"text-left errormsg\\\">\\r\\n                      <span *ngIf=\\\"f.lastname.errors.required\\\">\\r\\n                        <i class=\\\"fa fa-exclamation-circle\\\"></i> <span class=\\\"\\\"> Please enter last name</span>\\r\\n                      </span>\\r\\n                    </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row mb-20\\\">\\r\\n              <div class=\\\"col-lg-12\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"\\\">Address*</label>\\r\\n                  <input type=\\\"text \\\" class=\\\"form-control\\\" id=\\\"\\\" aria-describedby=\\\"\\\" formControlName=\\\"address\\\" placeholder=\\\"Address\\\">\\r\\n                  <div *ngIf=\\\"f.address.invalid && (f.address.dirty || f.address.touched)\\\" class=\\\"text-left errormsg\\\">\\r\\n                      <span *ngIf=\\\"f.address.errors.required\\\">\\r\\n                        <i class=\\\"fa fa-exclamation-circle\\\"></i> <span class=\\\"\\\"> Please enter address</span>\\r\\n                      </span>\\r\\n                    </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row mb-20\\\">\\r\\n                <div class=\\\"col-lg-6\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label for=\\\"exampleInputEmail1\\\">Country*</label>                      \\r\\n                      <select class=\\\"form-control\\\" placeholder=\\\"Country\\\" formControlName=\\\"country\\\"\\r\\n                      id=\\\"exampleFormControlSelect1\\\" (change)=\\\"getStatesList();clearStateCity()\\\">\\r\\n                      <option value=\\\"\\\">Select Country</option>\\r\\n                      <option *ngFor=\\\"let countries of countryList\\\" [value]=\\\"countries.id\\\" >{{countries.countryName}}</option>\\r\\n                    </select>\\r\\n                    <div *ngIf=\\\"f.country.invalid && (f.country.dirty || f.country.touched)\\\" class=\\\"text-left errormsg\\\">\\r\\n                      <span *ngIf=\\\"f.country.errors.required\\\">\\r\\n                        <i class=\\\"fa fa-exclamation-circle\\\"></i> <span class=\\\"\\\"> Please select country</span>\\r\\n                      </span>\\r\\n                    </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-lg-6\\\">\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                          <label for=\\\"exampleFormControlSelect1\\\">State*</label>\\r\\n                          <select class=\\\"form-control\\\" placeholder=\\\"State\\\" formControlName=\\\"state\\\"\\r\\n                          id=\\\"exampleFormControlSelect1\\\" (change)=\\\"getCitiesList();clearCity()\\\">\\r\\n                          <option value=\\\"\\\">Select State</option>\\r\\n                          <option *ngFor=\\\"let states of stateList\\\" [value]=\\\"states.id\\\" >{{states.stateName}}</option>\\r\\n                        </select>\\r\\n                        <div *ngIf=\\\"f.state.invalid && (f.state.dirty || f.state.touched)\\\" class=\\\"text-left errormsg\\\">\\r\\n                          <span *ngIf=\\\"f.state.errors.required\\\">\\r\\n                            <i class=\\\"fa fa-exclamation-circle\\\"></i> <span class=\\\"\\\"> Please select state</span>\\r\\n                          </span>\\r\\n                        </div>\\r\\n                        </div>\\r\\n                  </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"row mb-20\\\">\\r\\n                  <div class=\\\"col-lg-6\\\">\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"\\\">City*</label>                       \\r\\n                        <select class=\\\"form-control\\\" placeholder=\\\"City\\\" formControlName=\\\"city\\\"\\r\\n                        id=\\\"exampleFormControlSelect1\\\" >\\r\\n                        <option value=\\\"\\\">Select City</option>\\r\\n                        <option *ngFor=\\\"let cities of cityList\\\" [value]=\\\"cities.id\\\" >{{cities.cityName}}</option>\\r\\n                      </select>\\r\\n                      <div *ngIf=\\\"f.city.invalid && (f.city.dirty || f.city.touched)\\\" class=\\\"text-left errormsg\\\">\\r\\n                        <span *ngIf=\\\"f.city.errors.required\\\">\\r\\n                          <i class=\\\"fa fa-exclamation-circle\\\"></i> <span class=\\\"\\\"> Please select city</span>\\r\\n                        </span>\\r\\n                      </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-lg-6\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label for=\\\"\\\">Zip Code</label>\\r\\n                          <input type=\\\"text \\\" maxlength=\\\"6\\\" class=\\\"form-control\\\" id=\\\"\\\" formControlName=\\\"zipcode\\\" aria-describedby=\\\"\\\" placeholder=\\\"Enter Zip Code\\\">\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n            \\r\\n           \\r\\n          </form>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"verifyAgency()\\\">{{ addMode? 'Add' : 'Save Changes'}}</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    \\r\\n  </div>\\r\\n  <app-confirm-box></app-confirm-box>\\r\\n  <ngx-spinner type=\\\"ball-atom\\\" size=\\\"medium\\\" color=\\\"#58A7FE\\\"></ngx-spinner>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms';\r\nimport { AgencyApiService } from '../../../agency-admin/components/shared/services/agency-api-service/agency-api.service';\r\nimport { ErrorHandlerService } from '../../../../shared/services/error-handler/error-handler.service';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { NotificationService } from '../../../../shared/services/notification-service/notification.service';\r\nimport { CommonService } from '../../../../shared/services/common/common.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ConfirmationService } from 'primeng/api';\r\nimport { TeacherAPIURLs } from 'src/app/layout/teacher/shared/constant';\r\nimport { AgencyDetailsVM } from '../../shared/view-models/agency-view-modal';\r\nimport { AdminAPIURLs } from '../../shared/constant';\r\nimport { AdminApiService } from '../../shared/services/admin-api.service';\r\ndeclare var $: any;\r\n@Component({\r\n  selector: 'app-agency-list',\r\n  templateUrl: './agency-list.component.html',\r\n  styleUrls: ['./agency-list.component.css']\r\n})\r\nexport class AgencyListComponent implements OnInit {\r\n\r\n  agencyForm: FormGroup;\r\n  countryList: any[];\r\n  stateList: any[];\r\n  cityList: any[];\r\n  today = new Date();\r\n  agencyVM: AgencyDetailsVM = {};\r\n  totalRecord = 0;\r\n  agencyList: any[] = [];\r\n  pageNo = 0;\r\n  limit = 10;\r\n  loader = true;\r\n  status = 1;\r\n  addMode = true;\r\n  agencyID = 0;\r\n  emailPattern = /^([\\w-\\.]+\\u0040([\\w-]+\\.)+[\\w-]{2,4})?$/;\r\n  nameSearch = '';\r\n  constructor(private apiService: AdminApiService, private error: ErrorHandlerService,\r\n    private spinner: NgxSpinnerService, private notification: NotificationService,\r\n    public commonService: CommonService, private fb: FormBuilder, private route: ActivatedRoute,\r\n    private confirmationService: ConfirmationService) { }\r\n\r\n  ngOnInit() {\r\n    this.countryList = [];\r\n    this.cityList = [];\r\n    this.stateList = [];\r\n    this.createAgencyForm();\r\n    this.getAllCountries();\r\n    this.getAllAgencyList();\r\n  }\r\n\r\n  createAgencyForm() {\r\n    this.agencyForm = this.fb.group({\r\n      agencyname: ['', Validators.required],\r\n      firstname: ['', Validators.required],\r\n      lastname: ['', Validators.required],\r\n      email: ['', [Validators.required, Validators.pattern(this.emailPattern)]],\r\n      phone: ['', Validators.required],\r\n      address: ['', Validators.required],\r\n      city: ['', Validators.required],\r\n      state: ['', Validators.required],\r\n      zipcode: [''],\r\n      country: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n\r\n\r\n  updateAgencyForm() {\r\n    this.agencyForm = this.fb.group({\r\n      agencyname: [this.agencyVM.AgencyName, Validators.required],\r\n      firstname: [this.agencyVM.OwnerFirstName, Validators.required],\r\n      lastname: [this.agencyVM.OwnerLastName, Validators.required],\r\n      email: [ this.agencyVM.EmailId],\r\n      phone: [this.agencyVM.Mobile, Validators.required],\r\n      address: [this.agencyVM.Address, Validators.required],\r\n      city: [this.agencyVM.CityId, Validators.required],\r\n      state: [this.agencyVM.StateId, Validators.required],\r\n      zipcode: [this.agencyVM.PostalCode],\r\n      country: [this.agencyVM.CountryId, Validators.required]\r\n    });\r\n  }\r\n\r\n  get f() { return this.agencyForm.controls; }\r\n\r\n  getAllCountries() {\r\n    this.countryList = [];\r\n    const req = {\r\n      'AgencyID': 4\r\n    };\r\n    this.apiService.postData(TeacherAPIURLs.GetAllCountry, req, null).subscribe(res => {\r\n      if (res.body.statusCode === 200) {\r\n        this.countryList = res.body.data;        \r\n      } else {\r\n        this.spinner.hide();\r\n        this.error.unknownError();\r\n      }\r\n    }, err => {\r\n      this.spinner.hide();\r\n      this.error.commonError(err);\r\n    }\r\n    );\r\n  }\r\n\r\n\r\n  getCitiesList() {\r\n    this.spinner.show();\r\n    this.cityList = [];\r\n    const req = {\r\n      'StateId': this.agencyForm.value.state,\r\n      'AgencyID': 4\r\n    };\r\n    this.apiService.postData(TeacherAPIURLs.GetAllCities, req, null).subscribe(res => {\r\n      if (res.body.statusCode === 200) {\r\n        this.cityList = res.body.data;\r\n          this.spinner.hide();\r\n      } else {\r\n        this.spinner.hide();\r\n        this.error.unknownError();\r\n      }\r\n    }, err => {\r\n      this.spinner.hide();\r\n      this.error.commonError(err);\r\n    }\r\n    );\r\n  }\r\n\r\n\r\n  clearStateCity() {\r\n    this.agencyForm.controls['state'].setValue('');\r\n    this.agencyForm.controls['city'].setValue('');\r\n  }\r\n\r\n  clearCity() {\r\n    this.agencyForm.controls['city'].setValue('');\r\n  }\r\n\r\n\r\n\r\n  getStatesList() {\r\n    this.spinner.show();\r\n    this.stateList = [];\r\n    this.cityList = [];\r\n    const req = {\r\n      'CountryId': this.agencyForm.value.country,\r\n      'AgencyID': 4\r\n    };\r\n    this.apiService.postData(TeacherAPIURLs.GetAllStates, req, null).subscribe(res => {\r\n      if (res.body.statusCode === 200) {\r\n        this.stateList = res.body.data;\r\n          this.spinner.hide();\r\n      } else {\r\n           this.spinner.hide();\r\n        this.error.unknownError();\r\n      }\r\n    }, err => {\r\n      this.spinner.hide();\r\n      this.error.commonError(err);\r\n    }\r\n    );\r\n  }\r\n\r\n  verifyAgency() {\r\n    this.spinner.show();\r\n    if (this.agencyForm.valid) {\r\n      this.agencyVM.Id = this.agencyID;\r\n        this.agencyVM.AgencyName = this.agencyForm.value.agencyname;\r\n        this.agencyVM.EmailId = this.agencyForm.value.email;\r\n        this.agencyVM.Mobile = this.agencyForm.value.phone;\r\n        this.agencyVM.OwnerFirstName = this.agencyForm.value.firstname;\r\n        this.agencyVM.OwnerLastName = this.agencyForm.value.lastname;\r\n        this.agencyVM.StateId = this.agencyForm.value.state;\r\n        this.agencyVM.CityId = this.agencyForm.value.city;\r\n        this.agencyVM.PostalCode = this.agencyForm.value.zipcode;\r\n        this.agencyVM.Address =  this.agencyForm.value.address;\r\n        this.agencyVM.CountryId = this.agencyForm.value.country;\r\n        this.agencyVM.status = this.status;\r\n        const msg = 'Agency information has been saved successfully';\r\n        this.creteNewAgency(this.agencyVM, msg);\r\n    } else {\r\n      this.spinner.hide();\r\n      this.commonService.validateAllFields(this.agencyForm);\r\n    }\r\n  }\r\n\r\n  creteNewAgency(req, msg ) {\r\n    this.apiService.postData(AdminAPIURLs.SaveAgencyInformation, req, null).subscribe(res => {\r\n      if (res.body.statusCode === 200) {\r\n        $('.addagency').modal('hide');\r\n        this.getAllAgencyList();\r\n        this.notification.success({message: msg, title: ''});\r\n          this.spinner.hide();\r\n      } else if (res.body.statusCode === 986) {\r\n        this.spinner.hide();\r\n        this.notification.warning({message: 'This email Address already exist!', title: ''});\r\n      } else {\r\n           this.spinner.hide();\r\n        this.error.unknownError();\r\n      }\r\n    }, err => {\r\n      this.spinner.hide();\r\n      this.error.commonError(err);\r\n    }\r\n    );\r\n  }\r\n\r\n\r\n  getAgencyDetials(obj) {\r\n    this.agencyID = obj.id;\r\n    this.addMode = false;\r\n    this.agencyVM.AgencyName = obj.agencyName;\r\n    this.agencyVM.EmailId = obj.emailId;\r\n    this.agencyVM.Mobile = obj.mobile;\r\n    this.agencyVM.OwnerFirstName = obj.ownerFirstName;\r\n    this.agencyVM.OwnerLastName = obj.ownerLastName;\r\n    this.agencyVM.StateId = obj.stateId;\r\n    this.agencyVM.CityId = obj.cityId;\r\n    this.agencyVM.PostalCode = obj.postalCode;\r\n    this.agencyVM.Address =  obj.address;\r\n    this.agencyVM.CountryId = obj.countryId;\r\n    this.agencyVM.status = 1;\r\n    this.updateAgencyForm();\r\n    this.getAllCountries();\r\n    this.getStatesList();\r\n    this.getCitiesList();\r\n  }\r\n\r\n\r\n\r\n  getAllAgencyList() {\r\n    this.loader = true;\r\n     this.spinner.show();\r\n    this.agencyList = [];\r\n    const req = {\r\n      'limit': this.limit,\r\n      'page': this.pageNo,\r\n      'status': this.status,\r\n      'AgencyName': this.nameSearch,\r\n    };\r\n    this.apiService.postData(AdminAPIURLs.GetAllAgencyDetails, req, null).subscribe(res => {\r\n      this.totalRecord = res.body.totalRows;\r\n      if (res.body.statusCode === 200) {\r\n        this.totalRecord = res.body.totalRows;\r\n        this.agencyList = res.body.data;\r\n        this.loader = false;\r\n        this.spinner.hide();\r\n      } else {\r\n        this.spinner.hide();\r\n        this.error.unknownError();\r\n      }\r\n    }, err => {\r\n      this.spinner.hide();\r\n      this.error.commonError(err);\r\n    }\r\n    );\r\n  }\r\n\r\ngetUserStatus(value) {\r\n  this.status = value;\r\n  this.getAllAgencyList();\r\n}\r\n\r\n\r\npaginate(event) {\r\n  this.status = 1;\r\n  this.pageNo = event.page;\r\n  // this.limit = event.page;\r\n  this.getAllAgencyList();\r\n}\r\n\r\napprovedDenyRequest(event, obj) {\r\n    this.confirmationService.confirm({\r\n      message:  'Do you want to approve this agency ?' ,\r\n      accept: () => {\r\n        this.spinner.show();\r\n        obj.status = 1;\r\n        const msg = 'This agency has been activated successfully!';\r\n        this.creteNewAgency(obj, msg);\r\n      }\r\n    });\r\n}\r\n\r\nclearForm() {\r\n  this.createAgencyForm();\r\n  this.agencyVM = {};\r\n  this.addMode = true;\r\n  this.status = 0;\r\n}\r\n\r\n// to serch agency list by enter key\r\nkeyDownFunction(event) {\r\n  if (event.keyCode === 13) {\r\n    this.getAllAgencyList();\r\n  }\r\n}\r\n\r\n // Method to delete/deactivate Parent\r\n deleteAgency(value) {\r\n  this.confirmationService.confirm({\r\n    message: 'Do you want to deactivate this Agency?',\r\n    accept: () => {\r\n      this.spinner.show();\r\n      const req = {\r\n        'AgencyID': value.id,\r\n        'IsDeleted': true,\r\n        'DeletedBy': this.commonService.getReleventUserId('userdetails'),\r\n      };\r\n      this.apiService.postData(AdminAPIURLs.ActivateDeactivateAgency, req, null).subscribe(res => {\r\n        if (res.body.statusCode === 200) {\r\n          this.deleteAgencySuccess(value);\r\n        } else {\r\n          this.spinner.hide();\r\n          this.error.unknownError();\r\n        }\r\n      }, err => {\r\n        this.spinner.hide();\r\n        this.error.commonError(err);\r\n      });\r\n    }\r\n  });\r\n}\r\n\r\ndeleteAgencySuccess(data) {\r\n  this.getAllAgencyList();\r\n  this.notification.success({ message: 'This Agency has been deactivated', title: '' });\r\n}\r\n\r\n// Method to delete/deactivateAuth Person\r\nactivateAgency(value) {\r\n  this.confirmationService.confirm({\r\n    message: 'Do you want to activate this Agency?',\r\n    accept: () => {\r\n      this.spinner.show();\r\n      const req = {\r\n        'AgencyID': value.id,\r\n        'IsDeleted': false,\r\n        'UpdatedBy': this.commonService.getReleventUserId('userdetails'),\r\n      };\r\n      this.apiService.postData(AdminAPIURLs.ActivateDeactivateAgency, req, null).subscribe(res => {\r\n        if (res.body.statusCode === 200) {\r\n          // this.spinner.hide();\r\n          this.notification.success({ message: 'This Agency has been activated', title: '' });\r\n          this.getAllAgencyList();\r\n        } else {\r\n          this.spinner.hide();\r\n          this.error.unknownError();\r\n        }\r\n      }, err => {\r\n        this.spinner.hide();\r\n        this.error.commonError(err);\r\n      });\r\n    }\r\n  });\r\n}\r\n\r\n\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9hZG1pbi9jb21wb25lbnRzL3BhcmVudC1saXN0L3BhcmVudC1saXN0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"wrapper\\\">\\n  <div class=\\\"container-fluid\\\">\\n\\n    <div class=\\\"pagetitle\\\">\\n      <div>\\n        <h2>Admin\\n          <span>/ Learning Progrem Join Parent List </span>\\n        </h2>\\n      </div>\\n      <div>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-send\\\" (click)=\\\"generateParentCsvFile()\\\" data-toggle=\\\"modal\\\">Download CSV</button>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"d-flex justify-content-between align-items-center mt-20 subhead\\\">\\n      <div>\\n        <h3>Learning Progrem Join Parent List</h3>\\n      </div>\\n    </div>\\n\\n\\n    <div class=\\\"tab-content\\\" id=\\\"pills-tabContent\\\">\\n\\n      <div class=\\\"tab-pane fade show active\\\" id=\\\"pills-allergyType\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"allergyType\\\">\\n        <div class=\\\"innertable\\\">\\n          <div class=\\\"table-responsive\\\">\\n            <table class=\\\"table\\\">\\n              <thead class=\\\"thead-light\\\">\\n                <tr>\\n                  <th scope=\\\"col\\\">Parent Name</th>\\n                  <th scope=\\\"col\\\">Email</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr *ngFor=\\\"let agency of parentList\\\">\\n                  <td>{{agency.parentName}}</td>\\n                  <td>{{agency.email}}</td>\\n                </tr>\\n              </tbody>\\n            </table>\\n            <div class=\\\"text-center\\\">\\n              <span class=\\\"text-center\\\" *ngIf=\\\"(parentList.length == 0 && !loader)\\\">No record found</span>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n\\n    </div>\\n\\n  </div>\\n</div>\\n\\n\\n<app-confirm-box></app-confirm-box>\\n<ngx-spinner type=\\\"ball-atom\\\" size=\\\"medium\\\" color=\\\"#58A7FE\\\"></ngx-spinner>\"","import { Component, OnInit } from '@angular/core';\nimport { AdminApiService } from '../../shared/services/admin-api.service';\nimport { ErrorHandlerService } from '../../../../shared/services/error-handler/error-handler.service';\nimport { NotificationService } from '../../../../shared/services/notification-service/notification.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { CommonService } from '../../../../shared/services/common/common.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { ConfirmationService } from 'primeng/api';\nimport { AdminAPIURLs } from '../../shared/constant';\nimport { Angular2Csv } from 'angular2-csv/Angular2-csv';\ndeclare var $: any;\n@Component({\n  selector: 'app-parent-list',\n  templateUrl: './parent-list.component.html',\n  styleUrls: ['./parent-list.component.css']\n})\nexport class ParentListComponent implements OnInit {\n  parentList: any[] = [];\n  ParentDataForCsv = [];\n  csvFileNameForParent = 'ProgramJoinParentList';\n  isDownloading: boolean;\n  csvOptionsForParent = {\n    fieldSeparator: ',',\n    quoteStrings: '\"',\n    decimalseparator: '.',\n    showLabels: false,\n    headers: [\n      'FirstName',\n      'LastName',\n      'Email'\n    ],\n    showTitle: false,\n    title: [\n      'FirstName',\n      'LastName',\n      'Email'\n    ],\n    useBom: false,\n    removeNewLines: true,\n    keys: [\n      'FirstName',\n      'LastName',\n      'Email'\n    ],\n  };\n\n\n  constructor(private apiService: AdminApiService, private error: ErrorHandlerService,\n    private spinner: NgxSpinnerService, private notification: NotificationService,\n    public commonService: CommonService, private fb: FormBuilder, private route: ActivatedRoute,\n    private confirmationService: ConfirmationService) { }\n  ngOnInit() {\n    this.getAllParentList();\n  }\n\n  getAllParentList() {\n    this.parentList = [];\n    const req = {\n      'AgencyID': 1,\n    };\n    this.apiService.postData(AdminAPIURLs.GetClassroomJoinParent, req, null).subscribe(res => {\n      if (res.body.statusCode === 200) {\n        this.parentList = res.body.data;\n      } else {\n        this.spinner.hide();\n        this.error.unknownError();\n      }\n    }, err => {\n      this.spinner.hide();\n      this.error.commonError(err);\n    }\n    );\n  }\n\n  generateParentCsvFile() {\n    const csvArrayForParent = [];\n    this.parentList.forEach(element => {\n      csvArrayForParent.push({\n      FirstName: element.firstName,\n      LastName: element.lastName,\n      Email: element.email\n      });\n    });\n    this.ParentDataForCsv = csvArrayForParent;\n    // tslint:disable-next-line: no-unused-expression\n    new Angular2Csv(this.ParentDataForCsv, this.csvFileNameForParent, this.csvOptionsForParent);\n    this.isDownloading = false;\n  }\n\n}\n\n\n","module.exports = \".card-pricing {\\r\\n    z-index: 1;\\r\\n    border: 3px solid transparent;\\r\\n}\\r\\n.card-pricing .list-unstyled li {\\r\\n    padding: .5rem 0;\\r\\n    color: #6c757d;\\r\\n}\\r\\n.bg-primary{background:#58A7FE!important;font-size: 14px;}\\r\\n.card-pricing:hover {\\r\\n    z-index: 1;\\r\\n    border: 3px solid #58A7FE;\\r\\n    box-shadow:0 0.5rem 1rem rgba(0, 0, 0, 0.15) !important;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L2FkbWluL2NvbXBvbmVudHMvcGxhbi1wYWdlL3BsYW4tcGFnZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksVUFBVTtJQUNWLDZCQUE2QjtBQUNqQztBQUNBO0lBQ0ksZ0JBQWdCO0lBQ2hCLGNBQWM7QUFDbEI7QUFHQSxZQUFZLDRCQUE0QixDQUFDLGVBQWUsQ0FBQztBQUV6RDtJQUNJLFVBQVU7SUFDVix5QkFBeUI7SUFDekIsdURBQXVEO0FBQzNEIiwiZmlsZSI6InNyYy9hcHAvbGF5b3V0L2FkbWluL2NvbXBvbmVudHMvcGxhbi1wYWdlL3BsYW4tcGFnZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNhcmQtcHJpY2luZyB7XHJcbiAgICB6LWluZGV4OiAxO1xyXG4gICAgYm9yZGVyOiAzcHggc29saWQgdHJhbnNwYXJlbnQ7XHJcbn1cclxuLmNhcmQtcHJpY2luZyAubGlzdC11bnN0eWxlZCBsaSB7XHJcbiAgICBwYWRkaW5nOiAuNXJlbSAwO1xyXG4gICAgY29sb3I6ICM2Yzc1N2Q7XHJcbn1cclxuXHJcblxyXG4uYmctcHJpbWFyeXtiYWNrZ3JvdW5kOiM1OEE3RkUhaW1wb3J0YW50O2ZvbnQtc2l6ZTogMTRweDt9XHJcblxyXG4uY2FyZC1wcmljaW5nOmhvdmVyIHtcclxuICAgIHotaW5kZXg6IDE7XHJcbiAgICBib3JkZXI6IDNweCBzb2xpZCAjNThBN0ZFO1xyXG4gICAgYm94LXNoYWRvdzowIDAuNXJlbSAxcmVtIHJnYmEoMCwgMCwgMCwgMC4xNSkgIWltcG9ydGFudDtcclxufSJdfQ== */\"","module.exports = \"<div class=\\\"wrapper\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n\\r\\n    <div class=\\\"pagetitle\\\">\\r\\n      <div>\\r\\n        <h2>Admin\\r\\n          <span>/ PlanPage </span>\\r\\n        </h2>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"d-flex justify-content-between align-items-center mt-20 subhead mb-20\\\">\\r\\n      <div>\\r\\n        <h3>Pricing Plan</h3>\\r\\n      </div>\\r\\n      <div>\\r\\n        <!-- <button type=\\\"submit\\\" class=\\\"btn btn-send\\\"  data-toggle=\\\"modal\\\" data-target=\\\".addplan\\\">Add Plan</button> -->\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- <div class=\\\"pricing card-deck flex-column flex-md-row mb-3 card_section\\\" >\\r\\n      <div *ngFor=\\\"let plan of pricingPlanList\\\" class=\\\"card card-pricing text-center px-3 mb-4\\\">\\r\\n        <span class=\\\"h6 w-60 mx-auto px-4 py-1 rounded-bottom bg-primary text-white shadow-sm\\\">{{plan.planName | slice: 0:20}}</span>\\r\\n        <div class=\\\"bg-transparent card-header pt-4 border-0\\\">\\r\\n          <h1 class=\\\"h1 font-weight-normal text-primary text-center mb-0\\\" data-pricing-value=\\\"1200\\\">$<span class=\\\"price\\\">{{plan.planPrice}}</span>\\r\\n            <span class=\\\"h6 text-muted ml-2\\\" *ngIf=\\\"plan.frequency == 'month'\\\">/ per month</span>\\r\\n            <span class=\\\"h6 text-muted ml-2\\\" *ngIf=\\\"plan.frequency == 'year'\\\">/ per year</span>\\r\\n          </h1>\\r\\n        </div>\\r\\n        <div class=\\\"card-body pt-0\\\">\\r\\n          <ul class=\\\"list-unstyled mb-4\\\">\\r\\n            <li><b>{{plan.planName}}</b></li>\\r\\n            <li>Up to {{plan.numberofUsers}} users</li>\\r\\n            <li class=\\\"listing\\\">{{plan.remark}}</li>\\r\\n          </ul>\\r\\n          <button type=\\\"button\\\" data-target=\\\".addplan\\\" data-toggle=\\\"modal\\\" (click)=\\\"getPlanDetails(plan)\\\" class=\\\"btn btn-primary mb-3\\\">Purchase Plan</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    \\r\\n    </div> -->\\r\\n\\r\\n    <!-- <div class=\\\"row\\\">\\r\\n        <div class=\\\"col col-md-4\\\">\\r\\n            <div class=\\\"pricing card-deck flex-column flex-md-row mb-3 card_section\\\">\\r\\n         \\r\\n     \\r\\n                <div *ngFor=\\\"let plan of pricingPlanList\\\" class=\\\"card card-pricing text-center px-3 mb-4\\\" >\\r\\n                    <span class=\\\"h6 w-60 mx-auto px-4 py-1 rounded-bottom bg-primary text-white shadow-sm\\\">{{plan.planName}}</span>\\r\\n                    <div class=\\\"bg-transparent card-header pt-4 border-0\\\">\\r\\n                      <h1 class=\\\"h1 font-weight-normal text-primary text-center mb-0\\\" data-pricing-value=\\\"1200\\\">$<span class=\\\"price\\\">{{plan.planPrice}}</span>\\r\\n                        <span class=\\\"h6 text-muted ml-2\\\" *ngIf=\\\"plan.frequency == 'month'\\\">/ per month</span>\\r\\n                        <span class=\\\"h6 text-muted ml-2\\\" *ngIf=\\\"plan.frequency == 'year'\\\">/ per year</span>\\r\\n                      </h1>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body pt-0\\\">\\r\\n                      <ul class=\\\"list-unstyled mb-4\\\">\\r\\n                        <li>Up to {{plan.numberofUsers}} users</li>\\r\\n                        <li class=\\\"listing\\\">{{plan.remark}}</li>\\r\\n                      </ul>\\r\\n                      <button type=\\\"button\\\"  data-toggle=\\\"modal\\\" data-target=\\\".addplan\\\" (click)=\\\"getPlanDetails(plan)\\\" class=\\\"btn btn-primary mb-3\\\">Purchse Plan</button>\\r\\n                    </div>\\r\\n                  </div>\\r\\n            </div>\\r\\n        </div>\\r\\n      </div> -->\\r\\n\\r\\n <!-- Deepak start  -->\\r\\n\\r\\n <div class=\\\"pricing card-deck card_section mt-20\\\" >\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-lg-3\\\" *ngFor=\\\"let plan of pricingPlanList\\\">\\r\\n        <div   class=\\\"card card-pricing text-center px-3 mb-4\\\" >\\r\\n          <span class=\\\"h6 w-60 mx-auto px-4 py-1 rounded-bottom bg-primary text-white shadow-sm\\\">{{plan.planName}}</span>\\r\\n          <div class=\\\"bg-transparent card-header pt-4 border-0\\\">\\r\\n            <h1 class=\\\"h1 font-weight-normal text-primary text-center mb-0\\\" data-pricing-value=\\\"1200\\\">$<span class=\\\"price\\\">{{plan.planPrice}}</span>\\r\\n              <span class=\\\"h6 text-muted ml-2\\\" *ngIf=\\\"plan.frequency == 'month'\\\">/ per month</span>\\r\\n              <span class=\\\"h6 text-muted ml-2\\\" *ngIf=\\\"plan.frequency == 'year'\\\">/ per year</span>\\r\\n            </h1>\\r\\n          </div>\\r\\n          <div class=\\\"card-body pt-0\\\">\\r\\n            <ul class=\\\"list-unstyled mb-4\\\">\\r\\n              <li>Up to {{plan.numberofUsers}} users</li>\\r\\n              <li class=\\\"listing\\\">{{plan.remark}}</li>\\r\\n              <!-- <li>Monthly updates</li>\\r\\n              <li>Free cancelation</li> -->\\r\\n            </ul>\\r\\n            <button type=\\\"button\\\"  data-toggle=\\\"modal\\\" data-target=\\\".addplan\\\" (click)=\\\"getPlanDetails(plan)\\\" class=\\\"btn btn-primary mb-3\\\">Purchase Plan</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    \\r\\n</div>\\r\\n\\r\\n  <!-- Deepak Stop -->\\r\\n    <!-- last -->\\r\\n  </div>\\r\\n\\r\\n  \\r\\n<div class=\\\"modal fade addplan\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\" aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog modal-lg\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLongTitle\\\">Purchase</h5>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <form [formGroup]=\\\"planForm\\\">\\r\\n          <div class=\\\"row mb-20 mt-20\\\">\\r\\n            <div class=\\\"col-lg-6\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"\\\">Agency</label>\\r\\n                <select formControlName=\\\"agencyid\\\" class=\\\"form-control\\\">\\r\\n                  <option value=\\\"\\\">Select</option>\\r\\n                  <option *ngFor=\\\"let agency of agencyList\\\" [value]=\\\"agency.id\\\">{{agency.agencyName}}</option>\\r\\n                </select>\\r\\n                <div *ngIf=\\\"f.agencyid.invalid && (f.agencyid.dirty || f.agencyid.touched)\\\" class=\\\"text-left errormsg\\\">\\r\\n                    <span *ngIf=\\\"f.agencyid.errors.required\\\">\\r\\n                      <i class=\\\"fa fa-exclamation-circle\\\"></i> <span class=\\\"\\\"> Please select agency</span>\\r\\n                    </span>\\r\\n                  </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\r\\n        <button type=\\\"button\\\"  class=\\\"btn btn-primary\\\" (click)=\\\"subscribePlan()\\\">Subscribe</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n</div>\\r\\n<ngx-spinner type=\\\"ball-atom\\\" size=\\\"medium\\\" color=\\\"#58A7FE\\\"></ngx-spinner>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { AdminApiService } from '../../shared/services/admin-api.service';\r\nimport { ErrorHandlerService } from '../../../../shared/services/error-handler/error-handler.service';\r\nimport { NotificationService } from '../../../../shared/services/notification-service/notification.service';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { CommonService } from '../../../../shared/services/common/common.service';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ConfirmationService } from 'primeng/api';\r\nimport { AdminAPIURLs } from '../../shared/constant';\r\ndeclare var $: any;\r\n@Component({\r\n  selector: 'app-plan-page',\r\n  templateUrl: './plan-page.component.html',\r\n  styleUrls: ['./plan-page.component.css']\r\n})\r\nexport class PlanPageComponent implements OnInit {\r\n  pricingPlanList: any[] = [];\r\n  planForm: FormGroup;\r\n  agencyList: any [] = [];\r\n  planId = 0;\r\n  constructor(private apiService: AdminApiService, private error: ErrorHandlerService,\r\n    private spinner: NgxSpinnerService, private notification: NotificationService,\r\n    public commonService: CommonService, private fb: FormBuilder, private route: ActivatedRoute,\r\n    private confirmationService: ConfirmationService) { }\r\n  ngOnInit() {\r\n    this.getAllPricingPlan();\r\n    this.createPlanForm();\r\n    this.getAllAgencyList();\r\n  }\r\n\r\n\r\n  getAllPricingPlan() {\r\n    this.spinner.show();\r\n    this.pricingPlanList = [];\r\n    const req = {\r\n      'limit': 0,\r\n      'page': 0\r\n    };\r\n    this.apiService.postData(AdminAPIURLs.GetAllPricingPlanDetails, req, null).subscribe(res => {\r\n      if (res.body.statusCode === 200) {\r\n        this.pricingPlanList = res.body.data;\r\n        this.spinner.hide();\r\n      } else {\r\n        this.spinner.hide();\r\n        this.error.unknownError();\r\n      }\r\n    }, err => {\r\n      this.spinner.hide();\r\n      this.error.commonError(err);\r\n    }\r\n    );\r\n  }\r\n\r\n\r\n  createPlanForm() {\r\n    this.planForm = this.fb.group({\r\n      agencyid: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n\r\n  getPlanDetails(plan) {\r\n    this.createPlanForm();\r\n    this.planId = plan.id;\r\n  }\r\n\r\n  getAllAgencyList() {\r\n    this.agencyList = [];\r\n    const req = {\r\n      'limit': 0,\r\n      'page': 0,\r\n      'status': 1,\r\n      'AgencyName': ''\r\n    };\r\n    this.apiService.postData(AdminAPIURLs.GetAllAgencyDetails, req, null).subscribe(res => {\r\n      if (res.body.statusCode === 200) {\r\n        this.agencyList = res.body.data;\r\n      } else {\r\n        this.error.unknownError();\r\n      }\r\n    }, err => {\r\n      this.error.commonError(err);\r\n    }\r\n    );\r\n  }\r\n\r\n\r\n  get f() { return this.planForm.controls; }\r\n\r\n\r\n  subscribePlan() {\r\n    this.spinner.show();\r\n    if (this.planForm.valid) {\r\n      const req = {\r\n        'id': 0,\r\n        'agencyID': this.planForm.value.agencyid,\r\n        'planID': this.planId,\r\n        'isOffline': true,\r\n        'createdBy': 1\r\n      };\r\n      this.apiService.postData(AdminAPIURLs.SaveSubscriptionInformation, req, null).subscribe(res => {\r\n        if (res.body.statusCode === 200) {\r\n          $('.addplan').modal('hide');\r\n          this.notification.success({message: 'Subscription Successfull', title: ''});\r\n          this.spinner.hide();\r\n        }  else if (res.body.statusCode === 205) {\r\n          this.notification.warning({ message: 'Your previous subscription plan still active', title: '' });\r\n          this.spinner.hide();\r\n        } else {\r\n          this.spinner.hide();\r\n          this.error.unknownError();\r\n        }\r\n      }, err => {\r\n        this.spinner.hide();\r\n        this.error.commonError(err);\r\n      }\r\n      );\r\n    } else {\r\n      this.spinner.hide();\r\n      this.commonService.validateAllFields(this.planForm);\r\n    }\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9hZG1pbi9jb21wb25lbnRzL3BvbGljeS1hY2NlcHQtbGlzdC9wb2xpY3ktYWNjZXB0LWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"wrapper\\\">\\n  <div class=\\\"container-fluid\\\">\\n\\n    <div class=\\\"pagetitle\\\">\\n      <div>\\n        <h2>Admin\\n          <span>/ Agency List </span>\\n        </h2>\\n      </div>\\n      <div>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-send\\\" (click)=\\\"generateAgencyCsvFile()\\\" data-toggle=\\\"modal\\\">Download CSV</button>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"d-flex justify-content-between align-items-center mt-20 subhead\\\">\\n      <div>\\n        <h3>Agency List</h3>\\n      </div>\\n    </div>\\n\\n\\n    <div class=\\\"tab-content\\\" id=\\\"pills-tabContent\\\">\\n\\n      <div class=\\\"tab-pane fade show active\\\" id=\\\"pills-allergyType\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"allergyType\\\">\\n        <div class=\\\"innertable\\\">\\n          <div class=\\\"table-responsive\\\">\\n            <table class=\\\"table\\\">\\n              <thead class=\\\"thead-light\\\">\\n                <tr>\\n                  <th scope=\\\"col\\\">Agency Name</th>\\n                  <th scope=\\\"col\\\">Owner First Name</th>\\n                  <th scope=\\\"col\\\">Owner Last Name</th>\\n                  <th scope=\\\"col\\\">Registration Date</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr *ngFor=\\\"let agency of agencyList\\\">\\n                  <td>{{agency.agencyName}}</td>\\n                  <td>{{agency.ownerFirstName}}</td>\\n                  <td>{{agency.ownerLastName}}</td>\\n                  <td>{{agency.policyEULAAcceptDate | date:'medium'}}</td>\\n                </tr>\\n              </tbody>\\n            </table>\\n            <div class=\\\"text-center\\\">\\n              <span class=\\\"text-center\\\" *ngIf=\\\"(agencyList.length == 0 && !loader)\\\">No record found</span>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n\\n    </div>\\n\\n  </div>\\n</div>\\n\\n\\n<app-confirm-box></app-confirm-box>\\n<ngx-spinner type=\\\"ball-atom\\\" size=\\\"medium\\\" color=\\\"#58A7FE\\\"></ngx-spinner>\"","import { Component, OnInit } from '@angular/core';\nimport { AdminApiService } from '../../shared/services/admin-api.service';\nimport { ErrorHandlerService } from '../../../../shared/services/error-handler/error-handler.service';\nimport { NotificationService } from '../../../../shared/services/notification-service/notification.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { CommonService } from '../../../../shared/services/common/common.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { ConfirmationService } from 'primeng/api';\nimport { AdminAPIURLs } from '../../shared/constant';\nimport { Angular2Csv } from 'angular2-csv/Angular2-csv';\ndeclare var $: any;\n\n@Component({\n  selector: 'app-policy-accept-list',\n  templateUrl: './policy-accept-list.component.html',\n  styleUrls: ['./policy-accept-list.component.css']\n})\nexport class PolicyAcceptListComponent implements OnInit {\n  agencyList: any[] = [];\n  ParentDataForCsv = [];\n  csvFileNameForParent = 'AgencyList';\n  isDownloading: boolean;\n  csvOptionsForAgency = {\n    fieldSeparator: ',',\n    quoteStrings: '\"',\n    decimalseparator: '.',\n    showLabels: false,\n    headers: [\n      'AgencyName',\n      'OwnerName',\n      'TimeOfRegistration'\n    ],\n    showTitle: false,\n    title: [\n      'AgencyName',\n      'OwnerName',\n      'TimeOfRegistration'\n    ],\n    useBom: false,\n    removeNewLines: true,\n    keys: [\n      'AgencyName',\n      'OwnerName',\n      'TimeOfRegistration'\n    ],\n  };\n\n  constructor(private apiService: AdminApiService, private error: ErrorHandlerService,\n    private spinner: NgxSpinnerService, private notification: NotificationService,\n    public commonService: CommonService, private fb: FormBuilder, private route: ActivatedRoute,\n    private confirmationService: ConfirmationService) { }\n  ngOnInit() {\n    this.getAllAgencyList();\n  }\n\n  getAllAgencyList() {\n    this.agencyList = [];\n    const req = {\n      'limit': 0,\n      'page': 0,\n      'status': 1,\n      'AgencyName': ''\n    };\n    this.apiService.postData(AdminAPIURLs.GetAllAgencyDetails, req, null).subscribe(res => {\n      if (res.body.statusCode === 200) {\n        this.agencyList = res.body.data;\n      } else {\n        this.error.unknownError();\n      }\n    }, err => {\n      this.error.commonError(err);\n    }\n    );\n  }\n\n\n  generateAgencyCsvFile() {\n    const csvArrayForParent = [];\n    this.agencyList.forEach(element => {\n      csvArrayForParent.push({\n        AgencyName: element.agencyName,\n        OwnerName: element.ownerName,\n        TimeOfRegistration: element.policyEULAAcceptDate\n      });\n    });\n    this.ParentDataForCsv = csvArrayForParent;\n    // tslint:disable-next-line: no-unused-expression\n    new Angular2Csv(this.ParentDataForCsv, this.csvFileNameForParent, this.csvOptionsForAgency);\n    this.isDownloading = false;\n  }\n\n}\n\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9hZG1pbi9jb21wb25lbnRzL3ByaWNpbmctcGxhbi9wcmljaW5nLXBsYW4uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"wrapper\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n\\r\\n    <div class=\\\"pagetitle\\\">\\r\\n      <div>\\r\\n        <h2>Admin\\r\\n          <span>/ Pricing Plan </span>\\r\\n        </h2>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"d-flex justify-content-between align-items-center mt-20 subhead\\\">\\r\\n      <div>\\r\\n        <h3>Pricing Plan</h3>\\r\\n      </div>\\r\\n      <div>\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-send\\\" data-toggle=\\\"modal\\\" (click)=\\\"clearForm()\\\" data-target=\\\".addplan\\\">Add Plan</button>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"innertable\\\">\\r\\n      <div class=\\\"table-responsive\\\">\\r\\n        <table class=\\\"table\\\">\\r\\n          <thead class=\\\"thead-light\\\">\\r\\n            <tr>\\r\\n              <!-- <th scope=\\\"col\\\">Plan #ID</th> -->\\r\\n              <th scope=\\\"col\\\">Name</th>\\r\\n              <th scope=\\\"col\\\">Price($)</th>\\r\\n              <th scope=\\\"col\\\">Maximun Users</th>\\r\\n              <th scope=\\\"col\\\">Status</th>\\r\\n              <th scope=\\\"col\\\" class=\\\"text-center\\\">Actions</th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr *ngFor=\\\"let plan of pricingPlanList\\\">\\r\\n              <td>{{plan.planName}}</td>\\r\\n              <td>${{plan.planPrice}}</td>\\r\\n              <td>{{plan.numberofUsers}}</td>\\r\\n              <td>{{plan.isActive ? 'Active': 'In Active' }}</td>\\r\\n              <td class=\\\"text-center\\\">\\r\\n                <a data-toggle=\\\"modal\\\" data-target=\\\".addplan\\\" (click)=\\\"getPlanDetails(plan)\\\">\\r\\n                  <i class=\\\"fa fa-eye\\\" aria-hidden=\\\"true\\\" ></i>\\r\\n                </a>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<div class=\\\"modal fade addplan\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\" aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog modal-lg\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLongTitle\\\">{{addMode? 'Add Pricing Plan' : 'Pricing Plan Details' }}</h5>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <form [formGroup]=\\\"pricingForm\\\">\\r\\n          <div class=\\\"row mb-20 mt-20\\\">\\r\\n            <div class=\\\"col-lg-6\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"\\\">Plan Name (Max length 25 char)</label>\\r\\n                <input type=\\\"text\\\" formControlName=\\\"planname\\\" maxlength=\\\"25\\\" class=\\\"form-control\\\" id=\\\"\\\" aria-describedby=\\\"\\\" placeholder=\\\"Enter plan name\\\">\\r\\n                <div *ngIf=\\\"f.planname.invalid && (f.planname.dirty || f.planname.touched)\\\" class=\\\"text-left errormsg\\\">\\r\\n                    <span *ngIf=\\\"f.planname.errors.required\\\">\\r\\n                      <i class=\\\"fa fa-exclamation-circle\\\"></i> <span class=\\\"\\\"> Please enter plan name</span>\\r\\n                    </span>\\r\\n                  </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"\\\">No of User</label>\\r\\n                  <input type=\\\"number\\\" formControlName=\\\"noofusers\\\" class=\\\"form-control\\\" id=\\\"\\\" aria-describedby=\\\"\\\" placeholder=\\\"Number of user\\\">\\r\\n                  <div *ngIf=\\\"f.noofusers.invalid && (f.noofusers.dirty || f.noofusers.touched)\\\" class=\\\"text-left errormsg\\\">\\r\\n                      <span *ngIf=\\\"f.noofusers.errors.required\\\">\\r\\n                        <i class=\\\"fa fa-exclamation-circle\\\"></i> <span class=\\\"\\\"> Please enter no of user</span>\\r\\n                      </span>\\r\\n                    </div>\\r\\n                </div>\\r\\n              </div>\\r\\n          </div>\\r\\n\\r\\n\\r\\n          <div class=\\\"row mb-20\\\">\\r\\n            \\r\\n            <div class=\\\"col-lg-6\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"\\\">Price($)</label>\\r\\n                <input type=\\\"number\\\" formControlName=\\\"price\\\" class=\\\"form-control\\\" id=\\\"\\\" aria-describedby=\\\"\\\" placeholder=\\\"Price\\\">\\r\\n                <div *ngIf=\\\"f.price.invalid && (f.price.dirty || f.price.touched)\\\" class=\\\"text-left errormsg\\\">\\r\\n                    <span *ngIf=\\\"f.price.errors.required\\\">\\r\\n                      <i class=\\\"fa fa-exclamation-circle\\\"></i> <span class=\\\"\\\"> Please enter price</span>\\r\\n                    </span>\\r\\n                  </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"\\\">Time Period</label>\\r\\n                  <select formControlName=\\\"limit\\\" class=\\\"form-control\\\">\\r\\n                    <option value=\\\"\\\">Select</option>\\r\\n                    <option value=\\\"month\\\">One Month</option>\\r\\n                    <option value=\\\"year\\\">One Year</option>\\r\\n                  </select>\\r\\n                  <div *ngIf=\\\"f.limit.invalid && (f.limit.dirty || f.limit.touched)\\\" class=\\\"text-left errormsg\\\">\\r\\n                      <span *ngIf=\\\"f.limit.errors.required\\\">\\r\\n                        <i class=\\\"fa fa-exclamation-circle\\\"></i> <span class=\\\"\\\"> Please select time period</span>\\r\\n                      </span>\\r\\n                    </div>\\r\\n                </div>\\r\\n              </div>\\r\\n          </div>\\r\\n          <div class=\\\"row mb-20\\\">\\r\\n              <div class=\\\"col-lg-12\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"\\\">Remark (Max length 100 char)</label>\\r\\n                    <textarea name=\\\"\\\" maxlength=\\\"100\\\" formControlName=\\\"remark\\\" placeholder=\\\"Remark\\\" class=\\\"form-control\\\" id=\\\"\\\"  rows=\\\"6\\\"></textarea>\\r\\n                  </div>\\r\\n                </div>\\r\\n          </div>\\r\\n          <div class=\\\"row mb-20\\\">\\r\\n              <div class=\\\"col-lg-12\\\"> \\r\\n                  <div class=\\\"\\\">\\r\\n                      <label class=\\\"checkboxcustom\\\">\\r\\n                        <input type=\\\"checkbox\\\" id=\\\"checkbox-in\\\" class=\\\"abc\\\" formControlName=\\\"active\\\" >\\r\\n                        <span class=\\\"checkmark abc\\\"></span><label style=\\\"margin-left: 14px;\\\"> IsActive</label>\\r\\n                      </label>\\r\\n                    </div>\\r\\n              </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\r\\n        <button type=\\\"button\\\"  class=\\\"btn btn-primary\\\" (click)=\\\"createNewPlan()\\\">{{addMode? 'Add': 'Save Chnage'}}</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<ngx-spinner type=\\\"ball-atom\\\" size=\\\"medium\\\" color=\\\"#58A7FE\\\"></ngx-spinner>\"","import { Component, OnInit } from '@angular/core';\r\nimport { AdminApiService } from '../../shared/services/admin-api.service';\r\nimport { ErrorHandlerService } from '../../../../shared/services/error-handler/error-handler.service';\r\nimport { NotificationService } from '../../../../shared/services/notification-service/notification.service';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { CommonService } from '../../../../shared/services/common/common.service';\r\nimport { ConfirmationService } from 'primeng/api';\r\nimport { AdminAPIURLs } from '../../shared/constant';\r\nimport { PaymentVM } from '../../shared/view-models/agency-view-modal';\r\ndeclare var $: any;\r\n@Component({\r\n  selector: 'app-pricing-plan',\r\n  templateUrl: './pricing-plan.component.html',\r\n  styleUrls: ['./pricing-plan.component.css']\r\n})\r\nexport class PricingPlanComponent implements OnInit {\r\n  totalRecord = 0;\r\n  pricingPlanList: any[] = [];\r\n  pageNo = 0;\r\n  limit = 10;\r\n  planId = 0;\r\n  loader = true;\r\n  pricingForm: FormGroup;\r\n  PaymentVM: PaymentVM = {};\r\n  addMode = true;\r\n  constructor(private apiService: AdminApiService, private error: ErrorHandlerService,\r\n    private spinner: NgxSpinnerService, private notification: NotificationService,\r\n    public commonService: CommonService, private fb: FormBuilder, private route: ActivatedRoute,\r\n    private confirmationService: ConfirmationService) { }\r\n\r\n  ngOnInit() {\r\n    this.getAllPricingPlan();\r\n    this.createPlanForm();\r\n  }\r\n\r\n\r\n  createPlanForm() {\r\n    this.pricingForm = this.fb.group({\r\n      planname: ['', Validators.required],\r\n      noofusers: ['', Validators.required],\r\n      price: ['', Validators.required],\r\n      remark: [''],\r\n      limit: ['', Validators.required],\r\n      active: [true]\r\n    });\r\n  }\r\n\r\n\r\n\r\n  updatePlanForm() {\r\n    this.pricingForm = this.fb.group({\r\n      planname: [ this.PaymentVM.planName, Validators.required],\r\n      noofusers: [ this.PaymentVM.numberofUsers, Validators.required],\r\n      price: [ this.PaymentVM.planPrice, Validators.required],\r\n      remark: [this.PaymentVM.remark],\r\n      limit: [ this.PaymentVM.frequency, Validators.required],\r\n      active: [this.PaymentVM.IsActive]\r\n    });\r\n  }\r\n\r\n  get f() { return this.pricingForm.controls; }\r\n\r\n  getAllPricingPlan() {\r\n    this.spinner.show();\r\n    this.pricingPlanList = [];\r\n    const req = {\r\n      'limit': this.limit,\r\n      'page': this.pageNo\r\n    };\r\n    this.apiService.postData(AdminAPIURLs.GetAllPricingPlanDetails, req, null).subscribe(res => {\r\n      this.totalRecord = res.body.totalRows;\r\n      if (res.body.statusCode === 200) {\r\n        this.pricingPlanList = res.body.data;\r\n        this.spinner.hide();\r\n      } else {\r\n        this.spinner.hide();\r\n        this.error.unknownError();\r\n      }\r\n    }, err => {\r\n      this.spinner.hide();\r\n      this.error.commonError(err);\r\n    }\r\n    );\r\n  }\r\n\r\n\r\n  createNewPlan() {\r\n    this.spinner.show();\r\n    if (this.pricingForm.valid) {\r\n      const req = {\r\n        'id': this.addMode ? 0 : this.planId,\r\n        'planName': this.pricingForm.value.planname,\r\n        'numberofUsers': this.pricingForm.value.noofusers,\r\n        'planPrice': this.pricingForm.value.price,\r\n        'frequency': this.pricingForm.value.limit,\r\n        'remark': this.pricingForm.value.remark,\r\n        'IsActive': this.pricingForm.value.active\r\n      };\r\n\r\n      this.apiService.postData(AdminAPIURLs.SavePricingPlanInformation, req, null).subscribe(res => {\r\n        this.totalRecord = res.body.totalRows;\r\n        if (res.body.statusCode === 200) {\r\n            this.notification.success({ message: this.addMode ? 'Plan has been created successfully' :\r\n             'Plan has been update successfully', title: '' });\r\n            $('.addplan').modal('hide');\r\n            this.getAllPricingPlan();\r\n        } else if (res.body.statusCode === 987) {\r\n          this.spinner.hide();\r\n          this.notification.warning({ message: 'This plan is already in used ', title: 'Cannnot be updated' });\r\n        } else {\r\n          this.spinner.hide();\r\n          this.error.unknownError();\r\n        }\r\n      }, err => {\r\n        this.spinner.hide();\r\n        this.error.commonError(err);\r\n      }\r\n      );\r\n\r\n    } else {\r\n      this.spinner.hide();\r\n      this.commonService.validateAllFields(this.pricingForm);\r\n    }\r\n  }\r\n\r\n  getPlanDetails(obj) {\r\n    this.addMode = false;\r\n    this.planId = obj.id;\r\n    this.PaymentVM.IsActive = obj.isActive;\r\n    this.PaymentVM.planName = obj.planName;\r\n    this.PaymentVM.numberofUsers = obj.numberofUsers;\r\n    this.PaymentVM.planPrice = obj.planPrice;\r\n    this.PaymentVM.remark = obj.remark;\r\n    this.PaymentVM.frequency = obj.frequency;\r\n    this.updatePlanForm();\r\n  }\r\n\r\n  clearForm() {\r\n    this.planId = 0;\r\n    this.createPlanForm();\r\n    this.addMode = true;\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9hZG1pbi9jb21wb25lbnRzL3N1cGVyLWFkbWluLWRhc2hib2FyZC9zdXBlci1hZG1pbi1kYXNoYm9hcmQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"wrapper\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"pagetitle mb-20\\\">\\r\\n      <h2>Dashboard</h2>\\r\\n    </div>\\r\\n    <div class=\\\"pagebadges\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-lg-4 col-md-4\\\">\\r\\n          <div class=\\\"badgebox\\\">\\r\\n            <div>\\r\\n              <i class=\\\"fa fa-user\\\" aria-hidden=\\\"true\\\"></i>\\r\\n            </div>\\r\\n            <div>\\r\\n              <h3>{{approvedAgencyCount}}</h3>\\r\\n              <p>Approved Agency</p>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-lg-4 col-md-4\\\">\\r\\n          <div class=\\\"badgebox\\\">\\r\\n            <div>\\r\\n              <i class=\\\"fa fa-user\\\" aria-hidden=\\\"true\\\"></i>\\r\\n            </div>\\r\\n            <div>\\r\\n              <h3>{{unApprovedAgencyCount}}</h3>\\r\\n              <p>Unapproved Agency</p>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-lg-4 col-md-4\\\">\\r\\n          <div class=\\\"badgebox\\\">\\r\\n            <div>\\r\\n              <i class=\\\"fa fa-user\\\" aria-hidden=\\\"true\\\"></i>\\r\\n            </div>\\r\\n            <div>\\r\\n              <h3>{{subscriptionActiveAgencyCount}}</h3>\\r\\n              <p>Active Subscription</p>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-lg-12 col-md-12\\\">\\r\\n        <div class=\\\"whitebox white_box_table\\\">\\r\\n          <div class=\\\"head\\\">Organization</div>\\r\\n          <!-- Serach -->\\r\\n          <div class=\\\"card cardfilter\\\">\\r\\n            <div class=\\\"row algcenter\\\">    \\r\\n              <div class=\\\"leftfilter\\\">\\r\\n                <div class=\\\"search-date\\\">\\r\\n                  <div class=\\\"pr15 label-text\\\">Search Name : </div>\\r\\n                  <input type=\\\"text\\\" placeholder=\\\"Search Agency Name\\\" (keydown)=\\\"keyDownFunction($event)\\\" [(ngModel)]=\\\"nameSearch\\\"\\r\\n                    class=\\\"form-control mr15\\\" id=\\\"\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n              <!-- <div class=\\\"filter-buttons\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-send\\\" (click)=\\\"getAllAgencyPlanDetailsList()\\\">Search</button>\\r\\n              </div> -->\\r\\n            </div>\\r\\n          </div>\\r\\n          <!-- search end -->\\r\\n          <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table\\\">\\r\\n              <thead class=\\\"thead-light\\\">\\r\\n                <tr>                  \\r\\n                  <th scope=\\\"col\\\">Agency</th>\\r\\n                  <th scope=\\\"col\\\">Last Logged In</th>\\r\\n                  <th scope=\\\"col\\\">Owner</th>\\r\\n                  <th>Email</th>\\r\\n                  <th>City</th>\\r\\n                  <th scope=\\\"col\\\">State</th>\\r\\n                  <th>Plan</th>\\r\\n                  <th scope=\\\"col\\\">Valid From</th>\\r\\n                  <th scope=\\\"col\\\">Valid To</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr *ngFor=\\\"let agency of agencyPlanList\\\">                 \\r\\n                  <td>{{agency.agencyName}}</td>\\r\\n                  <td *ngIf=\\\"agency.lastLogin == null\\\">-</td>\\r\\n                  <td *ngIf=\\\"agency.lastLogin != null\\\">{{agency.lastLogin| date}}</td>\\r\\n                  <td>{{agency.ownerName}}</td>\\r\\n                  <td>{{agency.emailId}} </td>\\r\\n                  <td>{{agency.cityName}} </td>\\r\\n                  <td>{{agency.stateName}}</td>\\r\\n                  <td>{{agency.planName}}</td>\\r\\n                  <td>{{agency.validFrom| date}}</td>\\r\\n                  <td>{{agency.validTo| date}}</td>\\r\\n                  \\r\\n                </tr>\\r\\n               \\r\\n\\r\\n              </tbody>\\r\\n            </table>\\r\\n            <div class=\\\"text-center\\\">\\r\\n              <span class=\\\"text-center\\\" *ngIf=\\\"(agencyPlanList.length == 0 && !loader)\\\">No record found</span>\\r\\n            </div>\\r\\n          </div>\\r\\n          <p-paginator [alwaysShow]=\\\"false\\\" [rows]=\\\"limit\\\" [totalRecords]=\\\"totalRecord\\\" (onPageChange)=\\\"paginate($event)\\\"></p-paginator>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { AdminApiService } from '../../shared/services/admin-api.service';\r\nimport { NotificationService } from 'src/app/shared/services/notification-service/notification.service';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { CommonService } from 'src/app/shared/services/common/common.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ConfirmationService } from 'primeng/api';\r\nimport { ErrorHandlerService } from 'src/app/shared/services/error-handler/error-handler.service';\r\nimport { AdminAPIURLs } from '../../shared/constant';\r\n\r\n@Component({\r\n  selector: 'app-super-admin-dashboard',\r\n  templateUrl: './super-admin-dashboard.component.html',\r\n  styleUrls: ['./super-admin-dashboard.component.css']\r\n})\r\nexport class SuperAdminDashboardComponent implements OnInit {\r\n\r\n  totalRecord = 0;\r\n  agencyPlanList: any[] = [];\r\n  countList: any[] = [];\r\n  pageNo = 0;\r\n  limit = 10;\r\n  loader = true;\r\n  approvedAgencyCount = 0;\r\n  subscriptionActiveAgencyCount = 0;\r\n  unApprovedAgencyCount = 0;\r\n  nameSearch = '';\r\n  constructor(private apiService: AdminApiService, private error: ErrorHandlerService,\r\n    private spinner: NgxSpinnerService, private notification: NotificationService,\r\n    public commonService: CommonService, private fb: FormBuilder, private route: ActivatedRoute,\r\n    private confirmationService: ConfirmationService) { }\r\n  ngOnInit() {\r\n    this.getAllAgencyPlanDetailsList();\r\n    this.getCount();\r\n  }\r\n\r\n  getAllAgencyPlanDetailsList() {\r\n    this.loader = true;\r\n     this.spinner.show();\r\n    this.agencyPlanList = [];\r\n    this.countList = [];\r\n\r\n    const req = {\r\n      'limit': this.limit,\r\n      'page': this.pageNo,\r\n      'AgencyName': this.nameSearch\r\n    };\r\n    this.apiService.postData(AdminAPIURLs.GetAllAgencyPlanDetails, req, null).subscribe(res => {\r\n      this.totalRecord = res.body.totalRows;\r\n      if (res.body.statusCode === 200) {\r\n        this.totalRecord = res.body.totalRows;\r\n        this.agencyPlanList = res.body.data;\r\n        this.loader = false;\r\n        this.spinner.hide();\r\n      } else {\r\n        this.spinner.hide();\r\n        this.error.unknownError();\r\n      }\r\n    }, err => {\r\n      this.spinner.hide();\r\n      this.error.commonError(err);\r\n    }\r\n    );\r\n  }\r\n\r\n  getCount() {\r\n    this.spinner.show();\r\n    this.countList = [];\r\n\r\n    const req = {\r\n      'limit': this.limit,\r\n      'page': this.pageNo\r\n    };\r\n    this.apiService.postData(AdminAPIURLs.GetCountDetailsForSuperAdmin, req, null).subscribe(res => {\r\n      if (res.body.statusCode === 200) {\r\n        this.countList = res.body.data;\r\n        this.approvedAgencyCount = res.body.data.approvedAgencyCount;\r\n        this.unApprovedAgencyCount = res.body.data.unApprovedAgencyCount;\r\n        this.subscriptionActiveAgencyCount = res.body.data.subscriptionActiveAgencyCount;\r\n        this.spinner.hide();\r\n      } else {\r\n        this.spinner.hide();\r\n        this.error.unknownError();\r\n      }\r\n    }, err => {\r\n      this.spinner.hide();\r\n      this.error.commonError(err);\r\n    }\r\n    );\r\n  }\r\n\r\n  paginate(event) {\r\n    this.pageNo = event.page;\r\n    // this.limit = event.page;\r\n    this.getAllAgencyPlanDetailsList();\r\n  }\r\n\r\n  keyDownFunction(event) {\r\n    if (event.keyCode === 13) {\r\n      this.getAllAgencyPlanDetailsList();\r\n    }\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9hZG1pbi9jb21wb25lbnRzL3RleHQtcGxhbi90ZXh0LXBsYW4uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"wrapper\\\">\\n  <div class=\\\"container-fluid\\\">\\n\\n    <div class=\\\"pagetitle\\\">\\n      <div>\\n        <h2>Admin\\n          <span>/ Text Message Plan </span>\\n        </h2>\\n      </div>\\n      <div>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-send\\\" (click)=\\\"clearTextPlanForm()\\\" data-toggle=\\\"modal\\\"\\n          data-target=\\\".addtextplan\\\">Add Text Plan</button>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"d-flex justify-content-between align-items-center mt-20 subhead\\\">\\n      <div>\\n        <h3>Coupon List</h3>\\n      </div>\\n    </div>\\n\\n\\n    <div class=\\\"tab-content\\\" id=\\\"pills-tabContent\\\">\\n\\n      <div class=\\\"tab-pane fade show active\\\" id=\\\"pills-allergyType\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"allergyType\\\">\\n        <div class=\\\"innertable\\\">\\n          <div class=\\\"table-responsive\\\">\\n            <table class=\\\"table\\\">\\n              <thead class=\\\"thead-light\\\">\\n                <tr>\\n                  <th scope=\\\"col\\\">Amount</th>\\n                  <th scope=\\\"col\\\">Messages</th>\\n                  <th scope=\\\"col\\\" class=\\\"text-center\\\">Change Status</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr *ngFor=\\\"let plan of txtPlanList\\\">\\n                  <td>{{plan.amount}}</td>\\n                  <td>{{plan.messages}}</td>\\n                  <td class=\\\"text-center\\\">\\n                    <button class=\\\"form-control\\\" *ngIf=\\\"!plan.isDeleted\\\" class=\\\"btn btn-warning\\\"\\n                      (click)=\\\"deactivatePlan(plan)\\\">Deactivate</button>\\n                    <button class=\\\"form-control\\\" *ngIf=\\\"plan.isDeleted\\\" class=\\\"btn btn-success\\\"\\n                      (click)=\\\"activatePlan(plan)\\\">Activate</button>\\n                  </td>\\n                </tr>\\n              </tbody>\\n            </table>\\n            <div class=\\\"text-center\\\">\\n              <span class=\\\"text-center\\\" *ngIf=\\\"(txtPlanList.length == 0 && !loader)\\\">No record found</span>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n\\n    </div>\\n\\n  </div>\\n</div>\\n\\n\\n<div class=\\\"modal fade addtextplan\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myLargeModalLabel\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog modal-lg\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLongTitle\\\">Add Text Plan</h5>\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form [formGroup]=\\\"txtPlanForm\\\">\\n          <div class=\\\"row mb-20 mt-20\\\">\\n            <div class=\\\"col-lg-6\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"\\\">Amount*</label>\\n                <input type=\\\"text \\\" class=\\\"form-control\\\" id=\\\"\\\" aria-describedby=\\\"\\\" formControlName=\\\"amount\\\"\\n                  (keypress)=\\\"commonService.allowOnlyNumber($event)\\\" placeholder=\\\"Plan Amount\\\">\\n                <div *ngIf=\\\"t.amount.invalid && (t.amount.dirty || t.amount.touched)\\\" class=\\\"text-left errormsg\\\">\\n                  <span *ngIf=\\\"t.amount.errors.required\\\">\\n                    <i class=\\\"fa fa-exclamation-circle\\\"></i> <span class=\\\"\\\"> Please enter plan amount</span>\\n                  </span>\\n                </div>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-lg-6\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"\\\">Messages*</label>\\n                <input type=\\\"text \\\" (keypress)=\\\"commonService.allowOnlyNumber($event)\\\" class=\\\"form-control\\\" id=\\\"\\\"\\n                  (keypress)=\\\"commonService.allowOnlyNumber($event)\\\" aria-describedby=\\\"\\\" formControlName=\\\"messages\\\"\\n                  placeholder=\\\"Number of messages\\\">\\n                <div *ngIf=\\\"t.messages.invalid && (t.messages.dirty || t.messages.touched)\\\" class=\\\"text-left errormsg\\\">\\n                  <span *ngIf=\\\"t.messages.errors.required\\\">\\n                    <i class=\\\"fa fa-exclamation-circle\\\"></i> <span class=\\\"\\\"> Please enter number of messages</span>\\n                  </span>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"savePlan()\\\">Add Plan</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n<app-confirm-box></app-confirm-box>\\n<ngx-spinner type=\\\"ball-atom\\\" size=\\\"medium\\\" color=\\\"#58A7FE\\\"></ngx-spinner>\"","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms';\nimport { AgencyApiService } from '../../../agency-admin/components/shared/services/agency-api-service/agency-api.service';\nimport { ErrorHandlerService } from '../../../../shared/services/error-handler/error-handler.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { NotificationService } from '../../../../shared/services/notification-service/notification.service';\nimport { CommonService } from '../../../../shared/services/common/common.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { ConfirmationService } from 'primeng/api';\nimport { AdminApiService } from '../../shared/services/admin-api.service';\nimport { ParentAPIURLs } from 'src/app/layout/parent/shared/constant';\nimport { AdminAPIURLs } from '../../shared/constant';\ndeclare var $: any;\n\n@Component({\n  selector: 'app-text-plan',\n  templateUrl: './text-plan.component.html',\n  styleUrls: ['./text-plan.component.css']\n})\nexport class TextPlanComponent implements OnInit {\n  txtPlanForm: FormGroup;\n  txtPlanList: any[];\n  constructor(private apiService: AdminApiService, private error: ErrorHandlerService,\n    private spinner: NgxSpinnerService, private notification: NotificationService,\n    public commonService: CommonService, private fb: FormBuilder, private route: ActivatedRoute,\n    private confirmationService: ConfirmationService) { }\n\n  ngOnInit() {\n    this.txtPlanList = [];\n    this.createTextPlanForm();\n    this.getPlan();\n  }\n\n  createTextPlanForm() {\n    this.txtPlanForm = this.fb.group({\n      amount: ['', Validators.required],\n      messages: ['', Validators.required],\n    });\n  }\n\n  get t() { return this.txtPlanForm.controls; }\n\n  getPlan() {\n    const req = {\n      'isActive': true,\n      'agencyID': 0\n    };\n    this.apiService.postData(AdminAPIURLs.GetTextMessagePlan, req, null).subscribe(res => {\n      if (res.body.statusCode === 200) {\n        this.txtPlanList = res.body.data;\n        this.spinner.hide();\n      } else {\n        this.spinner.hide();\n        this.error.unknownError();\n      }\n    }, err => {\n      this.spinner.hide();\n      this.error.commonError(err);\n    }\n    );\n\n  }\n\n\n  // Save Plan\n  savePlan() {\n    if (this.txtPlanForm.valid) {\n      const data = {\n        'id': 0,\n        'createdBy': this.commonService.getLoggedInUserId(),\n        'Amount': this.txtPlanForm.value.amount,\n        'Messages': this.txtPlanForm.value.messages,\n      };\n      this.apiService.postData(AdminAPIURLs.SaveTextMessagePlan, data, null).subscribe(res => {\n        if (res.body.statusCode === 200) {\n          $('.addtextplan').modal('hide');\n          this.notification.success({ message: 'Text Message Plan Added Successfully.', title: '' });\n          this.getPlan();\n        } else if (res.body.statusCode === 206) {\n          this.spinner.hide();\n          this.notification.warning({ message: 'Text Message Plan already exists with same amount.', title: '' });\n        } else {\n          this.spinner.hide();\n          this.error.unknownError();\n        }\n      }, err => {\n        this.spinner.hide();\n        this.error.commonError(err);\n      });\n    } else {\n      this.spinner.hide();\n      this.commonService.validateAllFields(this.txtPlanForm);\n    }\n  }\n\n\n  clearTextPlanForm() {\n    this.createTextPlanForm();\n  }\n\n  // Method to delete/deactivate Plan\n  deactivatePlan(value) {\n    this.confirmationService.confirm({\n      message: 'Do you want to deactivate this Plan?',\n      accept: () => {\n        this.spinner.show();\n        const req = {\n          'Id': value.id,\n          'IsDeleted': true,\n          'DeletedBy': this.commonService.getReleventUserId('userdetails'),\n        };\n        this.apiService.postData(AdminAPIURLs.ActivateDeactivateTextMessagePlan, req, null).subscribe(res => {\n          if (res.body.statusCode === 200) {\n            this.notification.success({ message: 'This Plan has been deactivated', title: '' });\n            this.getPlan();\n          } else {\n            this.spinner.hide();\n            this.error.unknownError();\n          }\n        }, err => {\n          this.spinner.hide();\n          this.error.commonError(err);\n        });\n      }\n    });\n  }\n\n\n  // Method to Activate Plan\n  activatePlan(value) {\n    this.confirmationService.confirm({\n      message: 'Do you want to activate this Plan?',\n      accept: () => {\n        this.spinner.show();\n        const req = {\n          'Id': value.id,\n          'IsDeleted': false,\n          'UpdatedBy': this.commonService.getReleventUserId('userdetails'),\n        };\n        this.apiService.postData(AdminAPIURLs.ActivateDeactivateTextMessagePlan, req, null).subscribe(res => {\n          if (res.body.statusCode === 200) {\n            this.notification.success({ message: 'This Plan has been activated', title: '' });\n            this.getPlan();\n          } else {\n            this.spinner.hide();\n            this.error.unknownError();\n          }\n        }, err => {\n          this.spinner.hide();\n          this.error.commonError(err);\n        });\n      }\n    });\n  }\n\n}\n\n"],"sourceRoot":""}