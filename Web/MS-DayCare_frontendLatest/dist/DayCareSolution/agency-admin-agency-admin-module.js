(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["agency-admin-agency-admin-module"],{

/***/ "./node_modules/chart.js/src/chart.js":
/*!********************************************!*\
  !*** ./node_modules/chart.js/src/chart.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @namespace Chart
 */
var Chart = __webpack_require__(/*! ./core/core */ "./node_modules/chart.js/src/core/core.js")();

Chart.helpers = __webpack_require__(/*! ./helpers/index */ "./node_modules/chart.js/src/helpers/index.js");

// @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!
__webpack_require__(/*! ./core/core.helpers */ "./node_modules/chart.js/src/core/core.helpers.js")(Chart);

Chart.Animation = __webpack_require__(/*! ./core/core.animation */ "./node_modules/chart.js/src/core/core.animation.js");
Chart.animationService = __webpack_require__(/*! ./core/core.animations */ "./node_modules/chart.js/src/core/core.animations.js");
Chart.defaults = __webpack_require__(/*! ./core/core.defaults */ "./node_modules/chart.js/src/core/core.defaults.js");
Chart.Element = __webpack_require__(/*! ./core/core.element */ "./node_modules/chart.js/src/core/core.element.js");
Chart.elements = __webpack_require__(/*! ./elements/index */ "./node_modules/chart.js/src/elements/index.js");
Chart.Interaction = __webpack_require__(/*! ./core/core.interaction */ "./node_modules/chart.js/src/core/core.interaction.js");
Chart.layouts = __webpack_require__(/*! ./core/core.layouts */ "./node_modules/chart.js/src/core/core.layouts.js");
Chart.platform = __webpack_require__(/*! ./platforms/platform */ "./node_modules/chart.js/src/platforms/platform.js");
Chart.plugins = __webpack_require__(/*! ./core/core.plugins */ "./node_modules/chart.js/src/core/core.plugins.js");
Chart.Scale = __webpack_require__(/*! ./core/core.scale */ "./node_modules/chart.js/src/core/core.scale.js");
Chart.scaleService = __webpack_require__(/*! ./core/core.scaleService */ "./node_modules/chart.js/src/core/core.scaleService.js");
Chart.Ticks = __webpack_require__(/*! ./core/core.ticks */ "./node_modules/chart.js/src/core/core.ticks.js");
Chart.Tooltip = __webpack_require__(/*! ./core/core.tooltip */ "./node_modules/chart.js/src/core/core.tooltip.js");

__webpack_require__(/*! ./core/core.controller */ "./node_modules/chart.js/src/core/core.controller.js")(Chart);
__webpack_require__(/*! ./core/core.datasetController */ "./node_modules/chart.js/src/core/core.datasetController.js")(Chart);

__webpack_require__(/*! ./scales/scale.linearbase */ "./node_modules/chart.js/src/scales/scale.linearbase.js")(Chart);
__webpack_require__(/*! ./scales/scale.category */ "./node_modules/chart.js/src/scales/scale.category.js")(Chart);
__webpack_require__(/*! ./scales/scale.linear */ "./node_modules/chart.js/src/scales/scale.linear.js")(Chart);
__webpack_require__(/*! ./scales/scale.logarithmic */ "./node_modules/chart.js/src/scales/scale.logarithmic.js")(Chart);
__webpack_require__(/*! ./scales/scale.radialLinear */ "./node_modules/chart.js/src/scales/scale.radialLinear.js")(Chart);
__webpack_require__(/*! ./scales/scale.time */ "./node_modules/chart.js/src/scales/scale.time.js")(Chart);

// Controllers must be loaded after elements
// See Chart.core.datasetController.dataElementType
__webpack_require__(/*! ./controllers/controller.bar */ "./node_modules/chart.js/src/controllers/controller.bar.js")(Chart);
__webpack_require__(/*! ./controllers/controller.bubble */ "./node_modules/chart.js/src/controllers/controller.bubble.js")(Chart);
__webpack_require__(/*! ./controllers/controller.doughnut */ "./node_modules/chart.js/src/controllers/controller.doughnut.js")(Chart);
__webpack_require__(/*! ./controllers/controller.line */ "./node_modules/chart.js/src/controllers/controller.line.js")(Chart);
__webpack_require__(/*! ./controllers/controller.polarArea */ "./node_modules/chart.js/src/controllers/controller.polarArea.js")(Chart);
__webpack_require__(/*! ./controllers/controller.radar */ "./node_modules/chart.js/src/controllers/controller.radar.js")(Chart);
__webpack_require__(/*! ./controllers/controller.scatter */ "./node_modules/chart.js/src/controllers/controller.scatter.js")(Chart);

__webpack_require__(/*! ./charts/Chart.Bar */ "./node_modules/chart.js/src/charts/Chart.Bar.js")(Chart);
__webpack_require__(/*! ./charts/Chart.Bubble */ "./node_modules/chart.js/src/charts/Chart.Bubble.js")(Chart);
__webpack_require__(/*! ./charts/Chart.Doughnut */ "./node_modules/chart.js/src/charts/Chart.Doughnut.js")(Chart);
__webpack_require__(/*! ./charts/Chart.Line */ "./node_modules/chart.js/src/charts/Chart.Line.js")(Chart);
__webpack_require__(/*! ./charts/Chart.PolarArea */ "./node_modules/chart.js/src/charts/Chart.PolarArea.js")(Chart);
__webpack_require__(/*! ./charts/Chart.Radar */ "./node_modules/chart.js/src/charts/Chart.Radar.js")(Chart);
__webpack_require__(/*! ./charts/Chart.Scatter */ "./node_modules/chart.js/src/charts/Chart.Scatter.js")(Chart);

// Loading built-in plugins
var plugins = __webpack_require__(/*! ./plugins */ "./node_modules/chart.js/src/plugins/index.js");
for (var k in plugins) {
	if (plugins.hasOwnProperty(k)) {
		Chart.plugins.register(plugins[k]);
	}
}

Chart.platform.initialize();

module.exports = Chart;
if (typeof window !== 'undefined') {
	window.Chart = Chart;
}

// DEPRECATIONS

/**
 * Provided for backward compatibility, not available anymore
 * @namespace Chart.Legend
 * @deprecated since version 2.1.5
 * @todo remove at version 3
 * @private
 */
Chart.Legend = plugins.legend._element;

/**
 * Provided for backward compatibility, not available anymore
 * @namespace Chart.Title
 * @deprecated since version 2.1.5
 * @todo remove at version 3
 * @private
 */
Chart.Title = plugins.title._element;

/**
 * Provided for backward compatibility, use Chart.plugins instead
 * @namespace Chart.pluginService
 * @deprecated since version 2.1.5
 * @todo remove at version 3
 * @private
 */
Chart.pluginService = Chart.plugins;

/**
 * Provided for backward compatibility, inheriting from Chart.PlugingBase has no
 * effect, instead simply create/register plugins via plain JavaScript objects.
 * @interface Chart.PluginBase
 * @deprecated since version 2.5.0
 * @todo remove at version 3
 * @private
 */
Chart.PluginBase = Chart.Element.extend({});

/**
 * Provided for backward compatibility, use Chart.helpers.canvas instead.
 * @namespace Chart.canvasHelpers
 * @deprecated since version 2.6.0
 * @todo remove at version 3
 * @private
 */
Chart.canvasHelpers = Chart.helpers.canvas;

/**
 * Provided for backward compatibility, use Chart.layouts instead.
 * @namespace Chart.layoutService
 * @deprecated since version 2.8.0
 * @todo remove at version 3
 * @private
 */
Chart.layoutService = Chart.layouts;


/***/ }),

/***/ "./node_modules/chart.js/src/charts/Chart.Bar.js":
/*!*******************************************************!*\
  !*** ./node_modules/chart.js/src/charts/Chart.Bar.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function(Chart) {

	Chart.Bar = function(context, config) {
		config.type = 'bar';

		return new Chart(context, config);
	};

};


/***/ }),

/***/ "./node_modules/chart.js/src/charts/Chart.Bubble.js":
/*!**********************************************************!*\
  !*** ./node_modules/chart.js/src/charts/Chart.Bubble.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function(Chart) {

	Chart.Bubble = function(context, config) {
		config.type = 'bubble';
		return new Chart(context, config);
	};

};


/***/ }),

/***/ "./node_modules/chart.js/src/charts/Chart.Doughnut.js":
/*!************************************************************!*\
  !*** ./node_modules/chart.js/src/charts/Chart.Doughnut.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function(Chart) {

	Chart.Doughnut = function(context, config) {
		config.type = 'doughnut';

		return new Chart(context, config);
	};

};


/***/ }),

/***/ "./node_modules/chart.js/src/charts/Chart.Line.js":
/*!********************************************************!*\
  !*** ./node_modules/chart.js/src/charts/Chart.Line.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function(Chart) {

	Chart.Line = function(context, config) {
		config.type = 'line';

		return new Chart(context, config);
	};

};


/***/ }),

/***/ "./node_modules/chart.js/src/charts/Chart.PolarArea.js":
/*!*************************************************************!*\
  !*** ./node_modules/chart.js/src/charts/Chart.PolarArea.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function(Chart) {

	Chart.PolarArea = function(context, config) {
		config.type = 'polarArea';

		return new Chart(context, config);
	};

};


/***/ }),

/***/ "./node_modules/chart.js/src/charts/Chart.Radar.js":
/*!*********************************************************!*\
  !*** ./node_modules/chart.js/src/charts/Chart.Radar.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function(Chart) {

	Chart.Radar = function(context, config) {
		config.type = 'radar';

		return new Chart(context, config);
	};

};


/***/ }),

/***/ "./node_modules/chart.js/src/charts/Chart.Scatter.js":
/*!***********************************************************!*\
  !*** ./node_modules/chart.js/src/charts/Chart.Scatter.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function(Chart) {
	Chart.Scatter = function(context, config) {
		config.type = 'scatter';
		return new Chart(context, config);
	};
};


/***/ }),

/***/ "./node_modules/chart.js/src/controllers/controller.bar.js":
/*!*****************************************************************!*\
  !*** ./node_modules/chart.js/src/controllers/controller.bar.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var defaults = __webpack_require__(/*! ../core/core.defaults */ "./node_modules/chart.js/src/core/core.defaults.js");
var elements = __webpack_require__(/*! ../elements/index */ "./node_modules/chart.js/src/elements/index.js");
var helpers = __webpack_require__(/*! ../helpers/index */ "./node_modules/chart.js/src/helpers/index.js");

defaults._set('bar', {
	hover: {
		mode: 'label'
	},

	scales: {
		xAxes: [{
			type: 'category',

			// Specific to Bar Controller
			categoryPercentage: 0.8,
			barPercentage: 0.9,

			// offset settings
			offset: true,

			// grid line settings
			gridLines: {
				offsetGridLines: true
			}
		}],

		yAxes: [{
			type: 'linear'
		}]
	}
});

defaults._set('horizontalBar', {
	hover: {
		mode: 'index',
		axis: 'y'
	},

	scales: {
		xAxes: [{
			type: 'linear',
			position: 'bottom'
		}],

		yAxes: [{
			position: 'left',
			type: 'category',

			// Specific to Horizontal Bar Controller
			categoryPercentage: 0.8,
			barPercentage: 0.9,

			// offset settings
			offset: true,

			// grid line settings
			gridLines: {
				offsetGridLines: true
			}
		}]
	},

	elements: {
		rectangle: {
			borderSkipped: 'left'
		}
	},

	tooltips: {
		callbacks: {
			title: function(item, data) {
				// Pick first xLabel for now
				var title = '';

				if (item.length > 0) {
					if (item[0].yLabel) {
						title = item[0].yLabel;
					} else if (data.labels.length > 0 && item[0].index < data.labels.length) {
						title = data.labels[item[0].index];
					}
				}

				return title;
			},

			label: function(item, data) {
				var datasetLabel = data.datasets[item.datasetIndex].label || '';
				return datasetLabel + ': ' + item.xLabel;
			}
		},
		mode: 'index',
		axis: 'y'
	}
});

/**
 * Computes the "optimal" sample size to maintain bars equally sized while preventing overlap.
 * @private
 */
function computeMinSampleSize(scale, pixels) {
	var min = scale.isHorizontal() ? scale.width : scale.height;
	var ticks = scale.getTicks();
	var prev, curr, i, ilen;

	for (i = 1, ilen = pixels.length; i < ilen; ++i) {
		min = Math.min(min, pixels[i] - pixels[i - 1]);
	}

	for (i = 0, ilen = ticks.length; i < ilen; ++i) {
		curr = scale.getPixelForTick(i);
		min = i > 0 ? Math.min(min, curr - prev) : min;
		prev = curr;
	}

	return min;
}

/**
 * Computes an "ideal" category based on the absolute bar thickness or, if undefined or null,
 * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This
 * mode currently always generates bars equally sized (until we introduce scriptable options?).
 * @private
 */
function computeFitCategoryTraits(index, ruler, options) {
	var thickness = options.barThickness;
	var count = ruler.stackCount;
	var curr = ruler.pixels[index];
	var size, ratio;

	if (helpers.isNullOrUndef(thickness)) {
		size = ruler.min * options.categoryPercentage;
		ratio = options.barPercentage;
	} else {
		// When bar thickness is enforced, category and bar percentages are ignored.
		// Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')
		// and deprecate barPercentage since this value is ignored when thickness is absolute.
		size = thickness * count;
		ratio = 1;
	}

	return {
		chunk: size / count,
		ratio: ratio,
		start: curr - (size / 2)
	};
}

/**
 * Computes an "optimal" category that globally arranges bars side by side (no gap when
 * percentage options are 1), based on the previous and following categories. This mode
 * generates bars with different widths when data are not evenly spaced.
 * @private
 */
function computeFlexCategoryTraits(index, ruler, options) {
	var pixels = ruler.pixels;
	var curr = pixels[index];
	var prev = index > 0 ? pixels[index - 1] : null;
	var next = index < pixels.length - 1 ? pixels[index + 1] : null;
	var percent = options.categoryPercentage;
	var start, size;

	if (prev === null) {
		// first data: its size is double based on the next point or,
		// if it's also the last data, we use the scale end extremity.
		prev = curr - (next === null ? ruler.end - curr : next - curr);
	}

	if (next === null) {
		// last data: its size is also double based on the previous point.
		next = curr + curr - prev;
	}

	start = curr - ((curr - prev) / 2) * percent;
	size = ((next - prev) / 2) * percent;

	return {
		chunk: size / ruler.stackCount,
		ratio: options.barPercentage,
		start: start
	};
}

module.exports = function(Chart) {

	Chart.controllers.bar = Chart.DatasetController.extend({

		dataElementType: elements.Rectangle,

		initialize: function() {
			var me = this;
			var meta;

			Chart.DatasetController.prototype.initialize.apply(me, arguments);

			meta = me.getMeta();
			meta.stack = me.getDataset().stack;
			meta.bar = true;
		},

		update: function(reset) {
			var me = this;
			var rects = me.getMeta().data;
			var i, ilen;

			me._ruler = me.getRuler();

			for (i = 0, ilen = rects.length; i < ilen; ++i) {
				me.updateElement(rects[i], i, reset);
			}
		},

		updateElement: function(rectangle, index, reset) {
			var me = this;
			var chart = me.chart;
			var meta = me.getMeta();
			var dataset = me.getDataset();
			var custom = rectangle.custom || {};
			var rectangleOptions = chart.options.elements.rectangle;

			rectangle._xScale = me.getScaleForId(meta.xAxisID);
			rectangle._yScale = me.getScaleForId(meta.yAxisID);
			rectangle._datasetIndex = me.index;
			rectangle._index = index;

			rectangle._model = {
				datasetLabel: dataset.label,
				label: chart.data.labels[index],
				borderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleOptions.borderSkipped,
				backgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleOptions.backgroundColor),
				borderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleOptions.borderColor),
				borderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleOptions.borderWidth)
			};

			me.updateElementGeometry(rectangle, index, reset);

			rectangle.pivot();
		},

		/**
		 * @private
		 */
		updateElementGeometry: function(rectangle, index, reset) {
			var me = this;
			var model = rectangle._model;
			var vscale = me.getValueScale();
			var base = vscale.getBasePixel();
			var horizontal = vscale.isHorizontal();
			var ruler = me._ruler || me.getRuler();
			var vpixels = me.calculateBarValuePixels(me.index, index);
			var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);

			model.horizontal = horizontal;
			model.base = reset ? base : vpixels.base;
			model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;
			model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;
			model.height = horizontal ? ipixels.size : undefined;
			model.width = horizontal ? undefined : ipixels.size;
		},

		/**
		 * @private
		 */
		getValueScaleId: function() {
			return this.getMeta().yAxisID;
		},

		/**
		 * @private
		 */
		getIndexScaleId: function() {
			return this.getMeta().xAxisID;
		},

		/**
		 * @private
		 */
		getValueScale: function() {
			return this.getScaleForId(this.getValueScaleId());
		},

		/**
		 * @private
		 */
		getIndexScale: function() {
			return this.getScaleForId(this.getIndexScaleId());
		},

		/**
		 * Returns the stacks based on groups and bar visibility.
		 * @param {Number} [last] - The dataset index
		 * @returns {Array} The stack list
		 * @private
		 */
		_getStacks: function(last) {
			var me = this;
			var chart = me.chart;
			var scale = me.getIndexScale();
			var stacked = scale.options.stacked;
			var ilen = last === undefined ? chart.data.datasets.length : last + 1;
			var stacks = [];
			var i, meta;

			for (i = 0; i < ilen; ++i) {
				meta = chart.getDatasetMeta(i);
				if (meta.bar && chart.isDatasetVisible(i) &&
					(stacked === false ||
					(stacked === true && stacks.indexOf(meta.stack) === -1) ||
					(stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1)))) {
					stacks.push(meta.stack);
				}
			}

			return stacks;
		},

		/**
		 * Returns the effective number of stacks based on groups and bar visibility.
		 * @private
		 */
		getStackCount: function() {
			return this._getStacks().length;
		},

		/**
		 * Returns the stack index for the given dataset based on groups and bar visibility.
		 * @param {Number} [datasetIndex] - The dataset index
		 * @param {String} [name] - The stack name to find
		 * @returns {Number} The stack index
		 * @private
		 */
		getStackIndex: function(datasetIndex, name) {
			var stacks = this._getStacks(datasetIndex);
			var index = (name !== undefined)
				? stacks.indexOf(name)
				: -1; // indexOf returns -1 if element is not present

			return (index === -1)
				? stacks.length - 1
				: index;
		},

		/**
		 * @private
		 */
		getRuler: function() {
			var me = this;
			var scale = me.getIndexScale();
			var stackCount = me.getStackCount();
			var datasetIndex = me.index;
			var isHorizontal = scale.isHorizontal();
			var start = isHorizontal ? scale.left : scale.top;
			var end = start + (isHorizontal ? scale.width : scale.height);
			var pixels = [];
			var i, ilen, min;

			for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {
				pixels.push(scale.getPixelForValue(null, i, datasetIndex));
			}

			min = helpers.isNullOrUndef(scale.options.barThickness)
				? computeMinSampleSize(scale, pixels)
				: -1;

			return {
				min: min,
				pixels: pixels,
				start: start,
				end: end,
				stackCount: stackCount,
				scale: scale
			};
		},

		/**
		 * Note: pixel values are not clamped to the scale area.
		 * @private
		 */
		calculateBarValuePixels: function(datasetIndex, index) {
			var me = this;
			var chart = me.chart;
			var meta = me.getMeta();
			var scale = me.getValueScale();
			var datasets = chart.data.datasets;
			var value = scale.getRightValue(datasets[datasetIndex].data[index]);
			var stacked = scale.options.stacked;
			var stack = meta.stack;
			var start = 0;
			var i, imeta, ivalue, base, head, size;

			if (stacked || (stacked === undefined && stack !== undefined)) {
				for (i = 0; i < datasetIndex; ++i) {
					imeta = chart.getDatasetMeta(i);

					if (imeta.bar &&
						imeta.stack === stack &&
						imeta.controller.getValueScaleId() === scale.id &&
						chart.isDatasetVisible(i)) {

						ivalue = scale.getRightValue(datasets[i].data[index]);
						if ((value < 0 && ivalue < 0) || (value >= 0 && ivalue > 0)) {
							start += ivalue;
						}
					}
				}
			}

			base = scale.getPixelForValue(start);
			head = scale.getPixelForValue(start + value);
			size = (head - base) / 2;

			return {
				size: size,
				base: base,
				head: head,
				center: head + size / 2
			};
		},

		/**
		 * @private
		 */
		calculateBarIndexPixels: function(datasetIndex, index, ruler) {
			var me = this;
			var options = ruler.scale.options;
			var range = options.barThickness === 'flex'
				? computeFlexCategoryTraits(index, ruler, options)
				: computeFitCategoryTraits(index, ruler, options);

			var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);
			var center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);
			var size = Math.min(
				helpers.valueOrDefault(options.maxBarThickness, Infinity),
				range.chunk * range.ratio);

			return {
				base: center - size / 2,
				head: center + size / 2,
				center: center,
				size: size
			};
		},

		draw: function() {
			var me = this;
			var chart = me.chart;
			var scale = me.getValueScale();
			var rects = me.getMeta().data;
			var dataset = me.getDataset();
			var ilen = rects.length;
			var i = 0;

			helpers.canvas.clipArea(chart.ctx, chart.chartArea);

			for (; i < ilen; ++i) {
				if (!isNaN(scale.getRightValue(dataset.data[i]))) {
					rects[i].draw();
				}
			}

			helpers.canvas.unclipArea(chart.ctx);
		},
	});

	Chart.controllers.horizontalBar = Chart.controllers.bar.extend({
		/**
		 * @private
		 */
		getValueScaleId: function() {
			return this.getMeta().xAxisID;
		},

		/**
		 * @private
		 */
		getIndexScaleId: function() {
			return this.getMeta().yAxisID;
		}
	});
};


/***/ }),

/***/ "./node_modules/chart.js/src/controllers/controller.bubble.js":
/*!********************************************************************!*\
  !*** ./node_modules/chart.js/src/controllers/controller.bubble.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var defaults = __webpack_require__(/*! ../core/core.defaults */ "./node_modules/chart.js/src/core/core.defaults.js");
var elements = __webpack_require__(/*! ../elements/index */ "./node_modules/chart.js/src/elements/index.js");
var helpers = __webpack_require__(/*! ../helpers/index */ "./node_modules/chart.js/src/helpers/index.js");

defaults._set('bubble', {
	hover: {
		mode: 'single'
	},

	scales: {
		xAxes: [{
			type: 'linear', // bubble should probably use a linear scale by default
			position: 'bottom',
			id: 'x-axis-0' // need an ID so datasets can reference the scale
		}],
		yAxes: [{
			type: 'linear',
			position: 'left',
			id: 'y-axis-0'
		}]
	},

	tooltips: {
		callbacks: {
			title: function() {
				// Title doesn't make sense for scatter since we format the data as a point
				return '';
			},
			label: function(item, data) {
				var datasetLabel = data.datasets[item.datasetIndex].label || '';
				var dataPoint = data.datasets[item.datasetIndex].data[item.index];
				return datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';
			}
		}
	}
});


module.exports = function(Chart) {

	Chart.controllers.bubble = Chart.DatasetController.extend({
		/**
		 * @protected
		 */
		dataElementType: elements.Point,

		/**
		 * @protected
		 */
		update: function(reset) {
			var me = this;
			var meta = me.getMeta();
			var points = meta.data;

			// Update Points
			helpers.each(points, function(point, index) {
				me.updateElement(point, index, reset);
			});
		},

		/**
		 * @protected
		 */
		updateElement: function(point, index, reset) {
			var me = this;
			var meta = me.getMeta();
			var custom = point.custom || {};
			var xScale = me.getScaleForId(meta.xAxisID);
			var yScale = me.getScaleForId(meta.yAxisID);
			var options = me._resolveElementOptions(point, index);
			var data = me.getDataset().data[index];
			var dsIndex = me.index;

			var x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);
			var y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);

			point._xScale = xScale;
			point._yScale = yScale;
			point._options = options;
			point._datasetIndex = dsIndex;
			point._index = index;
			point._model = {
				backgroundColor: options.backgroundColor,
				borderColor: options.borderColor,
				borderWidth: options.borderWidth,
				hitRadius: options.hitRadius,
				pointStyle: options.pointStyle,
				rotation: options.rotation,
				radius: reset ? 0 : options.radius,
				skip: custom.skip || isNaN(x) || isNaN(y),
				x: x,
				y: y,
			};

			point.pivot();
		},

		/**
		 * @protected
		 */
		setHoverStyle: function(point) {
			var model = point._model;
			var options = point._options;
			point.$previousStyle = {
				backgroundColor: model.backgroundColor,
				borderColor: model.borderColor,
				borderWidth: model.borderWidth,
				radius: model.radius
			};
			model.backgroundColor = helpers.valueOrDefault(options.hoverBackgroundColor, helpers.getHoverColor(options.backgroundColor));
			model.borderColor = helpers.valueOrDefault(options.hoverBorderColor, helpers.getHoverColor(options.borderColor));
			model.borderWidth = helpers.valueOrDefault(options.hoverBorderWidth, options.borderWidth);
			model.radius = options.radius + options.hoverRadius;
		},

		/**
		 * @private
		 */
		_resolveElementOptions: function(point, index) {
			var me = this;
			var chart = me.chart;
			var datasets = chart.data.datasets;
			var dataset = datasets[me.index];
			var custom = point.custom || {};
			var options = chart.options.elements.point;
			var resolve = helpers.options.resolve;
			var data = dataset.data[index];
			var values = {};
			var i, ilen, key;

			// Scriptable options
			var context = {
				chart: chart,
				dataIndex: index,
				dataset: dataset,
				datasetIndex: me.index
			};

			var keys = [
				'backgroundColor',
				'borderColor',
				'borderWidth',
				'hoverBackgroundColor',
				'hoverBorderColor',
				'hoverBorderWidth',
				'hoverRadius',
				'hitRadius',
				'pointStyle',
				'rotation'
			];

			for (i = 0, ilen = keys.length; i < ilen; ++i) {
				key = keys[i];
				values[key] = resolve([
					custom[key],
					dataset[key],
					options[key]
				], context, index);
			}

			// Custom radius resolution
			values.radius = resolve([
				custom.radius,
				data ? data.r : undefined,
				dataset.radius,
				options.radius
			], context, index);
			return values;
		}
	});
};


/***/ }),

/***/ "./node_modules/chart.js/src/controllers/controller.doughnut.js":
/*!**********************************************************************!*\
  !*** ./node_modules/chart.js/src/controllers/controller.doughnut.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var defaults = __webpack_require__(/*! ../core/core.defaults */ "./node_modules/chart.js/src/core/core.defaults.js");
var elements = __webpack_require__(/*! ../elements/index */ "./node_modules/chart.js/src/elements/index.js");
var helpers = __webpack_require__(/*! ../helpers/index */ "./node_modules/chart.js/src/helpers/index.js");

defaults._set('doughnut', {
	animation: {
		// Boolean - Whether we animate the rotation of the Doughnut
		animateRotate: true,
		// Boolean - Whether we animate scaling the Doughnut from the centre
		animateScale: false
	},
	hover: {
		mode: 'single'
	},
	legendCallback: function(chart) {
		var text = [];
		text.push('<ul class="' + chart.id + '-legend">');

		var data = chart.data;
		var datasets = data.datasets;
		var labels = data.labels;

		if (datasets.length) {
			for (var i = 0; i < datasets[0].data.length; ++i) {
				text.push('<li><span style="background-color:' + datasets[0].backgroundColor[i] + '"></span>');
				if (labels[i]) {
					text.push(labels[i]);
				}
				text.push('</li>');
			}
		}

		text.push('</ul>');
		return text.join('');
	},
	legend: {
		labels: {
			generateLabels: function(chart) {
				var data = chart.data;
				if (data.labels.length && data.datasets.length) {
					return data.labels.map(function(label, i) {
						var meta = chart.getDatasetMeta(0);
						var ds = data.datasets[0];
						var arc = meta.data[i];
						var custom = arc && arc.custom || {};
						var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;
						var arcOpts = chart.options.elements.arc;
						var fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);
						var stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);
						var bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);

						return {
							text: label,
							fillStyle: fill,
							strokeStyle: stroke,
							lineWidth: bw,
							hidden: isNaN(ds.data[i]) || meta.data[i].hidden,

							// Extra data used for toggling the correct item
							index: i
						};
					});
				}
				return [];
			}
		},

		onClick: function(e, legendItem) {
			var index = legendItem.index;
			var chart = this.chart;
			var i, ilen, meta;

			for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {
				meta = chart.getDatasetMeta(i);
				// toggle visibility of index if exists
				if (meta.data[index]) {
					meta.data[index].hidden = !meta.data[index].hidden;
				}
			}

			chart.update();
		}
	},

	// The percentage of the chart that we cut out of the middle.
	cutoutPercentage: 50,

	// The rotation of the chart, where the first data arc begins.
	rotation: Math.PI * -0.5,

	// The total circumference of the chart.
	circumference: Math.PI * 2.0,

	// Need to override these to give a nice default
	tooltips: {
		callbacks: {
			title: function() {
				return '';
			},
			label: function(tooltipItem, data) {
				var dataLabel = data.labels[tooltipItem.index];
				var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];

				if (helpers.isArray(dataLabel)) {
					// show value on first line of multiline label
					// need to clone because we are changing the value
					dataLabel = dataLabel.slice();
					dataLabel[0] += value;
				} else {
					dataLabel += value;
				}

				return dataLabel;
			}
		}
	}
});

defaults._set('pie', helpers.clone(defaults.doughnut));
defaults._set('pie', {
	cutoutPercentage: 0
});

module.exports = function(Chart) {

	Chart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({

		dataElementType: elements.Arc,

		linkScales: helpers.noop,

		// Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly
		getRingIndex: function(datasetIndex) {
			var ringIndex = 0;

			for (var j = 0; j < datasetIndex; ++j) {
				if (this.chart.isDatasetVisible(j)) {
					++ringIndex;
				}
			}

			return ringIndex;
		},

		update: function(reset) {
			var me = this;
			var chart = me.chart;
			var chartArea = chart.chartArea;
			var opts = chart.options;
			var arcOpts = opts.elements.arc;
			var availableWidth = chartArea.right - chartArea.left - arcOpts.borderWidth;
			var availableHeight = chartArea.bottom - chartArea.top - arcOpts.borderWidth;
			var minSize = Math.min(availableWidth, availableHeight);
			var offset = {x: 0, y: 0};
			var meta = me.getMeta();
			var cutoutPercentage = opts.cutoutPercentage;
			var circumference = opts.circumference;

			// If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc
			if (circumference < Math.PI * 2.0) {
				var startAngle = opts.rotation % (Math.PI * 2.0);
				startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);
				var endAngle = startAngle + circumference;
				var start = {x: Math.cos(startAngle), y: Math.sin(startAngle)};
				var end = {x: Math.cos(endAngle), y: Math.sin(endAngle)};
				var contains0 = (startAngle <= 0 && endAngle >= 0) || (startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle);
				var contains90 = (startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle);
				var contains180 = (startAngle <= -Math.PI && -Math.PI <= endAngle) || (startAngle <= Math.PI && Math.PI <= endAngle);
				var contains270 = (startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle);
				var cutout = cutoutPercentage / 100.0;
				var min = {x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)), y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))};
				var max = {x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)), y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))};
				var size = {width: (max.x - min.x) * 0.5, height: (max.y - min.y) * 0.5};
				minSize = Math.min(availableWidth / size.width, availableHeight / size.height);
				offset = {x: (max.x + min.x) * -0.5, y: (max.y + min.y) * -0.5};
			}

			chart.borderWidth = me.getMaxBorderWidth(meta.data);
			chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);
			chart.innerRadius = Math.max(cutoutPercentage ? (chart.outerRadius / 100) * (cutoutPercentage) : 0, 0);
			chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();
			chart.offsetX = offset.x * chart.outerRadius;
			chart.offsetY = offset.y * chart.outerRadius;

			meta.total = me.calculateTotal();

			me.outerRadius = chart.outerRadius - (chart.radiusLength * me.getRingIndex(me.index));
			me.innerRadius = Math.max(me.outerRadius - chart.radiusLength, 0);

			helpers.each(meta.data, function(arc, index) {
				me.updateElement(arc, index, reset);
			});
		},

		updateElement: function(arc, index, reset) {
			var me = this;
			var chart = me.chart;
			var chartArea = chart.chartArea;
			var opts = chart.options;
			var animationOpts = opts.animation;
			var centerX = (chartArea.left + chartArea.right) / 2;
			var centerY = (chartArea.top + chartArea.bottom) / 2;
			var startAngle = opts.rotation; // non reset case handled later
			var endAngle = opts.rotation; // non reset case handled later
			var dataset = me.getDataset();
			var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));
			var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;
			var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;
			var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;

			helpers.extend(arc, {
				// Utility
				_datasetIndex: me.index,
				_index: index,

				// Desired view properties
				_model: {
					x: centerX + chart.offsetX,
					y: centerY + chart.offsetY,
					startAngle: startAngle,
					endAngle: endAngle,
					circumference: circumference,
					outerRadius: outerRadius,
					innerRadius: innerRadius,
					label: valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])
				}
			});

			var model = arc._model;

			// Resets the visual styles
			var custom = arc.custom || {};
			var valueOrDefault = helpers.valueAtIndexOrDefault;
			var elementOpts = this.chart.options.elements.arc;
			model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);
			model.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);
			model.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);

			// Set correct angles if not resetting
			if (!reset || !animationOpts.animateRotate) {
				if (index === 0) {
					model.startAngle = opts.rotation;
				} else {
					model.startAngle = me.getMeta().data[index - 1]._model.endAngle;
				}

				model.endAngle = model.startAngle + model.circumference;
			}

			arc.pivot();
		},

		calculateTotal: function() {
			var dataset = this.getDataset();
			var meta = this.getMeta();
			var total = 0;
			var value;

			helpers.each(meta.data, function(element, index) {
				value = dataset.data[index];
				if (!isNaN(value) && !element.hidden) {
					total += Math.abs(value);
				}
			});

			/* if (total === 0) {
				total = NaN;
			}*/

			return total;
		},

		calculateCircumference: function(value) {
			var total = this.getMeta().total;
			if (total > 0 && !isNaN(value)) {
				return (Math.PI * 2.0) * (Math.abs(value) / total);
			}
			return 0;
		},

		// gets the max border or hover width to properly scale pie charts
		getMaxBorderWidth: function(arcs) {
			var max = 0;
			var index = this.index;
			var length = arcs.length;
			var borderWidth;
			var hoverWidth;

			for (var i = 0; i < length; i++) {
				borderWidth = arcs[i]._model ? arcs[i]._model.borderWidth : 0;
				hoverWidth = arcs[i]._chart ? arcs[i]._chart.config.data.datasets[index].hoverBorderWidth : 0;

				max = borderWidth > max ? borderWidth : max;
				max = hoverWidth > max ? hoverWidth : max;
			}
			return max;
		}
	});
};


/***/ }),

/***/ "./node_modules/chart.js/src/controllers/controller.line.js":
/*!******************************************************************!*\
  !*** ./node_modules/chart.js/src/controllers/controller.line.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var defaults = __webpack_require__(/*! ../core/core.defaults */ "./node_modules/chart.js/src/core/core.defaults.js");
var elements = __webpack_require__(/*! ../elements/index */ "./node_modules/chart.js/src/elements/index.js");
var helpers = __webpack_require__(/*! ../helpers/index */ "./node_modules/chart.js/src/helpers/index.js");

defaults._set('line', {
	showLines: true,
	spanGaps: false,

	hover: {
		mode: 'label'
	},

	scales: {
		xAxes: [{
			type: 'category',
			id: 'x-axis-0'
		}],
		yAxes: [{
			type: 'linear',
			id: 'y-axis-0'
		}]
	}
});

module.exports = function(Chart) {

	function lineEnabled(dataset, options) {
		return helpers.valueOrDefault(dataset.showLine, options.showLines);
	}

	Chart.controllers.line = Chart.DatasetController.extend({

		datasetElementType: elements.Line,

		dataElementType: elements.Point,

		update: function(reset) {
			var me = this;
			var meta = me.getMeta();
			var line = meta.dataset;
			var points = meta.data || [];
			var options = me.chart.options;
			var lineElementOptions = options.elements.line;
			var scale = me.getScaleForId(meta.yAxisID);
			var i, ilen, custom;
			var dataset = me.getDataset();
			var showLine = lineEnabled(dataset, options);

			// Update Line
			if (showLine) {
				custom = line.custom || {};

				// Compatibility: If the properties are defined with only the old name, use those values
				if ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {
					dataset.lineTension = dataset.tension;
				}

				// Utility
				line._scale = scale;
				line._datasetIndex = me.index;
				// Data
				line._children = points;
				// Model
				line._model = {
					// Appearance
					// The default behavior of lines is to break at null values, according
					// to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158
					// This option gives lines the ability to span gaps
					spanGaps: dataset.spanGaps ? dataset.spanGaps : options.spanGaps,
					tension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),
					backgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),
					borderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),
					borderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),
					borderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),
					borderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),
					borderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),
					borderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),
					fill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),
					steppedLine: custom.steppedLine ? custom.steppedLine : helpers.valueOrDefault(dataset.steppedLine, lineElementOptions.stepped),
					cubicInterpolationMode: custom.cubicInterpolationMode ? custom.cubicInterpolationMode : helpers.valueOrDefault(dataset.cubicInterpolationMode, lineElementOptions.cubicInterpolationMode),
				};

				line.pivot();
			}

			// Update Points
			for (i = 0, ilen = points.length; i < ilen; ++i) {
				me.updateElement(points[i], i, reset);
			}

			if (showLine && line._model.tension !== 0) {
				me.updateBezierControlPoints();
			}

			// Now pivot the point for animation
			for (i = 0, ilen = points.length; i < ilen; ++i) {
				points[i].pivot();
			}
		},

		getPointBackgroundColor: function(point, index) {
			var backgroundColor = this.chart.options.elements.point.backgroundColor;
			var dataset = this.getDataset();
			var custom = point.custom || {};

			if (custom.backgroundColor) {
				backgroundColor = custom.backgroundColor;
			} else if (dataset.pointBackgroundColor) {
				backgroundColor = helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);
			} else if (dataset.backgroundColor) {
				backgroundColor = dataset.backgroundColor;
			}

			return backgroundColor;
		},

		getPointBorderColor: function(point, index) {
			var borderColor = this.chart.options.elements.point.borderColor;
			var dataset = this.getDataset();
			var custom = point.custom || {};

			if (custom.borderColor) {
				borderColor = custom.borderColor;
			} else if (dataset.pointBorderColor) {
				borderColor = helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor);
			} else if (dataset.borderColor) {
				borderColor = dataset.borderColor;
			}

			return borderColor;
		},

		getPointBorderWidth: function(point, index) {
			var borderWidth = this.chart.options.elements.point.borderWidth;
			var dataset = this.getDataset();
			var custom = point.custom || {};

			if (!isNaN(custom.borderWidth)) {
				borderWidth = custom.borderWidth;
			} else if (!isNaN(dataset.pointBorderWidth) || helpers.isArray(dataset.pointBorderWidth)) {
				borderWidth = helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);
			} else if (!isNaN(dataset.borderWidth)) {
				borderWidth = dataset.borderWidth;
			}

			return borderWidth;
		},

		getPointRotation: function(point, index) {
			var pointRotation = this.chart.options.elements.point.rotation;
			var dataset = this.getDataset();
			var custom = point.custom || {};

			if (!isNaN(custom.rotation)) {
				pointRotation = custom.rotation;
			} else if (!isNaN(dataset.pointRotation) || helpers.isArray(dataset.pointRotation)) {
				pointRotation = helpers.valueAtIndexOrDefault(dataset.pointRotation, index, pointRotation);
			}
			return pointRotation;
		},

		updateElement: function(point, index, reset) {
			var me = this;
			var meta = me.getMeta();
			var custom = point.custom || {};
			var dataset = me.getDataset();
			var datasetIndex = me.index;
			var value = dataset.data[index];
			var yScale = me.getScaleForId(meta.yAxisID);
			var xScale = me.getScaleForId(meta.xAxisID);
			var pointOptions = me.chart.options.elements.point;
			var x, y;

			// Compatibility: If the properties are defined with only the old name, use those values
			if ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {
				dataset.pointRadius = dataset.radius;
			}
			if ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {
				dataset.pointHitRadius = dataset.hitRadius;
			}

			x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);
			y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex);

			// Utility
			point._xScale = xScale;
			point._yScale = yScale;
			point._datasetIndex = datasetIndex;
			point._index = index;

			// Desired view properties
			point._model = {
				x: x,
				y: y,
				skip: custom.skip || isNaN(x) || isNaN(y),
				// Appearance
				radius: custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),
				pointStyle: custom.pointStyle || helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),
				rotation: me.getPointRotation(point, index),
				backgroundColor: me.getPointBackgroundColor(point, index),
				borderColor: me.getPointBorderColor(point, index),
				borderWidth: me.getPointBorderWidth(point, index),
				tension: meta.dataset._model ? meta.dataset._model.tension : 0,
				steppedLine: meta.dataset._model ? meta.dataset._model.steppedLine : false,
				// Tooltip
				hitRadius: custom.hitRadius || helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)
			};
		},

		calculatePointY: function(value, index, datasetIndex) {
			var me = this;
			var chart = me.chart;
			var meta = me.getMeta();
			var yScale = me.getScaleForId(meta.yAxisID);
			var sumPos = 0;
			var sumNeg = 0;
			var i, ds, dsMeta;

			if (yScale.options.stacked) {
				for (i = 0; i < datasetIndex; i++) {
					ds = chart.data.datasets[i];
					dsMeta = chart.getDatasetMeta(i);
					if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {
						var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));
						if (stackedRightValue < 0) {
							sumNeg += stackedRightValue || 0;
						} else {
							sumPos += stackedRightValue || 0;
						}
					}
				}

				var rightValue = Number(yScale.getRightValue(value));
				if (rightValue < 0) {
					return yScale.getPixelForValue(sumNeg + rightValue);
				}
				return yScale.getPixelForValue(sumPos + rightValue);
			}

			return yScale.getPixelForValue(value);
		},

		updateBezierControlPoints: function() {
			var me = this;
			var meta = me.getMeta();
			var area = me.chart.chartArea;
			var points = (meta.data || []);
			var i, ilen, point, model, controlPoints;

			// Only consider points that are drawn in case the spanGaps option is used
			if (meta.dataset._model.spanGaps) {
				points = points.filter(function(pt) {
					return !pt._model.skip;
				});
			}

			function capControlPoint(pt, min, max) {
				return Math.max(Math.min(pt, max), min);
			}

			if (meta.dataset._model.cubicInterpolationMode === 'monotone') {
				helpers.splineCurveMonotone(points);
			} else {
				for (i = 0, ilen = points.length; i < ilen; ++i) {
					point = points[i];
					model = point._model;
					controlPoints = helpers.splineCurve(
						helpers.previousItem(points, i)._model,
						model,
						helpers.nextItem(points, i)._model,
						meta.dataset._model.tension
					);
					model.controlPointPreviousX = controlPoints.previous.x;
					model.controlPointPreviousY = controlPoints.previous.y;
					model.controlPointNextX = controlPoints.next.x;
					model.controlPointNextY = controlPoints.next.y;
				}
			}

			if (me.chart.options.elements.line.capBezierPoints) {
				for (i = 0, ilen = points.length; i < ilen; ++i) {
					model = points[i]._model;
					model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);
					model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);
					model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);
					model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);
				}
			}
		},

		draw: function() {
			var me = this;
			var chart = me.chart;
			var meta = me.getMeta();
			var points = meta.data || [];
			var area = chart.chartArea;
			var ilen = points.length;
			var halfBorderWidth;
			var i = 0;

			if (lineEnabled(me.getDataset(), chart.options)) {
				halfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;

				helpers.canvas.clipArea(chart.ctx, {
					left: area.left,
					right: area.right,
					top: area.top - halfBorderWidth,
					bottom: area.bottom + halfBorderWidth
				});

				meta.dataset.draw();

				helpers.canvas.unclipArea(chart.ctx);
			}

			// Draw the points
			for (; i < ilen; ++i) {
				points[i].draw(area);
			}
		},

		setHoverStyle: function(element) {
			// Point
			var dataset = this.chart.data.datasets[element._datasetIndex];
			var index = element._index;
			var custom = element.custom || {};
			var model = element._model;

			element.$previousStyle = {
				backgroundColor: model.backgroundColor,
				borderColor: model.borderColor,
				borderWidth: model.borderWidth,
				radius: model.radius
			};

			model.backgroundColor = custom.hoverBackgroundColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));
			model.borderColor = custom.hoverBorderColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));
			model.borderWidth = custom.hoverBorderWidth || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);
			model.radius = custom.hoverRadius || helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);
		},
	});
};


/***/ }),

/***/ "./node_modules/chart.js/src/controllers/controller.polarArea.js":
/*!***********************************************************************!*\
  !*** ./node_modules/chart.js/src/controllers/controller.polarArea.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var defaults = __webpack_require__(/*! ../core/core.defaults */ "./node_modules/chart.js/src/core/core.defaults.js");
var elements = __webpack_require__(/*! ../elements/index */ "./node_modules/chart.js/src/elements/index.js");
var helpers = __webpack_require__(/*! ../helpers/index */ "./node_modules/chart.js/src/helpers/index.js");

defaults._set('polarArea', {
	scale: {
		type: 'radialLinear',
		angleLines: {
			display: false
		},
		gridLines: {
			circular: true
		},
		pointLabels: {
			display: false
		},
		ticks: {
			beginAtZero: true
		}
	},

	// Boolean - Whether to animate the rotation of the chart
	animation: {
		animateRotate: true,
		animateScale: true
	},

	startAngle: -0.5 * Math.PI,
	legendCallback: function(chart) {
		var text = [];
		text.push('<ul class="' + chart.id + '-legend">');

		var data = chart.data;
		var datasets = data.datasets;
		var labels = data.labels;

		if (datasets.length) {
			for (var i = 0; i < datasets[0].data.length; ++i) {
				text.push('<li><span style="background-color:' + datasets[0].backgroundColor[i] + '"></span>');
				if (labels[i]) {
					text.push(labels[i]);
				}
				text.push('</li>');
			}
		}

		text.push('</ul>');
		return text.join('');
	},
	legend: {
		labels: {
			generateLabels: function(chart) {
				var data = chart.data;
				if (data.labels.length && data.datasets.length) {
					return data.labels.map(function(label, i) {
						var meta = chart.getDatasetMeta(0);
						var ds = data.datasets[0];
						var arc = meta.data[i];
						var custom = arc.custom || {};
						var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;
						var arcOpts = chart.options.elements.arc;
						var fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);
						var stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);
						var bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);

						return {
							text: label,
							fillStyle: fill,
							strokeStyle: stroke,
							lineWidth: bw,
							hidden: isNaN(ds.data[i]) || meta.data[i].hidden,

							// Extra data used for toggling the correct item
							index: i
						};
					});
				}
				return [];
			}
		},

		onClick: function(e, legendItem) {
			var index = legendItem.index;
			var chart = this.chart;
			var i, ilen, meta;

			for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {
				meta = chart.getDatasetMeta(i);
				meta.data[index].hidden = !meta.data[index].hidden;
			}

			chart.update();
		}
	},

	// Need to override these to give a nice default
	tooltips: {
		callbacks: {
			title: function() {
				return '';
			},
			label: function(item, data) {
				return data.labels[item.index] + ': ' + item.yLabel;
			}
		}
	}
});

module.exports = function(Chart) {

	Chart.controllers.polarArea = Chart.DatasetController.extend({

		dataElementType: elements.Arc,

		linkScales: helpers.noop,

		update: function(reset) {
			var me = this;
			var dataset = me.getDataset();
			var meta = me.getMeta();
			var start = me.chart.options.startAngle || 0;
			var starts = me._starts = [];
			var angles = me._angles = [];
			var i, ilen, angle;

			me._updateRadius();

			meta.count = me.countVisibleElements();

			for (i = 0, ilen = dataset.data.length; i < ilen; i++) {
				starts[i] = start;
				angle = me._computeAngle(i);
				angles[i] = angle;
				start += angle;
			}

			helpers.each(meta.data, function(arc, index) {
				me.updateElement(arc, index, reset);
			});
		},

		/**
		 * @private
		 */
		_updateRadius: function() {
			var me = this;
			var chart = me.chart;
			var chartArea = chart.chartArea;
			var opts = chart.options;
			var arcOpts = opts.elements.arc;
			var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);

			chart.outerRadius = Math.max((minSize - arcOpts.borderWidth / 2) / 2, 0);
			chart.innerRadius = Math.max(opts.cutoutPercentage ? (chart.outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);
			chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();

			me.outerRadius = chart.outerRadius - (chart.radiusLength * me.index);
			me.innerRadius = me.outerRadius - chart.radiusLength;
		},

		updateElement: function(arc, index, reset) {
			var me = this;
			var chart = me.chart;
			var dataset = me.getDataset();
			var opts = chart.options;
			var animationOpts = opts.animation;
			var scale = chart.scale;
			var labels = chart.data.labels;

			var centerX = scale.xCenter;
			var centerY = scale.yCenter;

			// var negHalfPI = -0.5 * Math.PI;
			var datasetStartAngle = opts.startAngle;
			var distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);
			var startAngle = me._starts[index];
			var endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);

			var resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);

			helpers.extend(arc, {
				// Utility
				_datasetIndex: me.index,
				_index: index,
				_scale: scale,

				// Desired view properties
				_model: {
					x: centerX,
					y: centerY,
					innerRadius: 0,
					outerRadius: reset ? resetRadius : distance,
					startAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,
					endAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,
					label: helpers.valueAtIndexOrDefault(labels, index, labels[index])
				}
			});

			// Apply border and fill style
			var elementOpts = this.chart.options.elements.arc;
			var custom = arc.custom || {};
			var valueOrDefault = helpers.valueAtIndexOrDefault;
			var model = arc._model;

			model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);
			model.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);
			model.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);

			arc.pivot();
		},

		countVisibleElements: function() {
			var dataset = this.getDataset();
			var meta = this.getMeta();
			var count = 0;

			helpers.each(meta.data, function(element, index) {
				if (!isNaN(dataset.data[index]) && !element.hidden) {
					count++;
				}
			});

			return count;
		},

		/**
		 * @private
		 */
		_computeAngle: function(index) {
			var me = this;
			var count = this.getMeta().count;
			var dataset = me.getDataset();
			var meta = me.getMeta();

			if (isNaN(dataset.data[index]) || meta.data[index].hidden) {
				return 0;
			}

			// Scriptable options
			var context = {
				chart: me.chart,
				dataIndex: index,
				dataset: dataset,
				datasetIndex: me.index
			};

			return helpers.options.resolve([
				me.chart.options.elements.arc.angle,
				(2 * Math.PI) / count
			], context, index);
		}
	});
};


/***/ }),

/***/ "./node_modules/chart.js/src/controllers/controller.radar.js":
/*!*******************************************************************!*\
  !*** ./node_modules/chart.js/src/controllers/controller.radar.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var defaults = __webpack_require__(/*! ../core/core.defaults */ "./node_modules/chart.js/src/core/core.defaults.js");
var elements = __webpack_require__(/*! ../elements/index */ "./node_modules/chart.js/src/elements/index.js");
var helpers = __webpack_require__(/*! ../helpers/index */ "./node_modules/chart.js/src/helpers/index.js");

defaults._set('radar', {
	scale: {
		type: 'radialLinear'
	},
	elements: {
		line: {
			tension: 0 // no bezier in radar
		}
	}
});

module.exports = function(Chart) {

	Chart.controllers.radar = Chart.DatasetController.extend({

		datasetElementType: elements.Line,

		dataElementType: elements.Point,

		linkScales: helpers.noop,

		update: function(reset) {
			var me = this;
			var meta = me.getMeta();
			var line = meta.dataset;
			var points = meta.data;
			var custom = line.custom || {};
			var dataset = me.getDataset();
			var lineElementOptions = me.chart.options.elements.line;
			var scale = me.chart.scale;

			// Compatibility: If the properties are defined with only the old name, use those values
			if ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {
				dataset.lineTension = dataset.tension;
			}

			helpers.extend(meta.dataset, {
				// Utility
				_datasetIndex: me.index,
				_scale: scale,
				// Data
				_children: points,
				_loop: true,
				// Model
				_model: {
					// Appearance
					tension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),
					backgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),
					borderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),
					borderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),
					fill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),
					borderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),
					borderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),
					borderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),
					borderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),
				}
			});

			meta.dataset.pivot();

			// Update Points
			helpers.each(points, function(point, index) {
				me.updateElement(point, index, reset);
			}, me);

			// Update bezier control points
			me.updateBezierControlPoints();
		},
		updateElement: function(point, index, reset) {
			var me = this;
			var custom = point.custom || {};
			var dataset = me.getDataset();
			var scale = me.chart.scale;
			var pointElementOptions = me.chart.options.elements.point;
			var pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);

			// Compatibility: If the properties are defined with only the old name, use those values
			if ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {
				dataset.pointRadius = dataset.radius;
			}
			if ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {
				dataset.pointHitRadius = dataset.hitRadius;
			}

			helpers.extend(point, {
				// Utility
				_datasetIndex: me.index,
				_index: index,
				_scale: scale,

				// Desired view properties
				_model: {
					x: reset ? scale.xCenter : pointPosition.x, // value not used in dataset scale, but we want a consistent API between scales
					y: reset ? scale.yCenter : pointPosition.y,

					// Appearance
					tension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, me.chart.options.elements.line.tension),
					radius: custom.radius ? custom.radius : helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius),
					backgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor),
					borderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor),
					borderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth),
					pointStyle: custom.pointStyle ? custom.pointStyle : helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointElementOptions.pointStyle),
					rotation: custom.rotation ? custom.rotation : helpers.valueAtIndexOrDefault(dataset.pointRotation, index, pointElementOptions.rotation),

					// Tooltip
					hitRadius: custom.hitRadius ? custom.hitRadius : helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointElementOptions.hitRadius)
				}
			});

			point._model.skip = custom.skip ? custom.skip : (isNaN(point._model.x) || isNaN(point._model.y));
		},
		updateBezierControlPoints: function() {
			var chartArea = this.chart.chartArea;
			var meta = this.getMeta();

			helpers.each(meta.data, function(point, index) {
				var model = point._model;
				var controlPoints = helpers.splineCurve(
					helpers.previousItem(meta.data, index, true)._model,
					model,
					helpers.nextItem(meta.data, index, true)._model,
					model.tension
				);

				// Prevent the bezier going outside of the bounds of the graph
				model.controlPointPreviousX = Math.max(Math.min(controlPoints.previous.x, chartArea.right), chartArea.left);
				model.controlPointPreviousY = Math.max(Math.min(controlPoints.previous.y, chartArea.bottom), chartArea.top);

				model.controlPointNextX = Math.max(Math.min(controlPoints.next.x, chartArea.right), chartArea.left);
				model.controlPointNextY = Math.max(Math.min(controlPoints.next.y, chartArea.bottom), chartArea.top);

				// Now pivot the point for animation
				point.pivot();
			});
		},

		setHoverStyle: function(point) {
			// Point
			var dataset = this.chart.data.datasets[point._datasetIndex];
			var custom = point.custom || {};
			var index = point._index;
			var model = point._model;

			point.$previousStyle = {
				backgroundColor: model.backgroundColor,
				borderColor: model.borderColor,
				borderWidth: model.borderWidth,
				radius: model.radius
			};

			model.radius = custom.hoverRadius ? custom.hoverRadius : helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);
			model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));
			model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));
			model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);
		},
	});
};


/***/ }),

/***/ "./node_modules/chart.js/src/controllers/controller.scatter.js":
/*!*********************************************************************!*\
  !*** ./node_modules/chart.js/src/controllers/controller.scatter.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var defaults = __webpack_require__(/*! ../core/core.defaults */ "./node_modules/chart.js/src/core/core.defaults.js");

defaults._set('scatter', {
	hover: {
		mode: 'single'
	},

	scales: {
		xAxes: [{
			id: 'x-axis-1',    // need an ID so datasets can reference the scale
			type: 'linear',    // scatter should not use a category axis
			position: 'bottom'
		}],
		yAxes: [{
			id: 'y-axis-1',
			type: 'linear',
			position: 'left'
		}]
	},

	showLines: false,

	tooltips: {
		callbacks: {
			title: function() {
				return '';     // doesn't make sense for scatter since data are formatted as a point
			},
			label: function(item) {
				return '(' + item.xLabel + ', ' + item.yLabel + ')';
			}
		}
	}
});

module.exports = function(Chart) {

	// Scatter charts use line controllers
	Chart.controllers.scatter = Chart.controllers.line;

};


/***/ }),

/***/ "./node_modules/chart.js/src/core/core.animation.js":
/*!**********************************************************!*\
  !*** ./node_modules/chart.js/src/core/core.animation.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Element = __webpack_require__(/*! ./core.element */ "./node_modules/chart.js/src/core/core.element.js");

var exports = module.exports = Element.extend({
	chart: null, // the animation associated chart instance
	currentStep: 0, // the current animation step
	numSteps: 60, // default number of steps
	easing: '', // the easing to use for this animation
	render: null, // render function used by the animation service

	onAnimationProgress: null, // user specified callback to fire on each step of the animation
	onAnimationComplete: null, // user specified callback to fire when the animation finishes
});

// DEPRECATIONS

/**
 * Provided for backward compatibility, use Chart.Animation instead
 * @prop Chart.Animation#animationObject
 * @deprecated since version 2.6.0
 * @todo remove at version 3
 */
Object.defineProperty(exports.prototype, 'animationObject', {
	get: function() {
		return this;
	}
});

/**
 * Provided for backward compatibility, use Chart.Animation#chart instead
 * @prop Chart.Animation#chartInstance
 * @deprecated since version 2.6.0
 * @todo remove at version 3
 */
Object.defineProperty(exports.prototype, 'chartInstance', {
	get: function() {
		return this.chart;
	},
	set: function(value) {
		this.chart = value;
	}
});


/***/ }),

/***/ "./node_modules/chart.js/src/core/core.animations.js":
/*!***********************************************************!*\
  !*** ./node_modules/chart.js/src/core/core.animations.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* global window: false */


var defaults = __webpack_require__(/*! ./core.defaults */ "./node_modules/chart.js/src/core/core.defaults.js");
var helpers = __webpack_require__(/*! ../helpers/index */ "./node_modules/chart.js/src/helpers/index.js");

defaults._set('global', {
	animation: {
		duration: 1000,
		easing: 'easeOutQuart',
		onProgress: helpers.noop,
		onComplete: helpers.noop
	}
});

module.exports = {
	frameDuration: 17,
	animations: [],
	dropFrames: 0,
	request: null,

	/**
	 * @param {Chart} chart - The chart to animate.
	 * @param {Chart.Animation} animation - The animation that we will animate.
	 * @param {Number} duration - The animation duration in ms.
	 * @param {Boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions
	 */
	addAnimation: function(chart, animation, duration, lazy) {
		var animations = this.animations;
		var i, ilen;

		animation.chart = chart;

		if (!lazy) {
			chart.animating = true;
		}

		for (i = 0, ilen = animations.length; i < ilen; ++i) {
			if (animations[i].chart === chart) {
				animations[i] = animation;
				return;
			}
		}

		animations.push(animation);

		// If there are no animations queued, manually kickstart a digest, for lack of a better word
		if (animations.length === 1) {
			this.requestAnimationFrame();
		}
	},

	cancelAnimation: function(chart) {
		var index = helpers.findIndex(this.animations, function(animation) {
			return animation.chart === chart;
		});

		if (index !== -1) {
			this.animations.splice(index, 1);
			chart.animating = false;
		}
	},

	requestAnimationFrame: function() {
		var me = this;
		if (me.request === null) {
			// Skip animation frame requests until the active one is executed.
			// This can happen when processing mouse events, e.g. 'mousemove'
			// and 'mouseout' events will trigger multiple renders.
			me.request = helpers.requestAnimFrame.call(window, function() {
				me.request = null;
				me.startDigest();
			});
		}
	},

	/**
	 * @private
	 */
	startDigest: function() {
		var me = this;
		var startTime = Date.now();
		var framesToDrop = 0;

		if (me.dropFrames > 1) {
			framesToDrop = Math.floor(me.dropFrames);
			me.dropFrames = me.dropFrames % 1;
		}

		me.advance(1 + framesToDrop);

		var endTime = Date.now();

		me.dropFrames += (endTime - startTime) / me.frameDuration;

		// Do we have more stuff to animate?
		if (me.animations.length > 0) {
			me.requestAnimationFrame();
		}
	},

	/**
	 * @private
	 */
	advance: function(count) {
		var animations = this.animations;
		var animation, chart;
		var i = 0;

		while (i < animations.length) {
			animation = animations[i];
			chart = animation.chart;

			animation.currentStep = (animation.currentStep || 0) + count;
			animation.currentStep = Math.min(animation.currentStep, animation.numSteps);

			helpers.callback(animation.render, [chart, animation], chart);
			helpers.callback(animation.onAnimationProgress, [animation], chart);

			if (animation.currentStep >= animation.numSteps) {
				helpers.callback(animation.onAnimationComplete, [animation], chart);
				chart.animating = false;
				animations.splice(i, 1);
			} else {
				++i;
			}
		}
	}
};


/***/ }),

/***/ "./node_modules/chart.js/src/core/core.controller.js":
/*!***********************************************************!*\
  !*** ./node_modules/chart.js/src/core/core.controller.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Animation = __webpack_require__(/*! ./core.animation */ "./node_modules/chart.js/src/core/core.animation.js");
var animations = __webpack_require__(/*! ./core.animations */ "./node_modules/chart.js/src/core/core.animations.js");
var defaults = __webpack_require__(/*! ./core.defaults */ "./node_modules/chart.js/src/core/core.defaults.js");
var helpers = __webpack_require__(/*! ../helpers/index */ "./node_modules/chart.js/src/helpers/index.js");
var Interaction = __webpack_require__(/*! ./core.interaction */ "./node_modules/chart.js/src/core/core.interaction.js");
var layouts = __webpack_require__(/*! ./core.layouts */ "./node_modules/chart.js/src/core/core.layouts.js");
var platform = __webpack_require__(/*! ../platforms/platform */ "./node_modules/chart.js/src/platforms/platform.js");
var plugins = __webpack_require__(/*! ./core.plugins */ "./node_modules/chart.js/src/core/core.plugins.js");
var scaleService = __webpack_require__(/*! ../core/core.scaleService */ "./node_modules/chart.js/src/core/core.scaleService.js");
var Tooltip = __webpack_require__(/*! ./core.tooltip */ "./node_modules/chart.js/src/core/core.tooltip.js");

module.exports = function(Chart) {

	// Create a dictionary of chart types, to allow for extension of existing types
	Chart.types = {};

	// Store a reference to each instance - allowing us to globally resize chart instances on window resize.
	// Destroy method on the chart will remove the instance of the chart from this reference.
	Chart.instances = {};

	// Controllers available for dataset visualization eg. bar, line, slice, etc.
	Chart.controllers = {};

	/**
	 * Initializes the given config with global and chart default values.
	 */
	function initConfig(config) {
		config = config || {};

		// Do NOT use configMerge() for the data object because this method merges arrays
		// and so would change references to labels and datasets, preventing data updates.
		var data = config.data = config.data || {};
		data.datasets = data.datasets || [];
		data.labels = data.labels || [];

		config.options = helpers.configMerge(
			defaults.global,
			defaults[config.type],
			config.options || {});

		return config;
	}

	/**
	 * Updates the config of the chart
	 * @param chart {Chart} chart to update the options for
	 */
	function updateConfig(chart) {
		var newOptions = chart.options;

		helpers.each(chart.scales, function(scale) {
			layouts.removeBox(chart, scale);
		});

		newOptions = helpers.configMerge(
			Chart.defaults.global,
			Chart.defaults[chart.config.type],
			newOptions);

		chart.options = chart.config.options = newOptions;
		chart.ensureScalesHaveIDs();
		chart.buildOrUpdateScales();
		// Tooltip
		chart.tooltip._options = newOptions.tooltips;
		chart.tooltip.initialize();
	}

	function positionIsHorizontal(position) {
		return position === 'top' || position === 'bottom';
	}

	helpers.extend(Chart.prototype, /** @lends Chart */ {
		/**
		 * @private
		 */
		construct: function(item, config) {
			var me = this;

			config = initConfig(config);

			var context = platform.acquireContext(item, config);
			var canvas = context && context.canvas;
			var height = canvas && canvas.height;
			var width = canvas && canvas.width;

			me.id = helpers.uid();
			me.ctx = context;
			me.canvas = canvas;
			me.config = config;
			me.width = width;
			me.height = height;
			me.aspectRatio = height ? width / height : null;
			me.options = config.options;
			me._bufferedRender = false;

			/**
			 * Provided for backward compatibility, Chart and Chart.Controller have been merged,
			 * the "instance" still need to be defined since it might be called from plugins.
			 * @prop Chart#chart
			 * @deprecated since version 2.6.0
			 * @todo remove at version 3
			 * @private
			 */
			me.chart = me;
			me.controller = me; // chart.chart.controller #inception

			// Add the chart instance to the global namespace
			Chart.instances[me.id] = me;

			// Define alias to the config data: `chart.data === chart.config.data`
			Object.defineProperty(me, 'data', {
				get: function() {
					return me.config.data;
				},
				set: function(value) {
					me.config.data = value;
				}
			});

			if (!context || !canvas) {
				// The given item is not a compatible context2d element, let's return before finalizing
				// the chart initialization but after setting basic chart / controller properties that
				// can help to figure out that the chart is not valid (e.g chart.canvas !== null);
				// https://github.com/chartjs/Chart.js/issues/2807
				console.error("Failed to create chart: can't acquire context from the given item");
				return;
			}

			me.initialize();
			me.update();
		},

		/**
		 * @private
		 */
		initialize: function() {
			var me = this;

			// Before init plugin notification
			plugins.notify(me, 'beforeInit');

			helpers.retinaScale(me, me.options.devicePixelRatio);

			me.bindEvents();

			if (me.options.responsive) {
				// Initial resize before chart draws (must be silent to preserve initial animations).
				me.resize(true);
			}

			// Make sure scales have IDs and are built before we build any controllers.
			me.ensureScalesHaveIDs();
			me.buildOrUpdateScales();
			me.initToolTip();

			// After init plugin notification
			plugins.notify(me, 'afterInit');

			return me;
		},

		clear: function() {
			helpers.canvas.clear(this);
			return this;
		},

		stop: function() {
			// Stops any current animation loop occurring
			animations.cancelAnimation(this);
			return this;
		},

		resize: function(silent) {
			var me = this;
			var options = me.options;
			var canvas = me.canvas;
			var aspectRatio = (options.maintainAspectRatio && me.aspectRatio) || null;

			// the canvas render width and height will be casted to integers so make sure that
			// the canvas display style uses the same integer values to avoid blurring effect.

			// Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed
			var newWidth = Math.max(0, Math.floor(helpers.getMaximumWidth(canvas)));
			var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers.getMaximumHeight(canvas)));

			if (me.width === newWidth && me.height === newHeight) {
				return;
			}

			canvas.width = me.width = newWidth;
			canvas.height = me.height = newHeight;
			canvas.style.width = newWidth + 'px';
			canvas.style.height = newHeight + 'px';

			helpers.retinaScale(me, options.devicePixelRatio);

			if (!silent) {
				// Notify any plugins about the resize
				var newSize = {width: newWidth, height: newHeight};
				plugins.notify(me, 'resize', [newSize]);

				// Notify of resize
				if (me.options.onResize) {
					me.options.onResize(me, newSize);
				}

				me.stop();
				me.update({
					duration: me.options.responsiveAnimationDuration
				});
			}
		},

		ensureScalesHaveIDs: function() {
			var options = this.options;
			var scalesOptions = options.scales || {};
			var scaleOptions = options.scale;

			helpers.each(scalesOptions.xAxes, function(xAxisOptions, index) {
				xAxisOptions.id = xAxisOptions.id || ('x-axis-' + index);
			});

			helpers.each(scalesOptions.yAxes, function(yAxisOptions, index) {
				yAxisOptions.id = yAxisOptions.id || ('y-axis-' + index);
			});

			if (scaleOptions) {
				scaleOptions.id = scaleOptions.id || 'scale';
			}
		},

		/**
		 * Builds a map of scale ID to scale object for future lookup.
		 */
		buildOrUpdateScales: function() {
			var me = this;
			var options = me.options;
			var scales = me.scales || {};
			var items = [];
			var updated = Object.keys(scales).reduce(function(obj, id) {
				obj[id] = false;
				return obj;
			}, {});

			if (options.scales) {
				items = items.concat(
					(options.scales.xAxes || []).map(function(xAxisOptions) {
						return {options: xAxisOptions, dtype: 'category', dposition: 'bottom'};
					}),
					(options.scales.yAxes || []).map(function(yAxisOptions) {
						return {options: yAxisOptions, dtype: 'linear', dposition: 'left'};
					})
				);
			}

			if (options.scale) {
				items.push({
					options: options.scale,
					dtype: 'radialLinear',
					isDefault: true,
					dposition: 'chartArea'
				});
			}

			helpers.each(items, function(item) {
				var scaleOptions = item.options;
				var id = scaleOptions.id;
				var scaleType = helpers.valueOrDefault(scaleOptions.type, item.dtype);

				if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {
					scaleOptions.position = item.dposition;
				}

				updated[id] = true;
				var scale = null;
				if (id in scales && scales[id].type === scaleType) {
					scale = scales[id];
					scale.options = scaleOptions;
					scale.ctx = me.ctx;
					scale.chart = me;
				} else {
					var scaleClass = scaleService.getScaleConstructor(scaleType);
					if (!scaleClass) {
						return;
					}
					scale = new scaleClass({
						id: id,
						type: scaleType,
						options: scaleOptions,
						ctx: me.ctx,
						chart: me
					});
					scales[scale.id] = scale;
				}

				scale.mergeTicksOptions();

				// TODO(SB): I think we should be able to remove this custom case (options.scale)
				// and consider it as a regular scale part of the "scales"" map only! This would
				// make the logic easier and remove some useless? custom code.
				if (item.isDefault) {
					me.scale = scale;
				}
			});
			// clear up discarded scales
			helpers.each(updated, function(hasUpdated, id) {
				if (!hasUpdated) {
					delete scales[id];
				}
			});

			me.scales = scales;

			scaleService.addScalesToLayout(this);
		},

		buildOrUpdateControllers: function() {
			var me = this;
			var types = [];
			var newControllers = [];

			helpers.each(me.data.datasets, function(dataset, datasetIndex) {
				var meta = me.getDatasetMeta(datasetIndex);
				var type = dataset.type || me.config.type;

				if (meta.type && meta.type !== type) {
					me.destroyDatasetMeta(datasetIndex);
					meta = me.getDatasetMeta(datasetIndex);
				}
				meta.type = type;

				types.push(meta.type);

				if (meta.controller) {
					meta.controller.updateIndex(datasetIndex);
					meta.controller.linkScales();
				} else {
					var ControllerClass = Chart.controllers[meta.type];
					if (ControllerClass === undefined) {
						throw new Error('"' + meta.type + '" is not a chart type.');
					}

					meta.controller = new ControllerClass(me, datasetIndex);
					newControllers.push(meta.controller);
				}
			}, me);

			return newControllers;
		},

		/**
		 * Reset the elements of all datasets
		 * @private
		 */
		resetElements: function() {
			var me = this;
			helpers.each(me.data.datasets, function(dataset, datasetIndex) {
				me.getDatasetMeta(datasetIndex).controller.reset();
			}, me);
		},

		/**
		* Resets the chart back to it's state before the initial animation
		*/
		reset: function() {
			this.resetElements();
			this.tooltip.initialize();
		},

		update: function(config) {
			var me = this;

			if (!config || typeof config !== 'object') {
				// backwards compatibility
				config = {
					duration: config,
					lazy: arguments[1]
				};
			}

			updateConfig(me);

			// plugins options references might have change, let's invalidate the cache
			// https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167
			plugins._invalidate(me);

			if (plugins.notify(me, 'beforeUpdate') === false) {
				return;
			}

			// In case the entire data object changed
			me.tooltip._data = me.data;

			// Make sure dataset controllers are updated and new controllers are reset
			var newControllers = me.buildOrUpdateControllers();

			// Make sure all dataset controllers have correct meta data counts
			helpers.each(me.data.datasets, function(dataset, datasetIndex) {
				me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();
			}, me);

			me.updateLayout();

			// Can only reset the new controllers after the scales have been updated
			if (me.options.animation && me.options.animation.duration) {
				helpers.each(newControllers, function(controller) {
					controller.reset();
				});
			}

			me.updateDatasets();

			// Need to reset tooltip in case it is displayed with elements that are removed
			// after update.
			me.tooltip.initialize();

			// Last active contains items that were previously in the tooltip.
			// When we reset the tooltip, we need to clear it
			me.lastActive = [];

			// Do this before render so that any plugins that need final scale updates can use it
			plugins.notify(me, 'afterUpdate');

			if (me._bufferedRender) {
				me._bufferedRequest = {
					duration: config.duration,
					easing: config.easing,
					lazy: config.lazy
				};
			} else {
				me.render(config);
			}
		},

		/**
		 * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`
		 * hook, in which case, plugins will not be called on `afterLayout`.
		 * @private
		 */
		updateLayout: function() {
			var me = this;

			if (plugins.notify(me, 'beforeLayout') === false) {
				return;
			}

			layouts.update(this, this.width, this.height);

			/**
			 * Provided for backward compatibility, use `afterLayout` instead.
			 * @method IPlugin#afterScaleUpdate
			 * @deprecated since version 2.5.0
			 * @todo remove at version 3
			 * @private
			 */
			plugins.notify(me, 'afterScaleUpdate');
			plugins.notify(me, 'afterLayout');
		},

		/**
		 * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`
		 * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.
		 * @private
		 */
		updateDatasets: function() {
			var me = this;

			if (plugins.notify(me, 'beforeDatasetsUpdate') === false) {
				return;
			}

			for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {
				me.updateDataset(i);
			}

			plugins.notify(me, 'afterDatasetsUpdate');
		},

		/**
		 * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`
		 * hook, in which case, plugins will not be called on `afterDatasetUpdate`.
		 * @private
		 */
		updateDataset: function(index) {
			var me = this;
			var meta = me.getDatasetMeta(index);
			var args = {
				meta: meta,
				index: index
			};

			if (plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {
				return;
			}

			meta.controller.update();

			plugins.notify(me, 'afterDatasetUpdate', [args]);
		},

		render: function(config) {
			var me = this;

			if (!config || typeof config !== 'object') {
				// backwards compatibility
				config = {
					duration: config,
					lazy: arguments[1]
				};
			}

			var duration = config.duration;
			var lazy = config.lazy;

			if (plugins.notify(me, 'beforeRender') === false) {
				return;
			}

			var animationOptions = me.options.animation;
			var onComplete = function(animation) {
				plugins.notify(me, 'afterRender');
				helpers.callback(animationOptions && animationOptions.onComplete, [animation], me);
			};

			if (animationOptions && ((typeof duration !== 'undefined' && duration !== 0) || (typeof duration === 'undefined' && animationOptions.duration !== 0))) {
				var animation = new Animation({
					numSteps: (duration || animationOptions.duration) / 16.66, // 60 fps
					easing: config.easing || animationOptions.easing,

					render: function(chart, animationObject) {
						var easingFunction = helpers.easing.effects[animationObject.easing];
						var currentStep = animationObject.currentStep;
						var stepDecimal = currentStep / animationObject.numSteps;

						chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);
					},

					onAnimationProgress: animationOptions.onProgress,
					onAnimationComplete: onComplete
				});

				animations.addAnimation(me, animation, duration, lazy);
			} else {
				me.draw();

				// See https://github.com/chartjs/Chart.js/issues/3781
				onComplete(new Animation({numSteps: 0, chart: me}));
			}

			return me;
		},

		draw: function(easingValue) {
			var me = this;

			me.clear();

			if (helpers.isNullOrUndef(easingValue)) {
				easingValue = 1;
			}

			me.transition(easingValue);

			if (me.width <= 0 || me.height <= 0) {
				return;
			}

			if (plugins.notify(me, 'beforeDraw', [easingValue]) === false) {
				return;
			}

			// Draw all the scales
			helpers.each(me.boxes, function(box) {
				box.draw(me.chartArea);
			}, me);

			if (me.scale) {
				me.scale.draw();
			}

			me.drawDatasets(easingValue);
			me._drawTooltip(easingValue);

			plugins.notify(me, 'afterDraw', [easingValue]);
		},

		/**
		 * @private
		 */
		transition: function(easingValue) {
			var me = this;

			for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {
				if (me.isDatasetVisible(i)) {
					me.getDatasetMeta(i).controller.transition(easingValue);
				}
			}

			me.tooltip.transition(easingValue);
		},

		/**
		 * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`
		 * hook, in which case, plugins will not be called on `afterDatasetsDraw`.
		 * @private
		 */
		drawDatasets: function(easingValue) {
			var me = this;

			if (plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {
				return;
			}

			// Draw datasets reversed to support proper line stacking
			for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {
				if (me.isDatasetVisible(i)) {
					me.drawDataset(i, easingValue);
				}
			}

			plugins.notify(me, 'afterDatasetsDraw', [easingValue]);
		},

		/**
		 * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`
		 * hook, in which case, plugins will not be called on `afterDatasetDraw`.
		 * @private
		 */
		drawDataset: function(index, easingValue) {
			var me = this;
			var meta = me.getDatasetMeta(index);
			var args = {
				meta: meta,
				index: index,
				easingValue: easingValue
			};

			if (plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {
				return;
			}

			meta.controller.draw(easingValue);

			plugins.notify(me, 'afterDatasetDraw', [args]);
		},

		/**
		 * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`
		 * hook, in which case, plugins will not be called on `afterTooltipDraw`.
		 * @private
		 */
		_drawTooltip: function(easingValue) {
			var me = this;
			var tooltip = me.tooltip;
			var args = {
				tooltip: tooltip,
				easingValue: easingValue
			};

			if (plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {
				return;
			}

			tooltip.draw();

			plugins.notify(me, 'afterTooltipDraw', [args]);
		},

		// Get the single element that was clicked on
		// @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw
		getElementAtEvent: function(e) {
			return Interaction.modes.single(this, e);
		},

		getElementsAtEvent: function(e) {
			return Interaction.modes.label(this, e, {intersect: true});
		},

		getElementsAtXAxis: function(e) {
			return Interaction.modes['x-axis'](this, e, {intersect: true});
		},

		getElementsAtEventForMode: function(e, mode, options) {
			var method = Interaction.modes[mode];
			if (typeof method === 'function') {
				return method(this, e, options);
			}

			return [];
		},

		getDatasetAtEvent: function(e) {
			return Interaction.modes.dataset(this, e, {intersect: true});
		},

		getDatasetMeta: function(datasetIndex) {
			var me = this;
			var dataset = me.data.datasets[datasetIndex];
			if (!dataset._meta) {
				dataset._meta = {};
			}

			var meta = dataset._meta[me.id];
			if (!meta) {
				meta = dataset._meta[me.id] = {
					type: null,
					data: [],
					dataset: null,
					controller: null,
					hidden: null,			// See isDatasetVisible() comment
					xAxisID: null,
					yAxisID: null
				};
			}

			return meta;
		},

		getVisibleDatasetCount: function() {
			var count = 0;
			for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {
				if (this.isDatasetVisible(i)) {
					count++;
				}
			}
			return count;
		},

		isDatasetVisible: function(datasetIndex) {
			var meta = this.getDatasetMeta(datasetIndex);

			// meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,
			// the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.
			return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;
		},

		generateLegend: function() {
			return this.options.legendCallback(this);
		},

		/**
		 * @private
		 */
		destroyDatasetMeta: function(datasetIndex) {
			var id = this.id;
			var dataset = this.data.datasets[datasetIndex];
			var meta = dataset._meta && dataset._meta[id];

			if (meta) {
				meta.controller.destroy();
				delete dataset._meta[id];
			}
		},

		destroy: function() {
			var me = this;
			var canvas = me.canvas;
			var i, ilen;

			me.stop();

			// dataset controllers need to cleanup associated data
			for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {
				me.destroyDatasetMeta(i);
			}

			if (canvas) {
				me.unbindEvents();
				helpers.canvas.clear(me);
				platform.releaseContext(me.ctx);
				me.canvas = null;
				me.ctx = null;
			}

			plugins.notify(me, 'destroy');

			delete Chart.instances[me.id];
		},

		toBase64Image: function() {
			return this.canvas.toDataURL.apply(this.canvas, arguments);
		},

		initToolTip: function() {
			var me = this;
			me.tooltip = new Tooltip({
				_chart: me,
				_chartInstance: me, // deprecated, backward compatibility
				_data: me.data,
				_options: me.options.tooltips
			}, me);
		},

		/**
		 * @private
		 */
		bindEvents: function() {
			var me = this;
			var listeners = me._listeners = {};
			var listener = function() {
				me.eventHandler.apply(me, arguments);
			};

			helpers.each(me.options.events, function(type) {
				platform.addEventListener(me, type, listener);
				listeners[type] = listener;
			});

			// Elements used to detect size change should not be injected for non responsive charts.
			// See https://github.com/chartjs/Chart.js/issues/2210
			if (me.options.responsive) {
				listener = function() {
					me.resize();
				};

				platform.addEventListener(me, 'resize', listener);
				listeners.resize = listener;
			}
		},

		/**
		 * @private
		 */
		unbindEvents: function() {
			var me = this;
			var listeners = me._listeners;
			if (!listeners) {
				return;
			}

			delete me._listeners;
			helpers.each(listeners, function(listener, type) {
				platform.removeEventListener(me, type, listener);
			});
		},

		updateHoverStyle: function(elements, mode, enabled) {
			var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';
			var element, i, ilen;

			for (i = 0, ilen = elements.length; i < ilen; ++i) {
				element = elements[i];
				if (element) {
					this.getDatasetMeta(element._datasetIndex).controller[method](element);
				}
			}
		},

		/**
		 * @private
		 */
		eventHandler: function(e) {
			var me = this;
			var tooltip = me.tooltip;

			if (plugins.notify(me, 'beforeEvent', [e]) === false) {
				return;
			}

			// Buffer any update calls so that renders do not occur
			me._bufferedRender = true;
			me._bufferedRequest = null;

			var changed = me.handleEvent(e);
			// for smooth tooltip animations issue #4989
			// the tooltip should be the source of change
			// Animation check workaround:
			// tooltip._start will be null when tooltip isn't animating
			if (tooltip) {
				changed = tooltip._start
					? tooltip.handleEvent(e)
					: changed | tooltip.handleEvent(e);
			}

			plugins.notify(me, 'afterEvent', [e]);

			var bufferedRequest = me._bufferedRequest;
			if (bufferedRequest) {
				// If we have an update that was triggered, we need to do a normal render
				me.render(bufferedRequest);
			} else if (changed && !me.animating) {
				// If entering, leaving, or changing elements, animate the change via pivot
				me.stop();

				// We only need to render at this point. Updating will cause scales to be
				// recomputed generating flicker & using more memory than necessary.
				me.render({
					duration: me.options.hover.animationDuration,
					lazy: true
				});
			}

			me._bufferedRender = false;
			me._bufferedRequest = null;

			return me;
		},

		/**
		 * Handle an event
		 * @private
		 * @param {IEvent} event the event to handle
		 * @return {Boolean} true if the chart needs to re-render
		 */
		handleEvent: function(e) {
			var me = this;
			var options = me.options || {};
			var hoverOptions = options.hover;
			var changed = false;

			me.lastActive = me.lastActive || [];

			// Find Active Elements for hover and tooltips
			if (e.type === 'mouseout') {
				me.active = [];
			} else {
				me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);
			}

			// Invoke onHover hook
			// Need to call with native event here to not break backwards compatibility
			helpers.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);

			if (e.type === 'mouseup' || e.type === 'click') {
				if (options.onClick) {
					// Use e.native here for backwards compatibility
					options.onClick.call(me, e.native, me.active);
				}
			}

			// Remove styling for last active (even if it may still be active)
			if (me.lastActive.length) {
				me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);
			}

			// Built in hover styling
			if (me.active.length && hoverOptions.mode) {
				me.updateHoverStyle(me.active, hoverOptions.mode, true);
			}

			changed = !helpers.arrayEquals(me.active, me.lastActive);

			// Remember Last Actives
			me.lastActive = me.active;

			return changed;
		}
	});

	/**
	 * Provided for backward compatibility, use Chart instead.
	 * @class Chart.Controller
	 * @deprecated since version 2.6.0
	 * @todo remove at version 3
	 * @private
	 */
	Chart.Controller = Chart;
};


/***/ }),

/***/ "./node_modules/chart.js/src/core/core.datasetController.js":
/*!******************************************************************!*\
  !*** ./node_modules/chart.js/src/core/core.datasetController.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var helpers = __webpack_require__(/*! ../helpers/index */ "./node_modules/chart.js/src/helpers/index.js");

module.exports = function(Chart) {

	var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];

	/**
	 * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',
	 * 'unshift') and notify the listener AFTER the array has been altered. Listeners are
	 * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.
	 */
	function listenArrayEvents(array, listener) {
		if (array._chartjs) {
			array._chartjs.listeners.push(listener);
			return;
		}

		Object.defineProperty(array, '_chartjs', {
			configurable: true,
			enumerable: false,
			value: {
				listeners: [listener]
			}
		});

		arrayEvents.forEach(function(key) {
			var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);
			var base = array[key];

			Object.defineProperty(array, key, {
				configurable: true,
				enumerable: false,
				value: function() {
					var args = Array.prototype.slice.call(arguments);
					var res = base.apply(this, args);

					helpers.each(array._chartjs.listeners, function(object) {
						if (typeof object[method] === 'function') {
							object[method].apply(object, args);
						}
					});

					return res;
				}
			});
		});
	}

	/**
	 * Removes the given array event listener and cleanup extra attached properties (such as
	 * the _chartjs stub and overridden methods) if array doesn't have any more listeners.
	 */
	function unlistenArrayEvents(array, listener) {
		var stub = array._chartjs;
		if (!stub) {
			return;
		}

		var listeners = stub.listeners;
		var index = listeners.indexOf(listener);
		if (index !== -1) {
			listeners.splice(index, 1);
		}

		if (listeners.length > 0) {
			return;
		}

		arrayEvents.forEach(function(key) {
			delete array[key];
		});

		delete array._chartjs;
	}

	// Base class for all dataset controllers (line, bar, etc)
	Chart.DatasetController = function(chart, datasetIndex) {
		this.initialize(chart, datasetIndex);
	};

	helpers.extend(Chart.DatasetController.prototype, {

		/**
		 * Element type used to generate a meta dataset (e.g. Chart.element.Line).
		 * @type {Chart.core.element}
		 */
		datasetElementType: null,

		/**
		 * Element type used to generate a meta data (e.g. Chart.element.Point).
		 * @type {Chart.core.element}
		 */
		dataElementType: null,

		initialize: function(chart, datasetIndex) {
			var me = this;
			me.chart = chart;
			me.index = datasetIndex;
			me.linkScales();
			me.addElements();
		},

		updateIndex: function(datasetIndex) {
			this.index = datasetIndex;
		},

		linkScales: function() {
			var me = this;
			var meta = me.getMeta();
			var dataset = me.getDataset();

			if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {
				meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;
			}
			if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {
				meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;
			}
		},

		getDataset: function() {
			return this.chart.data.datasets[this.index];
		},

		getMeta: function() {
			return this.chart.getDatasetMeta(this.index);
		},

		getScaleForId: function(scaleID) {
			return this.chart.scales[scaleID];
		},

		reset: function() {
			this.update(true);
		},

		/**
		 * @private
		 */
		destroy: function() {
			if (this._data) {
				unlistenArrayEvents(this._data, this);
			}
		},

		createMetaDataset: function() {
			var me = this;
			var type = me.datasetElementType;
			return type && new type({
				_chart: me.chart,
				_datasetIndex: me.index
			});
		},

		createMetaData: function(index) {
			var me = this;
			var type = me.dataElementType;
			return type && new type({
				_chart: me.chart,
				_datasetIndex: me.index,
				_index: index
			});
		},

		addElements: function() {
			var me = this;
			var meta = me.getMeta();
			var data = me.getDataset().data || [];
			var metaData = meta.data;
			var i, ilen;

			for (i = 0, ilen = data.length; i < ilen; ++i) {
				metaData[i] = metaData[i] || me.createMetaData(i);
			}

			meta.dataset = meta.dataset || me.createMetaDataset();
		},

		addElementAndReset: function(index) {
			var element = this.createMetaData(index);
			this.getMeta().data.splice(index, 0, element);
			this.updateElement(element, index, true);
		},

		buildOrUpdateElements: function() {
			var me = this;
			var dataset = me.getDataset();
			var data = dataset.data || (dataset.data = []);

			// In order to correctly handle data addition/deletion animation (an thus simulate
			// real-time charts), we need to monitor these data modifications and synchronize
			// the internal meta data accordingly.
			if (me._data !== data) {
				if (me._data) {
					// This case happens when the user replaced the data array instance.
					unlistenArrayEvents(me._data, me);
				}

				listenArrayEvents(data, me);
				me._data = data;
			}

			// Re-sync meta data in case the user replaced the data array or if we missed
			// any updates and so make sure that we handle number of datapoints changing.
			me.resyncElements();
		},

		update: helpers.noop,

		transition: function(easingValue) {
			var meta = this.getMeta();
			var elements = meta.data || [];
			var ilen = elements.length;
			var i = 0;

			for (; i < ilen; ++i) {
				elements[i].transition(easingValue);
			}

			if (meta.dataset) {
				meta.dataset.transition(easingValue);
			}
		},

		draw: function() {
			var meta = this.getMeta();
			var elements = meta.data || [];
			var ilen = elements.length;
			var i = 0;

			if (meta.dataset) {
				meta.dataset.draw();
			}

			for (; i < ilen; ++i) {
				elements[i].draw();
			}
		},

		removeHoverStyle: function(element) {
			helpers.merge(element._model, element.$previousStyle || {});
			delete element.$previousStyle;
		},

		setHoverStyle: function(element) {
			var dataset = this.chart.data.datasets[element._datasetIndex];
			var index = element._index;
			var custom = element.custom || {};
			var valueOrDefault = helpers.valueAtIndexOrDefault;
			var getHoverColor = helpers.getHoverColor;
			var model = element._model;

			element.$previousStyle = {
				backgroundColor: model.backgroundColor,
				borderColor: model.borderColor,
				borderWidth: model.borderWidth
			};

			model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueOrDefault(dataset.hoverBackgroundColor, index, getHoverColor(model.backgroundColor));
			model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : valueOrDefault(dataset.hoverBorderColor, index, getHoverColor(model.borderColor));
			model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : valueOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);
		},

		/**
		 * @private
		 */
		resyncElements: function() {
			var me = this;
			var meta = me.getMeta();
			var data = me.getDataset().data;
			var numMeta = meta.data.length;
			var numData = data.length;

			if (numData < numMeta) {
				meta.data.splice(numData, numMeta - numData);
			} else if (numData > numMeta) {
				me.insertElements(numMeta, numData - numMeta);
			}
		},

		/**
		 * @private
		 */
		insertElements: function(start, count) {
			for (var i = 0; i < count; ++i) {
				this.addElementAndReset(start + i);
			}
		},

		/**
		 * @private
		 */
		onDataPush: function() {
			this.insertElements(this.getDataset().data.length - 1, arguments.length);
		},

		/**
		 * @private
		 */
		onDataPop: function() {
			this.getMeta().data.pop();
		},

		/**
		 * @private
		 */
		onDataShift: function() {
			this.getMeta().data.shift();
		},

		/**
		 * @private
		 */
		onDataSplice: function(start, count) {
			this.getMeta().data.splice(start, count);
			this.insertElements(start, arguments.length - 2);
		},

		/**
		 * @private
		 */
		onDataUnshift: function() {
			this.insertElements(0, arguments.length);
		}
	});

	Chart.DatasetController.extend = helpers.inherits;
};


/***/ }),

/***/ "./node_modules/chart.js/src/core/core.defaults.js":
/*!*********************************************************!*\
  !*** ./node_modules/chart.js/src/core/core.defaults.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var helpers = __webpack_require__(/*! ../helpers/index */ "./node_modules/chart.js/src/helpers/index.js");

module.exports = {
	/**
	 * @private
	 */
	_set: function(scope, values) {
		return helpers.merge(this[scope] || (this[scope] = {}), values);
	}
};


/***/ }),

/***/ "./node_modules/chart.js/src/core/core.element.js":
/*!********************************************************!*\
  !*** ./node_modules/chart.js/src/core/core.element.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var color = __webpack_require__(/*! chartjs-color */ "./node_modules/chartjs-color/index.js");
var helpers = __webpack_require__(/*! ../helpers/index */ "./node_modules/chart.js/src/helpers/index.js");

function interpolate(start, view, model, ease) {
	var keys = Object.keys(model);
	var i, ilen, key, actual, origin, target, type, c0, c1;

	for (i = 0, ilen = keys.length; i < ilen; ++i) {
		key = keys[i];

		target = model[key];

		// if a value is added to the model after pivot() has been called, the view
		// doesn't contain it, so let's initialize the view to the target value.
		if (!view.hasOwnProperty(key)) {
			view[key] = target;
		}

		actual = view[key];

		if (actual === target || key[0] === '_') {
			continue;
		}

		if (!start.hasOwnProperty(key)) {
			start[key] = actual;
		}

		origin = start[key];

		type = typeof target;

		if (type === typeof origin) {
			if (type === 'string') {
				c0 = color(origin);
				if (c0.valid) {
					c1 = color(target);
					if (c1.valid) {
						view[key] = c1.mix(c0, ease).rgbString();
						continue;
					}
				}
			} else if (type === 'number' && isFinite(origin) && isFinite(target)) {
				view[key] = origin + (target - origin) * ease;
				continue;
			}
		}

		view[key] = target;
	}
}

var Element = function(configuration) {
	helpers.extend(this, configuration);
	this.initialize.apply(this, arguments);
};

helpers.extend(Element.prototype, {

	initialize: function() {
		this.hidden = false;
	},

	pivot: function() {
		var me = this;
		if (!me._view) {
			me._view = helpers.clone(me._model);
		}
		me._start = {};
		return me;
	},

	transition: function(ease) {
		var me = this;
		var model = me._model;
		var start = me._start;
		var view = me._view;

		// No animation -> No Transition
		if (!model || ease === 1) {
			me._view = model;
			me._start = null;
			return me;
		}

		if (!view) {
			view = me._view = {};
		}

		if (!start) {
			start = me._start = {};
		}

		interpolate(start, view, model, ease);

		return me;
	},

	tooltipPosition: function() {
		return {
			x: this._model.x,
			y: this._model.y
		};
	},

	hasValue: function() {
		return helpers.isNumber(this._model.x) && helpers.isNumber(this._model.y);
	}
});

Element.extend = helpers.inherits;

module.exports = Element;


/***/ }),

/***/ "./node_modules/chart.js/src/core/core.helpers.js":
/*!********************************************************!*\
  !*** ./node_modules/chart.js/src/core/core.helpers.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* global window: false */
/* global document: false */


var color = __webpack_require__(/*! chartjs-color */ "./node_modules/chartjs-color/index.js");
var defaults = __webpack_require__(/*! ./core.defaults */ "./node_modules/chart.js/src/core/core.defaults.js");
var helpers = __webpack_require__(/*! ../helpers/index */ "./node_modules/chart.js/src/helpers/index.js");
var scaleService = __webpack_require__(/*! ../core/core.scaleService */ "./node_modules/chart.js/src/core/core.scaleService.js");

module.exports = function() {

	// -- Basic js utility methods

	helpers.configMerge = function(/* objects ... */) {
		return helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {
			merger: function(key, target, source, options) {
				var tval = target[key] || {};
				var sval = source[key];

				if (key === 'scales') {
					// scale config merging is complex. Add our own function here for that
					target[key] = helpers.scaleMerge(tval, sval);
				} else if (key === 'scale') {
					// used in polar area & radar charts since there is only one scale
					target[key] = helpers.merge(tval, [scaleService.getScaleDefaults(sval.type), sval]);
				} else {
					helpers._merger(key, target, source, options);
				}
			}
		});
	};

	helpers.scaleMerge = function(/* objects ... */) {
		return helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {
			merger: function(key, target, source, options) {
				if (key === 'xAxes' || key === 'yAxes') {
					var slen = source[key].length;
					var i, type, scale;

					if (!target[key]) {
						target[key] = [];
					}

					for (i = 0; i < slen; ++i) {
						scale = source[key][i];
						type = helpers.valueOrDefault(scale.type, key === 'xAxes' ? 'category' : 'linear');

						if (i >= target[key].length) {
							target[key].push({});
						}

						if (!target[key][i].type || (scale.type && scale.type !== target[key][i].type)) {
							// new/untyped scale or type changed: let's apply the new defaults
							// then merge source scale to correctly overwrite the defaults.
							helpers.merge(target[key][i], [scaleService.getScaleDefaults(type), scale]);
						} else {
							// scales type are the same
							helpers.merge(target[key][i], scale);
						}
					}
				} else {
					helpers._merger(key, target, source, options);
				}
			}
		});
	};

	helpers.where = function(collection, filterCallback) {
		if (helpers.isArray(collection) && Array.prototype.filter) {
			return collection.filter(filterCallback);
		}
		var filtered = [];

		helpers.each(collection, function(item) {
			if (filterCallback(item)) {
				filtered.push(item);
			}
		});

		return filtered;
	};
	helpers.findIndex = Array.prototype.findIndex ?
		function(array, callback, scope) {
			return array.findIndex(callback, scope);
		} :
		function(array, callback, scope) {
			scope = scope === undefined ? array : scope;
			for (var i = 0, ilen = array.length; i < ilen; ++i) {
				if (callback.call(scope, array[i], i, array)) {
					return i;
				}
			}
			return -1;
		};
	helpers.findNextWhere = function(arrayToSearch, filterCallback, startIndex) {
		// Default to start of the array
		if (helpers.isNullOrUndef(startIndex)) {
			startIndex = -1;
		}
		for (var i = startIndex + 1; i < arrayToSearch.length; i++) {
			var currentItem = arrayToSearch[i];
			if (filterCallback(currentItem)) {
				return currentItem;
			}
		}
	};
	helpers.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex) {
		// Default to end of the array
		if (helpers.isNullOrUndef(startIndex)) {
			startIndex = arrayToSearch.length;
		}
		for (var i = startIndex - 1; i >= 0; i--) {
			var currentItem = arrayToSearch[i];
			if (filterCallback(currentItem)) {
				return currentItem;
			}
		}
	};

	// -- Math methods
	helpers.isNumber = function(n) {
		return !isNaN(parseFloat(n)) && isFinite(n);
	};
	helpers.almostEquals = function(x, y, epsilon) {
		return Math.abs(x - y) < epsilon;
	};
	helpers.almostWhole = function(x, epsilon) {
		var rounded = Math.round(x);
		return (((rounded - epsilon) < x) && ((rounded + epsilon) > x));
	};
	helpers.max = function(array) {
		return array.reduce(function(max, value) {
			if (!isNaN(value)) {
				return Math.max(max, value);
			}
			return max;
		}, Number.NEGATIVE_INFINITY);
	};
	helpers.min = function(array) {
		return array.reduce(function(min, value) {
			if (!isNaN(value)) {
				return Math.min(min, value);
			}
			return min;
		}, Number.POSITIVE_INFINITY);
	};
	helpers.sign = Math.sign ?
		function(x) {
			return Math.sign(x);
		} :
		function(x) {
			x = +x; // convert to a number
			if (x === 0 || isNaN(x)) {
				return x;
			}
			return x > 0 ? 1 : -1;
		};
	helpers.log10 = Math.log10 ?
		function(x) {
			return Math.log10(x);
		} :
		function(x) {
			var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.
			// Check for whole powers of 10,
			// which due to floating point rounding error should be corrected.
			var powerOf10 = Math.round(exponent);
			var isPowerOf10 = x === Math.pow(10, powerOf10);

			return isPowerOf10 ? powerOf10 : exponent;
		};
	helpers.toRadians = function(degrees) {
		return degrees * (Math.PI / 180);
	};
	helpers.toDegrees = function(radians) {
		return radians * (180 / Math.PI);
	};
	// Gets the angle from vertical upright to the point about a centre.
	helpers.getAngleFromPoint = function(centrePoint, anglePoint) {
		var distanceFromXCenter = anglePoint.x - centrePoint.x;
		var distanceFromYCenter = anglePoint.y - centrePoint.y;
		var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);

		var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);

		if (angle < (-0.5 * Math.PI)) {
			angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]
		}

		return {
			angle: angle,
			distance: radialDistanceFromCenter
		};
	};
	helpers.distanceBetweenPoints = function(pt1, pt2) {
		return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));
	};
	helpers.aliasPixel = function(pixelWidth) {
		return (pixelWidth % 2 === 0) ? 0 : 0.5;
	};
	helpers.splineCurve = function(firstPoint, middlePoint, afterPoint, t) {
		// Props to Rob Spencer at scaled innovation for his post on splining between points
		// http://scaledinnovation.com/analytics/splines/aboutSplines.html

		// This function must also respect "skipped" points

		var previous = firstPoint.skip ? middlePoint : firstPoint;
		var current = middlePoint;
		var next = afterPoint.skip ? middlePoint : afterPoint;

		var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));
		var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));

		var s01 = d01 / (d01 + d12);
		var s12 = d12 / (d01 + d12);

		// If all points are the same, s01 & s02 will be inf
		s01 = isNaN(s01) ? 0 : s01;
		s12 = isNaN(s12) ? 0 : s12;

		var fa = t * s01; // scaling factor for triangle Ta
		var fb = t * s12;

		return {
			previous: {
				x: current.x - fa * (next.x - previous.x),
				y: current.y - fa * (next.y - previous.y)
			},
			next: {
				x: current.x + fb * (next.x - previous.x),
				y: current.y + fb * (next.y - previous.y)
			}
		};
	};
	helpers.EPSILON = Number.EPSILON || 1e-14;
	helpers.splineCurveMonotone = function(points) {
		// This function calculates Bézier control points in a similar way than |splineCurve|,
		// but preserves monotonicity of the provided data and ensures no local extremums are added
		// between the dataset discrete points due to the interpolation.
		// See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation

		var pointsWithTangents = (points || []).map(function(point) {
			return {
				model: point._model,
				deltaK: 0,
				mK: 0
			};
		});

		// Calculate slopes (deltaK) and initialize tangents (mK)
		var pointsLen = pointsWithTangents.length;
		var i, pointBefore, pointCurrent, pointAfter;
		for (i = 0; i < pointsLen; ++i) {
			pointCurrent = pointsWithTangents[i];
			if (pointCurrent.model.skip) {
				continue;
			}

			pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;
			pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;
			if (pointAfter && !pointAfter.model.skip) {
				var slopeDeltaX = (pointAfter.model.x - pointCurrent.model.x);

				// In the case of two points that appear at the same x pixel, slopeDeltaX is 0
				pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;
			}

			if (!pointBefore || pointBefore.model.skip) {
				pointCurrent.mK = pointCurrent.deltaK;
			} else if (!pointAfter || pointAfter.model.skip) {
				pointCurrent.mK = pointBefore.deltaK;
			} else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {
				pointCurrent.mK = 0;
			} else {
				pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;
			}
		}

		// Adjust tangents to ensure monotonic properties
		var alphaK, betaK, tauK, squaredMagnitude;
		for (i = 0; i < pointsLen - 1; ++i) {
			pointCurrent = pointsWithTangents[i];
			pointAfter = pointsWithTangents[i + 1];
			if (pointCurrent.model.skip || pointAfter.model.skip) {
				continue;
			}

			if (helpers.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {
				pointCurrent.mK = pointAfter.mK = 0;
				continue;
			}

			alphaK = pointCurrent.mK / pointCurrent.deltaK;
			betaK = pointAfter.mK / pointCurrent.deltaK;
			squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);
			if (squaredMagnitude <= 9) {
				continue;
			}

			tauK = 3 / Math.sqrt(squaredMagnitude);
			pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;
			pointAfter.mK = betaK * tauK * pointCurrent.deltaK;
		}

		// Compute control points
		var deltaX;
		for (i = 0; i < pointsLen; ++i) {
			pointCurrent = pointsWithTangents[i];
			if (pointCurrent.model.skip) {
				continue;
			}

			pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;
			pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;
			if (pointBefore && !pointBefore.model.skip) {
				deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;
				pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;
				pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;
			}
			if (pointAfter && !pointAfter.model.skip) {
				deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;
				pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;
				pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;
			}
		}
	};
	helpers.nextItem = function(collection, index, loop) {
		if (loop) {
			return index >= collection.length - 1 ? collection[0] : collection[index + 1];
		}
		return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];
	};
	helpers.previousItem = function(collection, index, loop) {
		if (loop) {
			return index <= 0 ? collection[collection.length - 1] : collection[index - 1];
		}
		return index <= 0 ? collection[0] : collection[index - 1];
	};
	// Implementation of the nice number algorithm used in determining where axis labels will go
	helpers.niceNum = function(range, round) {
		var exponent = Math.floor(helpers.log10(range));
		var fraction = range / Math.pow(10, exponent);
		var niceFraction;

		if (round) {
			if (fraction < 1.5) {
				niceFraction = 1;
			} else if (fraction < 3) {
				niceFraction = 2;
			} else if (fraction < 7) {
				niceFraction = 5;
			} else {
				niceFraction = 10;
			}
		} else if (fraction <= 1.0) {
			niceFraction = 1;
		} else if (fraction <= 2) {
			niceFraction = 2;
		} else if (fraction <= 5) {
			niceFraction = 5;
		} else {
			niceFraction = 10;
		}

		return niceFraction * Math.pow(10, exponent);
	};
	// Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/
	helpers.requestAnimFrame = (function() {
		if (typeof window === 'undefined') {
			return function(callback) {
				callback();
			};
		}
		return window.requestAnimationFrame ||
			window.webkitRequestAnimationFrame ||
			window.mozRequestAnimationFrame ||
			window.oRequestAnimationFrame ||
			window.msRequestAnimationFrame ||
			function(callback) {
				return window.setTimeout(callback, 1000 / 60);
			};
	}());
	// -- DOM methods
	helpers.getRelativePosition = function(evt, chart) {
		var mouseX, mouseY;
		var e = evt.originalEvent || evt;
		var canvas = evt.target || evt.srcElement;
		var boundingRect = canvas.getBoundingClientRect();

		var touches = e.touches;
		if (touches && touches.length > 0) {
			mouseX = touches[0].clientX;
			mouseY = touches[0].clientY;

		} else {
			mouseX = e.clientX;
			mouseY = e.clientY;
		}

		// Scale mouse coordinates into canvas coordinates
		// by following the pattern laid out by 'jerryj' in the comments of
		// http://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/
		var paddingLeft = parseFloat(helpers.getStyle(canvas, 'padding-left'));
		var paddingTop = parseFloat(helpers.getStyle(canvas, 'padding-top'));
		var paddingRight = parseFloat(helpers.getStyle(canvas, 'padding-right'));
		var paddingBottom = parseFloat(helpers.getStyle(canvas, 'padding-bottom'));
		var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;
		var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom;

		// We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However
		// the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here
		mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / (width) * canvas.width / chart.currentDevicePixelRatio);
		mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / (height) * canvas.height / chart.currentDevicePixelRatio);

		return {
			x: mouseX,
			y: mouseY
		};

	};

	// Private helper function to convert max-width/max-height values that may be percentages into a number
	function parseMaxStyle(styleValue, node, parentProperty) {
		var valueInPixels;
		if (typeof styleValue === 'string') {
			valueInPixels = parseInt(styleValue, 10);

			if (styleValue.indexOf('%') !== -1) {
				// percentage * size in dimension
				valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];
			}
		} else {
			valueInPixels = styleValue;
		}

		return valueInPixels;
	}

	/**
	 * Returns if the given value contains an effective constraint.
	 * @private
	 */
	function isConstrainedValue(value) {
		return value !== undefined && value !== null && value !== 'none';
	}

	// Private helper to get a constraint dimension
	// @param domNode : the node to check the constraint on
	// @param maxStyle : the style that defines the maximum for the direction we are using (maxWidth / maxHeight)
	// @param percentageProperty : property of parent to use when calculating width as a percentage
	// @see http://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser
	function getConstraintDimension(domNode, maxStyle, percentageProperty) {
		var view = document.defaultView;
		var parentNode = helpers._getParentNode(domNode);
		var constrainedNode = view.getComputedStyle(domNode)[maxStyle];
		var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];
		var hasCNode = isConstrainedValue(constrainedNode);
		var hasCContainer = isConstrainedValue(constrainedContainer);
		var infinity = Number.POSITIVE_INFINITY;

		if (hasCNode || hasCContainer) {
			return Math.min(
				hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity,
				hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);
		}

		return 'none';
	}
	// returns Number or undefined if no constraint
	helpers.getConstraintWidth = function(domNode) {
		return getConstraintDimension(domNode, 'max-width', 'clientWidth');
	};
	// returns Number or undefined if no constraint
	helpers.getConstraintHeight = function(domNode) {
		return getConstraintDimension(domNode, 'max-height', 'clientHeight');
	};
	/**
	 * @private
 	 */
	helpers._calculatePadding = function(container, padding, parentDimension) {
		padding = helpers.getStyle(container, padding);

		return padding.indexOf('%') > -1 ? parentDimension / parseInt(padding, 10) : parseInt(padding, 10);
	};
	/**
	 * @private
	 */
	helpers._getParentNode = function(domNode) {
		var parent = domNode.parentNode;
		if (parent && parent.host) {
			parent = parent.host;
		}
		return parent;
	};
	helpers.getMaximumWidth = function(domNode) {
		var container = helpers._getParentNode(domNode);
		if (!container) {
			return domNode.clientWidth;
		}

		var clientWidth = container.clientWidth;
		var paddingLeft = helpers._calculatePadding(container, 'padding-left', clientWidth);
		var paddingRight = helpers._calculatePadding(container, 'padding-right', clientWidth);

		var w = clientWidth - paddingLeft - paddingRight;
		var cw = helpers.getConstraintWidth(domNode);
		return isNaN(cw) ? w : Math.min(w, cw);
	};
	helpers.getMaximumHeight = function(domNode) {
		var container = helpers._getParentNode(domNode);
		if (!container) {
			return domNode.clientHeight;
		}

		var clientHeight = container.clientHeight;
		var paddingTop = helpers._calculatePadding(container, 'padding-top', clientHeight);
		var paddingBottom = helpers._calculatePadding(container, 'padding-bottom', clientHeight);

		var h = clientHeight - paddingTop - paddingBottom;
		var ch = helpers.getConstraintHeight(domNode);
		return isNaN(ch) ? h : Math.min(h, ch);
	};
	helpers.getStyle = function(el, property) {
		return el.currentStyle ?
			el.currentStyle[property] :
			document.defaultView.getComputedStyle(el, null).getPropertyValue(property);
	};
	helpers.retinaScale = function(chart, forceRatio) {
		var pixelRatio = chart.currentDevicePixelRatio = forceRatio || (typeof window !== 'undefined' && window.devicePixelRatio) || 1;
		if (pixelRatio === 1) {
			return;
		}

		var canvas = chart.canvas;
		var height = chart.height;
		var width = chart.width;

		canvas.height = height * pixelRatio;
		canvas.width = width * pixelRatio;
		chart.ctx.scale(pixelRatio, pixelRatio);

		// If no style has been set on the canvas, the render size is used as display size,
		// making the chart visually bigger, so let's enforce it to the "correct" values.
		// See https://github.com/chartjs/Chart.js/issues/3575
		if (!canvas.style.height && !canvas.style.width) {
			canvas.style.height = height + 'px';
			canvas.style.width = width + 'px';
		}
	};
	// -- Canvas methods
	helpers.fontString = function(pixelSize, fontStyle, fontFamily) {
		return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;
	};
	helpers.longestText = function(ctx, font, arrayOfThings, cache) {
		cache = cache || {};
		var data = cache.data = cache.data || {};
		var gc = cache.garbageCollect = cache.garbageCollect || [];

		if (cache.font !== font) {
			data = cache.data = {};
			gc = cache.garbageCollect = [];
			cache.font = font;
		}

		ctx.font = font;
		var longest = 0;
		helpers.each(arrayOfThings, function(thing) {
			// Undefined strings and arrays should not be measured
			if (thing !== undefined && thing !== null && helpers.isArray(thing) !== true) {
				longest = helpers.measureText(ctx, data, gc, longest, thing);
			} else if (helpers.isArray(thing)) {
				// if it is an array lets measure each element
				// to do maybe simplify this function a bit so we can do this more recursively?
				helpers.each(thing, function(nestedThing) {
					// Undefined strings and arrays should not be measured
					if (nestedThing !== undefined && nestedThing !== null && !helpers.isArray(nestedThing)) {
						longest = helpers.measureText(ctx, data, gc, longest, nestedThing);
					}
				});
			}
		});

		var gcLen = gc.length / 2;
		if (gcLen > arrayOfThings.length) {
			for (var i = 0; i < gcLen; i++) {
				delete data[gc[i]];
			}
			gc.splice(0, gcLen);
		}
		return longest;
	};
	helpers.measureText = function(ctx, data, gc, longest, string) {
		var textWidth = data[string];
		if (!textWidth) {
			textWidth = data[string] = ctx.measureText(string).width;
			gc.push(string);
		}
		if (textWidth > longest) {
			longest = textWidth;
		}
		return longest;
	};
	helpers.numberOfLabelLines = function(arrayOfThings) {
		var numberOfLines = 1;
		helpers.each(arrayOfThings, function(thing) {
			if (helpers.isArray(thing)) {
				if (thing.length > numberOfLines) {
					numberOfLines = thing.length;
				}
			}
		});
		return numberOfLines;
	};

	helpers.color = !color ?
		function(value) {
			console.error('Color.js not found!');
			return value;
		} :
		function(value) {
			/* global CanvasGradient */
			if (value instanceof CanvasGradient) {
				value = defaults.global.defaultColor;
			}

			return color(value);
		};

	helpers.getHoverColor = function(colorValue) {
		/* global CanvasPattern */
		return (colorValue instanceof CanvasPattern) ?
			colorValue :
			helpers.color(colorValue).saturate(0.5).darken(0.1).rgbString();
	};
};


/***/ }),

/***/ "./node_modules/chart.js/src/core/core.interaction.js":
/*!************************************************************!*\
  !*** ./node_modules/chart.js/src/core/core.interaction.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var helpers = __webpack_require__(/*! ../helpers/index */ "./node_modules/chart.js/src/helpers/index.js");

/**
 * Helper function to get relative position for an event
 * @param {Event|IEvent} event - The event to get the position for
 * @param {Chart} chart - The chart
 * @returns {Point} the event position
 */
function getRelativePosition(e, chart) {
	if (e.native) {
		return {
			x: e.x,
			y: e.y
		};
	}

	return helpers.getRelativePosition(e, chart);
}

/**
 * Helper function to traverse all of the visible elements in the chart
 * @param chart {chart} the chart
 * @param handler {Function} the callback to execute for each visible item
 */
function parseVisibleItems(chart, handler) {
	var datasets = chart.data.datasets;
	var meta, i, j, ilen, jlen;

	for (i = 0, ilen = datasets.length; i < ilen; ++i) {
		if (!chart.isDatasetVisible(i)) {
			continue;
		}

		meta = chart.getDatasetMeta(i);
		for (j = 0, jlen = meta.data.length; j < jlen; ++j) {
			var element = meta.data[j];
			if (!element._view.skip) {
				handler(element);
			}
		}
	}
}

/**
 * Helper function to get the items that intersect the event position
 * @param items {ChartElement[]} elements to filter
 * @param position {Point} the point to be nearest to
 * @return {ChartElement[]} the nearest items
 */
function getIntersectItems(chart, position) {
	var elements = [];

	parseVisibleItems(chart, function(element) {
		if (element.inRange(position.x, position.y)) {
			elements.push(element);
		}
	});

	return elements;
}

/**
 * Helper function to get the items nearest to the event position considering all visible items in teh chart
 * @param chart {Chart} the chart to look at elements from
 * @param position {Point} the point to be nearest to
 * @param intersect {Boolean} if true, only consider items that intersect the position
 * @param distanceMetric {Function} function to provide the distance between points
 * @return {ChartElement[]} the nearest items
 */
function getNearestItems(chart, position, intersect, distanceMetric) {
	var minDistance = Number.POSITIVE_INFINITY;
	var nearestItems = [];

	parseVisibleItems(chart, function(element) {
		if (intersect && !element.inRange(position.x, position.y)) {
			return;
		}

		var center = element.getCenterPoint();
		var distance = distanceMetric(position, center);

		if (distance < minDistance) {
			nearestItems = [element];
			minDistance = distance;
		} else if (distance === minDistance) {
			// Can have multiple items at the same distance in which case we sort by size
			nearestItems.push(element);
		}
	});

	return nearestItems;
}

/**
 * Get a distance metric function for two points based on the
 * axis mode setting
 * @param {String} axis the axis mode. x|y|xy
 */
function getDistanceMetricForAxis(axis) {
	var useX = axis.indexOf('x') !== -1;
	var useY = axis.indexOf('y') !== -1;

	return function(pt1, pt2) {
		var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;
		var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;
		return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));
	};
}

function indexMode(chart, e, options) {
	var position = getRelativePosition(e, chart);
	// Default axis for index mode is 'x' to match old behaviour
	options.axis = options.axis || 'x';
	var distanceMetric = getDistanceMetricForAxis(options.axis);
	var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);
	var elements = [];

	if (!items.length) {
		return [];
	}

	chart.data.datasets.forEach(function(dataset, datasetIndex) {
		if (chart.isDatasetVisible(datasetIndex)) {
			var meta = chart.getDatasetMeta(datasetIndex);
			var element = meta.data[items[0]._index];

			// don't count items that are skipped (null data)
			if (element && !element._view.skip) {
				elements.push(element);
			}
		}
	});

	return elements;
}

/**
 * @interface IInteractionOptions
 */
/**
 * If true, only consider items that intersect the point
 * @name IInterfaceOptions#boolean
 * @type Boolean
 */

/**
 * Contains interaction related functions
 * @namespace Chart.Interaction
 */
module.exports = {
	// Helper function for different modes
	modes: {
		single: function(chart, e) {
			var position = getRelativePosition(e, chart);
			var elements = [];

			parseVisibleItems(chart, function(element) {
				if (element.inRange(position.x, position.y)) {
					elements.push(element);
					return elements;
				}
			});

			return elements.slice(0, 1);
		},

		/**
		 * @function Chart.Interaction.modes.label
		 * @deprecated since version 2.4.0
		 * @todo remove at version 3
		 * @private
		 */
		label: indexMode,

		/**
		 * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something
		 * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item
		 * @function Chart.Interaction.modes.index
		 * @since v2.4.0
		 * @param chart {chart} the chart we are returning items from
		 * @param e {Event} the event we are find things at
		 * @param options {IInteractionOptions} options to use during interaction
		 * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned
		 */
		index: indexMode,

		/**
		 * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something
		 * If the options.intersect is false, we find the nearest item and return the items in that dataset
		 * @function Chart.Interaction.modes.dataset
		 * @param chart {chart} the chart we are returning items from
		 * @param e {Event} the event we are find things at
		 * @param options {IInteractionOptions} options to use during interaction
		 * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned
		 */
		dataset: function(chart, e, options) {
			var position = getRelativePosition(e, chart);
			options.axis = options.axis || 'xy';
			var distanceMetric = getDistanceMetricForAxis(options.axis);
			var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);

			if (items.length > 0) {
				items = chart.getDatasetMeta(items[0]._datasetIndex).data;
			}

			return items;
		},

		/**
		 * @function Chart.Interaction.modes.x-axis
		 * @deprecated since version 2.4.0. Use index mode and intersect == true
		 * @todo remove at version 3
		 * @private
		 */
		'x-axis': function(chart, e) {
			return indexMode(chart, e, {intersect: false});
		},

		/**
		 * Point mode returns all elements that hit test based on the event position
		 * of the event
		 * @function Chart.Interaction.modes.intersect
		 * @param chart {chart} the chart we are returning items from
		 * @param e {Event} the event we are find things at
		 * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned
		 */
		point: function(chart, e) {
			var position = getRelativePosition(e, chart);
			return getIntersectItems(chart, position);
		},

		/**
		 * nearest mode returns the element closest to the point
		 * @function Chart.Interaction.modes.intersect
		 * @param chart {chart} the chart we are returning items from
		 * @param e {Event} the event we are find things at
		 * @param options {IInteractionOptions} options to use
		 * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned
		 */
		nearest: function(chart, e, options) {
			var position = getRelativePosition(e, chart);
			options.axis = options.axis || 'xy';
			var distanceMetric = getDistanceMetricForAxis(options.axis);
			var nearestItems = getNearestItems(chart, position, options.intersect, distanceMetric);

			// We have multiple items at the same distance from the event. Now sort by smallest
			if (nearestItems.length > 1) {
				nearestItems.sort(function(a, b) {
					var sizeA = a.getArea();
					var sizeB = b.getArea();
					var ret = sizeA - sizeB;

					if (ret === 0) {
						// if equal sort by dataset index
						ret = a._datasetIndex - b._datasetIndex;
					}

					return ret;
				});
			}

			// Return only 1 item
			return nearestItems.slice(0, 1);
		},

		/**
		 * x mode returns the elements that hit-test at the current x coordinate
		 * @function Chart.Interaction.modes.x
		 * @param chart {chart} the chart we are returning items from
		 * @param e {Event} the event we are find things at
		 * @param options {IInteractionOptions} options to use
		 * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned
		 */
		x: function(chart, e, options) {
			var position = getRelativePosition(e, chart);
			var items = [];
			var intersectsItem = false;

			parseVisibleItems(chart, function(element) {
				if (element.inXRange(position.x)) {
					items.push(element);
				}

				if (element.inRange(position.x, position.y)) {
					intersectsItem = true;
				}
			});

			// If we want to trigger on an intersect and we don't have any items
			// that intersect the position, return nothing
			if (options.intersect && !intersectsItem) {
				items = [];
			}
			return items;
		},

		/**
		 * y mode returns the elements that hit-test at the current y coordinate
		 * @function Chart.Interaction.modes.y
		 * @param chart {chart} the chart we are returning items from
		 * @param e {Event} the event we are find things at
		 * @param options {IInteractionOptions} options to use
		 * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned
		 */
		y: function(chart, e, options) {
			var position = getRelativePosition(e, chart);
			var items = [];
			var intersectsItem = false;

			parseVisibleItems(chart, function(element) {
				if (element.inYRange(position.y)) {
					items.push(element);
				}

				if (element.inRange(position.x, position.y)) {
					intersectsItem = true;
				}
			});

			// If we want to trigger on an intersect and we don't have any items
			// that intersect the position, return nothing
			if (options.intersect && !intersectsItem) {
				items = [];
			}
			return items;
		}
	}
};


/***/ }),

/***/ "./node_modules/chart.js/src/core/core.js":
/*!************************************************!*\
  !*** ./node_modules/chart.js/src/core/core.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var defaults = __webpack_require__(/*! ./core.defaults */ "./node_modules/chart.js/src/core/core.defaults.js");

defaults._set('global', {
	responsive: true,
	responsiveAnimationDuration: 0,
	maintainAspectRatio: true,
	events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],
	hover: {
		onHover: null,
		mode: 'nearest',
		intersect: true,
		animationDuration: 400
	},
	onClick: null,
	defaultColor: 'rgba(0,0,0,0.1)',
	defaultFontColor: '#666',
	defaultFontFamily: "'Helvetica Neue', 'Helvetica', 'Arial', sans-serif",
	defaultFontSize: 12,
	defaultFontStyle: 'normal',
	showLines: true,

	// Element defaults defined in element extensions
	elements: {},

	// Layout options such as padding
	layout: {
		padding: {
			top: 0,
			right: 0,
			bottom: 0,
			left: 0
		}
	}
});

module.exports = function() {

	// Occupy the global variable of Chart, and create a simple base class
	var Chart = function(item, config) {
		this.construct(item, config);
		return this;
	};

	Chart.Chart = Chart;

	return Chart;
};


/***/ }),

/***/ "./node_modules/chart.js/src/core/core.layouts.js":
/*!********************************************************!*\
  !*** ./node_modules/chart.js/src/core/core.layouts.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var helpers = __webpack_require__(/*! ../helpers/index */ "./node_modules/chart.js/src/helpers/index.js");

function filterByPosition(array, position) {
	return helpers.where(array, function(v) {
		return v.position === position;
	});
}

function sortByWeight(array, reverse) {
	array.forEach(function(v, i) {
		v._tmpIndex_ = i;
		return v;
	});
	array.sort(function(a, b) {
		var v0 = reverse ? b : a;
		var v1 = reverse ? a : b;
		return v0.weight === v1.weight ?
			v0._tmpIndex_ - v1._tmpIndex_ :
			v0.weight - v1.weight;
	});
	array.forEach(function(v) {
		delete v._tmpIndex_;
	});
}

/**
 * @interface ILayoutItem
 * @prop {String} position - The position of the item in the chart layout. Possible values are
 * 'left', 'top', 'right', 'bottom', and 'chartArea'
 * @prop {Number} weight - The weight used to sort the item. Higher weights are further away from the chart area
 * @prop {Boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down
 * @prop {Function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)
 * @prop {Function} update - Takes two parameters: width and height. Returns size of item
 * @prop {Function} getPadding -  Returns an object with padding on the edges
 * @prop {Number} width - Width of item. Must be valid after update()
 * @prop {Number} height - Height of item. Must be valid after update()
 * @prop {Number} left - Left edge of the item. Set by layout system and cannot be used in update
 * @prop {Number} top - Top edge of the item. Set by layout system and cannot be used in update
 * @prop {Number} right - Right edge of the item. Set by layout system and cannot be used in update
 * @prop {Number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update
 */

// The layout service is very self explanatory.  It's responsible for the layout within a chart.
// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need
// It is this service's responsibility of carrying out that layout.
module.exports = {
	defaults: {},

	/**
	 * Register a box to a chart.
	 * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.
	 * @param {Chart} chart - the chart to use
	 * @param {ILayoutItem} item - the item to add to be layed out
	 */
	addBox: function(chart, item) {
		if (!chart.boxes) {
			chart.boxes = [];
		}

		// initialize item with default values
		item.fullWidth = item.fullWidth || false;
		item.position = item.position || 'top';
		item.weight = item.weight || 0;

		chart.boxes.push(item);
	},

	/**
	 * Remove a layoutItem from a chart
	 * @param {Chart} chart - the chart to remove the box from
	 * @param {Object} layoutItem - the item to remove from the layout
	 */
	removeBox: function(chart, layoutItem) {
		var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;
		if (index !== -1) {
			chart.boxes.splice(index, 1);
		}
	},

	/**
	 * Sets (or updates) options on the given `item`.
	 * @param {Chart} chart - the chart in which the item lives (or will be added to)
	 * @param {Object} item - the item to configure with the given options
	 * @param {Object} options - the new item options.
	 */
	configure: function(chart, item, options) {
		var props = ['fullWidth', 'position', 'weight'];
		var ilen = props.length;
		var i = 0;
		var prop;

		for (; i < ilen; ++i) {
			prop = props[i];
			if (options.hasOwnProperty(prop)) {
				item[prop] = options[prop];
			}
		}
	},

	/**
	 * Fits boxes of the given chart into the given size by having each box measure itself
	 * then running a fitting algorithm
	 * @param {Chart} chart - the chart
	 * @param {Number} width - the width to fit into
	 * @param {Number} height - the height to fit into
	 */
	update: function(chart, width, height) {
		if (!chart) {
			return;
		}

		var layoutOptions = chart.options.layout || {};
		var padding = helpers.options.toPadding(layoutOptions.padding);
		var leftPadding = padding.left;
		var rightPadding = padding.right;
		var topPadding = padding.top;
		var bottomPadding = padding.bottom;

		var leftBoxes = filterByPosition(chart.boxes, 'left');
		var rightBoxes = filterByPosition(chart.boxes, 'right');
		var topBoxes = filterByPosition(chart.boxes, 'top');
		var bottomBoxes = filterByPosition(chart.boxes, 'bottom');
		var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea');

		// Sort boxes by weight. A higher weight is further away from the chart area
		sortByWeight(leftBoxes, true);
		sortByWeight(rightBoxes, false);
		sortByWeight(topBoxes, true);
		sortByWeight(bottomBoxes, false);

		// Essentially we now have any number of boxes on each of the 4 sides.
		// Our canvas looks like the following.
		// The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and
		// B1 is the bottom axis
		// There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays
		// These locations are single-box locations only, when trying to register a chartArea location that is already taken,
		// an error will be thrown.
		//
		// |----------------------------------------------------|
		// |                  T1 (Full Width)                   |
		// |----------------------------------------------------|
		// |    |    |                 T2                  |    |
		// |    |----|-------------------------------------|----|
		// |    |    | C1 |                           | C2 |    |
		// |    |    |----|                           |----|    |
		// |    |    |                                     |    |
		// | L1 | L2 |           ChartArea (C0)            | R1 |
		// |    |    |                                     |    |
		// |    |    |----|                           |----|    |
		// |    |    | C3 |                           | C4 |    |
		// |    |----|-------------------------------------|----|
		// |    |    |                 B1                  |    |
		// |----------------------------------------------------|
		// |                  B2 (Full Width)                   |
		// |----------------------------------------------------|
		//
		// What we do to find the best sizing, we do the following
		// 1. Determine the minimum size of the chart area.
		// 2. Split the remaining width equally between each vertical axis
		// 3. Split the remaining height equally between each horizontal axis
		// 4. Give each layout the maximum size it can be. The layout will return it's minimum size
		// 5. Adjust the sizes of each axis based on it's minimum reported size.
		// 6. Refit each axis
		// 7. Position each axis in the final location
		// 8. Tell the chart the final location of the chart area
		// 9. Tell any axes that overlay the chart area the positions of the chart area

		// Step 1
		var chartWidth = width - leftPadding - rightPadding;
		var chartHeight = height - topPadding - bottomPadding;
		var chartAreaWidth = chartWidth / 2; // min 50%
		var chartAreaHeight = chartHeight / 2; // min 50%

		// Step 2
		var verticalBoxWidth = (width - chartAreaWidth) / (leftBoxes.length + rightBoxes.length);

		// Step 3
		var horizontalBoxHeight = (height - chartAreaHeight) / (topBoxes.length + bottomBoxes.length);

		// Step 4
		var maxChartAreaWidth = chartWidth;
		var maxChartAreaHeight = chartHeight;
		var minBoxSizes = [];

		function getMinimumBoxSize(box) {
			var minSize;
			var isHorizontal = box.isHorizontal();

			if (isHorizontal) {
				minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, horizontalBoxHeight);
				maxChartAreaHeight -= minSize.height;
			} else {
				minSize = box.update(verticalBoxWidth, maxChartAreaHeight);
				maxChartAreaWidth -= minSize.width;
			}

			minBoxSizes.push({
				horizontal: isHorizontal,
				minSize: minSize,
				box: box,
			});
		}

		helpers.each(leftBoxes.concat(rightBoxes, topBoxes, bottomBoxes), getMinimumBoxSize);

		// If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)
		var maxHorizontalLeftPadding = 0;
		var maxHorizontalRightPadding = 0;
		var maxVerticalTopPadding = 0;
		var maxVerticalBottomPadding = 0;

		helpers.each(topBoxes.concat(bottomBoxes), function(horizontalBox) {
			if (horizontalBox.getPadding) {
				var boxPadding = horizontalBox.getPadding();
				maxHorizontalLeftPadding = Math.max(maxHorizontalLeftPadding, boxPadding.left);
				maxHorizontalRightPadding = Math.max(maxHorizontalRightPadding, boxPadding.right);
			}
		});

		helpers.each(leftBoxes.concat(rightBoxes), function(verticalBox) {
			if (verticalBox.getPadding) {
				var boxPadding = verticalBox.getPadding();
				maxVerticalTopPadding = Math.max(maxVerticalTopPadding, boxPadding.top);
				maxVerticalBottomPadding = Math.max(maxVerticalBottomPadding, boxPadding.bottom);
			}
		});

		// At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could
		// be if the axes are drawn at their minimum sizes.
		// Steps 5 & 6
		var totalLeftBoxesWidth = leftPadding;
		var totalRightBoxesWidth = rightPadding;
		var totalTopBoxesHeight = topPadding;
		var totalBottomBoxesHeight = bottomPadding;

		// Function to fit a box
		function fitBox(box) {
			var minBoxSize = helpers.findNextWhere(minBoxSizes, function(minBox) {
				return minBox.box === box;
			});

			if (minBoxSize) {
				if (box.isHorizontal()) {
					var scaleMargin = {
						left: Math.max(totalLeftBoxesWidth, maxHorizontalLeftPadding),
						right: Math.max(totalRightBoxesWidth, maxHorizontalRightPadding),
						top: 0,
						bottom: 0
					};

					// Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends
					// on the margin. Sometimes they need to increase in size slightly
					box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);
				} else {
					box.update(minBoxSize.minSize.width, maxChartAreaHeight);
				}
			}
		}

		// Update, and calculate the left and right margins for the horizontal boxes
		helpers.each(leftBoxes.concat(rightBoxes), fitBox);

		helpers.each(leftBoxes, function(box) {
			totalLeftBoxesWidth += box.width;
		});

		helpers.each(rightBoxes, function(box) {
			totalRightBoxesWidth += box.width;
		});

		// Set the Left and Right margins for the horizontal boxes
		helpers.each(topBoxes.concat(bottomBoxes), fitBox);

		// Figure out how much margin is on the top and bottom of the vertical boxes
		helpers.each(topBoxes, function(box) {
			totalTopBoxesHeight += box.height;
		});

		helpers.each(bottomBoxes, function(box) {
			totalBottomBoxesHeight += box.height;
		});

		function finalFitVerticalBox(box) {
			var minBoxSize = helpers.findNextWhere(minBoxSizes, function(minSize) {
				return minSize.box === box;
			});

			var scaleMargin = {
				left: 0,
				right: 0,
				top: totalTopBoxesHeight,
				bottom: totalBottomBoxesHeight
			};

			if (minBoxSize) {
				box.update(minBoxSize.minSize.width, maxChartAreaHeight, scaleMargin);
			}
		}

		// Let the left layout know the final margin
		helpers.each(leftBoxes.concat(rightBoxes), finalFitVerticalBox);

		// Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)
		totalLeftBoxesWidth = leftPadding;
		totalRightBoxesWidth = rightPadding;
		totalTopBoxesHeight = topPadding;
		totalBottomBoxesHeight = bottomPadding;

		helpers.each(leftBoxes, function(box) {
			totalLeftBoxesWidth += box.width;
		});

		helpers.each(rightBoxes, function(box) {
			totalRightBoxesWidth += box.width;
		});

		helpers.each(topBoxes, function(box) {
			totalTopBoxesHeight += box.height;
		});
		helpers.each(bottomBoxes, function(box) {
			totalBottomBoxesHeight += box.height;
		});

		// We may be adding some padding to account for rotated x axis labels
		var leftPaddingAddition = Math.max(maxHorizontalLeftPadding - totalLeftBoxesWidth, 0);
		totalLeftBoxesWidth += leftPaddingAddition;
		totalRightBoxesWidth += Math.max(maxHorizontalRightPadding - totalRightBoxesWidth, 0);

		var topPaddingAddition = Math.max(maxVerticalTopPadding - totalTopBoxesHeight, 0);
		totalTopBoxesHeight += topPaddingAddition;
		totalBottomBoxesHeight += Math.max(maxVerticalBottomPadding - totalBottomBoxesHeight, 0);

		// Figure out if our chart area changed. This would occur if the dataset layout label rotation
		// changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do
		// without calling `fit` again
		var newMaxChartAreaHeight = height - totalTopBoxesHeight - totalBottomBoxesHeight;
		var newMaxChartAreaWidth = width - totalLeftBoxesWidth - totalRightBoxesWidth;

		if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {
			helpers.each(leftBoxes, function(box) {
				box.height = newMaxChartAreaHeight;
			});

			helpers.each(rightBoxes, function(box) {
				box.height = newMaxChartAreaHeight;
			});

			helpers.each(topBoxes, function(box) {
				if (!box.fullWidth) {
					box.width = newMaxChartAreaWidth;
				}
			});

			helpers.each(bottomBoxes, function(box) {
				if (!box.fullWidth) {
					box.width = newMaxChartAreaWidth;
				}
			});

			maxChartAreaHeight = newMaxChartAreaHeight;
			maxChartAreaWidth = newMaxChartAreaWidth;
		}

		// Step 7 - Position the boxes
		var left = leftPadding + leftPaddingAddition;
		var top = topPadding + topPaddingAddition;

		function placeBox(box) {
			if (box.isHorizontal()) {
				box.left = box.fullWidth ? leftPadding : totalLeftBoxesWidth;
				box.right = box.fullWidth ? width - rightPadding : totalLeftBoxesWidth + maxChartAreaWidth;
				box.top = top;
				box.bottom = top + box.height;

				// Move to next point
				top = box.bottom;

			} else {

				box.left = left;
				box.right = left + box.width;
				box.top = totalTopBoxesHeight;
				box.bottom = totalTopBoxesHeight + maxChartAreaHeight;

				// Move to next point
				left = box.right;
			}
		}

		helpers.each(leftBoxes.concat(topBoxes), placeBox);

		// Account for chart width and height
		left += maxChartAreaWidth;
		top += maxChartAreaHeight;

		helpers.each(rightBoxes, placeBox);
		helpers.each(bottomBoxes, placeBox);

		// Step 8
		chart.chartArea = {
			left: totalLeftBoxesWidth,
			top: totalTopBoxesHeight,
			right: totalLeftBoxesWidth + maxChartAreaWidth,
			bottom: totalTopBoxesHeight + maxChartAreaHeight
		};

		// Step 9
		helpers.each(chartAreaBoxes, function(box) {
			box.left = chart.chartArea.left;
			box.top = chart.chartArea.top;
			box.right = chart.chartArea.right;
			box.bottom = chart.chartArea.bottom;

			box.update(maxChartAreaWidth, maxChartAreaHeight);
		});
	}
};


/***/ }),

/***/ "./node_modules/chart.js/src/core/core.plugins.js":
/*!********************************************************!*\
  !*** ./node_modules/chart.js/src/core/core.plugins.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var defaults = __webpack_require__(/*! ./core.defaults */ "./node_modules/chart.js/src/core/core.defaults.js");
var helpers = __webpack_require__(/*! ../helpers/index */ "./node_modules/chart.js/src/helpers/index.js");

defaults._set('global', {
	plugins: {}
});

/**
 * The plugin service singleton
 * @namespace Chart.plugins
 * @since 2.1.0
 */
module.exports = {
	/**
	 * Globally registered plugins.
	 * @private
	 */
	_plugins: [],

	/**
	 * This identifier is used to invalidate the descriptors cache attached to each chart
	 * when a global plugin is registered or unregistered. In this case, the cache ID is
	 * incremented and descriptors are regenerated during following API calls.
	 * @private
	 */
	_cacheId: 0,

	/**
	 * Registers the given plugin(s) if not already registered.
	 * @param {Array|Object} plugins plugin instance(s).
	 */
	register: function(plugins) {
		var p = this._plugins;
		([]).concat(plugins).forEach(function(plugin) {
			if (p.indexOf(plugin) === -1) {
				p.push(plugin);
			}
		});

		this._cacheId++;
	},

	/**
	 * Unregisters the given plugin(s) only if registered.
	 * @param {Array|Object} plugins plugin instance(s).
	 */
	unregister: function(plugins) {
		var p = this._plugins;
		([]).concat(plugins).forEach(function(plugin) {
			var idx = p.indexOf(plugin);
			if (idx !== -1) {
				p.splice(idx, 1);
			}
		});

		this._cacheId++;
	},

	/**
	 * Remove all registered plugins.
	 * @since 2.1.5
	 */
	clear: function() {
		this._plugins = [];
		this._cacheId++;
	},

	/**
	 * Returns the number of registered plugins?
	 * @returns {Number}
	 * @since 2.1.5
	 */
	count: function() {
		return this._plugins.length;
	},

	/**
	 * Returns all registered plugin instances.
	 * @returns {Array} array of plugin objects.
	 * @since 2.1.5
	 */
	getAll: function() {
		return this._plugins;
	},

	/**
	 * Calls enabled plugins for `chart` on the specified hook and with the given args.
	 * This method immediately returns as soon as a plugin explicitly returns false. The
	 * returned value can be used, for instance, to interrupt the current action.
	 * @param {Object} chart - The chart instance for which plugins should be called.
	 * @param {String} hook - The name of the plugin method to call (e.g. 'beforeUpdate').
	 * @param {Array} [args] - Extra arguments to apply to the hook call.
	 * @returns {Boolean} false if any of the plugins return false, else returns true.
	 */
	notify: function(chart, hook, args) {
		var descriptors = this.descriptors(chart);
		var ilen = descriptors.length;
		var i, descriptor, plugin, params, method;

		for (i = 0; i < ilen; ++i) {
			descriptor = descriptors[i];
			plugin = descriptor.plugin;
			method = plugin[hook];
			if (typeof method === 'function') {
				params = [chart].concat(args || []);
				params.push(descriptor.options);
				if (method.apply(plugin, params) === false) {
					return false;
				}
			}
		}

		return true;
	},

	/**
	 * Returns descriptors of enabled plugins for the given chart.
	 * @returns {Array} [{ plugin, options }]
	 * @private
	 */
	descriptors: function(chart) {
		var cache = chart.$plugins || (chart.$plugins = {});
		if (cache.id === this._cacheId) {
			return cache.descriptors;
		}

		var plugins = [];
		var descriptors = [];
		var config = (chart && chart.config) || {};
		var options = (config.options && config.options.plugins) || {};

		this._plugins.concat(config.plugins || []).forEach(function(plugin) {
			var idx = plugins.indexOf(plugin);
			if (idx !== -1) {
				return;
			}

			var id = plugin.id;
			var opts = options[id];
			if (opts === false) {
				return;
			}

			if (opts === true) {
				opts = helpers.clone(defaults.global.plugins[id]);
			}

			plugins.push(plugin);
			descriptors.push({
				plugin: plugin,
				options: opts || {}
			});
		});

		cache.descriptors = descriptors;
		cache.id = this._cacheId;
		return descriptors;
	},

	/**
	 * Invalidates cache for the given chart: descriptors hold a reference on plugin option,
	 * but in some cases, this reference can be changed by the user when updating options.
	 * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167
	 * @private
	 */
	_invalidate: function(chart) {
		delete chart.$plugins;
	}
};

/**
 * Plugin extension hooks.
 * @interface IPlugin
 * @since 2.1.0
 */
/**
 * @method IPlugin#beforeInit
 * @desc Called before initializing `chart`.
 * @param {Chart.Controller} chart - The chart instance.
 * @param {Object} options - The plugin options.
 */
/**
 * @method IPlugin#afterInit
 * @desc Called after `chart` has been initialized and before the first update.
 * @param {Chart.Controller} chart - The chart instance.
 * @param {Object} options - The plugin options.
 */
/**
 * @method IPlugin#beforeUpdate
 * @desc Called before updating `chart`. If any plugin returns `false`, the update
 * is cancelled (and thus subsequent render(s)) until another `update` is triggered.
 * @param {Chart.Controller} chart - The chart instance.
 * @param {Object} options - The plugin options.
 * @returns {Boolean} `false` to cancel the chart update.
 */
/**
 * @method IPlugin#afterUpdate
 * @desc Called after `chart` has been updated and before rendering. Note that this
 * hook will not be called if the chart update has been previously cancelled.
 * @param {Chart.Controller} chart - The chart instance.
 * @param {Object} options - The plugin options.
 */
/**
 * @method IPlugin#beforeDatasetsUpdate
 * @desc Called before updating the `chart` datasets. If any plugin returns `false`,
 * the datasets update is cancelled until another `update` is triggered.
 * @param {Chart.Controller} chart - The chart instance.
 * @param {Object} options - The plugin options.
 * @returns {Boolean} false to cancel the datasets update.
 * @since version 2.1.5
*/
/**
 * @method IPlugin#afterDatasetsUpdate
 * @desc Called after the `chart` datasets have been updated. Note that this hook
 * will not be called if the datasets update has been previously cancelled.
 * @param {Chart.Controller} chart - The chart instance.
 * @param {Object} options - The plugin options.
 * @since version 2.1.5
 */
/**
 * @method IPlugin#beforeDatasetUpdate
 * @desc Called before updating the `chart` dataset at the given `args.index`. If any plugin
 * returns `false`, the datasets update is cancelled until another `update` is triggered.
 * @param {Chart} chart - The chart instance.
 * @param {Object} args - The call arguments.
 * @param {Number} args.index - The dataset index.
 * @param {Object} args.meta - The dataset metadata.
 * @param {Object} options - The plugin options.
 * @returns {Boolean} `false` to cancel the chart datasets drawing.
 */
/**
 * @method IPlugin#afterDatasetUpdate
 * @desc Called after the `chart` datasets at the given `args.index` has been updated. Note
 * that this hook will not be called if the datasets update has been previously cancelled.
 * @param {Chart} chart - The chart instance.
 * @param {Object} args - The call arguments.
 * @param {Number} args.index - The dataset index.
 * @param {Object} args.meta - The dataset metadata.
 * @param {Object} options - The plugin options.
 */
/**
 * @method IPlugin#beforeLayout
 * @desc Called before laying out `chart`. If any plugin returns `false`,
 * the layout update is cancelled until another `update` is triggered.
 * @param {Chart.Controller} chart - The chart instance.
 * @param {Object} options - The plugin options.
 * @returns {Boolean} `false` to cancel the chart layout.
 */
/**
 * @method IPlugin#afterLayout
 * @desc Called after the `chart` has been layed out. Note that this hook will not
 * be called if the layout update has been previously cancelled.
 * @param {Chart.Controller} chart - The chart instance.
 * @param {Object} options - The plugin options.
 */
/**
 * @method IPlugin#beforeRender
 * @desc Called before rendering `chart`. If any plugin returns `false`,
 * the rendering is cancelled until another `render` is triggered.
 * @param {Chart.Controller} chart - The chart instance.
 * @param {Object} options - The plugin options.
 * @returns {Boolean} `false` to cancel the chart rendering.
 */
/**
 * @method IPlugin#afterRender
 * @desc Called after the `chart` has been fully rendered (and animation completed). Note
 * that this hook will not be called if the rendering has been previously cancelled.
 * @param {Chart.Controller} chart - The chart instance.
 * @param {Object} options - The plugin options.
 */
/**
 * @method IPlugin#beforeDraw
 * @desc Called before drawing `chart` at every animation frame specified by the given
 * easing value. If any plugin returns `false`, the frame drawing is cancelled until
 * another `render` is triggered.
 * @param {Chart.Controller} chart - The chart instance.
 * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.
 * @param {Object} options - The plugin options.
 * @returns {Boolean} `false` to cancel the chart drawing.
 */
/**
 * @method IPlugin#afterDraw
 * @desc Called after the `chart` has been drawn for the specific easing value. Note
 * that this hook will not be called if the drawing has been previously cancelled.
 * @param {Chart.Controller} chart - The chart instance.
 * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.
 * @param {Object} options - The plugin options.
 */
/**
 * @method IPlugin#beforeDatasetsDraw
 * @desc Called before drawing the `chart` datasets. If any plugin returns `false`,
 * the datasets drawing is cancelled until another `render` is triggered.
 * @param {Chart.Controller} chart - The chart instance.
 * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.
 * @param {Object} options - The plugin options.
 * @returns {Boolean} `false` to cancel the chart datasets drawing.
 */
/**
 * @method IPlugin#afterDatasetsDraw
 * @desc Called after the `chart` datasets have been drawn. Note that this hook
 * will not be called if the datasets drawing has been previously cancelled.
 * @param {Chart.Controller} chart - The chart instance.
 * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.
 * @param {Object} options - The plugin options.
 */
/**
 * @method IPlugin#beforeDatasetDraw
 * @desc Called before drawing the `chart` dataset at the given `args.index` (datasets
 * are drawn in the reverse order). If any plugin returns `false`, the datasets drawing
 * is cancelled until another `render` is triggered.
 * @param {Chart} chart - The chart instance.
 * @param {Object} args - The call arguments.
 * @param {Number} args.index - The dataset index.
 * @param {Object} args.meta - The dataset metadata.
 * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.
 * @param {Object} options - The plugin options.
 * @returns {Boolean} `false` to cancel the chart datasets drawing.
 */
/**
 * @method IPlugin#afterDatasetDraw
 * @desc Called after the `chart` datasets at the given `args.index` have been drawn
 * (datasets are drawn in the reverse order). Note that this hook will not be called
 * if the datasets drawing has been previously cancelled.
 * @param {Chart} chart - The chart instance.
 * @param {Object} args - The call arguments.
 * @param {Number} args.index - The dataset index.
 * @param {Object} args.meta - The dataset metadata.
 * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.
 * @param {Object} options - The plugin options.
 */
/**
 * @method IPlugin#beforeTooltipDraw
 * @desc Called before drawing the `tooltip`. If any plugin returns `false`,
 * the tooltip drawing is cancelled until another `render` is triggered.
 * @param {Chart} chart - The chart instance.
 * @param {Object} args - The call arguments.
 * @param {Object} args.tooltip - The tooltip.
 * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.
 * @param {Object} options - The plugin options.
 * @returns {Boolean} `false` to cancel the chart tooltip drawing.
 */
/**
 * @method IPlugin#afterTooltipDraw
 * @desc Called after drawing the `tooltip`. Note that this hook will not
 * be called if the tooltip drawing has been previously cancelled.
 * @param {Chart} chart - The chart instance.
 * @param {Object} args - The call arguments.
 * @param {Object} args.tooltip - The tooltip.
 * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.
 * @param {Object} options - The plugin options.
 */
/**
 * @method IPlugin#beforeEvent
 * @desc Called before processing the specified `event`. If any plugin returns `false`,
 * the event will be discarded.
 * @param {Chart.Controller} chart - The chart instance.
 * @param {IEvent} event - The event object.
 * @param {Object} options - The plugin options.
 */
/**
 * @method IPlugin#afterEvent
 * @desc Called after the `event` has been consumed. Note that this hook
 * will not be called if the `event` has been previously discarded.
 * @param {Chart.Controller} chart - The chart instance.
 * @param {IEvent} event - The event object.
 * @param {Object} options - The plugin options.
 */
/**
 * @method IPlugin#resize
 * @desc Called after the chart as been resized.
 * @param {Chart.Controller} chart - The chart instance.
 * @param {Number} size - The new canvas display size (eq. canvas.style width & height).
 * @param {Object} options - The plugin options.
 */
/**
 * @method IPlugin#destroy
 * @desc Called after the chart as been destroyed.
 * @param {Chart.Controller} chart - The chart instance.
 * @param {Object} options - The plugin options.
 */


/***/ }),

/***/ "./node_modules/chart.js/src/core/core.scale.js":
/*!******************************************************!*\
  !*** ./node_modules/chart.js/src/core/core.scale.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var defaults = __webpack_require__(/*! ./core.defaults */ "./node_modules/chart.js/src/core/core.defaults.js");
var Element = __webpack_require__(/*! ./core.element */ "./node_modules/chart.js/src/core/core.element.js");
var helpers = __webpack_require__(/*! ../helpers/index */ "./node_modules/chart.js/src/helpers/index.js");
var Ticks = __webpack_require__(/*! ./core.ticks */ "./node_modules/chart.js/src/core/core.ticks.js");

defaults._set('scale', {
	display: true,
	position: 'left',
	offset: false,

	// grid line settings
	gridLines: {
		display: true,
		color: 'rgba(0, 0, 0, 0.1)',
		lineWidth: 1,
		drawBorder: true,
		drawOnChartArea: true,
		drawTicks: true,
		tickMarkLength: 10,
		zeroLineWidth: 1,
		zeroLineColor: 'rgba(0,0,0,0.25)',
		zeroLineBorderDash: [],
		zeroLineBorderDashOffset: 0.0,
		offsetGridLines: false,
		borderDash: [],
		borderDashOffset: 0.0
	},

	// scale label
	scaleLabel: {
		// display property
		display: false,

		// actual label
		labelString: '',

		// line height
		lineHeight: 1.2,

		// top/bottom padding
		padding: {
			top: 4,
			bottom: 4
		}
	},

	// label settings
	ticks: {
		beginAtZero: false,
		minRotation: 0,
		maxRotation: 50,
		mirror: false,
		padding: 0,
		reverse: false,
		display: true,
		autoSkip: true,
		autoSkipPadding: 0,
		labelOffset: 0,
		// We pass through arrays to be rendered as multiline labels, we convert Others to strings here.
		callback: Ticks.formatters.values,
		minor: {},
		major: {}
	}
});

function labelsFromTicks(ticks) {
	var labels = [];
	var i, ilen;

	for (i = 0, ilen = ticks.length; i < ilen; ++i) {
		labels.push(ticks[i].label);
	}

	return labels;
}

function getLineValue(scale, index, offsetGridLines) {
	var lineValue = scale.getPixelForTick(index);

	if (offsetGridLines) {
		if (index === 0) {
			lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;
		} else {
			lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;
		}
	}
	return lineValue;
}

function computeTextSize(context, tick, font) {
	return helpers.isArray(tick) ?
		helpers.longestText(context, font, tick) :
		context.measureText(tick).width;
}

function parseFontOptions(options) {
	var valueOrDefault = helpers.valueOrDefault;
	var globalDefaults = defaults.global;
	var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);
	var style = valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle);
	var family = valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily);

	return {
		size: size,
		style: style,
		family: family,
		font: helpers.fontString(size, style, family)
	};
}

function parseLineHeight(options) {
	return helpers.options.toLineHeight(
		helpers.valueOrDefault(options.lineHeight, 1.2),
		helpers.valueOrDefault(options.fontSize, defaults.global.defaultFontSize));
}

module.exports = Element.extend({
	/**
	 * Get the padding needed for the scale
	 * @method getPadding
	 * @private
	 * @returns {Padding} the necessary padding
	 */
	getPadding: function() {
		var me = this;
		return {
			left: me.paddingLeft || 0,
			top: me.paddingTop || 0,
			right: me.paddingRight || 0,
			bottom: me.paddingBottom || 0
		};
	},

	/**
	 * Returns the scale tick objects ({label, major})
	 * @since 2.7
	 */
	getTicks: function() {
		return this._ticks;
	},

	// These methods are ordered by lifecyle. Utilities then follow.
	// Any function defined here is inherited by all scale types.
	// Any function can be extended by the scale type

	mergeTicksOptions: function() {
		var ticks = this.options.ticks;
		if (ticks.minor === false) {
			ticks.minor = {
				display: false
			};
		}
		if (ticks.major === false) {
			ticks.major = {
				display: false
			};
		}
		for (var key in ticks) {
			if (key !== 'major' && key !== 'minor') {
				if (typeof ticks.minor[key] === 'undefined') {
					ticks.minor[key] = ticks[key];
				}
				if (typeof ticks.major[key] === 'undefined') {
					ticks.major[key] = ticks[key];
				}
			}
		}
	},
	beforeUpdate: function() {
		helpers.callback(this.options.beforeUpdate, [this]);
	},

	update: function(maxWidth, maxHeight, margins) {
		var me = this;
		var i, ilen, labels, label, ticks, tick;

		// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)
		me.beforeUpdate();

		// Absorb the master measurements
		me.maxWidth = maxWidth;
		me.maxHeight = maxHeight;
		me.margins = helpers.extend({
			left: 0,
			right: 0,
			top: 0,
			bottom: 0
		}, margins);
		me.longestTextCache = me.longestTextCache || {};

		// Dimensions
		me.beforeSetDimensions();
		me.setDimensions();
		me.afterSetDimensions();

		// Data min/max
		me.beforeDataLimits();
		me.determineDataLimits();
		me.afterDataLimits();

		// Ticks - `this.ticks` is now DEPRECATED!
		// Internal ticks are now stored as objects in the PRIVATE `this._ticks` member
		// and must not be accessed directly from outside this class. `this.ticks` being
		// around for long time and not marked as private, we can't change its structure
		// without unexpected breaking changes. If you need to access the scale ticks,
		// use scale.getTicks() instead.

		me.beforeBuildTicks();

		// New implementations should return an array of objects but for BACKWARD COMPAT,
		// we still support no return (`this.ticks` internally set by calling this method).
		ticks = me.buildTicks() || [];

		me.afterBuildTicks();

		me.beforeTickToLabelConversion();

		// New implementations should return the formatted tick labels but for BACKWARD
		// COMPAT, we still support no return (`this.ticks` internally changed by calling
		// this method and supposed to contain only string values).
		labels = me.convertTicksToLabels(ticks) || me.ticks;

		me.afterTickToLabelConversion();

		me.ticks = labels;   // BACKWARD COMPATIBILITY

		// IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!

		// BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)
		for (i = 0, ilen = labels.length; i < ilen; ++i) {
			label = labels[i];
			tick = ticks[i];
			if (!tick) {
				ticks.push(tick = {
					label: label,
					major: false
				});
			} else {
				tick.label = label;
			}
		}

		me._ticks = ticks;

		// Tick Rotation
		me.beforeCalculateTickRotation();
		me.calculateTickRotation();
		me.afterCalculateTickRotation();
		// Fit
		me.beforeFit();
		me.fit();
		me.afterFit();
		//
		me.afterUpdate();

		return me.minSize;

	},
	afterUpdate: function() {
		helpers.callback(this.options.afterUpdate, [this]);
	},

	//

	beforeSetDimensions: function() {
		helpers.callback(this.options.beforeSetDimensions, [this]);
	},
	setDimensions: function() {
		var me = this;
		// Set the unconstrained dimension before label rotation
		if (me.isHorizontal()) {
			// Reset position before calculating rotation
			me.width = me.maxWidth;
			me.left = 0;
			me.right = me.width;
		} else {
			me.height = me.maxHeight;

			// Reset position before calculating rotation
			me.top = 0;
			me.bottom = me.height;
		}

		// Reset padding
		me.paddingLeft = 0;
		me.paddingTop = 0;
		me.paddingRight = 0;
		me.paddingBottom = 0;
	},
	afterSetDimensions: function() {
		helpers.callback(this.options.afterSetDimensions, [this]);
	},

	// Data limits
	beforeDataLimits: function() {
		helpers.callback(this.options.beforeDataLimits, [this]);
	},
	determineDataLimits: helpers.noop,
	afterDataLimits: function() {
		helpers.callback(this.options.afterDataLimits, [this]);
	},

	//
	beforeBuildTicks: function() {
		helpers.callback(this.options.beforeBuildTicks, [this]);
	},
	buildTicks: helpers.noop,
	afterBuildTicks: function() {
		helpers.callback(this.options.afterBuildTicks, [this]);
	},

	beforeTickToLabelConversion: function() {
		helpers.callback(this.options.beforeTickToLabelConversion, [this]);
	},
	convertTicksToLabels: function() {
		var me = this;
		// Convert ticks to strings
		var tickOpts = me.options.ticks;
		me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);
	},
	afterTickToLabelConversion: function() {
		helpers.callback(this.options.afterTickToLabelConversion, [this]);
	},

	//

	beforeCalculateTickRotation: function() {
		helpers.callback(this.options.beforeCalculateTickRotation, [this]);
	},
	calculateTickRotation: function() {
		var me = this;
		var context = me.ctx;
		var tickOpts = me.options.ticks;
		var labels = labelsFromTicks(me._ticks);

		// Get the width of each grid by calculating the difference
		// between x offsets between 0 and 1.
		var tickFont = parseFontOptions(tickOpts);
		context.font = tickFont.font;

		var labelRotation = tickOpts.minRotation || 0;

		if (labels.length && me.options.display && me.isHorizontal()) {
			var originalLabelWidth = helpers.longestText(context, tickFont.font, labels, me.longestTextCache);
			var labelWidth = originalLabelWidth;
			var cosRotation, sinRotation;

			// Allow 3 pixels x2 padding either side for label readability
			var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6;

			// Max label rotation can be set or default to 90 - also act as a loop counter
			while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {
				var angleRadians = helpers.toRadians(labelRotation);
				cosRotation = Math.cos(angleRadians);
				sinRotation = Math.sin(angleRadians);

				if (sinRotation * originalLabelWidth > me.maxHeight) {
					// go back one step
					labelRotation--;
					break;
				}

				labelRotation++;
				labelWidth = cosRotation * originalLabelWidth;
			}
		}

		me.labelRotation = labelRotation;
	},
	afterCalculateTickRotation: function() {
		helpers.callback(this.options.afterCalculateTickRotation, [this]);
	},

	//

	beforeFit: function() {
		helpers.callback(this.options.beforeFit, [this]);
	},
	fit: function() {
		var me = this;
		// Reset
		var minSize = me.minSize = {
			width: 0,
			height: 0
		};

		var labels = labelsFromTicks(me._ticks);

		var opts = me.options;
		var tickOpts = opts.ticks;
		var scaleLabelOpts = opts.scaleLabel;
		var gridLineOpts = opts.gridLines;
		var display = opts.display;
		var isHorizontal = me.isHorizontal();

		var tickFont = parseFontOptions(tickOpts);
		var tickMarkLength = opts.gridLines.tickMarkLength;

		// Width
		if (isHorizontal) {
			// subtract the margins to line up with the chartArea if we are a full width scale
			minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;
		} else {
			minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;
		}

		// height
		if (isHorizontal) {
			minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;
		} else {
			minSize.height = me.maxHeight; // fill all the height
		}

		// Are we showing a title for the scale?
		if (scaleLabelOpts.display && display) {
			var scaleLabelLineHeight = parseLineHeight(scaleLabelOpts);
			var scaleLabelPadding = helpers.options.toPadding(scaleLabelOpts.padding);
			var deltaHeight = scaleLabelLineHeight + scaleLabelPadding.height;

			if (isHorizontal) {
				minSize.height += deltaHeight;
			} else {
				minSize.width += deltaHeight;
			}
		}

		// Don't bother fitting the ticks if we are not showing them
		if (tickOpts.display && display) {
			var largestTextWidth = helpers.longestText(me.ctx, tickFont.font, labels, me.longestTextCache);
			var tallestLabelHeightInLines = helpers.numberOfLabelLines(labels);
			var lineSpace = tickFont.size * 0.5;
			var tickPadding = me.options.ticks.padding;

			if (isHorizontal) {
				// A horizontal axis is more constrained by the height.
				me.longestLabelWidth = largestTextWidth;

				var angleRadians = helpers.toRadians(me.labelRotation);
				var cosRotation = Math.cos(angleRadians);
				var sinRotation = Math.sin(angleRadians);

				// TODO - improve this calculation
				var labelHeight = (sinRotation * largestTextWidth)
					+ (tickFont.size * tallestLabelHeightInLines)
					+ (lineSpace * (tallestLabelHeightInLines - 1))
					+ lineSpace; // padding

				minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);

				me.ctx.font = tickFont.font;
				var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.font);
				var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.font);

				// Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned
				// which means that the right padding is dominated by the font height
				if (me.labelRotation !== 0) {
					me.paddingLeft = opts.position === 'bottom' ? (cosRotation * firstLabelWidth) + 3 : (cosRotation * lineSpace) + 3; // add 3 px to move away from canvas edges
					me.paddingRight = opts.position === 'bottom' ? (cosRotation * lineSpace) + 3 : (cosRotation * lastLabelWidth) + 3;
				} else {
					me.paddingLeft = firstLabelWidth / 2 + 3; // add 3 px to move away from canvas edges
					me.paddingRight = lastLabelWidth / 2 + 3;
				}
			} else {
				// A vertical axis is more constrained by the width. Labels are the
				// dominant factor here, so get that length first and account for padding
				if (tickOpts.mirror) {
					largestTextWidth = 0;
				} else {
					// use lineSpace for consistency with horizontal axis
					// tickPadding is not implemented for horizontal
					largestTextWidth += tickPadding + lineSpace;
				}

				minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);

				me.paddingTop = tickFont.size / 2;
				me.paddingBottom = tickFont.size / 2;
			}
		}

		me.handleMargins();

		me.width = minSize.width;
		me.height = minSize.height;
	},

	/**
	 * Handle margins and padding interactions
	 * @private
	 */
	handleMargins: function() {
		var me = this;
		if (me.margins) {
			me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);
			me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);
			me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);
			me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);
		}
	},

	afterFit: function() {
		helpers.callback(this.options.afterFit, [this]);
	},

	// Shared Methods
	isHorizontal: function() {
		return this.options.position === 'top' || this.options.position === 'bottom';
	},
	isFullWidth: function() {
		return (this.options.fullWidth);
	},

	// Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not
	getRightValue: function(rawValue) {
		// Null and undefined values first
		if (helpers.isNullOrUndef(rawValue)) {
			return NaN;
		}
		// isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values
		if (typeof rawValue === 'number' && !isFinite(rawValue)) {
			return NaN;
		}
		// If it is in fact an object, dive in one more level
		if (rawValue) {
			if (this.isHorizontal()) {
				if (rawValue.x !== undefined) {
					return this.getRightValue(rawValue.x);
				}
			} else if (rawValue.y !== undefined) {
				return this.getRightValue(rawValue.y);
			}
		}

		// Value is good, return it
		return rawValue;
	},

	/**
	 * Used to get the value to display in the tooltip for the data at the given index
	 * @param index
	 * @param datasetIndex
	 */
	getLabelForIndex: helpers.noop,

	/**
	 * Returns the location of the given data point. Value can either be an index or a numerical value
	 * The coordinate (0, 0) is at the upper-left corner of the canvas
	 * @param value
	 * @param index
	 * @param datasetIndex
	 */
	getPixelForValue: helpers.noop,

	/**
	 * Used to get the data value from a given pixel. This is the inverse of getPixelForValue
	 * The coordinate (0, 0) is at the upper-left corner of the canvas
	 * @param pixel
	 */
	getValueForPixel: helpers.noop,

	/**
	 * Returns the location of the tick at the given index
	 * The coordinate (0, 0) is at the upper-left corner of the canvas
	 */
	getPixelForTick: function(index) {
		var me = this;
		var offset = me.options.offset;
		if (me.isHorizontal()) {
			var innerWidth = me.width - (me.paddingLeft + me.paddingRight);
			var tickWidth = innerWidth / Math.max((me._ticks.length - (offset ? 0 : 1)), 1);
			var pixel = (tickWidth * index) + me.paddingLeft;

			if (offset) {
				pixel += tickWidth / 2;
			}

			var finalVal = me.left + Math.round(pixel);
			finalVal += me.isFullWidth() ? me.margins.left : 0;
			return finalVal;
		}
		var innerHeight = me.height - (me.paddingTop + me.paddingBottom);
		return me.top + (index * (innerHeight / (me._ticks.length - 1)));
	},

	/**
	 * Utility for getting the pixel location of a percentage of scale
	 * The coordinate (0, 0) is at the upper-left corner of the canvas
	 */
	getPixelForDecimal: function(decimal) {
		var me = this;
		if (me.isHorizontal()) {
			var innerWidth = me.width - (me.paddingLeft + me.paddingRight);
			var valueOffset = (innerWidth * decimal) + me.paddingLeft;

			var finalVal = me.left + Math.round(valueOffset);
			finalVal += me.isFullWidth() ? me.margins.left : 0;
			return finalVal;
		}
		return me.top + (decimal * me.height);
	},

	/**
	 * Returns the pixel for the minimum chart value
	 * The coordinate (0, 0) is at the upper-left corner of the canvas
	 */
	getBasePixel: function() {
		return this.getPixelForValue(this.getBaseValue());
	},

	getBaseValue: function() {
		var me = this;
		var min = me.min;
		var max = me.max;

		return me.beginAtZero ? 0 :
			min < 0 && max < 0 ? max :
			min > 0 && max > 0 ? min :
			0;
	},

	/**
	 * Returns a subset of ticks to be plotted to avoid overlapping labels.
	 * @private
	 */
	_autoSkip: function(ticks) {
		var skipRatio;
		var me = this;
		var isHorizontal = me.isHorizontal();
		var optionTicks = me.options.ticks.minor;
		var tickCount = ticks.length;
		var labelRotationRadians = helpers.toRadians(me.labelRotation);
		var cosRotation = Math.cos(labelRotationRadians);
		var longestRotatedLabel = me.longestLabelWidth * cosRotation;
		var result = [];
		var i, tick, shouldSkip;

		// figure out the maximum number of gridlines to show
		var maxTicks;
		if (optionTicks.maxTicksLimit) {
			maxTicks = optionTicks.maxTicksLimit;
		}

		if (isHorizontal) {
			skipRatio = false;

			if ((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount > (me.width - (me.paddingLeft + me.paddingRight))) {
				skipRatio = 1 + Math.floor(((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount) / (me.width - (me.paddingLeft + me.paddingRight)));
			}

			// if they defined a max number of optionTicks,
			// increase skipRatio until that number is met
			if (maxTicks && tickCount > maxTicks) {
				skipRatio = Math.max(skipRatio, Math.floor(tickCount / maxTicks));
			}
		}

		for (i = 0; i < tickCount; i++) {
			tick = ticks[i];

			// Since we always show the last tick,we need may need to hide the last shown one before
			shouldSkip = (skipRatio > 1 && i % skipRatio > 0) || (i % skipRatio === 0 && i + skipRatio >= tickCount);
			if (shouldSkip && i !== tickCount - 1) {
				// leave tick in place but make sure it's not displayed (#4635)
				delete tick.label;
			}
			result.push(tick);
		}
		return result;
	},

	// Actually draw the scale on the canvas
	// @param {rectangle} chartArea : the area of the chart to draw full grid lines on
	draw: function(chartArea) {
		var me = this;
		var options = me.options;
		if (!options.display) {
			return;
		}

		var context = me.ctx;
		var globalDefaults = defaults.global;
		var optionTicks = options.ticks.minor;
		var optionMajorTicks = options.ticks.major || optionTicks;
		var gridLines = options.gridLines;
		var scaleLabel = options.scaleLabel;

		var isRotated = me.labelRotation !== 0;
		var isHorizontal = me.isHorizontal();

		var ticks = optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();
		var tickFontColor = helpers.valueOrDefault(optionTicks.fontColor, globalDefaults.defaultFontColor);
		var tickFont = parseFontOptions(optionTicks);
		var majorTickFontColor = helpers.valueOrDefault(optionMajorTicks.fontColor, globalDefaults.defaultFontColor);
		var majorTickFont = parseFontOptions(optionMajorTicks);

		var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;

		var scaleLabelFontColor = helpers.valueOrDefault(scaleLabel.fontColor, globalDefaults.defaultFontColor);
		var scaleLabelFont = parseFontOptions(scaleLabel);
		var scaleLabelPadding = helpers.options.toPadding(scaleLabel.padding);
		var labelRotationRadians = helpers.toRadians(me.labelRotation);

		var itemsToDraw = [];

		var axisWidth = me.options.gridLines.lineWidth;
		var xTickStart = options.position === 'right' ? me.left : me.right - axisWidth - tl;
		var xTickEnd = options.position === 'right' ? me.left + tl : me.right;
		var yTickStart = options.position === 'bottom' ? me.top + axisWidth : me.bottom - tl - axisWidth;
		var yTickEnd = options.position === 'bottom' ? me.top + axisWidth + tl : me.bottom + axisWidth;

		helpers.each(ticks, function(tick, index) {
			// autoskipper skipped this tick (#4635)
			if (helpers.isNullOrUndef(tick.label)) {
				return;
			}

			var label = tick.label;
			var lineWidth, lineColor, borderDash, borderDashOffset;
			if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {
				// Draw the first index specially
				lineWidth = gridLines.zeroLineWidth;
				lineColor = gridLines.zeroLineColor;
				borderDash = gridLines.zeroLineBorderDash;
				borderDashOffset = gridLines.zeroLineBorderDashOffset;
			} else {
				lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, index);
				lineColor = helpers.valueAtIndexOrDefault(gridLines.color, index);
				borderDash = helpers.valueOrDefault(gridLines.borderDash, globalDefaults.borderDash);
				borderDashOffset = helpers.valueOrDefault(gridLines.borderDashOffset, globalDefaults.borderDashOffset);
			}

			// Common properties
			var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY;
			var textAlign = 'middle';
			var textBaseline = 'middle';
			var tickPadding = optionTicks.padding;

			if (isHorizontal) {
				var labelYOffset = tl + tickPadding;

				if (options.position === 'bottom') {
					// bottom
					textBaseline = !isRotated ? 'top' : 'middle';
					textAlign = !isRotated ? 'center' : 'right';
					labelY = me.top + labelYOffset;
				} else {
					// top
					textBaseline = !isRotated ? 'bottom' : 'middle';
					textAlign = !isRotated ? 'center' : 'left';
					labelY = me.bottom - labelYOffset;
				}

				var xLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);
				if (xLineValue < me.left) {
					lineColor = 'rgba(0,0,0,0)';
				}
				xLineValue += helpers.aliasPixel(lineWidth);

				labelX = me.getPixelForTick(index) + optionTicks.labelOffset; // x values for optionTicks (need to consider offsetLabel option)

				tx1 = tx2 = x1 = x2 = xLineValue;
				ty1 = yTickStart;
				ty2 = yTickEnd;
				y1 = chartArea.top;
				y2 = chartArea.bottom + axisWidth;
			} else {
				var isLeft = options.position === 'left';
				var labelXOffset;

				if (optionTicks.mirror) {
					textAlign = isLeft ? 'left' : 'right';
					labelXOffset = tickPadding;
				} else {
					textAlign = isLeft ? 'right' : 'left';
					labelXOffset = tl + tickPadding;
				}

				labelX = isLeft ? me.right - labelXOffset : me.left + labelXOffset;

				var yLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);
				if (yLineValue < me.top) {
					lineColor = 'rgba(0,0,0,0)';
				}
				yLineValue += helpers.aliasPixel(lineWidth);

				labelY = me.getPixelForTick(index) + optionTicks.labelOffset;

				tx1 = xTickStart;
				tx2 = xTickEnd;
				x1 = chartArea.left;
				x2 = chartArea.right + axisWidth;
				ty1 = ty2 = y1 = y2 = yLineValue;
			}

			itemsToDraw.push({
				tx1: tx1,
				ty1: ty1,
				tx2: tx2,
				ty2: ty2,
				x1: x1,
				y1: y1,
				x2: x2,
				y2: y2,
				labelX: labelX,
				labelY: labelY,
				glWidth: lineWidth,
				glColor: lineColor,
				glBorderDash: borderDash,
				glBorderDashOffset: borderDashOffset,
				rotation: -1 * labelRotationRadians,
				label: label,
				major: tick.major,
				textBaseline: textBaseline,
				textAlign: textAlign
			});
		});

		// Draw all of the tick labels, tick marks, and grid lines at the correct places
		helpers.each(itemsToDraw, function(itemToDraw) {
			if (gridLines.display) {
				context.save();
				context.lineWidth = itemToDraw.glWidth;
				context.strokeStyle = itemToDraw.glColor;
				if (context.setLineDash) {
					context.setLineDash(itemToDraw.glBorderDash);
					context.lineDashOffset = itemToDraw.glBorderDashOffset;
				}

				context.beginPath();

				if (gridLines.drawTicks) {
					context.moveTo(itemToDraw.tx1, itemToDraw.ty1);
					context.lineTo(itemToDraw.tx2, itemToDraw.ty2);
				}

				if (gridLines.drawOnChartArea) {
					context.moveTo(itemToDraw.x1, itemToDraw.y1);
					context.lineTo(itemToDraw.x2, itemToDraw.y2);
				}

				context.stroke();
				context.restore();
			}

			if (optionTicks.display) {
				// Make sure we draw text in the correct color and font
				context.save();
				context.translate(itemToDraw.labelX, itemToDraw.labelY);
				context.rotate(itemToDraw.rotation);
				context.font = itemToDraw.major ? majorTickFont.font : tickFont.font;
				context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;
				context.textBaseline = itemToDraw.textBaseline;
				context.textAlign = itemToDraw.textAlign;

				var label = itemToDraw.label;
				if (helpers.isArray(label)) {
					var lineCount = label.length;
					var lineHeight = tickFont.size * 1.5;
					var y = me.isHorizontal() ? 0 : -lineHeight * (lineCount - 1) / 2;

					for (var i = 0; i < lineCount; ++i) {
						// We just make sure the multiline element is a string here..
						context.fillText('' + label[i], 0, y);
						// apply same lineSpacing as calculated @ L#320
						y += lineHeight;
					}
				} else {
					context.fillText(label, 0, 0);
				}
				context.restore();
			}
		});

		if (scaleLabel.display) {
			// Draw the scale label
			var scaleLabelX;
			var scaleLabelY;
			var rotation = 0;
			var halfLineHeight = parseLineHeight(scaleLabel) / 2;

			if (isHorizontal) {
				scaleLabelX = me.left + ((me.right - me.left) / 2); // midpoint of the width
				scaleLabelY = options.position === 'bottom'
					? me.bottom - halfLineHeight - scaleLabelPadding.bottom
					: me.top + halfLineHeight + scaleLabelPadding.top;
			} else {
				var isLeft = options.position === 'left';
				scaleLabelX = isLeft
					? me.left + halfLineHeight + scaleLabelPadding.top
					: me.right - halfLineHeight - scaleLabelPadding.top;
				scaleLabelY = me.top + ((me.bottom - me.top) / 2);
				rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;
			}

			context.save();
			context.translate(scaleLabelX, scaleLabelY);
			context.rotate(rotation);
			context.textAlign = 'center';
			context.textBaseline = 'middle';
			context.fillStyle = scaleLabelFontColor; // render in correct colour
			context.font = scaleLabelFont.font;
			context.fillText(scaleLabel.labelString, 0, 0);
			context.restore();
		}

		if (gridLines.drawBorder) {
			// Draw the line at the edge of the axis
			context.lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, 0);
			context.strokeStyle = helpers.valueAtIndexOrDefault(gridLines.color, 0);
			var x1 = me.left;
			var x2 = me.right + axisWidth;
			var y1 = me.top;
			var y2 = me.bottom + axisWidth;

			var aliasPixel = helpers.aliasPixel(context.lineWidth);
			if (isHorizontal) {
				y1 = y2 = options.position === 'top' ? me.bottom : me.top;
				y1 += aliasPixel;
				y2 += aliasPixel;
			} else {
				x1 = x2 = options.position === 'left' ? me.right : me.left;
				x1 += aliasPixel;
				x2 += aliasPixel;
			}

			context.beginPath();
			context.moveTo(x1, y1);
			context.lineTo(x2, y2);
			context.stroke();
		}
	}
});


/***/ }),

/***/ "./node_modules/chart.js/src/core/core.scaleService.js":
/*!*************************************************************!*\
  !*** ./node_modules/chart.js/src/core/core.scaleService.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var defaults = __webpack_require__(/*! ./core.defaults */ "./node_modules/chart.js/src/core/core.defaults.js");
var helpers = __webpack_require__(/*! ../helpers/index */ "./node_modules/chart.js/src/helpers/index.js");
var layouts = __webpack_require__(/*! ./core.layouts */ "./node_modules/chart.js/src/core/core.layouts.js");

module.exports = {
	// Scale registration object. Extensions can register new scale types (such as log or DB scales) and then
	// use the new chart options to grab the correct scale
	constructors: {},
	// Use a registration function so that we can move to an ES6 map when we no longer need to support
	// old browsers

	// Scale config defaults
	defaults: {},
	registerScaleType: function(type, scaleConstructor, scaleDefaults) {
		this.constructors[type] = scaleConstructor;
		this.defaults[type] = helpers.clone(scaleDefaults);
	},
	getScaleConstructor: function(type) {
		return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;
	},
	getScaleDefaults: function(type) {
		// Return the scale defaults merged with the global settings so that we always use the latest ones
		return this.defaults.hasOwnProperty(type) ? helpers.merge({}, [defaults.scale, this.defaults[type]]) : {};
	},
	updateScaleDefaults: function(type, additions) {
		var me = this;
		if (me.defaults.hasOwnProperty(type)) {
			me.defaults[type] = helpers.extend(me.defaults[type], additions);
		}
	},
	addScalesToLayout: function(chart) {
		// Adds each scale to the chart.boxes array to be sized accordingly
		helpers.each(chart.scales, function(scale) {
			// Set ILayoutItem parameters for backwards compatibility
			scale.fullWidth = scale.options.fullWidth;
			scale.position = scale.options.position;
			scale.weight = scale.options.weight;
			layouts.addBox(chart, scale);
		});
	}
};


/***/ }),

/***/ "./node_modules/chart.js/src/core/core.ticks.js":
/*!******************************************************!*\
  !*** ./node_modules/chart.js/src/core/core.ticks.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var helpers = __webpack_require__(/*! ../helpers/index */ "./node_modules/chart.js/src/helpers/index.js");

/**
 * Namespace to hold static tick generation functions
 * @namespace Chart.Ticks
 */
module.exports = {
	/**
	 * Namespace to hold formatters for different types of ticks
	 * @namespace Chart.Ticks.formatters
	 */
	formatters: {
		/**
		 * Formatter for value labels
		 * @method Chart.Ticks.formatters.values
		 * @param value the value to display
		 * @return {String|Array} the label to display
		 */
		values: function(value) {
			return helpers.isArray(value) ? value : '' + value;
		},

		/**
		 * Formatter for linear numeric ticks
		 * @method Chart.Ticks.formatters.linear
		 * @param tickValue {Number} the value to be formatted
		 * @param index {Number} the position of the tickValue parameter in the ticks array
		 * @param ticks {Array<Number>} the list of ticks being converted
		 * @return {String} string representation of the tickValue parameter
		 */
		linear: function(tickValue, index, ticks) {
			// If we have lots of ticks, don't use the ones
			var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];

			// If we have a number like 2.5 as the delta, figure out how many decimal places we need
			if (Math.abs(delta) > 1) {
				if (tickValue !== Math.floor(tickValue)) {
					// not an integer
					delta = tickValue - Math.floor(tickValue);
				}
			}

			var logDelta = helpers.log10(Math.abs(delta));
			var tickString = '';

			if (tickValue !== 0) {
				var maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));
				if (maxTick < 1e-4) { // all ticks are small numbers; use scientific notation
					var logTick = helpers.log10(Math.abs(tickValue));
					tickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));
				} else {
					var numDecimal = -1 * Math.floor(logDelta);
					numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places
					tickString = tickValue.toFixed(numDecimal);
				}
			} else {
				tickString = '0'; // never show decimal places for 0
			}

			return tickString;
		},

		logarithmic: function(tickValue, index, ticks) {
			var remain = tickValue / (Math.pow(10, Math.floor(helpers.log10(tickValue))));

			if (tickValue === 0) {
				return '0';
			} else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {
				return tickValue.toExponential();
			}
			return '';
		}
	}
};


/***/ }),

/***/ "./node_modules/chart.js/src/core/core.tooltip.js":
/*!********************************************************!*\
  !*** ./node_modules/chart.js/src/core/core.tooltip.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var defaults = __webpack_require__(/*! ./core.defaults */ "./node_modules/chart.js/src/core/core.defaults.js");
var Element = __webpack_require__(/*! ./core.element */ "./node_modules/chart.js/src/core/core.element.js");
var helpers = __webpack_require__(/*! ../helpers/index */ "./node_modules/chart.js/src/helpers/index.js");

defaults._set('global', {
	tooltips: {
		enabled: true,
		custom: null,
		mode: 'nearest',
		position: 'average',
		intersect: true,
		backgroundColor: 'rgba(0,0,0,0.8)',
		titleFontStyle: 'bold',
		titleSpacing: 2,
		titleMarginBottom: 6,
		titleFontColor: '#fff',
		titleAlign: 'left',
		bodySpacing: 2,
		bodyFontColor: '#fff',
		bodyAlign: 'left',
		footerFontStyle: 'bold',
		footerSpacing: 2,
		footerMarginTop: 6,
		footerFontColor: '#fff',
		footerAlign: 'left',
		yPadding: 6,
		xPadding: 6,
		caretPadding: 2,
		caretSize: 5,
		cornerRadius: 6,
		multiKeyBackground: '#fff',
		displayColors: true,
		borderColor: 'rgba(0,0,0,0)',
		borderWidth: 0,
		callbacks: {
			// Args are: (tooltipItems, data)
			beforeTitle: helpers.noop,
			title: function(tooltipItems, data) {
				// Pick first xLabel for now
				var title = '';
				var labels = data.labels;
				var labelCount = labels ? labels.length : 0;

				if (tooltipItems.length > 0) {
					var item = tooltipItems[0];

					if (item.xLabel) {
						title = item.xLabel;
					} else if (labelCount > 0 && item.index < labelCount) {
						title = labels[item.index];
					}
				}

				return title;
			},
			afterTitle: helpers.noop,

			// Args are: (tooltipItems, data)
			beforeBody: helpers.noop,

			// Args are: (tooltipItem, data)
			beforeLabel: helpers.noop,
			label: function(tooltipItem, data) {
				var label = data.datasets[tooltipItem.datasetIndex].label || '';

				if (label) {
					label += ': ';
				}
				label += tooltipItem.yLabel;
				return label;
			},
			labelColor: function(tooltipItem, chart) {
				var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);
				var activeElement = meta.data[tooltipItem.index];
				var view = activeElement._view;
				return {
					borderColor: view.borderColor,
					backgroundColor: view.backgroundColor
				};
			},
			labelTextColor: function() {
				return this._options.bodyFontColor;
			},
			afterLabel: helpers.noop,

			// Args are: (tooltipItems, data)
			afterBody: helpers.noop,

			// Args are: (tooltipItems, data)
			beforeFooter: helpers.noop,
			footer: helpers.noop,
			afterFooter: helpers.noop
		}
	}
});

var positioners = {
	/**
	 * Average mode places the tooltip at the average position of the elements shown
	 * @function Chart.Tooltip.positioners.average
	 * @param elements {ChartElement[]} the elements being displayed in the tooltip
	 * @returns {Point} tooltip position
	 */
	average: function(elements) {
		if (!elements.length) {
			return false;
		}

		var i, len;
		var x = 0;
		var y = 0;
		var count = 0;

		for (i = 0, len = elements.length; i < len; ++i) {
			var el = elements[i];
			if (el && el.hasValue()) {
				var pos = el.tooltipPosition();
				x += pos.x;
				y += pos.y;
				++count;
			}
		}

		return {
			x: Math.round(x / count),
			y: Math.round(y / count)
		};
	},

	/**
	 * Gets the tooltip position nearest of the item nearest to the event position
	 * @function Chart.Tooltip.positioners.nearest
	 * @param elements {Chart.Element[]} the tooltip elements
	 * @param eventPosition {Point} the position of the event in canvas coordinates
	 * @returns {Point} the tooltip position
	 */
	nearest: function(elements, eventPosition) {
		var x = eventPosition.x;
		var y = eventPosition.y;
		var minDistance = Number.POSITIVE_INFINITY;
		var i, len, nearestElement;

		for (i = 0, len = elements.length; i < len; ++i) {
			var el = elements[i];
			if (el && el.hasValue()) {
				var center = el.getCenterPoint();
				var d = helpers.distanceBetweenPoints(eventPosition, center);

				if (d < minDistance) {
					minDistance = d;
					nearestElement = el;
				}
			}
		}

		if (nearestElement) {
			var tp = nearestElement.tooltipPosition();
			x = tp.x;
			y = tp.y;
		}

		return {
			x: x,
			y: y
		};
	}
};

/**
 * Helper method to merge the opacity into a color
 */
function mergeOpacity(colorString, opacity) {
	var color = helpers.color(colorString);
	return color.alpha(opacity * color.alpha()).rgbaString();
}

// Helper to push or concat based on if the 2nd parameter is an array or not
function pushOrConcat(base, toPush) {
	if (toPush) {
		if (helpers.isArray(toPush)) {
			// base = base.concat(toPush);
			Array.prototype.push.apply(base, toPush);
		} else {
			base.push(toPush);
		}
	}

	return base;
}

/**
 * Returns array of strings split by newline
 * @param {String} value - The value to split by newline.
 * @returns {Array} value if newline present - Returned from String split() method
 * @function
 */
function splitNewlines(str) {
	if ((typeof str === 'string' || str instanceof String) && str.indexOf('\n') > -1) {
		return str.split('\n');
	}
	return str;
}


// Private helper to create a tooltip item model
// @param element : the chart element (point, arc, bar) to create the tooltip item for
// @return : new tooltip item
function createTooltipItem(element) {
	var xScale = element._xScale;
	var yScale = element._yScale || element._scale; // handle radar || polarArea charts
	var index = element._index;
	var datasetIndex = element._datasetIndex;

	return {
		xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',
		yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',
		index: index,
		datasetIndex: datasetIndex,
		x: element._model.x,
		y: element._model.y
	};
}

/**
 * Helper to get the reset model for the tooltip
 * @param tooltipOpts {Object} the tooltip options
 */
function getBaseModel(tooltipOpts) {
	var globalDefaults = defaults.global;
	var valueOrDefault = helpers.valueOrDefault;

	return {
		// Positioning
		xPadding: tooltipOpts.xPadding,
		yPadding: tooltipOpts.yPadding,
		xAlign: tooltipOpts.xAlign,
		yAlign: tooltipOpts.yAlign,

		// Body
		bodyFontColor: tooltipOpts.bodyFontColor,
		_bodyFontFamily: valueOrDefault(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),
		_bodyFontStyle: valueOrDefault(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),
		_bodyAlign: tooltipOpts.bodyAlign,
		bodyFontSize: valueOrDefault(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),
		bodySpacing: tooltipOpts.bodySpacing,

		// Title
		titleFontColor: tooltipOpts.titleFontColor,
		_titleFontFamily: valueOrDefault(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),
		_titleFontStyle: valueOrDefault(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),
		titleFontSize: valueOrDefault(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),
		_titleAlign: tooltipOpts.titleAlign,
		titleSpacing: tooltipOpts.titleSpacing,
		titleMarginBottom: tooltipOpts.titleMarginBottom,

		// Footer
		footerFontColor: tooltipOpts.footerFontColor,
		_footerFontFamily: valueOrDefault(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),
		_footerFontStyle: valueOrDefault(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),
		footerFontSize: valueOrDefault(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),
		_footerAlign: tooltipOpts.footerAlign,
		footerSpacing: tooltipOpts.footerSpacing,
		footerMarginTop: tooltipOpts.footerMarginTop,

		// Appearance
		caretSize: tooltipOpts.caretSize,
		cornerRadius: tooltipOpts.cornerRadius,
		backgroundColor: tooltipOpts.backgroundColor,
		opacity: 0,
		legendColorBackground: tooltipOpts.multiKeyBackground,
		displayColors: tooltipOpts.displayColors,
		borderColor: tooltipOpts.borderColor,
		borderWidth: tooltipOpts.borderWidth
	};
}

/**
 * Get the size of the tooltip
 */
function getTooltipSize(tooltip, model) {
	var ctx = tooltip._chart.ctx;

	var height = model.yPadding * 2; // Tooltip Padding
	var width = 0;

	// Count of all lines in the body
	var body = model.body;
	var combinedBodyLength = body.reduce(function(count, bodyItem) {
		return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;
	}, 0);
	combinedBodyLength += model.beforeBody.length + model.afterBody.length;

	var titleLineCount = model.title.length;
	var footerLineCount = model.footer.length;
	var titleFontSize = model.titleFontSize;
	var bodyFontSize = model.bodyFontSize;
	var footerFontSize = model.footerFontSize;

	height += titleLineCount * titleFontSize; // Title Lines
	height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing
	height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin
	height += combinedBodyLength * bodyFontSize; // Body Lines
	height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing
	height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin
	height += footerLineCount * (footerFontSize); // Footer Lines
	height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing

	// Title width
	var widthPadding = 0;
	var maxLineWidth = function(line) {
		width = Math.max(width, ctx.measureText(line).width + widthPadding);
	};

	ctx.font = helpers.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);
	helpers.each(model.title, maxLineWidth);

	// Body width
	ctx.font = helpers.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);
	helpers.each(model.beforeBody.concat(model.afterBody), maxLineWidth);

	// Body lines may include some extra width due to the color box
	widthPadding = model.displayColors ? (bodyFontSize + 2) : 0;
	helpers.each(body, function(bodyItem) {
		helpers.each(bodyItem.before, maxLineWidth);
		helpers.each(bodyItem.lines, maxLineWidth);
		helpers.each(bodyItem.after, maxLineWidth);
	});

	// Reset back to 0
	widthPadding = 0;

	// Footer width
	ctx.font = helpers.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);
	helpers.each(model.footer, maxLineWidth);

	// Add padding
	width += 2 * model.xPadding;

	return {
		width: width,
		height: height
	};
}

/**
 * Helper to get the alignment of a tooltip given the size
 */
function determineAlignment(tooltip, size) {
	var model = tooltip._model;
	var chart = tooltip._chart;
	var chartArea = tooltip._chart.chartArea;
	var xAlign = 'center';
	var yAlign = 'center';

	if (model.y < size.height) {
		yAlign = 'top';
	} else if (model.y > (chart.height - size.height)) {
		yAlign = 'bottom';
	}

	var lf, rf; // functions to determine left, right alignment
	var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart
	var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges
	var midX = (chartArea.left + chartArea.right) / 2;
	var midY = (chartArea.top + chartArea.bottom) / 2;

	if (yAlign === 'center') {
		lf = function(x) {
			return x <= midX;
		};
		rf = function(x) {
			return x > midX;
		};
	} else {
		lf = function(x) {
			return x <= (size.width / 2);
		};
		rf = function(x) {
			return x >= (chart.width - (size.width / 2));
		};
	}

	olf = function(x) {
		return x + size.width + model.caretSize + model.caretPadding > chart.width;
	};
	orf = function(x) {
		return x - size.width - model.caretSize - model.caretPadding < 0;
	};
	yf = function(y) {
		return y <= midY ? 'top' : 'bottom';
	};

	if (lf(model.x)) {
		xAlign = 'left';

		// Is tooltip too wide and goes over the right side of the chart.?
		if (olf(model.x)) {
			xAlign = 'center';
			yAlign = yf(model.y);
		}
	} else if (rf(model.x)) {
		xAlign = 'right';

		// Is tooltip too wide and goes outside left edge of canvas?
		if (orf(model.x)) {
			xAlign = 'center';
			yAlign = yf(model.y);
		}
	}

	var opts = tooltip._options;
	return {
		xAlign: opts.xAlign ? opts.xAlign : xAlign,
		yAlign: opts.yAlign ? opts.yAlign : yAlign
	};
}

/**
 * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment
 */
function getBackgroundPoint(vm, size, alignment, chart) {
	// Background Position
	var x = vm.x;
	var y = vm.y;

	var caretSize = vm.caretSize;
	var caretPadding = vm.caretPadding;
	var cornerRadius = vm.cornerRadius;
	var xAlign = alignment.xAlign;
	var yAlign = alignment.yAlign;
	var paddingAndSize = caretSize + caretPadding;
	var radiusAndPadding = cornerRadius + caretPadding;

	if (xAlign === 'right') {
		x -= size.width;
	} else if (xAlign === 'center') {
		x -= (size.width / 2);
		if (x + size.width > chart.width) {
			x = chart.width - size.width;
		}
		if (x < 0) {
			x = 0;
		}
	}

	if (yAlign === 'top') {
		y += paddingAndSize;
	} else if (yAlign === 'bottom') {
		y -= size.height + paddingAndSize;
	} else {
		y -= (size.height / 2);
	}

	if (yAlign === 'center') {
		if (xAlign === 'left') {
			x += paddingAndSize;
		} else if (xAlign === 'right') {
			x -= paddingAndSize;
		}
	} else if (xAlign === 'left') {
		x -= radiusAndPadding;
	} else if (xAlign === 'right') {
		x += radiusAndPadding;
	}

	return {
		x: x,
		y: y
	};
}

/**
 * Helper to build before and after body lines
 */
function getBeforeAfterBodyLines(callback) {
	return pushOrConcat([], splitNewlines(callback));
}

var exports = module.exports = Element.extend({
	initialize: function() {
		this._model = getBaseModel(this._options);
		this._lastActive = [];
	},

	// Get the title
	// Args are: (tooltipItem, data)
	getTitle: function() {
		var me = this;
		var opts = me._options;
		var callbacks = opts.callbacks;

		var beforeTitle = callbacks.beforeTitle.apply(me, arguments);
		var title = callbacks.title.apply(me, arguments);
		var afterTitle = callbacks.afterTitle.apply(me, arguments);

		var lines = [];
		lines = pushOrConcat(lines, splitNewlines(beforeTitle));
		lines = pushOrConcat(lines, splitNewlines(title));
		lines = pushOrConcat(lines, splitNewlines(afterTitle));

		return lines;
	},

	// Args are: (tooltipItem, data)
	getBeforeBody: function() {
		return getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));
	},

	// Args are: (tooltipItem, data)
	getBody: function(tooltipItems, data) {
		var me = this;
		var callbacks = me._options.callbacks;
		var bodyItems = [];

		helpers.each(tooltipItems, function(tooltipItem) {
			var bodyItem = {
				before: [],
				lines: [],
				after: []
			};
			pushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));
			pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));
			pushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));

			bodyItems.push(bodyItem);
		});

		return bodyItems;
	},

	// Args are: (tooltipItem, data)
	getAfterBody: function() {
		return getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));
	},

	// Get the footer and beforeFooter and afterFooter lines
	// Args are: (tooltipItem, data)
	getFooter: function() {
		var me = this;
		var callbacks = me._options.callbacks;

		var beforeFooter = callbacks.beforeFooter.apply(me, arguments);
		var footer = callbacks.footer.apply(me, arguments);
		var afterFooter = callbacks.afterFooter.apply(me, arguments);

		var lines = [];
		lines = pushOrConcat(lines, splitNewlines(beforeFooter));
		lines = pushOrConcat(lines, splitNewlines(footer));
		lines = pushOrConcat(lines, splitNewlines(afterFooter));

		return lines;
	},

	update: function(changed) {
		var me = this;
		var opts = me._options;

		// Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition
		// that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time
		// which breaks any animations.
		var existingModel = me._model;
		var model = me._model = getBaseModel(opts);
		var active = me._active;

		var data = me._data;

		// In the case where active.length === 0 we need to keep these at existing values for good animations
		var alignment = {
			xAlign: existingModel.xAlign,
			yAlign: existingModel.yAlign
		};
		var backgroundPoint = {
			x: existingModel.x,
			y: existingModel.y
		};
		var tooltipSize = {
			width: existingModel.width,
			height: existingModel.height
		};
		var tooltipPosition = {
			x: existingModel.caretX,
			y: existingModel.caretY
		};

		var i, len;

		if (active.length) {
			model.opacity = 1;

			var labelColors = [];
			var labelTextColors = [];
			tooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);

			var tooltipItems = [];
			for (i = 0, len = active.length; i < len; ++i) {
				tooltipItems.push(createTooltipItem(active[i]));
			}

			// If the user provided a filter function, use it to modify the tooltip items
			if (opts.filter) {
				tooltipItems = tooltipItems.filter(function(a) {
					return opts.filter(a, data);
				});
			}

			// If the user provided a sorting function, use it to modify the tooltip items
			if (opts.itemSort) {
				tooltipItems = tooltipItems.sort(function(a, b) {
					return opts.itemSort(a, b, data);
				});
			}

			// Determine colors for boxes
			helpers.each(tooltipItems, function(tooltipItem) {
				labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));
				labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));
			});


			// Build the Text Lines
			model.title = me.getTitle(tooltipItems, data);
			model.beforeBody = me.getBeforeBody(tooltipItems, data);
			model.body = me.getBody(tooltipItems, data);
			model.afterBody = me.getAfterBody(tooltipItems, data);
			model.footer = me.getFooter(tooltipItems, data);

			// Initial positioning and colors
			model.x = Math.round(tooltipPosition.x);
			model.y = Math.round(tooltipPosition.y);
			model.caretPadding = opts.caretPadding;
			model.labelColors = labelColors;
			model.labelTextColors = labelTextColors;

			// data points
			model.dataPoints = tooltipItems;

			// We need to determine alignment of the tooltip
			tooltipSize = getTooltipSize(this, model);
			alignment = determineAlignment(this, tooltipSize);
			// Final Size and Position
			backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);
		} else {
			model.opacity = 0;
		}

		model.xAlign = alignment.xAlign;
		model.yAlign = alignment.yAlign;
		model.x = backgroundPoint.x;
		model.y = backgroundPoint.y;
		model.width = tooltipSize.width;
		model.height = tooltipSize.height;

		// Point where the caret on the tooltip points to
		model.caretX = tooltipPosition.x;
		model.caretY = tooltipPosition.y;

		me._model = model;

		if (changed && opts.custom) {
			opts.custom.call(me, model);
		}

		return me;
	},

	drawCaret: function(tooltipPoint, size) {
		var ctx = this._chart.ctx;
		var vm = this._view;
		var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);

		ctx.lineTo(caretPosition.x1, caretPosition.y1);
		ctx.lineTo(caretPosition.x2, caretPosition.y2);
		ctx.lineTo(caretPosition.x3, caretPosition.y3);
	},
	getCaretPosition: function(tooltipPoint, size, vm) {
		var x1, x2, x3, y1, y2, y3;
		var caretSize = vm.caretSize;
		var cornerRadius = vm.cornerRadius;
		var xAlign = vm.xAlign;
		var yAlign = vm.yAlign;
		var ptX = tooltipPoint.x;
		var ptY = tooltipPoint.y;
		var width = size.width;
		var height = size.height;

		if (yAlign === 'center') {
			y2 = ptY + (height / 2);

			if (xAlign === 'left') {
				x1 = ptX;
				x2 = x1 - caretSize;
				x3 = x1;

				y1 = y2 + caretSize;
				y3 = y2 - caretSize;
			} else {
				x1 = ptX + width;
				x2 = x1 + caretSize;
				x3 = x1;

				y1 = y2 - caretSize;
				y3 = y2 + caretSize;
			}
		} else {
			if (xAlign === 'left') {
				x2 = ptX + cornerRadius + (caretSize);
				x1 = x2 - caretSize;
				x3 = x2 + caretSize;
			} else if (xAlign === 'right') {
				x2 = ptX + width - cornerRadius - caretSize;
				x1 = x2 - caretSize;
				x3 = x2 + caretSize;
			} else {
				x2 = vm.caretX;
				x1 = x2 - caretSize;
				x3 = x2 + caretSize;
			}
			if (yAlign === 'top') {
				y1 = ptY;
				y2 = y1 - caretSize;
				y3 = y1;
			} else {
				y1 = ptY + height;
				y2 = y1 + caretSize;
				y3 = y1;
				// invert drawing order
				var tmp = x3;
				x3 = x1;
				x1 = tmp;
			}
		}
		return {x1: x1, x2: x2, x3: x3, y1: y1, y2: y2, y3: y3};
	},

	drawTitle: function(pt, vm, ctx, opacity) {
		var title = vm.title;

		if (title.length) {
			ctx.textAlign = vm._titleAlign;
			ctx.textBaseline = 'top';

			var titleFontSize = vm.titleFontSize;
			var titleSpacing = vm.titleSpacing;

			ctx.fillStyle = mergeOpacity(vm.titleFontColor, opacity);
			ctx.font = helpers.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);

			var i, len;
			for (i = 0, len = title.length; i < len; ++i) {
				ctx.fillText(title[i], pt.x, pt.y);
				pt.y += titleFontSize + titleSpacing; // Line Height and spacing

				if (i + 1 === title.length) {
					pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing
				}
			}
		}
	},

	drawBody: function(pt, vm, ctx, opacity) {
		var bodyFontSize = vm.bodyFontSize;
		var bodySpacing = vm.bodySpacing;
		var body = vm.body;

		ctx.textAlign = vm._bodyAlign;
		ctx.textBaseline = 'top';
		ctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);

		// Before Body
		var xLinePadding = 0;
		var fillLineOfText = function(line) {
			ctx.fillText(line, pt.x + xLinePadding, pt.y);
			pt.y += bodyFontSize + bodySpacing;
		};

		// Before body lines
		ctx.fillStyle = mergeOpacity(vm.bodyFontColor, opacity);
		helpers.each(vm.beforeBody, fillLineOfText);

		var drawColorBoxes = vm.displayColors;
		xLinePadding = drawColorBoxes ? (bodyFontSize + 2) : 0;

		// Draw body lines now
		helpers.each(body, function(bodyItem, i) {
			var textColor = mergeOpacity(vm.labelTextColors[i], opacity);
			ctx.fillStyle = textColor;
			helpers.each(bodyItem.before, fillLineOfText);

			helpers.each(bodyItem.lines, function(line) {
				// Draw Legend-like boxes if needed
				if (drawColorBoxes) {
					// Fill a white rect so that colours merge nicely if the opacity is < 1
					ctx.fillStyle = mergeOpacity(vm.legendColorBackground, opacity);
					ctx.fillRect(pt.x, pt.y, bodyFontSize, bodyFontSize);

					// Border
					ctx.lineWidth = 1;
					ctx.strokeStyle = mergeOpacity(vm.labelColors[i].borderColor, opacity);
					ctx.strokeRect(pt.x, pt.y, bodyFontSize, bodyFontSize);

					// Inner square
					ctx.fillStyle = mergeOpacity(vm.labelColors[i].backgroundColor, opacity);
					ctx.fillRect(pt.x + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);
					ctx.fillStyle = textColor;
				}

				fillLineOfText(line);
			});

			helpers.each(bodyItem.after, fillLineOfText);
		});

		// Reset back to 0 for after body
		xLinePadding = 0;

		// After body lines
		helpers.each(vm.afterBody, fillLineOfText);
		pt.y -= bodySpacing; // Remove last body spacing
	},

	drawFooter: function(pt, vm, ctx, opacity) {
		var footer = vm.footer;

		if (footer.length) {
			pt.y += vm.footerMarginTop;

			ctx.textAlign = vm._footerAlign;
			ctx.textBaseline = 'top';

			ctx.fillStyle = mergeOpacity(vm.footerFontColor, opacity);
			ctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);

			helpers.each(footer, function(line) {
				ctx.fillText(line, pt.x, pt.y);
				pt.y += vm.footerFontSize + vm.footerSpacing;
			});
		}
	},

	drawBackground: function(pt, vm, ctx, tooltipSize, opacity) {
		ctx.fillStyle = mergeOpacity(vm.backgroundColor, opacity);
		ctx.strokeStyle = mergeOpacity(vm.borderColor, opacity);
		ctx.lineWidth = vm.borderWidth;
		var xAlign = vm.xAlign;
		var yAlign = vm.yAlign;
		var x = pt.x;
		var y = pt.y;
		var width = tooltipSize.width;
		var height = tooltipSize.height;
		var radius = vm.cornerRadius;

		ctx.beginPath();
		ctx.moveTo(x + radius, y);
		if (yAlign === 'top') {
			this.drawCaret(pt, tooltipSize);
		}
		ctx.lineTo(x + width - radius, y);
		ctx.quadraticCurveTo(x + width, y, x + width, y + radius);
		if (yAlign === 'center' && xAlign === 'right') {
			this.drawCaret(pt, tooltipSize);
		}
		ctx.lineTo(x + width, y + height - radius);
		ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);
		if (yAlign === 'bottom') {
			this.drawCaret(pt, tooltipSize);
		}
		ctx.lineTo(x + radius, y + height);
		ctx.quadraticCurveTo(x, y + height, x, y + height - radius);
		if (yAlign === 'center' && xAlign === 'left') {
			this.drawCaret(pt, tooltipSize);
		}
		ctx.lineTo(x, y + radius);
		ctx.quadraticCurveTo(x, y, x + radius, y);
		ctx.closePath();

		ctx.fill();

		if (vm.borderWidth > 0) {
			ctx.stroke();
		}
	},

	draw: function() {
		var ctx = this._chart.ctx;
		var vm = this._view;

		if (vm.opacity === 0) {
			return;
		}

		var tooltipSize = {
			width: vm.width,
			height: vm.height
		};
		var pt = {
			x: vm.x,
			y: vm.y
		};

		// IE11/Edge does not like very small opacities, so snap to 0
		var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity;

		// Truthy/falsey value for empty tooltip
		var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;

		if (this._options.enabled && hasTooltipContent) {
			// Draw Background
			this.drawBackground(pt, vm, ctx, tooltipSize, opacity);

			// Draw Title, Body, and Footer
			pt.x += vm.xPadding;
			pt.y += vm.yPadding;

			// Titles
			this.drawTitle(pt, vm, ctx, opacity);

			// Body
			this.drawBody(pt, vm, ctx, opacity);

			// Footer
			this.drawFooter(pt, vm, ctx, opacity);
		}
	},

	/**
	 * Handle an event
	 * @private
	 * @param {IEvent} event - The event to handle
	 * @returns {Boolean} true if the tooltip changed
	 */
	handleEvent: function(e) {
		var me = this;
		var options = me._options;
		var changed = false;

		me._lastActive = me._lastActive || [];

		// Find Active Elements for tooltips
		if (e.type === 'mouseout') {
			me._active = [];
		} else {
			me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);
		}

		// Remember Last Actives
		changed = !helpers.arrayEquals(me._active, me._lastActive);

		// Only handle target event on tooltip change
		if (changed) {
			me._lastActive = me._active;

			if (options.enabled || options.custom) {
				me._eventPosition = {
					x: e.x,
					y: e.y
				};

				me.update(true);
				me.pivot();
			}
		}

		return changed;
	}
});

/**
 * @namespace Chart.Tooltip.positioners
 */
exports.positioners = positioners;



/***/ }),

/***/ "./node_modules/chart.js/src/elements/element.arc.js":
/*!***********************************************************!*\
  !*** ./node_modules/chart.js/src/elements/element.arc.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var defaults = __webpack_require__(/*! ../core/core.defaults */ "./node_modules/chart.js/src/core/core.defaults.js");
var Element = __webpack_require__(/*! ../core/core.element */ "./node_modules/chart.js/src/core/core.element.js");
var helpers = __webpack_require__(/*! ../helpers/index */ "./node_modules/chart.js/src/helpers/index.js");

defaults._set('global', {
	elements: {
		arc: {
			backgroundColor: defaults.global.defaultColor,
			borderColor: '#fff',
			borderWidth: 2
		}
	}
});

module.exports = Element.extend({
	inLabelRange: function(mouseX) {
		var vm = this._view;

		if (vm) {
			return (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2));
		}
		return false;
	},

	inRange: function(chartX, chartY) {
		var vm = this._view;

		if (vm) {
			var pointRelativePosition = helpers.getAngleFromPoint(vm, {x: chartX, y: chartY});
			var	angle = pointRelativePosition.angle;
			var distance = pointRelativePosition.distance;

			// Sanitise angle range
			var startAngle = vm.startAngle;
			var endAngle = vm.endAngle;
			while (endAngle < startAngle) {
				endAngle += 2.0 * Math.PI;
			}
			while (angle > endAngle) {
				angle -= 2.0 * Math.PI;
			}
			while (angle < startAngle) {
				angle += 2.0 * Math.PI;
			}

			// Check if within the range of the open/close angle
			var betweenAngles = (angle >= startAngle && angle <= endAngle);
			var withinRadius = (distance >= vm.innerRadius && distance <= vm.outerRadius);

			return (betweenAngles && withinRadius);
		}
		return false;
	},

	getCenterPoint: function() {
		var vm = this._view;
		var halfAngle = (vm.startAngle + vm.endAngle) / 2;
		var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;
		return {
			x: vm.x + Math.cos(halfAngle) * halfRadius,
			y: vm.y + Math.sin(halfAngle) * halfRadius
		};
	},

	getArea: function() {
		var vm = this._view;
		return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));
	},

	tooltipPosition: function() {
		var vm = this._view;
		var centreAngle = vm.startAngle + ((vm.endAngle - vm.startAngle) / 2);
		var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;

		return {
			x: vm.x + (Math.cos(centreAngle) * rangeFromCentre),
			y: vm.y + (Math.sin(centreAngle) * rangeFromCentre)
		};
	},

	draw: function() {
		var ctx = this._chart.ctx;
		var vm = this._view;
		var sA = vm.startAngle;
		var eA = vm.endAngle;

		ctx.beginPath();

		ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);
		ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);

		ctx.closePath();
		ctx.strokeStyle = vm.borderColor;
		ctx.lineWidth = vm.borderWidth;

		ctx.fillStyle = vm.backgroundColor;

		ctx.fill();
		ctx.lineJoin = 'bevel';

		if (vm.borderWidth) {
			ctx.stroke();
		}
	}
});


/***/ }),

/***/ "./node_modules/chart.js/src/elements/element.line.js":
/*!************************************************************!*\
  !*** ./node_modules/chart.js/src/elements/element.line.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var defaults = __webpack_require__(/*! ../core/core.defaults */ "./node_modules/chart.js/src/core/core.defaults.js");
var Element = __webpack_require__(/*! ../core/core.element */ "./node_modules/chart.js/src/core/core.element.js");
var helpers = __webpack_require__(/*! ../helpers/index */ "./node_modules/chart.js/src/helpers/index.js");

var globalDefaults = defaults.global;

defaults._set('global', {
	elements: {
		line: {
			tension: 0.4,
			backgroundColor: globalDefaults.defaultColor,
			borderWidth: 3,
			borderColor: globalDefaults.defaultColor,
			borderCapStyle: 'butt',
			borderDash: [],
			borderDashOffset: 0.0,
			borderJoinStyle: 'miter',
			capBezierPoints: true,
			fill: true, // do we fill in the area between the line and its base axis
		}
	}
});

module.exports = Element.extend({
	draw: function() {
		var me = this;
		var vm = me._view;
		var ctx = me._chart.ctx;
		var spanGaps = vm.spanGaps;
		var points = me._children.slice(); // clone array
		var globalOptionLineElements = globalDefaults.elements.line;
		var lastDrawnIndex = -1;
		var index, current, previous, currentVM;

		// If we are looping, adding the first point again
		if (me._loop && points.length) {
			points.push(points[0]);
		}

		ctx.save();

		// Stroke Line Options
		ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle;

		// IE 9 and 10 do not support line dash
		if (ctx.setLineDash) {
			ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);
		}

		ctx.lineDashOffset = vm.borderDashOffset || globalOptionLineElements.borderDashOffset;
		ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;
		ctx.lineWidth = vm.borderWidth || globalOptionLineElements.borderWidth;
		ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor;

		// Stroke Line
		ctx.beginPath();
		lastDrawnIndex = -1;

		for (index = 0; index < points.length; ++index) {
			current = points[index];
			previous = helpers.previousItem(points, index);
			currentVM = current._view;

			// First point moves to it's starting position no matter what
			if (index === 0) {
				if (!currentVM.skip) {
					ctx.moveTo(currentVM.x, currentVM.y);
					lastDrawnIndex = index;
				}
			} else {
				previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];

				if (!currentVM.skip) {
					if ((lastDrawnIndex !== (index - 1) && !spanGaps) || lastDrawnIndex === -1) {
						// There was a gap and this is the first point after the gap
						ctx.moveTo(currentVM.x, currentVM.y);
					} else {
						// Line to next point
						helpers.canvas.lineTo(ctx, previous._view, current._view);
					}
					lastDrawnIndex = index;
				}
			}
		}

		ctx.stroke();
		ctx.restore();
	}
});


/***/ }),

/***/ "./node_modules/chart.js/src/elements/element.point.js":
/*!*************************************************************!*\
  !*** ./node_modules/chart.js/src/elements/element.point.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var defaults = __webpack_require__(/*! ../core/core.defaults */ "./node_modules/chart.js/src/core/core.defaults.js");
var Element = __webpack_require__(/*! ../core/core.element */ "./node_modules/chart.js/src/core/core.element.js");
var helpers = __webpack_require__(/*! ../helpers/index */ "./node_modules/chart.js/src/helpers/index.js");

var defaultColor = defaults.global.defaultColor;

defaults._set('global', {
	elements: {
		point: {
			radius: 3,
			pointStyle: 'circle',
			backgroundColor: defaultColor,
			borderColor: defaultColor,
			borderWidth: 1,
			// Hover
			hitRadius: 1,
			hoverRadius: 4,
			hoverBorderWidth: 1
		}
	}
});

function xRange(mouseX) {
	var vm = this._view;
	return vm ? (Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius) : false;
}

function yRange(mouseY) {
	var vm = this._view;
	return vm ? (Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius) : false;
}

module.exports = Element.extend({
	inRange: function(mouseX, mouseY) {
		var vm = this._view;
		return vm ? ((Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2)) < Math.pow(vm.hitRadius + vm.radius, 2)) : false;
	},

	inLabelRange: xRange,
	inXRange: xRange,
	inYRange: yRange,

	getCenterPoint: function() {
		var vm = this._view;
		return {
			x: vm.x,
			y: vm.y
		};
	},

	getArea: function() {
		return Math.PI * Math.pow(this._view.radius, 2);
	},

	tooltipPosition: function() {
		var vm = this._view;
		return {
			x: vm.x,
			y: vm.y,
			padding: vm.radius + vm.borderWidth
		};
	},

	draw: function(chartArea) {
		var vm = this._view;
		var model = this._model;
		var ctx = this._chart.ctx;
		var pointStyle = vm.pointStyle;
		var rotation = vm.rotation;
		var radius = vm.radius;
		var x = vm.x;
		var y = vm.y;
		var errMargin = 1.01; // 1.01 is margin for Accumulated error. (Especially Edge, IE.)

		if (vm.skip) {
			return;
		}

		// Clipping for Points.
		if (chartArea === undefined || (model.x >= chartArea.left && chartArea.right * errMargin >= model.x && model.y >= chartArea.top && chartArea.bottom * errMargin >= model.y)) {
			ctx.strokeStyle = vm.borderColor || defaultColor;
			ctx.lineWidth = helpers.valueOrDefault(vm.borderWidth, defaults.global.elements.point.borderWidth);
			ctx.fillStyle = vm.backgroundColor || defaultColor;
			helpers.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);
		}
	}
});


/***/ }),

/***/ "./node_modules/chart.js/src/elements/element.rectangle.js":
/*!*****************************************************************!*\
  !*** ./node_modules/chart.js/src/elements/element.rectangle.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var defaults = __webpack_require__(/*! ../core/core.defaults */ "./node_modules/chart.js/src/core/core.defaults.js");
var Element = __webpack_require__(/*! ../core/core.element */ "./node_modules/chart.js/src/core/core.element.js");

defaults._set('global', {
	elements: {
		rectangle: {
			backgroundColor: defaults.global.defaultColor,
			borderColor: defaults.global.defaultColor,
			borderSkipped: 'bottom',
			borderWidth: 0
		}
	}
});

function isVertical(bar) {
	return bar._view.width !== undefined;
}

/**
 * Helper function to get the bounds of the bar regardless of the orientation
 * @param bar {Chart.Element.Rectangle} the bar
 * @return {Bounds} bounds of the bar
 * @private
 */
function getBarBounds(bar) {
	var vm = bar._view;
	var x1, x2, y1, y2;

	if (isVertical(bar)) {
		// vertical
		var halfWidth = vm.width / 2;
		x1 = vm.x - halfWidth;
		x2 = vm.x + halfWidth;
		y1 = Math.min(vm.y, vm.base);
		y2 = Math.max(vm.y, vm.base);
	} else {
		// horizontal bar
		var halfHeight = vm.height / 2;
		x1 = Math.min(vm.x, vm.base);
		x2 = Math.max(vm.x, vm.base);
		y1 = vm.y - halfHeight;
		y2 = vm.y + halfHeight;
	}

	return {
		left: x1,
		top: y1,
		right: x2,
		bottom: y2
	};
}

module.exports = Element.extend({
	draw: function() {
		var ctx = this._chart.ctx;
		var vm = this._view;
		var left, right, top, bottom, signX, signY, borderSkipped;
		var borderWidth = vm.borderWidth;

		if (!vm.horizontal) {
			// bar
			left = vm.x - vm.width / 2;
			right = vm.x + vm.width / 2;
			top = vm.y;
			bottom = vm.base;
			signX = 1;
			signY = bottom > top ? 1 : -1;
			borderSkipped = vm.borderSkipped || 'bottom';
		} else {
			// horizontal bar
			left = vm.base;
			right = vm.x;
			top = vm.y - vm.height / 2;
			bottom = vm.y + vm.height / 2;
			signX = right > left ? 1 : -1;
			signY = 1;
			borderSkipped = vm.borderSkipped || 'left';
		}

		// Canvas doesn't allow us to stroke inside the width so we can
		// adjust the sizes to fit if we're setting a stroke on the line
		if (borderWidth) {
			// borderWidth shold be less than bar width and bar height.
			var barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));
			borderWidth = borderWidth > barSize ? barSize : borderWidth;
			var halfStroke = borderWidth / 2;
			// Adjust borderWidth when bar top position is near vm.base(zero).
			var borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);
			var borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);
			var borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);
			var borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);
			// not become a vertical line?
			if (borderLeft !== borderRight) {
				top = borderTop;
				bottom = borderBottom;
			}
			// not become a horizontal line?
			if (borderTop !== borderBottom) {
				left = borderLeft;
				right = borderRight;
			}
		}

		ctx.beginPath();
		ctx.fillStyle = vm.backgroundColor;
		ctx.strokeStyle = vm.borderColor;
		ctx.lineWidth = borderWidth;

		// Corner points, from bottom-left to bottom-right clockwise
		// | 1 2 |
		// | 0 3 |
		var corners = [
			[left, bottom],
			[left, top],
			[right, top],
			[right, bottom]
		];

		// Find first (starting) corner with fallback to 'bottom'
		var borders = ['bottom', 'left', 'top', 'right'];
		var startCorner = borders.indexOf(borderSkipped, 0);
		if (startCorner === -1) {
			startCorner = 0;
		}

		function cornerAt(index) {
			return corners[(startCorner + index) % 4];
		}

		// Draw rectangle from 'startCorner'
		var corner = cornerAt(0);
		ctx.moveTo(corner[0], corner[1]);

		for (var i = 1; i < 4; i++) {
			corner = cornerAt(i);
			ctx.lineTo(corner[0], corner[1]);
		}

		ctx.fill();
		if (borderWidth) {
			ctx.stroke();
		}
	},

	height: function() {
		var vm = this._view;
		return vm.base - vm.y;
	},

	inRange: function(mouseX, mouseY) {
		var inRange = false;

		if (this._view) {
			var bounds = getBarBounds(this);
			inRange = mouseX >= bounds.left && mouseX <= bounds.right && mouseY >= bounds.top && mouseY <= bounds.bottom;
		}

		return inRange;
	},

	inLabelRange: function(mouseX, mouseY) {
		var me = this;
		if (!me._view) {
			return false;
		}

		var inRange = false;
		var bounds = getBarBounds(me);

		if (isVertical(me)) {
			inRange = mouseX >= bounds.left && mouseX <= bounds.right;
		} else {
			inRange = mouseY >= bounds.top && mouseY <= bounds.bottom;
		}

		return inRange;
	},

	inXRange: function(mouseX) {
		var bounds = getBarBounds(this);
		return mouseX >= bounds.left && mouseX <= bounds.right;
	},

	inYRange: function(mouseY) {
		var bounds = getBarBounds(this);
		return mouseY >= bounds.top && mouseY <= bounds.bottom;
	},

	getCenterPoint: function() {
		var vm = this._view;
		var x, y;
		if (isVertical(this)) {
			x = vm.x;
			y = (vm.y + vm.base) / 2;
		} else {
			x = (vm.x + vm.base) / 2;
			y = vm.y;
		}

		return {x: x, y: y};
	},

	getArea: function() {
		var vm = this._view;
		return vm.width * Math.abs(vm.y - vm.base);
	},

	tooltipPosition: function() {
		var vm = this._view;
		return {
			x: vm.x,
			y: vm.y
		};
	}
});


/***/ }),

/***/ "./node_modules/chart.js/src/elements/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/chart.js/src/elements/index.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = {};
module.exports.Arc = __webpack_require__(/*! ./element.arc */ "./node_modules/chart.js/src/elements/element.arc.js");
module.exports.Line = __webpack_require__(/*! ./element.line */ "./node_modules/chart.js/src/elements/element.line.js");
module.exports.Point = __webpack_require__(/*! ./element.point */ "./node_modules/chart.js/src/elements/element.point.js");
module.exports.Rectangle = __webpack_require__(/*! ./element.rectangle */ "./node_modules/chart.js/src/elements/element.rectangle.js");


/***/ }),

/***/ "./node_modules/chart.js/src/helpers/helpers.canvas.js":
/*!*************************************************************!*\
  !*** ./node_modules/chart.js/src/helpers/helpers.canvas.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var helpers = __webpack_require__(/*! ./helpers.core */ "./node_modules/chart.js/src/helpers/helpers.core.js");

/**
 * @namespace Chart.helpers.canvas
 */
var exports = module.exports = {
	/**
	 * Clears the entire canvas associated to the given `chart`.
	 * @param {Chart} chart - The chart for which to clear the canvas.
	 */
	clear: function(chart) {
		chart.ctx.clearRect(0, 0, chart.width, chart.height);
	},

	/**
	 * Creates a "path" for a rectangle with rounded corners at position (x, y) with a
	 * given size (width, height) and the same `radius` for all corners.
	 * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.
	 * @param {Number} x - The x axis of the coordinate for the rectangle starting point.
	 * @param {Number} y - The y axis of the coordinate for the rectangle starting point.
	 * @param {Number} width - The rectangle's width.
	 * @param {Number} height - The rectangle's height.
	 * @param {Number} radius - The rounded amount (in pixels) for the four corners.
	 * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?
	 */
	roundedRect: function(ctx, x, y, width, height, radius) {
		if (radius) {
			// NOTE(SB) `epsilon` helps to prevent minor artifacts appearing
			// on Chrome when `r` is exactly half the height or the width.
			var epsilon = 0.0000001;
			var r = Math.min(radius, (height / 2) - epsilon, (width / 2) - epsilon);

			ctx.moveTo(x + r, y);
			ctx.lineTo(x + width - r, y);
			ctx.arcTo(x + width, y, x + width, y + r, r);
			ctx.lineTo(x + width, y + height - r);
			ctx.arcTo(x + width, y + height, x + width - r, y + height, r);
			ctx.lineTo(x + r, y + height);
			ctx.arcTo(x, y + height, x, y + height - r, r);
			ctx.lineTo(x, y + r);
			ctx.arcTo(x, y, x + r, y, r);
			ctx.closePath();
			ctx.moveTo(x, y);
		} else {
			ctx.rect(x, y, width, height);
		}
	},

	drawPoint: function(ctx, style, radius, x, y, rotation) {
		var type, edgeLength, xOffset, yOffset, height, size;
		rotation = rotation || 0;

		if (style && typeof style === 'object') {
			type = style.toString();
			if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {
				ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);
				return;
			}
		}

		if (isNaN(radius) || radius <= 0) {
			return;
		}

		ctx.save();
		ctx.translate(x, y);
		ctx.rotate(rotation * Math.PI / 180);
		ctx.beginPath();

		switch (style) {
		// Default includes circle
		default:
			ctx.arc(0, 0, radius, 0, Math.PI * 2);
			ctx.closePath();
			break;
		case 'triangle':
			edgeLength = 3 * radius / Math.sqrt(3);
			height = edgeLength * Math.sqrt(3) / 2;
			ctx.moveTo(-edgeLength / 2, height / 3);
			ctx.lineTo(edgeLength / 2, height / 3);
			ctx.lineTo(0, -2 * height / 3);
			ctx.closePath();
			break;
		case 'rect':
			size = 1 / Math.SQRT2 * radius;
			ctx.rect(-size, -size, 2 * size, 2 * size);
			break;
		case 'rectRounded':
			var offset = radius / Math.SQRT2;
			var leftX = -offset;
			var topY = -offset;
			var sideSize = Math.SQRT2 * radius;

			// NOTE(SB) the rounded rect implementation changed to use `arcTo`
			// instead of `quadraticCurveTo` since it generates better results
			// when rect is almost a circle. 0.425 (instead of 0.5) produces
			// results visually closer to the previous impl.
			this.roundedRect(ctx, leftX, topY, sideSize, sideSize, radius * 0.425);
			break;
		case 'rectRot':
			size = 1 / Math.SQRT2 * radius;
			ctx.moveTo(-size, 0);
			ctx.lineTo(0, size);
			ctx.lineTo(size, 0);
			ctx.lineTo(0, -size);
			ctx.closePath();
			break;
		case 'cross':
			ctx.moveTo(0, radius);
			ctx.lineTo(0, -radius);
			ctx.moveTo(-radius, 0);
			ctx.lineTo(radius, 0);
			break;
		case 'crossRot':
			xOffset = Math.cos(Math.PI / 4) * radius;
			yOffset = Math.sin(Math.PI / 4) * radius;
			ctx.moveTo(-xOffset, -yOffset);
			ctx.lineTo(xOffset, yOffset);
			ctx.moveTo(-xOffset, yOffset);
			ctx.lineTo(xOffset, -yOffset);
			break;
		case 'star':
			ctx.moveTo(0, radius);
			ctx.lineTo(0, -radius);
			ctx.moveTo(-radius, 0);
			ctx.lineTo(radius, 0);
			xOffset = Math.cos(Math.PI / 4) * radius;
			yOffset = Math.sin(Math.PI / 4) * radius;
			ctx.moveTo(-xOffset, -yOffset);
			ctx.lineTo(xOffset, yOffset);
			ctx.moveTo(-xOffset, yOffset);
			ctx.lineTo(xOffset, -yOffset);
			break;
		case 'line':
			ctx.moveTo(-radius, 0);
			ctx.lineTo(radius, 0);
			break;
		case 'dash':
			ctx.moveTo(0, 0);
			ctx.lineTo(radius, 0);
			break;
		}

		ctx.fill();
		ctx.stroke();
		ctx.restore();
	},

	clipArea: function(ctx, area) {
		ctx.save();
		ctx.beginPath();
		ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);
		ctx.clip();
	},

	unclipArea: function(ctx) {
		ctx.restore();
	},

	lineTo: function(ctx, previous, target, flip) {
		if (target.steppedLine) {
			if ((target.steppedLine === 'after' && !flip) || (target.steppedLine !== 'after' && flip)) {
				ctx.lineTo(previous.x, target.y);
			} else {
				ctx.lineTo(target.x, previous.y);
			}
			ctx.lineTo(target.x, target.y);
			return;
		}

		if (!target.tension) {
			ctx.lineTo(target.x, target.y);
			return;
		}

		ctx.bezierCurveTo(
			flip ? previous.controlPointPreviousX : previous.controlPointNextX,
			flip ? previous.controlPointPreviousY : previous.controlPointNextY,
			flip ? target.controlPointNextX : target.controlPointPreviousX,
			flip ? target.controlPointNextY : target.controlPointPreviousY,
			target.x,
			target.y);
	}
};

// DEPRECATIONS

/**
 * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.
 * @namespace Chart.helpers.clear
 * @deprecated since version 2.7.0
 * @todo remove at version 3
 * @private
 */
helpers.clear = exports.clear;

/**
 * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.
 * @namespace Chart.helpers.drawRoundedRectangle
 * @deprecated since version 2.7.0
 * @todo remove at version 3
 * @private
 */
helpers.drawRoundedRectangle = function(ctx) {
	ctx.beginPath();
	exports.roundedRect.apply(exports, arguments);
};


/***/ }),

/***/ "./node_modules/chart.js/src/helpers/helpers.core.js":
/*!***********************************************************!*\
  !*** ./node_modules/chart.js/src/helpers/helpers.core.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * @namespace Chart.helpers
 */
var helpers = {
	/**
	 * An empty function that can be used, for example, for optional callback.
	 */
	noop: function() {},

	/**
	 * Returns a unique id, sequentially generated from a global variable.
	 * @returns {Number}
	 * @function
	 */
	uid: (function() {
		var id = 0;
		return function() {
			return id++;
		};
	}()),

	/**
	 * Returns true if `value` is neither null nor undefined, else returns false.
	 * @param {*} value - The value to test.
	 * @returns {Boolean}
	 * @since 2.7.0
	 */
	isNullOrUndef: function(value) {
		return value === null || typeof value === 'undefined';
	},

	/**
	 * Returns true if `value` is an array, else returns false.
	 * @param {*} value - The value to test.
	 * @returns {Boolean}
	 * @function
	 */
	isArray: Array.isArray ? Array.isArray : function(value) {
		return Object.prototype.toString.call(value) === '[object Array]';
	},

	/**
	 * Returns true if `value` is an object (excluding null), else returns false.
	 * @param {*} value - The value to test.
	 * @returns {Boolean}
	 * @since 2.7.0
	 */
	isObject: function(value) {
		return value !== null && Object.prototype.toString.call(value) === '[object Object]';
	},

	/**
	 * Returns `value` if defined, else returns `defaultValue`.
	 * @param {*} value - The value to return if defined.
	 * @param {*} defaultValue - The value to return if `value` is undefined.
	 * @returns {*}
	 */
	valueOrDefault: function(value, defaultValue) {
		return typeof value === 'undefined' ? defaultValue : value;
	},

	/**
	 * Returns value at the given `index` in array if defined, else returns `defaultValue`.
	 * @param {Array} value - The array to lookup for value at `index`.
	 * @param {Number} index - The index in `value` to lookup for value.
	 * @param {*} defaultValue - The value to return if `value[index]` is undefined.
	 * @returns {*}
	 */
	valueAtIndexOrDefault: function(value, index, defaultValue) {
		return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);
	},

	/**
	 * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the
	 * value returned by `fn`. If `fn` is not a function, this method returns undefined.
	 * @param {Function} fn - The function to call.
	 * @param {Array|undefined|null} args - The arguments with which `fn` should be called.
	 * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.
	 * @returns {*}
	 */
	callback: function(fn, args, thisArg) {
		if (fn && typeof fn.call === 'function') {
			return fn.apply(thisArg, args);
		}
	},

	/**
	 * Note(SB) for performance sake, this method should only be used when loopable type
	 * is unknown or in none intensive code (not called often and small loopable). Else
	 * it's preferable to use a regular for() loop and save extra function calls.
	 * @param {Object|Array} loopable - The object or array to be iterated.
	 * @param {Function} fn - The function to call for each item.
	 * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.
	 * @param {Boolean} [reverse] - If true, iterates backward on the loopable.
	 */
	each: function(loopable, fn, thisArg, reverse) {
		var i, len, keys;
		if (helpers.isArray(loopable)) {
			len = loopable.length;
			if (reverse) {
				for (i = len - 1; i >= 0; i--) {
					fn.call(thisArg, loopable[i], i);
				}
			} else {
				for (i = 0; i < len; i++) {
					fn.call(thisArg, loopable[i], i);
				}
			}
		} else if (helpers.isObject(loopable)) {
			keys = Object.keys(loopable);
			len = keys.length;
			for (i = 0; i < len; i++) {
				fn.call(thisArg, loopable[keys[i]], keys[i]);
			}
		}
	},

	/**
	 * Returns true if the `a0` and `a1` arrays have the same content, else returns false.
	 * @see http://stackoverflow.com/a/14853974
	 * @param {Array} a0 - The array to compare
	 * @param {Array} a1 - The array to compare
	 * @returns {Boolean}
	 */
	arrayEquals: function(a0, a1) {
		var i, ilen, v0, v1;

		if (!a0 || !a1 || a0.length !== a1.length) {
			return false;
		}

		for (i = 0, ilen = a0.length; i < ilen; ++i) {
			v0 = a0[i];
			v1 = a1[i];

			if (v0 instanceof Array && v1 instanceof Array) {
				if (!helpers.arrayEquals(v0, v1)) {
					return false;
				}
			} else if (v0 !== v1) {
				// NOTE: two different object instances will never be equal: {x:20} != {x:20}
				return false;
			}
		}

		return true;
	},

	/**
	 * Returns a deep copy of `source` without keeping references on objects and arrays.
	 * @param {*} source - The value to clone.
	 * @returns {*}
	 */
	clone: function(source) {
		if (helpers.isArray(source)) {
			return source.map(helpers.clone);
		}

		if (helpers.isObject(source)) {
			var target = {};
			var keys = Object.keys(source);
			var klen = keys.length;
			var k = 0;

			for (; k < klen; ++k) {
				target[keys[k]] = helpers.clone(source[keys[k]]);
			}

			return target;
		}

		return source;
	},

	/**
	 * The default merger when Chart.helpers.merge is called without merger option.
	 * Note(SB): this method is also used by configMerge and scaleMerge as fallback.
	 * @private
	 */
	_merger: function(key, target, source, options) {
		var tval = target[key];
		var sval = source[key];

		if (helpers.isObject(tval) && helpers.isObject(sval)) {
			helpers.merge(tval, sval, options);
		} else {
			target[key] = helpers.clone(sval);
		}
	},

	/**
	 * Merges source[key] in target[key] only if target[key] is undefined.
	 * @private
	 */
	_mergerIf: function(key, target, source) {
		var tval = target[key];
		var sval = source[key];

		if (helpers.isObject(tval) && helpers.isObject(sval)) {
			helpers.mergeIf(tval, sval);
		} else if (!target.hasOwnProperty(key)) {
			target[key] = helpers.clone(sval);
		}
	},

	/**
	 * Recursively deep copies `source` properties into `target` with the given `options`.
	 * IMPORTANT: `target` is not cloned and will be updated with `source` properties.
	 * @param {Object} target - The target object in which all sources are merged into.
	 * @param {Object|Array(Object)} source - Object(s) to merge into `target`.
	 * @param {Object} [options] - Merging options:
	 * @param {Function} [options.merger] - The merge method (key, target, source, options)
	 * @returns {Object} The `target` object.
	 */
	merge: function(target, source, options) {
		var sources = helpers.isArray(source) ? source : [source];
		var ilen = sources.length;
		var merge, i, keys, klen, k;

		if (!helpers.isObject(target)) {
			return target;
		}

		options = options || {};
		merge = options.merger || helpers._merger;

		for (i = 0; i < ilen; ++i) {
			source = sources[i];
			if (!helpers.isObject(source)) {
				continue;
			}

			keys = Object.keys(source);
			for (k = 0, klen = keys.length; k < klen; ++k) {
				merge(keys[k], target, source, options);
			}
		}

		return target;
	},

	/**
	 * Recursively deep copies `source` properties into `target` *only* if not defined in target.
	 * IMPORTANT: `target` is not cloned and will be updated with `source` properties.
	 * @param {Object} target - The target object in which all sources are merged into.
	 * @param {Object|Array(Object)} source - Object(s) to merge into `target`.
	 * @returns {Object} The `target` object.
	 */
	mergeIf: function(target, source) {
		return helpers.merge(target, source, {merger: helpers._mergerIf});
	},

	/**
	 * Applies the contents of two or more objects together into the first object.
	 * @param {Object} target - The target object in which all objects are merged into.
	 * @param {Object} arg1 - Object containing additional properties to merge in target.
	 * @param {Object} argN - Additional objects containing properties to merge in target.
	 * @returns {Object} The `target` object.
	 */
	extend: function(target) {
		var setFn = function(value, key) {
			target[key] = value;
		};
		for (var i = 1, ilen = arguments.length; i < ilen; ++i) {
			helpers.each(arguments[i], setFn);
		}
		return target;
	},

	/**
	 * Basic javascript inheritance based on the model created in Backbone.js
	 */
	inherits: function(extensions) {
		var me = this;
		var ChartElement = (extensions && extensions.hasOwnProperty('constructor')) ? extensions.constructor : function() {
			return me.apply(this, arguments);
		};

		var Surrogate = function() {
			this.constructor = ChartElement;
		};

		Surrogate.prototype = me.prototype;
		ChartElement.prototype = new Surrogate();
		ChartElement.extend = helpers.inherits;

		if (extensions) {
			helpers.extend(ChartElement.prototype, extensions);
		}

		ChartElement.__super__ = me.prototype;
		return ChartElement;
	}
};

module.exports = helpers;

// DEPRECATIONS

/**
 * Provided for backward compatibility, use Chart.helpers.callback instead.
 * @function Chart.helpers.callCallback
 * @deprecated since version 2.6.0
 * @todo remove at version 3
 * @private
 */
helpers.callCallback = helpers.callback;

/**
 * Provided for backward compatibility, use Array.prototype.indexOf instead.
 * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+
 * @function Chart.helpers.indexOf
 * @deprecated since version 2.7.0
 * @todo remove at version 3
 * @private
 */
helpers.indexOf = function(array, item, fromIndex) {
	return Array.prototype.indexOf.call(array, item, fromIndex);
};

/**
 * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.
 * @function Chart.helpers.getValueOrDefault
 * @deprecated since version 2.7.0
 * @todo remove at version 3
 * @private
 */
helpers.getValueOrDefault = helpers.valueOrDefault;

/**
 * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.
 * @function Chart.helpers.getValueAtIndexOrDefault
 * @deprecated since version 2.7.0
 * @todo remove at version 3
 * @private
 */
helpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;


/***/ }),

/***/ "./node_modules/chart.js/src/helpers/helpers.easing.js":
/*!*************************************************************!*\
  !*** ./node_modules/chart.js/src/helpers/helpers.easing.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var helpers = __webpack_require__(/*! ./helpers.core */ "./node_modules/chart.js/src/helpers/helpers.core.js");

/**
 * Easing functions adapted from Robert Penner's easing equations.
 * @namespace Chart.helpers.easingEffects
 * @see http://www.robertpenner.com/easing/
 */
var effects = {
	linear: function(t) {
		return t;
	},

	easeInQuad: function(t) {
		return t * t;
	},

	easeOutQuad: function(t) {
		return -t * (t - 2);
	},

	easeInOutQuad: function(t) {
		if ((t /= 0.5) < 1) {
			return 0.5 * t * t;
		}
		return -0.5 * ((--t) * (t - 2) - 1);
	},

	easeInCubic: function(t) {
		return t * t * t;
	},

	easeOutCubic: function(t) {
		return (t = t - 1) * t * t + 1;
	},

	easeInOutCubic: function(t) {
		if ((t /= 0.5) < 1) {
			return 0.5 * t * t * t;
		}
		return 0.5 * ((t -= 2) * t * t + 2);
	},

	easeInQuart: function(t) {
		return t * t * t * t;
	},

	easeOutQuart: function(t) {
		return -((t = t - 1) * t * t * t - 1);
	},

	easeInOutQuart: function(t) {
		if ((t /= 0.5) < 1) {
			return 0.5 * t * t * t * t;
		}
		return -0.5 * ((t -= 2) * t * t * t - 2);
	},

	easeInQuint: function(t) {
		return t * t * t * t * t;
	},

	easeOutQuint: function(t) {
		return (t = t - 1) * t * t * t * t + 1;
	},

	easeInOutQuint: function(t) {
		if ((t /= 0.5) < 1) {
			return 0.5 * t * t * t * t * t;
		}
		return 0.5 * ((t -= 2) * t * t * t * t + 2);
	},

	easeInSine: function(t) {
		return -Math.cos(t * (Math.PI / 2)) + 1;
	},

	easeOutSine: function(t) {
		return Math.sin(t * (Math.PI / 2));
	},

	easeInOutSine: function(t) {
		return -0.5 * (Math.cos(Math.PI * t) - 1);
	},

	easeInExpo: function(t) {
		return (t === 0) ? 0 : Math.pow(2, 10 * (t - 1));
	},

	easeOutExpo: function(t) {
		return (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1;
	},

	easeInOutExpo: function(t) {
		if (t === 0) {
			return 0;
		}
		if (t === 1) {
			return 1;
		}
		if ((t /= 0.5) < 1) {
			return 0.5 * Math.pow(2, 10 * (t - 1));
		}
		return 0.5 * (-Math.pow(2, -10 * --t) + 2);
	},

	easeInCirc: function(t) {
		if (t >= 1) {
			return t;
		}
		return -(Math.sqrt(1 - t * t) - 1);
	},

	easeOutCirc: function(t) {
		return Math.sqrt(1 - (t = t - 1) * t);
	},

	easeInOutCirc: function(t) {
		if ((t /= 0.5) < 1) {
			return -0.5 * (Math.sqrt(1 - t * t) - 1);
		}
		return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);
	},

	easeInElastic: function(t) {
		var s = 1.70158;
		var p = 0;
		var a = 1;
		if (t === 0) {
			return 0;
		}
		if (t === 1) {
			return 1;
		}
		if (!p) {
			p = 0.3;
		}
		if (a < 1) {
			a = 1;
			s = p / 4;
		} else {
			s = p / (2 * Math.PI) * Math.asin(1 / a);
		}
		return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));
	},

	easeOutElastic: function(t) {
		var s = 1.70158;
		var p = 0;
		var a = 1;
		if (t === 0) {
			return 0;
		}
		if (t === 1) {
			return 1;
		}
		if (!p) {
			p = 0.3;
		}
		if (a < 1) {
			a = 1;
			s = p / 4;
		} else {
			s = p / (2 * Math.PI) * Math.asin(1 / a);
		}
		return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;
	},

	easeInOutElastic: function(t) {
		var s = 1.70158;
		var p = 0;
		var a = 1;
		if (t === 0) {
			return 0;
		}
		if ((t /= 0.5) === 2) {
			return 1;
		}
		if (!p) {
			p = 0.45;
		}
		if (a < 1) {
			a = 1;
			s = p / 4;
		} else {
			s = p / (2 * Math.PI) * Math.asin(1 / a);
		}
		if (t < 1) {
			return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));
		}
		return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;
	},
	easeInBack: function(t) {
		var s = 1.70158;
		return t * t * ((s + 1) * t - s);
	},

	easeOutBack: function(t) {
		var s = 1.70158;
		return (t = t - 1) * t * ((s + 1) * t + s) + 1;
	},

	easeInOutBack: function(t) {
		var s = 1.70158;
		if ((t /= 0.5) < 1) {
			return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));
		}
		return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);
	},

	easeInBounce: function(t) {
		return 1 - effects.easeOutBounce(1 - t);
	},

	easeOutBounce: function(t) {
		if (t < (1 / 2.75)) {
			return 7.5625 * t * t;
		}
		if (t < (2 / 2.75)) {
			return 7.5625 * (t -= (1.5 / 2.75)) * t + 0.75;
		}
		if (t < (2.5 / 2.75)) {
			return 7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375;
		}
		return 7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375;
	},

	easeInOutBounce: function(t) {
		if (t < 0.5) {
			return effects.easeInBounce(t * 2) * 0.5;
		}
		return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;
	}
};

module.exports = {
	effects: effects
};

// DEPRECATIONS

/**
 * Provided for backward compatibility, use Chart.helpers.easing.effects instead.
 * @function Chart.helpers.easingEffects
 * @deprecated since version 2.7.0
 * @todo remove at version 3
 * @private
 */
helpers.easingEffects = effects;


/***/ }),

/***/ "./node_modules/chart.js/src/helpers/helpers.options.js":
/*!**************************************************************!*\
  !*** ./node_modules/chart.js/src/helpers/helpers.options.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var helpers = __webpack_require__(/*! ./helpers.core */ "./node_modules/chart.js/src/helpers/helpers.core.js");

/**
 * @alias Chart.helpers.options
 * @namespace
 */
module.exports = {
	/**
	 * Converts the given line height `value` in pixels for a specific font `size`.
	 * @param {Number|String} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').
	 * @param {Number} size - The font size (in pixels) used to resolve relative `value`.
	 * @returns {Number} The effective line height in pixels (size * 1.2 if value is invalid).
	 * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height
	 * @since 2.7.0
	 */
	toLineHeight: function(value, size) {
		var matches = ('' + value).match(/^(normal|(\d+(?:\.\d+)?)(px|em|%)?)$/);
		if (!matches || matches[1] === 'normal') {
			return size * 1.2;
		}

		value = +matches[2];

		switch (matches[3]) {
		case 'px':
			return value;
		case '%':
			value /= 100;
			break;
		default:
			break;
		}

		return size * value;
	},

	/**
	 * Converts the given value into a padding object with pre-computed width/height.
	 * @param {Number|Object} value - If a number, set the value to all TRBL component,
	 *  else, if and object, use defined properties and sets undefined ones to 0.
	 * @returns {Object} The padding values (top, right, bottom, left, width, height)
	 * @since 2.7.0
	 */
	toPadding: function(value) {
		var t, r, b, l;

		if (helpers.isObject(value)) {
			t = +value.top || 0;
			r = +value.right || 0;
			b = +value.bottom || 0;
			l = +value.left || 0;
		} else {
			t = r = b = l = +value || 0;
		}

		return {
			top: t,
			right: r,
			bottom: b,
			left: l,
			height: t + b,
			width: l + r
		};
	},

	/**
	 * Evaluates the given `inputs` sequentially and returns the first defined value.
	 * @param {Array[]} inputs - An array of values, falling back to the last value.
	 * @param {Object} [context] - If defined and the current value is a function, the value
	 * is called with `context` as first argument and the result becomes the new input.
	 * @param {Number} [index] - If defined and the current value is an array, the value
	 * at `index` become the new input.
	 * @since 2.7.0
	 */
	resolve: function(inputs, context, index) {
		var i, ilen, value;

		for (i = 0, ilen = inputs.length; i < ilen; ++i) {
			value = inputs[i];
			if (value === undefined) {
				continue;
			}
			if (context !== undefined && typeof value === 'function') {
				value = value(context);
			}
			if (index !== undefined && helpers.isArray(value)) {
				value = value[index];
			}
			if (value !== undefined) {
				return value;
			}
		}
	}
};


/***/ }),

/***/ "./node_modules/chart.js/src/helpers/index.js":
/*!****************************************************!*\
  !*** ./node_modules/chart.js/src/helpers/index.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = __webpack_require__(/*! ./helpers.core */ "./node_modules/chart.js/src/helpers/helpers.core.js");
module.exports.easing = __webpack_require__(/*! ./helpers.easing */ "./node_modules/chart.js/src/helpers/helpers.easing.js");
module.exports.canvas = __webpack_require__(/*! ./helpers.canvas */ "./node_modules/chart.js/src/helpers/helpers.canvas.js");
module.exports.options = __webpack_require__(/*! ./helpers.options */ "./node_modules/chart.js/src/helpers/helpers.options.js");


/***/ }),

/***/ "./node_modules/chart.js/src/platforms/platform.basic.js":
/*!***************************************************************!*\
  !*** ./node_modules/chart.js/src/platforms/platform.basic.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Platform fallback implementation (minimal).
 * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939
 */

module.exports = {
	acquireContext: function(item) {
		if (item && item.canvas) {
			// Support for any object associated to a canvas (including a context2d)
			item = item.canvas;
		}

		return item && item.getContext('2d') || null;
	}
};


/***/ }),

/***/ "./node_modules/chart.js/src/platforms/platform.dom.js":
/*!*************************************************************!*\
  !*** ./node_modules/chart.js/src/platforms/platform.dom.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Chart.Platform implementation for targeting a web browser
 */



var helpers = __webpack_require__(/*! ../helpers/index */ "./node_modules/chart.js/src/helpers/index.js");

var EXPANDO_KEY = '$chartjs';
var CSS_PREFIX = 'chartjs-';
var CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';
var CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';
var ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];

/**
 * DOM event types -> Chart.js event types.
 * Note: only events with different types are mapped.
 * @see https://developer.mozilla.org/en-US/docs/Web/Events
 */
var EVENT_TYPES = {
	touchstart: 'mousedown',
	touchmove: 'mousemove',
	touchend: 'mouseup',
	pointerenter: 'mouseenter',
	pointerdown: 'mousedown',
	pointermove: 'mousemove',
	pointerup: 'mouseup',
	pointerleave: 'mouseout',
	pointerout: 'mouseout'
};

/**
 * The "used" size is the final value of a dimension property after all calculations have
 * been performed. This method uses the computed style of `element` but returns undefined
 * if the computed style is not expressed in pixels. That can happen in some cases where
 * `element` has a size relative to its parent and this last one is not yet displayed,
 * for example because of `display: none` on a parent node.
 * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value
 * @returns {Number} Size in pixels or undefined if unknown.
 */
function readUsedSize(element, property) {
	var value = helpers.getStyle(element, property);
	var matches = value && value.match(/^(\d+)(\.\d+)?px$/);
	return matches ? Number(matches[1]) : undefined;
}

/**
 * Initializes the canvas style and render size without modifying the canvas display size,
 * since responsiveness is handled by the controller.resize() method. The config is used
 * to determine the aspect ratio to apply in case no explicit height has been specified.
 */
function initCanvas(canvas, config) {
	var style = canvas.style;

	// NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it
	// returns null or '' if no explicit value has been set to the canvas attribute.
	var renderHeight = canvas.getAttribute('height');
	var renderWidth = canvas.getAttribute('width');

	// Chart.js modifies some canvas values that we want to restore on destroy
	canvas[EXPANDO_KEY] = {
		initial: {
			height: renderHeight,
			width: renderWidth,
			style: {
				display: style.display,
				height: style.height,
				width: style.width
			}
		}
	};

	// Force canvas to display as block to avoid extra space caused by inline
	// elements, which would interfere with the responsive resize process.
	// https://github.com/chartjs/Chart.js/issues/2538
	style.display = style.display || 'block';

	if (renderWidth === null || renderWidth === '') {
		var displayWidth = readUsedSize(canvas, 'width');
		if (displayWidth !== undefined) {
			canvas.width = displayWidth;
		}
	}

	if (renderHeight === null || renderHeight === '') {
		if (canvas.style.height === '') {
			// If no explicit render height and style height, let's apply the aspect ratio,
			// which one can be specified by the user but also by charts as default option
			// (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.
			canvas.height = canvas.width / (config.options.aspectRatio || 2);
		} else {
			var displayHeight = readUsedSize(canvas, 'height');
			if (displayWidth !== undefined) {
				canvas.height = displayHeight;
			}
		}
	}

	return canvas;
}

/**
 * Detects support for options object argument in addEventListener.
 * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support
 * @private
 */
var supportsEventListenerOptions = (function() {
	var supports = false;
	try {
		var options = Object.defineProperty({}, 'passive', {
			get: function() {
				supports = true;
			}
		});
		window.addEventListener('e', null, options);
	} catch (e) {
		// continue regardless of error
	}
	return supports;
}());

// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.
// https://github.com/chartjs/Chart.js/issues/4287
var eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;

function addEventListener(node, type, listener) {
	node.addEventListener(type, listener, eventListenerOptions);
}

function removeEventListener(node, type, listener) {
	node.removeEventListener(type, listener, eventListenerOptions);
}

function createEvent(type, chart, x, y, nativeEvent) {
	return {
		type: type,
		chart: chart,
		native: nativeEvent || null,
		x: x !== undefined ? x : null,
		y: y !== undefined ? y : null,
	};
}

function fromNativeEvent(event, chart) {
	var type = EVENT_TYPES[event.type] || event.type;
	var pos = helpers.getRelativePosition(event, chart);
	return createEvent(type, chart, pos.x, pos.y, event);
}

function throttled(fn, thisArg) {
	var ticking = false;
	var args = [];

	return function() {
		args = Array.prototype.slice.call(arguments);
		thisArg = thisArg || this;

		if (!ticking) {
			ticking = true;
			helpers.requestAnimFrame.call(window, function() {
				ticking = false;
				fn.apply(thisArg, args);
			});
		}
	};
}

// Implementation based on https://github.com/marcj/css-element-queries
function createResizer(handler) {
	var resizer = document.createElement('div');
	var cls = CSS_PREFIX + 'size-monitor';
	var maxSize = 1000000;
	var style =
		'position:absolute;' +
		'left:0;' +
		'top:0;' +
		'right:0;' +
		'bottom:0;' +
		'overflow:hidden;' +
		'pointer-events:none;' +
		'visibility:hidden;' +
		'z-index:-1;';

	resizer.style.cssText = style;
	resizer.className = cls;
	resizer.innerHTML =
		'<div class="' + cls + '-expand" style="' + style + '">' +
			'<div style="' +
				'position:absolute;' +
				'width:' + maxSize + 'px;' +
				'height:' + maxSize + 'px;' +
				'left:0;' +
				'top:0">' +
			'</div>' +
		'</div>' +
		'<div class="' + cls + '-shrink" style="' + style + '">' +
			'<div style="' +
				'position:absolute;' +
				'width:200%;' +
				'height:200%;' +
				'left:0; ' +
				'top:0">' +
			'</div>' +
		'</div>';

	var expand = resizer.childNodes[0];
	var shrink = resizer.childNodes[1];

	resizer._reset = function() {
		expand.scrollLeft = maxSize;
		expand.scrollTop = maxSize;
		shrink.scrollLeft = maxSize;
		shrink.scrollTop = maxSize;
	};
	var onScroll = function() {
		resizer._reset();
		handler();
	};

	addEventListener(expand, 'scroll', onScroll.bind(expand, 'expand'));
	addEventListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));

	return resizer;
}

// https://davidwalsh.name/detect-node-insertion
function watchForRender(node, handler) {
	var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});
	var proxy = expando.renderProxy = function(e) {
		if (e.animationName === CSS_RENDER_ANIMATION) {
			handler();
		}
	};

	helpers.each(ANIMATION_START_EVENTS, function(type) {
		addEventListener(node, type, proxy);
	});

	// #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class
	// is removed then added back immediately (same animation frame?). Accessing the
	// `offsetParent` property will force a reflow and re-evaluate the CSS animation.
	// https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics
	// https://github.com/chartjs/Chart.js/issues/4737
	expando.reflow = !!node.offsetParent;

	node.classList.add(CSS_RENDER_MONITOR);
}

function unwatchForRender(node) {
	var expando = node[EXPANDO_KEY] || {};
	var proxy = expando.renderProxy;

	if (proxy) {
		helpers.each(ANIMATION_START_EVENTS, function(type) {
			removeEventListener(node, type, proxy);
		});

		delete expando.renderProxy;
	}

	node.classList.remove(CSS_RENDER_MONITOR);
}

function addResizeListener(node, listener, chart) {
	var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});

	// Let's keep track of this added resizer and thus avoid DOM query when removing it.
	var resizer = expando.resizer = createResizer(throttled(function() {
		if (expando.resizer) {
			return listener(createEvent('resize', chart));
		}
	}));

	// The resizer needs to be attached to the node parent, so we first need to be
	// sure that `node` is attached to the DOM before injecting the resizer element.
	watchForRender(node, function() {
		if (expando.resizer) {
			var container = node.parentNode;
			if (container && container !== resizer.parentNode) {
				container.insertBefore(resizer, container.firstChild);
			}

			// The container size might have changed, let's reset the resizer state.
			resizer._reset();
		}
	});
}

function removeResizeListener(node) {
	var expando = node[EXPANDO_KEY] || {};
	var resizer = expando.resizer;

	delete expando.resizer;
	unwatchForRender(node);

	if (resizer && resizer.parentNode) {
		resizer.parentNode.removeChild(resizer);
	}
}

function injectCSS(platform, css) {
	// http://stackoverflow.com/q/3922139
	var style = platform._style || document.createElement('style');
	if (!platform._style) {
		platform._style = style;
		css = '/* Chart.js */\n' + css;
		style.setAttribute('type', 'text/css');
		document.getElementsByTagName('head')[0].appendChild(style);
	}

	style.appendChild(document.createTextNode(css));
}

module.exports = {
	/**
	 * This property holds whether this platform is enabled for the current environment.
	 * Currently used by platform.js to select the proper implementation.
	 * @private
	 */
	_enabled: typeof window !== 'undefined' && typeof document !== 'undefined',

	initialize: function() {
		var keyframes = 'from{opacity:0.99}to{opacity:1}';

		injectCSS(this,
			// DOM rendering detection
			// https://davidwalsh.name/detect-node-insertion
			'@-webkit-keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +
			'@keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +
			'.' + CSS_RENDER_MONITOR + '{' +
				'-webkit-animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +
				'animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +
			'}'
		);
	},

	acquireContext: function(item, config) {
		if (typeof item === 'string') {
			item = document.getElementById(item);
		} else if (item.length) {
			// Support for array based queries (such as jQuery)
			item = item[0];
		}

		if (item && item.canvas) {
			// Support for any object associated to a canvas (including a context2d)
			item = item.canvas;
		}

		// To prevent canvas fingerprinting, some add-ons undefine the getContext
		// method, for example: https://github.com/kkapsner/CanvasBlocker
		// https://github.com/chartjs/Chart.js/issues/2807
		var context = item && item.getContext && item.getContext('2d');

		// `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is
		// inside an iframe or when running in a protected environment. We could guess the
		// types from their toString() value but let's keep things flexible and assume it's
		// a sufficient condition if the item has a context2D which has item as `canvas`.
		// https://github.com/chartjs/Chart.js/issues/3887
		// https://github.com/chartjs/Chart.js/issues/4102
		// https://github.com/chartjs/Chart.js/issues/4152
		if (context && context.canvas === item) {
			initCanvas(item, config);
			return context;
		}

		return null;
	},

	releaseContext: function(context) {
		var canvas = context.canvas;
		if (!canvas[EXPANDO_KEY]) {
			return;
		}

		var initial = canvas[EXPANDO_KEY].initial;
		['height', 'width'].forEach(function(prop) {
			var value = initial[prop];
			if (helpers.isNullOrUndef(value)) {
				canvas.removeAttribute(prop);
			} else {
				canvas.setAttribute(prop, value);
			}
		});

		helpers.each(initial.style || {}, function(value, key) {
			canvas.style[key] = value;
		});

		// The canvas render size might have been changed (and thus the state stack discarded),
		// we can't use save() and restore() to restore the initial state. So make sure that at
		// least the canvas context is reset to the default state by setting the canvas width.
		// https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html
		canvas.width = canvas.width;

		delete canvas[EXPANDO_KEY];
	},

	addEventListener: function(chart, type, listener) {
		var canvas = chart.canvas;
		if (type === 'resize') {
			// Note: the resize event is not supported on all browsers.
			addResizeListener(canvas, listener, chart);
			return;
		}

		var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});
		var proxies = expando.proxies || (expando.proxies = {});
		var proxy = proxies[chart.id + '_' + type] = function(event) {
			listener(fromNativeEvent(event, chart));
		};

		addEventListener(canvas, type, proxy);
	},

	removeEventListener: function(chart, type, listener) {
		var canvas = chart.canvas;
		if (type === 'resize') {
			// Note: the resize event is not supported on all browsers.
			removeResizeListener(canvas, listener);
			return;
		}

		var expando = listener[EXPANDO_KEY] || {};
		var proxies = expando.proxies || {};
		var proxy = proxies[chart.id + '_' + type];
		if (!proxy) {
			return;
		}

		removeEventListener(canvas, type, proxy);
	}
};

// DEPRECATIONS

/**
 * Provided for backward compatibility, use EventTarget.addEventListener instead.
 * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+
 * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener
 * @function Chart.helpers.addEvent
 * @deprecated since version 2.7.0
 * @todo remove at version 3
 * @private
 */
helpers.addEvent = addEventListener;

/**
 * Provided for backward compatibility, use EventTarget.removeEventListener instead.
 * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+
 * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener
 * @function Chart.helpers.removeEvent
 * @deprecated since version 2.7.0
 * @todo remove at version 3
 * @private
 */
helpers.removeEvent = removeEventListener;


/***/ }),

/***/ "./node_modules/chart.js/src/platforms/platform.js":
/*!*********************************************************!*\
  !*** ./node_modules/chart.js/src/platforms/platform.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var helpers = __webpack_require__(/*! ../helpers/index */ "./node_modules/chart.js/src/helpers/index.js");
var basic = __webpack_require__(/*! ./platform.basic */ "./node_modules/chart.js/src/platforms/platform.basic.js");
var dom = __webpack_require__(/*! ./platform.dom */ "./node_modules/chart.js/src/platforms/platform.dom.js");

// @TODO Make possible to select another platform at build time.
var implementation = dom._enabled ? dom : basic;

/**
 * @namespace Chart.platform
 * @see https://chartjs.gitbooks.io/proposals/content/Platform.html
 * @since 2.4.0
 */
module.exports = helpers.extend({
	/**
	 * @since 2.7.0
	 */
	initialize: function() {},

	/**
	 * Called at chart construction time, returns a context2d instance implementing
	 * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.
	 * @param {*} item - The native item from which to acquire context (platform specific)
	 * @param {Object} options - The chart options
	 * @returns {CanvasRenderingContext2D} context2d instance
	 */
	acquireContext: function() {},

	/**
	 * Called at chart destruction time, releases any resources associated to the context
	 * previously returned by the acquireContext() method.
	 * @param {CanvasRenderingContext2D} context - The context2d instance
	 * @returns {Boolean} true if the method succeeded, else false
	 */
	releaseContext: function() {},

	/**
	 * Registers the specified listener on the given chart.
	 * @param {Chart} chart - Chart from which to listen for event
	 * @param {String} type - The ({@link IEvent}) type to listen for
	 * @param {Function} listener - Receives a notification (an object that implements
	 * the {@link IEvent} interface) when an event of the specified type occurs.
	 */
	addEventListener: function() {},

	/**
	 * Removes the specified listener previously registered with addEventListener.
	 * @param {Chart} chart -Chart from which to remove the listener
	 * @param {String} type - The ({@link IEvent}) type to remove
	 * @param {Function} listener - The listener function to remove from the event target.
	 */
	removeEventListener: function() {}

}, implementation);

/**
 * @interface IPlatform
 * Allows abstracting platform dependencies away from the chart
 * @borrows Chart.platform.acquireContext as acquireContext
 * @borrows Chart.platform.releaseContext as releaseContext
 * @borrows Chart.platform.addEventListener as addEventListener
 * @borrows Chart.platform.removeEventListener as removeEventListener
 */

/**
 * @interface IEvent
 * @prop {String} type - The event type name, possible values are:
 * 'contextmenu', 'mouseenter', 'mousedown', 'mousemove', 'mouseup', 'mouseout',
 * 'click', 'dblclick', 'keydown', 'keypress', 'keyup' and 'resize'
 * @prop {*} native - The original native event (null for emulated events, e.g. 'resize')
 * @prop {Number} x - The mouse x position, relative to the canvas (null for incompatible events)
 * @prop {Number} y - The mouse y position, relative to the canvas (null for incompatible events)
 */


/***/ }),

/***/ "./node_modules/chart.js/src/plugins/index.js":
/*!****************************************************!*\
  !*** ./node_modules/chart.js/src/plugins/index.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = {};
module.exports.filler = __webpack_require__(/*! ./plugin.filler */ "./node_modules/chart.js/src/plugins/plugin.filler.js");
module.exports.legend = __webpack_require__(/*! ./plugin.legend */ "./node_modules/chart.js/src/plugins/plugin.legend.js");
module.exports.title = __webpack_require__(/*! ./plugin.title */ "./node_modules/chart.js/src/plugins/plugin.title.js");


/***/ }),

/***/ "./node_modules/chart.js/src/plugins/plugin.filler.js":
/*!************************************************************!*\
  !*** ./node_modules/chart.js/src/plugins/plugin.filler.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Plugin based on discussion from the following Chart.js issues:
 * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569
 * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897
 */



var defaults = __webpack_require__(/*! ../core/core.defaults */ "./node_modules/chart.js/src/core/core.defaults.js");
var elements = __webpack_require__(/*! ../elements/index */ "./node_modules/chart.js/src/elements/index.js");
var helpers = __webpack_require__(/*! ../helpers/index */ "./node_modules/chart.js/src/helpers/index.js");

defaults._set('global', {
	plugins: {
		filler: {
			propagate: true
		}
	}
});

var mappers = {
	dataset: function(source) {
		var index = source.fill;
		var chart = source.chart;
		var meta = chart.getDatasetMeta(index);
		var visible = meta && chart.isDatasetVisible(index);
		var points = (visible && meta.dataset._children) || [];
		var length = points.length || 0;

		return !length ? null : function(point, i) {
			return (i < length && points[i]._view) || null;
		};
	},

	boundary: function(source) {
		var boundary = source.boundary;
		var x = boundary ? boundary.x : null;
		var y = boundary ? boundary.y : null;

		return function(point) {
			return {
				x: x === null ? point.x : x,
				y: y === null ? point.y : y,
			};
		};
	}
};

// @todo if (fill[0] === '#')
function decodeFill(el, index, count) {
	var model = el._model || {};
	var fill = model.fill;
	var target;

	if (fill === undefined) {
		fill = !!model.backgroundColor;
	}

	if (fill === false || fill === null) {
		return false;
	}

	if (fill === true) {
		return 'origin';
	}

	target = parseFloat(fill, 10);
	if (isFinite(target) && Math.floor(target) === target) {
		if (fill[0] === '-' || fill[0] === '+') {
			target = index + target;
		}

		if (target === index || target < 0 || target >= count) {
			return false;
		}

		return target;
	}

	switch (fill) {
	// compatibility
	case 'bottom':
		return 'start';
	case 'top':
		return 'end';
	case 'zero':
		return 'origin';
	// supported boundaries
	case 'origin':
	case 'start':
	case 'end':
		return fill;
	// invalid fill values
	default:
		return false;
	}
}

function computeBoundary(source) {
	var model = source.el._model || {};
	var scale = source.el._scale || {};
	var fill = source.fill;
	var target = null;
	var horizontal;

	if (isFinite(fill)) {
		return null;
	}

	// Backward compatibility: until v3, we still need to support boundary values set on
	// the model (scaleTop, scaleBottom and scaleZero) because some external plugins and
	// controllers might still use it (e.g. the Smith chart).

	if (fill === 'start') {
		target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;
	} else if (fill === 'end') {
		target = model.scaleTop === undefined ? scale.top : model.scaleTop;
	} else if (model.scaleZero !== undefined) {
		target = model.scaleZero;
	} else if (scale.getBasePosition) {
		target = scale.getBasePosition();
	} else if (scale.getBasePixel) {
		target = scale.getBasePixel();
	}

	if (target !== undefined && target !== null) {
		if (target.x !== undefined && target.y !== undefined) {
			return target;
		}

		if (typeof target === 'number' && isFinite(target)) {
			horizontal = scale.isHorizontal();
			return {
				x: horizontal ? target : null,
				y: horizontal ? null : target
			};
		}
	}

	return null;
}

function resolveTarget(sources, index, propagate) {
	var source = sources[index];
	var fill = source.fill;
	var visited = [index];
	var target;

	if (!propagate) {
		return fill;
	}

	while (fill !== false && visited.indexOf(fill) === -1) {
		if (!isFinite(fill)) {
			return fill;
		}

		target = sources[fill];
		if (!target) {
			return false;
		}

		if (target.visible) {
			return fill;
		}

		visited.push(fill);
		fill = target.fill;
	}

	return false;
}

function createMapper(source) {
	var fill = source.fill;
	var type = 'dataset';

	if (fill === false) {
		return null;
	}

	if (!isFinite(fill)) {
		type = 'boundary';
	}

	return mappers[type](source);
}

function isDrawable(point) {
	return point && !point.skip;
}

function drawArea(ctx, curve0, curve1, len0, len1) {
	var i;

	if (!len0 || !len1) {
		return;
	}

	// building first area curve (normal)
	ctx.moveTo(curve0[0].x, curve0[0].y);
	for (i = 1; i < len0; ++i) {
		helpers.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);
	}

	// joining the two area curves
	ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y);

	// building opposite area curve (reverse)
	for (i = len1 - 1; i > 0; --i) {
		helpers.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);
	}
}

function doFill(ctx, points, mapper, view, color, loop) {
	var count = points.length;
	var span = view.spanGaps;
	var curve0 = [];
	var curve1 = [];
	var len0 = 0;
	var len1 = 0;
	var i, ilen, index, p0, p1, d0, d1;

	ctx.beginPath();

	for (i = 0, ilen = (count + !!loop); i < ilen; ++i) {
		index = i % count;
		p0 = points[index]._view;
		p1 = mapper(p0, index, view);
		d0 = isDrawable(p0);
		d1 = isDrawable(p1);

		if (d0 && d1) {
			len0 = curve0.push(p0);
			len1 = curve1.push(p1);
		} else if (len0 && len1) {
			if (!span) {
				drawArea(ctx, curve0, curve1, len0, len1);
				len0 = len1 = 0;
				curve0 = [];
				curve1 = [];
			} else {
				if (d0) {
					curve0.push(p0);
				}
				if (d1) {
					curve1.push(p1);
				}
			}
		}
	}

	drawArea(ctx, curve0, curve1, len0, len1);

	ctx.closePath();
	ctx.fillStyle = color;
	ctx.fill();
}

module.exports = {
	id: 'filler',

	afterDatasetsUpdate: function(chart, options) {
		var count = (chart.data.datasets || []).length;
		var propagate = options.propagate;
		var sources = [];
		var meta, i, el, source;

		for (i = 0; i < count; ++i) {
			meta = chart.getDatasetMeta(i);
			el = meta.dataset;
			source = null;

			if (el && el._model && el instanceof elements.Line) {
				source = {
					visible: chart.isDatasetVisible(i),
					fill: decodeFill(el, i, count),
					chart: chart,
					el: el
				};
			}

			meta.$filler = source;
			sources.push(source);
		}

		for (i = 0; i < count; ++i) {
			source = sources[i];
			if (!source) {
				continue;
			}

			source.fill = resolveTarget(sources, i, propagate);
			source.boundary = computeBoundary(source);
			source.mapper = createMapper(source);
		}
	},

	beforeDatasetDraw: function(chart, args) {
		var meta = args.meta.$filler;
		if (!meta) {
			return;
		}

		var ctx = chart.ctx;
		var el = meta.el;
		var view = el._view;
		var points = el._children || [];
		var mapper = meta.mapper;
		var color = view.backgroundColor || defaults.global.defaultColor;

		if (mapper && color && points.length) {
			helpers.canvas.clipArea(ctx, chart.chartArea);
			doFill(ctx, points, mapper, view, color, el._loop);
			helpers.canvas.unclipArea(ctx);
		}
	}
};


/***/ }),

/***/ "./node_modules/chart.js/src/plugins/plugin.legend.js":
/*!************************************************************!*\
  !*** ./node_modules/chart.js/src/plugins/plugin.legend.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var defaults = __webpack_require__(/*! ../core/core.defaults */ "./node_modules/chart.js/src/core/core.defaults.js");
var Element = __webpack_require__(/*! ../core/core.element */ "./node_modules/chart.js/src/core/core.element.js");
var helpers = __webpack_require__(/*! ../helpers/index */ "./node_modules/chart.js/src/helpers/index.js");
var layouts = __webpack_require__(/*! ../core/core.layouts */ "./node_modules/chart.js/src/core/core.layouts.js");

var noop = helpers.noop;

defaults._set('global', {
	legend: {
		display: true,
		position: 'top',
		fullWidth: true,
		reverse: false,
		weight: 1000,

		// a callback that will handle
		onClick: function(e, legendItem) {
			var index = legendItem.datasetIndex;
			var ci = this.chart;
			var meta = ci.getDatasetMeta(index);

			// See controller.isDatasetVisible comment
			meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null;

			// We hid a dataset ... rerender the chart
			ci.update();
		},

		onHover: null,

		labels: {
			boxWidth: 40,
			padding: 10,
			// Generates labels shown in the legend
			// Valid properties to return:
			// text : text to display
			// fillStyle : fill of coloured box
			// strokeStyle: stroke of coloured box
			// hidden : if this legend item refers to a hidden item
			// lineCap : cap style for line
			// lineDash
			// lineDashOffset :
			// lineJoin :
			// lineWidth :
			generateLabels: function(chart) {
				var data = chart.data;
				return helpers.isArray(data.datasets) ? data.datasets.map(function(dataset, i) {
					return {
						text: dataset.label,
						fillStyle: (!helpers.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0]),
						hidden: !chart.isDatasetVisible(i),
						lineCap: dataset.borderCapStyle,
						lineDash: dataset.borderDash,
						lineDashOffset: dataset.borderDashOffset,
						lineJoin: dataset.borderJoinStyle,
						lineWidth: dataset.borderWidth,
						strokeStyle: dataset.borderColor,
						pointStyle: dataset.pointStyle,

						// Below is extra data used for toggling the datasets
						datasetIndex: i
					};
				}, this) : [];
			}
		}
	},

	legendCallback: function(chart) {
		var text = [];
		text.push('<ul class="' + chart.id + '-legend">');
		for (var i = 0; i < chart.data.datasets.length; i++) {
			text.push('<li><span style="background-color:' + chart.data.datasets[i].backgroundColor + '"></span>');
			if (chart.data.datasets[i].label) {
				text.push(chart.data.datasets[i].label);
			}
			text.push('</li>');
		}
		text.push('</ul>');
		return text.join('');
	}
});

/**
 * Helper function to get the box width based on the usePointStyle option
 * @param labelopts {Object} the label options on the legend
 * @param fontSize {Number} the label font size
 * @return {Number} width of the color box area
 */
function getBoxWidth(labelOpts, fontSize) {
	return labelOpts.usePointStyle ?
		fontSize * Math.SQRT2 :
		labelOpts.boxWidth;
}

/**
 * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!
 */
var Legend = Element.extend({

	initialize: function(config) {
		helpers.extend(this, config);

		// Contains hit boxes for each dataset (in dataset order)
		this.legendHitBoxes = [];

		// Are we in doughnut mode which has a different data type
		this.doughnutMode = false;
	},

	// These methods are ordered by lifecycle. Utilities then follow.
	// Any function defined here is inherited by all legend types.
	// Any function can be extended by the legend type

	beforeUpdate: noop,
	update: function(maxWidth, maxHeight, margins) {
		var me = this;

		// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)
		me.beforeUpdate();

		// Absorb the master measurements
		me.maxWidth = maxWidth;
		me.maxHeight = maxHeight;
		me.margins = margins;

		// Dimensions
		me.beforeSetDimensions();
		me.setDimensions();
		me.afterSetDimensions();
		// Labels
		me.beforeBuildLabels();
		me.buildLabels();
		me.afterBuildLabels();

		// Fit
		me.beforeFit();
		me.fit();
		me.afterFit();
		//
		me.afterUpdate();

		return me.minSize;
	},
	afterUpdate: noop,

	//

	beforeSetDimensions: noop,
	setDimensions: function() {
		var me = this;
		// Set the unconstrained dimension before label rotation
		if (me.isHorizontal()) {
			// Reset position before calculating rotation
			me.width = me.maxWidth;
			me.left = 0;
			me.right = me.width;
		} else {
			me.height = me.maxHeight;

			// Reset position before calculating rotation
			me.top = 0;
			me.bottom = me.height;
		}

		// Reset padding
		me.paddingLeft = 0;
		me.paddingTop = 0;
		me.paddingRight = 0;
		me.paddingBottom = 0;

		// Reset minSize
		me.minSize = {
			width: 0,
			height: 0
		};
	},
	afterSetDimensions: noop,

	//

	beforeBuildLabels: noop,
	buildLabels: function() {
		var me = this;
		var labelOpts = me.options.labels || {};
		var legendItems = helpers.callback(labelOpts.generateLabels, [me.chart], me) || [];

		if (labelOpts.filter) {
			legendItems = legendItems.filter(function(item) {
				return labelOpts.filter(item, me.chart.data);
			});
		}

		if (me.options.reverse) {
			legendItems.reverse();
		}

		me.legendItems = legendItems;
	},
	afterBuildLabels: noop,

	//

	beforeFit: noop,
	fit: function() {
		var me = this;
		var opts = me.options;
		var labelOpts = opts.labels;
		var display = opts.display;

		var ctx = me.ctx;

		var globalDefault = defaults.global;
		var valueOrDefault = helpers.valueOrDefault;
		var fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);
		var fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);
		var fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);
		var labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);

		// Reset hit boxes
		var hitboxes = me.legendHitBoxes = [];

		var minSize = me.minSize;
		var isHorizontal = me.isHorizontal();

		if (isHorizontal) {
			minSize.width = me.maxWidth; // fill all the width
			minSize.height = display ? 10 : 0;
		} else {
			minSize.width = display ? 10 : 0;
			minSize.height = me.maxHeight; // fill all the height
		}

		// Increase sizes here
		if (display) {
			ctx.font = labelFont;

			if (isHorizontal) {
				// Labels

				// Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one
				var lineWidths = me.lineWidths = [0];
				var totalHeight = me.legendItems.length ? fontSize + (labelOpts.padding) : 0;

				ctx.textAlign = 'left';
				ctx.textBaseline = 'top';

				helpers.each(me.legendItems, function(legendItem, i) {
					var boxWidth = getBoxWidth(labelOpts, fontSize);
					var width = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;

					if (lineWidths[lineWidths.length - 1] + width + labelOpts.padding >= me.width) {
						totalHeight += fontSize + (labelOpts.padding);
						lineWidths[lineWidths.length] = me.left;
					}

					// Store the hitbox width and height here. Final position will be updated in `draw`
					hitboxes[i] = {
						left: 0,
						top: 0,
						width: width,
						height: fontSize
					};

					lineWidths[lineWidths.length - 1] += width + labelOpts.padding;
				});

				minSize.height += totalHeight;

			} else {
				var vPadding = labelOpts.padding;
				var columnWidths = me.columnWidths = [];
				var totalWidth = labelOpts.padding;
				var currentColWidth = 0;
				var currentColHeight = 0;
				var itemHeight = fontSize + vPadding;

				helpers.each(me.legendItems, function(legendItem, i) {
					var boxWidth = getBoxWidth(labelOpts, fontSize);
					var itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;

					// If too tall, go to new column
					if (currentColHeight + itemHeight > minSize.height) {
						totalWidth += currentColWidth + labelOpts.padding;
						columnWidths.push(currentColWidth); // previous column width

						currentColWidth = 0;
						currentColHeight = 0;
					}

					// Get max width
					currentColWidth = Math.max(currentColWidth, itemWidth);
					currentColHeight += itemHeight;

					// Store the hitbox width and height here. Final position will be updated in `draw`
					hitboxes[i] = {
						left: 0,
						top: 0,
						width: itemWidth,
						height: fontSize
					};
				});

				totalWidth += currentColWidth;
				columnWidths.push(currentColWidth);
				minSize.width += totalWidth;
			}
		}

		me.width = minSize.width;
		me.height = minSize.height;
	},
	afterFit: noop,

	// Shared Methods
	isHorizontal: function() {
		return this.options.position === 'top' || this.options.position === 'bottom';
	},

	// Actually draw the legend on the canvas
	draw: function() {
		var me = this;
		var opts = me.options;
		var labelOpts = opts.labels;
		var globalDefault = defaults.global;
		var lineDefault = globalDefault.elements.line;
		var legendWidth = me.width;
		var lineWidths = me.lineWidths;

		if (opts.display) {
			var ctx = me.ctx;
			var valueOrDefault = helpers.valueOrDefault;
			var fontColor = valueOrDefault(labelOpts.fontColor, globalDefault.defaultFontColor);
			var fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);
			var fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);
			var fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);
			var labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);
			var cursor;

			// Canvas setup
			ctx.textAlign = 'left';
			ctx.textBaseline = 'middle';
			ctx.lineWidth = 0.5;
			ctx.strokeStyle = fontColor; // for strikethrough effect
			ctx.fillStyle = fontColor; // render in correct colour
			ctx.font = labelFont;

			var boxWidth = getBoxWidth(labelOpts, fontSize);
			var hitboxes = me.legendHitBoxes;

			// current position
			var drawLegendBox = function(x, y, legendItem) {
				if (isNaN(boxWidth) || boxWidth <= 0) {
					return;
				}

				// Set the ctx for the box
				ctx.save();

				ctx.fillStyle = valueOrDefault(legendItem.fillStyle, globalDefault.defaultColor);
				ctx.lineCap = valueOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);
				ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);
				ctx.lineJoin = valueOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);
				ctx.lineWidth = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth);
				ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, globalDefault.defaultColor);
				var isLineWidthZero = (valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth) === 0);

				if (ctx.setLineDash) {
					// IE 9 and 10 do not support line dash
					ctx.setLineDash(valueOrDefault(legendItem.lineDash, lineDefault.borderDash));
				}

				if (opts.labels && opts.labels.usePointStyle) {
					// Recalculate x and y for drawPoint() because its expecting
					// x and y to be center of figure (instead of top left)
					var radius = fontSize * Math.SQRT2 / 2;
					var offSet = radius / Math.SQRT2;
					var centerX = x + offSet;
					var centerY = y + offSet;

					// Draw pointStyle as legend symbol
					helpers.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);
				} else {
					// Draw box as legend symbol
					if (!isLineWidthZero) {
						ctx.strokeRect(x, y, boxWidth, fontSize);
					}
					ctx.fillRect(x, y, boxWidth, fontSize);
				}

				ctx.restore();
			};
			var fillText = function(x, y, legendItem, textWidth) {
				var halfFontSize = fontSize / 2;
				var xLeft = boxWidth + halfFontSize + x;
				var yMiddle = y + halfFontSize;

				ctx.fillText(legendItem.text, xLeft, yMiddle);

				if (legendItem.hidden) {
					// Strikethrough the text if hidden
					ctx.beginPath();
					ctx.lineWidth = 2;
					ctx.moveTo(xLeft, yMiddle);
					ctx.lineTo(xLeft + textWidth, yMiddle);
					ctx.stroke();
				}
			};

			// Horizontal
			var isHorizontal = me.isHorizontal();
			if (isHorizontal) {
				cursor = {
					x: me.left + ((legendWidth - lineWidths[0]) / 2),
					y: me.top + labelOpts.padding,
					line: 0
				};
			} else {
				cursor = {
					x: me.left + labelOpts.padding,
					y: me.top + labelOpts.padding,
					line: 0
				};
			}

			var itemHeight = fontSize + labelOpts.padding;
			helpers.each(me.legendItems, function(legendItem, i) {
				var textWidth = ctx.measureText(legendItem.text).width;
				var width = boxWidth + (fontSize / 2) + textWidth;
				var x = cursor.x;
				var y = cursor.y;

				if (isHorizontal) {
					if (x + width >= legendWidth) {
						y = cursor.y += itemHeight;
						cursor.line++;
						x = cursor.x = me.left + ((legendWidth - lineWidths[cursor.line]) / 2);
					}
				} else if (y + itemHeight > me.bottom) {
					x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;
					y = cursor.y = me.top + labelOpts.padding;
					cursor.line++;
				}

				drawLegendBox(x, y, legendItem);

				hitboxes[i].left = x;
				hitboxes[i].top = y;

				// Fill the actual label
				fillText(x, y, legendItem, textWidth);

				if (isHorizontal) {
					cursor.x += width + (labelOpts.padding);
				} else {
					cursor.y += itemHeight;
				}

			});
		}
	},

	/**
	 * Handle an event
	 * @private
	 * @param {IEvent} event - The event to handle
	 * @return {Boolean} true if a change occured
	 */
	handleEvent: function(e) {
		var me = this;
		var opts = me.options;
		var type = e.type === 'mouseup' ? 'click' : e.type;
		var changed = false;

		if (type === 'mousemove') {
			if (!opts.onHover) {
				return;
			}
		} else if (type === 'click') {
			if (!opts.onClick) {
				return;
			}
		} else {
			return;
		}

		// Chart event already has relative position in it
		var x = e.x;
		var y = e.y;

		if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {
			// See if we are touching one of the dataset boxes
			var lh = me.legendHitBoxes;
			for (var i = 0; i < lh.length; ++i) {
				var hitBox = lh[i];

				if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {
					// Touching an element
					if (type === 'click') {
						// use e.native for backwards compatibility
						opts.onClick.call(me, e.native, me.legendItems[i]);
						changed = true;
						break;
					} else if (type === 'mousemove') {
						// use e.native for backwards compatibility
						opts.onHover.call(me, e.native, me.legendItems[i]);
						changed = true;
						break;
					}
				}
			}
		}

		return changed;
	}
});

function createNewLegendAndAttach(chart, legendOpts) {
	var legend = new Legend({
		ctx: chart.ctx,
		options: legendOpts,
		chart: chart
	});

	layouts.configure(chart, legend, legendOpts);
	layouts.addBox(chart, legend);
	chart.legend = legend;
}

module.exports = {
	id: 'legend',

	/**
	 * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making
	 * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of
	 * the plugin, which one will be re-exposed in the chart.js file.
	 * https://github.com/chartjs/Chart.js/pull/2640
	 * @private
	 */
	_element: Legend,

	beforeInit: function(chart) {
		var legendOpts = chart.options.legend;

		if (legendOpts) {
			createNewLegendAndAttach(chart, legendOpts);
		}
	},

	beforeUpdate: function(chart) {
		var legendOpts = chart.options.legend;
		var legend = chart.legend;

		if (legendOpts) {
			helpers.mergeIf(legendOpts, defaults.global.legend);

			if (legend) {
				layouts.configure(chart, legend, legendOpts);
				legend.options = legendOpts;
			} else {
				createNewLegendAndAttach(chart, legendOpts);
			}
		} else if (legend) {
			layouts.removeBox(chart, legend);
			delete chart.legend;
		}
	},

	afterEvent: function(chart, e) {
		var legend = chart.legend;
		if (legend) {
			legend.handleEvent(e);
		}
	}
};


/***/ }),

/***/ "./node_modules/chart.js/src/plugins/plugin.title.js":
/*!***********************************************************!*\
  !*** ./node_modules/chart.js/src/plugins/plugin.title.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var defaults = __webpack_require__(/*! ../core/core.defaults */ "./node_modules/chart.js/src/core/core.defaults.js");
var Element = __webpack_require__(/*! ../core/core.element */ "./node_modules/chart.js/src/core/core.element.js");
var helpers = __webpack_require__(/*! ../helpers/index */ "./node_modules/chart.js/src/helpers/index.js");
var layouts = __webpack_require__(/*! ../core/core.layouts */ "./node_modules/chart.js/src/core/core.layouts.js");

var noop = helpers.noop;

defaults._set('global', {
	title: {
		display: false,
		fontStyle: 'bold',
		fullWidth: true,
		lineHeight: 1.2,
		padding: 10,
		position: 'top',
		text: '',
		weight: 2000         // by default greater than legend (1000) to be above
	}
});

/**
 * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!
 */
var Title = Element.extend({
	initialize: function(config) {
		var me = this;
		helpers.extend(me, config);

		// Contains hit boxes for each dataset (in dataset order)
		me.legendHitBoxes = [];
	},

	// These methods are ordered by lifecycle. Utilities then follow.

	beforeUpdate: noop,
	update: function(maxWidth, maxHeight, margins) {
		var me = this;

		// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)
		me.beforeUpdate();

		// Absorb the master measurements
		me.maxWidth = maxWidth;
		me.maxHeight = maxHeight;
		me.margins = margins;

		// Dimensions
		me.beforeSetDimensions();
		me.setDimensions();
		me.afterSetDimensions();
		// Labels
		me.beforeBuildLabels();
		me.buildLabels();
		me.afterBuildLabels();

		// Fit
		me.beforeFit();
		me.fit();
		me.afterFit();
		//
		me.afterUpdate();

		return me.minSize;

	},
	afterUpdate: noop,

	//

	beforeSetDimensions: noop,
	setDimensions: function() {
		var me = this;
		// Set the unconstrained dimension before label rotation
		if (me.isHorizontal()) {
			// Reset position before calculating rotation
			me.width = me.maxWidth;
			me.left = 0;
			me.right = me.width;
		} else {
			me.height = me.maxHeight;

			// Reset position before calculating rotation
			me.top = 0;
			me.bottom = me.height;
		}

		// Reset padding
		me.paddingLeft = 0;
		me.paddingTop = 0;
		me.paddingRight = 0;
		me.paddingBottom = 0;

		// Reset minSize
		me.minSize = {
			width: 0,
			height: 0
		};
	},
	afterSetDimensions: noop,

	//

	beforeBuildLabels: noop,
	buildLabels: noop,
	afterBuildLabels: noop,

	//

	beforeFit: noop,
	fit: function() {
		var me = this;
		var valueOrDefault = helpers.valueOrDefault;
		var opts = me.options;
		var display = opts.display;
		var fontSize = valueOrDefault(opts.fontSize, defaults.global.defaultFontSize);
		var minSize = me.minSize;
		var lineCount = helpers.isArray(opts.text) ? opts.text.length : 1;
		var lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);
		var textSize = display ? (lineCount * lineHeight) + (opts.padding * 2) : 0;

		if (me.isHorizontal()) {
			minSize.width = me.maxWidth; // fill all the width
			minSize.height = textSize;
		} else {
			minSize.width = textSize;
			minSize.height = me.maxHeight; // fill all the height
		}

		me.width = minSize.width;
		me.height = minSize.height;

	},
	afterFit: noop,

	// Shared Methods
	isHorizontal: function() {
		var pos = this.options.position;
		return pos === 'top' || pos === 'bottom';
	},

	// Actually draw the title block on the canvas
	draw: function() {
		var me = this;
		var ctx = me.ctx;
		var valueOrDefault = helpers.valueOrDefault;
		var opts = me.options;
		var globalDefaults = defaults.global;

		if (opts.display) {
			var fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize);
			var fontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle);
			var fontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily);
			var titleFont = helpers.fontString(fontSize, fontStyle, fontFamily);
			var lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);
			var offset = lineHeight / 2 + opts.padding;
			var rotation = 0;
			var top = me.top;
			var left = me.left;
			var bottom = me.bottom;
			var right = me.right;
			var maxWidth, titleX, titleY;

			ctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor); // render in correct colour
			ctx.font = titleFont;

			// Horizontal
			if (me.isHorizontal()) {
				titleX = left + ((right - left) / 2); // midpoint of the width
				titleY = top + offset;
				maxWidth = right - left;
			} else {
				titleX = opts.position === 'left' ? left + offset : right - offset;
				titleY = top + ((bottom - top) / 2);
				maxWidth = bottom - top;
				rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);
			}

			ctx.save();
			ctx.translate(titleX, titleY);
			ctx.rotate(rotation);
			ctx.textAlign = 'center';
			ctx.textBaseline = 'middle';

			var text = opts.text;
			if (helpers.isArray(text)) {
				var y = 0;
				for (var i = 0; i < text.length; ++i) {
					ctx.fillText(text[i], 0, y, maxWidth);
					y += lineHeight;
				}
			} else {
				ctx.fillText(text, 0, 0, maxWidth);
			}

			ctx.restore();
		}
	}
});

function createNewTitleBlockAndAttach(chart, titleOpts) {
	var title = new Title({
		ctx: chart.ctx,
		options: titleOpts,
		chart: chart
	});

	layouts.configure(chart, title, titleOpts);
	layouts.addBox(chart, title);
	chart.titleBlock = title;
}

module.exports = {
	id: 'title',

	/**
	 * Backward compatibility: since 2.1.5, the title is registered as a plugin, making
	 * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of
	 * the plugin, which one will be re-exposed in the chart.js file.
	 * https://github.com/chartjs/Chart.js/pull/2640
	 * @private
	 */
	_element: Title,

	beforeInit: function(chart) {
		var titleOpts = chart.options.title;

		if (titleOpts) {
			createNewTitleBlockAndAttach(chart, titleOpts);
		}
	},

	beforeUpdate: function(chart) {
		var titleOpts = chart.options.title;
		var titleBlock = chart.titleBlock;

		if (titleOpts) {
			helpers.mergeIf(titleOpts, defaults.global.title);

			if (titleBlock) {
				layouts.configure(chart, titleBlock, titleOpts);
				titleBlock.options = titleOpts;
			} else {
				createNewTitleBlockAndAttach(chart, titleOpts);
			}
		} else if (titleBlock) {
			layouts.removeBox(chart, titleBlock);
			delete chart.titleBlock;
		}
	}
};


/***/ }),

/***/ "./node_modules/chart.js/src/scales/scale.category.js":
/*!************************************************************!*\
  !*** ./node_modules/chart.js/src/scales/scale.category.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Scale = __webpack_require__(/*! ../core/core.scale */ "./node_modules/chart.js/src/core/core.scale.js");
var scaleService = __webpack_require__(/*! ../core/core.scaleService */ "./node_modules/chart.js/src/core/core.scaleService.js");

module.exports = function() {

	// Default config for a category scale
	var defaultConfig = {
		position: 'bottom'
	};

	var DatasetScale = Scale.extend({
		/**
		* Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those
		* else fall back to data.labels
		* @private
		*/
		getLabels: function() {
			var data = this.chart.data;
			return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;
		},

		determineDataLimits: function() {
			var me = this;
			var labels = me.getLabels();
			me.minIndex = 0;
			me.maxIndex = labels.length - 1;
			var findIndex;

			if (me.options.ticks.min !== undefined) {
				// user specified min value
				findIndex = labels.indexOf(me.options.ticks.min);
				me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;
			}

			if (me.options.ticks.max !== undefined) {
				// user specified max value
				findIndex = labels.indexOf(me.options.ticks.max);
				me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;
			}

			me.min = labels[me.minIndex];
			me.max = labels[me.maxIndex];
		},

		buildTicks: function() {
			var me = this;
			var labels = me.getLabels();
			// If we are viewing some subset of labels, slice the original array
			me.ticks = (me.minIndex === 0 && me.maxIndex === labels.length - 1) ? labels : labels.slice(me.minIndex, me.maxIndex + 1);
		},

		getLabelForIndex: function(index, datasetIndex) {
			var me = this;
			var data = me.chart.data;
			var isHorizontal = me.isHorizontal();

			if (data.yLabels && !isHorizontal) {
				return me.getRightValue(data.datasets[datasetIndex].data[index]);
			}
			return me.ticks[index - me.minIndex];
		},

		// Used to get data value locations.  Value can either be an index or a numerical value
		getPixelForValue: function(value, index) {
			var me = this;
			var offset = me.options.offset;
			// 1 is added because we need the length but we have the indexes
			var offsetAmt = Math.max((me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1)), 1);

			// If value is a data object, then index is the index in the data array,
			// not the index of the scale. We need to change that.
			var valueCategory;
			if (value !== undefined && value !== null) {
				valueCategory = me.isHorizontal() ? value.x : value.y;
			}
			if (valueCategory !== undefined || (value !== undefined && isNaN(index))) {
				var labels = me.getLabels();
				value = valueCategory || value;
				var idx = labels.indexOf(value);
				index = idx !== -1 ? idx : index;
			}

			if (me.isHorizontal()) {
				var valueWidth = me.width / offsetAmt;
				var widthOffset = (valueWidth * (index - me.minIndex));

				if (offset) {
					widthOffset += (valueWidth / 2);
				}

				return me.left + Math.round(widthOffset);
			}
			var valueHeight = me.height / offsetAmt;
			var heightOffset = (valueHeight * (index - me.minIndex));

			if (offset) {
				heightOffset += (valueHeight / 2);
			}

			return me.top + Math.round(heightOffset);
		},
		getPixelForTick: function(index) {
			return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);
		},
		getValueForPixel: function(pixel) {
			var me = this;
			var offset = me.options.offset;
			var value;
			var offsetAmt = Math.max((me._ticks.length - (offset ? 0 : 1)), 1);
			var horz = me.isHorizontal();
			var valueDimension = (horz ? me.width : me.height) / offsetAmt;

			pixel -= horz ? me.left : me.top;

			if (offset) {
				pixel -= (valueDimension / 2);
			}

			if (pixel <= 0) {
				value = 0;
			} else {
				value = Math.round(pixel / valueDimension);
			}

			return value + me.minIndex;
		},
		getBasePixel: function() {
			return this.bottom;
		}
	});

	scaleService.registerScaleType('category', DatasetScale, defaultConfig);
};


/***/ }),

/***/ "./node_modules/chart.js/src/scales/scale.linear.js":
/*!**********************************************************!*\
  !*** ./node_modules/chart.js/src/scales/scale.linear.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var defaults = __webpack_require__(/*! ../core/core.defaults */ "./node_modules/chart.js/src/core/core.defaults.js");
var helpers = __webpack_require__(/*! ../helpers/index */ "./node_modules/chart.js/src/helpers/index.js");
var scaleService = __webpack_require__(/*! ../core/core.scaleService */ "./node_modules/chart.js/src/core/core.scaleService.js");
var Ticks = __webpack_require__(/*! ../core/core.ticks */ "./node_modules/chart.js/src/core/core.ticks.js");

module.exports = function(Chart) {

	var defaultConfig = {
		position: 'left',
		ticks: {
			callback: Ticks.formatters.linear
		}
	};

	var LinearScale = Chart.LinearScaleBase.extend({

		determineDataLimits: function() {
			var me = this;
			var opts = me.options;
			var chart = me.chart;
			var data = chart.data;
			var datasets = data.datasets;
			var isHorizontal = me.isHorizontal();
			var DEFAULT_MIN = 0;
			var DEFAULT_MAX = 1;

			function IDMatches(meta) {
				return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;
			}

			// First Calculate the range
			me.min = null;
			me.max = null;

			var hasStacks = opts.stacked;
			if (hasStacks === undefined) {
				helpers.each(datasets, function(dataset, datasetIndex) {
					if (hasStacks) {
						return;
					}

					var meta = chart.getDatasetMeta(datasetIndex);
					if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&
						meta.stack !== undefined) {
						hasStacks = true;
					}
				});
			}

			if (opts.stacked || hasStacks) {
				var valuesPerStack = {};

				helpers.each(datasets, function(dataset, datasetIndex) {
					var meta = chart.getDatasetMeta(datasetIndex);
					var key = [
						meta.type,
						// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined
						((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),
						meta.stack
					].join('.');

					if (valuesPerStack[key] === undefined) {
						valuesPerStack[key] = {
							positiveValues: [],
							negativeValues: []
						};
					}

					// Store these per type
					var positiveValues = valuesPerStack[key].positiveValues;
					var negativeValues = valuesPerStack[key].negativeValues;

					if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {
						helpers.each(dataset.data, function(rawValue, index) {
							var value = +me.getRightValue(rawValue);
							if (isNaN(value) || meta.data[index].hidden) {
								return;
							}

							positiveValues[index] = positiveValues[index] || 0;
							negativeValues[index] = negativeValues[index] || 0;

							if (opts.relativePoints) {
								positiveValues[index] = 100;
							} else if (value < 0) {
								negativeValues[index] += value;
							} else {
								positiveValues[index] += value;
							}
						});
					}
				});

				helpers.each(valuesPerStack, function(valuesForType) {
					var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);
					var minVal = helpers.min(values);
					var maxVal = helpers.max(values);
					me.min = me.min === null ? minVal : Math.min(me.min, minVal);
					me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);
				});

			} else {
				helpers.each(datasets, function(dataset, datasetIndex) {
					var meta = chart.getDatasetMeta(datasetIndex);
					if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {
						helpers.each(dataset.data, function(rawValue, index) {
							var value = +me.getRightValue(rawValue);
							if (isNaN(value) || meta.data[index].hidden) {
								return;
							}

							if (me.min === null) {
								me.min = value;
							} else if (value < me.min) {
								me.min = value;
							}

							if (me.max === null) {
								me.max = value;
							} else if (value > me.max) {
								me.max = value;
							}
						});
					}
				});
			}

			me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;
			me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX;

			// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero
			this.handleTickRangeOptions();
		},
		getTickLimit: function() {
			var maxTicks;
			var me = this;
			var tickOpts = me.options.ticks;

			if (me.isHorizontal()) {
				maxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.width / 50));
			} else {
				// The factor of 2 used to scale the font size has been experimentally determined.
				var tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, defaults.global.defaultFontSize);
				maxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.height / (2 * tickFontSize)));
			}

			return maxTicks;
		},
		// Called after the ticks are built. We need
		handleDirectionalChanges: function() {
			if (!this.isHorizontal()) {
				// We are in a vertical orientation. The top value is the highest. So reverse the array
				this.ticks.reverse();
			}
		},
		getLabelForIndex: function(index, datasetIndex) {
			return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);
		},
		// Utils
		getPixelForValue: function(value) {
			// This must be called after fit has been run so that
			// this.left, this.top, this.right, and this.bottom have been defined
			var me = this;
			var start = me.start;

			var rightValue = +me.getRightValue(value);
			var pixel;
			var range = me.end - start;

			if (me.isHorizontal()) {
				pixel = me.left + (me.width / range * (rightValue - start));
			} else {
				pixel = me.bottom - (me.height / range * (rightValue - start));
			}
			return pixel;
		},
		getValueForPixel: function(pixel) {
			var me = this;
			var isHorizontal = me.isHorizontal();
			var innerDimension = isHorizontal ? me.width : me.height;
			var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;
			return me.start + ((me.end - me.start) * offset);
		},
		getPixelForTick: function(index) {
			return this.getPixelForValue(this.ticksAsNumbers[index]);
		}
	});

	scaleService.registerScaleType('linear', LinearScale, defaultConfig);
};


/***/ }),

/***/ "./node_modules/chart.js/src/scales/scale.linearbase.js":
/*!**************************************************************!*\
  !*** ./node_modules/chart.js/src/scales/scale.linearbase.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var helpers = __webpack_require__(/*! ../helpers/index */ "./node_modules/chart.js/src/helpers/index.js");
var Scale = __webpack_require__(/*! ../core/core.scale */ "./node_modules/chart.js/src/core/core.scale.js");

/**
 * Generate a set of linear ticks
 * @param generationOptions the options used to generate the ticks
 * @param dataRange the range of the data
 * @returns {Array<Number>} array of tick values
 */
function generateTicks(generationOptions, dataRange) {
	var ticks = [];
	// To get a "nice" value for the tick spacing, we will use the appropriately named
	// "nice number" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks
	// for details.

	var factor;
	var precision;
	var spacing;

	if (generationOptions.stepSize && generationOptions.stepSize > 0) {
		spacing = generationOptions.stepSize;
	} else {
		var niceRange = helpers.niceNum(dataRange.max - dataRange.min, false);
		spacing = helpers.niceNum(niceRange / (generationOptions.maxTicks - 1), true);

		precision = generationOptions.precision;
		if (precision !== undefined) {
			// If the user specified a precision, round to that number of decimal places
			factor = Math.pow(10, precision);
			spacing = Math.ceil(spacing * factor) / factor;
		}
	}
	var niceMin = Math.floor(dataRange.min / spacing) * spacing;
	var niceMax = Math.ceil(dataRange.max / spacing) * spacing;

	// If min, max and stepSize is set and they make an evenly spaced scale use it.
	if (!helpers.isNullOrUndef(generationOptions.min) && !helpers.isNullOrUndef(generationOptions.max) && generationOptions.stepSize) {
		// If very close to our whole number, use it.
		if (helpers.almostWhole((generationOptions.max - generationOptions.min) / generationOptions.stepSize, spacing / 1000)) {
			niceMin = generationOptions.min;
			niceMax = generationOptions.max;
		}
	}

	var numSpaces = (niceMax - niceMin) / spacing;
	// If very close to our rounded value, use it.
	if (helpers.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {
		numSpaces = Math.round(numSpaces);
	} else {
		numSpaces = Math.ceil(numSpaces);
	}

	precision = 1;
	if (spacing < 1) {
		precision = Math.pow(10, 1 - Math.floor(helpers.log10(spacing)));
		niceMin = Math.round(niceMin * precision) / precision;
		niceMax = Math.round(niceMax * precision) / precision;
	}
	ticks.push(generationOptions.min !== undefined ? generationOptions.min : niceMin);
	for (var j = 1; j < numSpaces; ++j) {
		ticks.push(Math.round((niceMin + j * spacing) * precision) / precision);
	}
	ticks.push(generationOptions.max !== undefined ? generationOptions.max : niceMax);

	return ticks;
}

module.exports = function(Chart) {

	var noop = helpers.noop;

	Chart.LinearScaleBase = Scale.extend({
		getRightValue: function(value) {
			if (typeof value === 'string') {
				return +value;
			}
			return Scale.prototype.getRightValue.call(this, value);
		},

		handleTickRangeOptions: function() {
			var me = this;
			var opts = me.options;
			var tickOpts = opts.ticks;

			// If we are forcing it to begin at 0, but 0 will already be rendered on the chart,
			// do nothing since that would make the chart weird. If the user really wants a weird chart
			// axis, they can manually override it
			if (tickOpts.beginAtZero) {
				var minSign = helpers.sign(me.min);
				var maxSign = helpers.sign(me.max);

				if (minSign < 0 && maxSign < 0) {
					// move the top up to 0
					me.max = 0;
				} else if (minSign > 0 && maxSign > 0) {
					// move the bottom down to 0
					me.min = 0;
				}
			}

			var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;
			var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;

			if (tickOpts.min !== undefined) {
				me.min = tickOpts.min;
			} else if (tickOpts.suggestedMin !== undefined) {
				if (me.min === null) {
					me.min = tickOpts.suggestedMin;
				} else {
					me.min = Math.min(me.min, tickOpts.suggestedMin);
				}
			}

			if (tickOpts.max !== undefined) {
				me.max = tickOpts.max;
			} else if (tickOpts.suggestedMax !== undefined) {
				if (me.max === null) {
					me.max = tickOpts.suggestedMax;
				} else {
					me.max = Math.max(me.max, tickOpts.suggestedMax);
				}
			}

			if (setMin !== setMax) {
				// We set the min or the max but not both.
				// So ensure that our range is good
				// Inverted or 0 length range can happen when
				// ticks.min is set, and no datasets are visible
				if (me.min >= me.max) {
					if (setMin) {
						me.max = me.min + 1;
					} else {
						me.min = me.max - 1;
					}
				}
			}

			if (me.min === me.max) {
				me.max++;

				if (!tickOpts.beginAtZero) {
					me.min--;
				}
			}
		},
		getTickLimit: noop,
		handleDirectionalChanges: noop,

		buildTicks: function() {
			var me = this;
			var opts = me.options;
			var tickOpts = opts.ticks;

			// Figure out what the max number of ticks we can support it is based on the size of
			// the axis area. For now, we say that the minimum tick spacing in pixels must be 50
			// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on
			// the graph. Make sure we always have at least 2 ticks
			var maxTicks = me.getTickLimit();
			maxTicks = Math.max(2, maxTicks);

			var numericGeneratorOptions = {
				maxTicks: maxTicks,
				min: tickOpts.min,
				max: tickOpts.max,
				precision: tickOpts.precision,
				stepSize: helpers.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)
			};
			var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);

			me.handleDirectionalChanges();

			// At this point, we need to update our max and min given the tick values since we have expanded the
			// range of the scale
			me.max = helpers.max(ticks);
			me.min = helpers.min(ticks);

			if (tickOpts.reverse) {
				ticks.reverse();

				me.start = me.max;
				me.end = me.min;
			} else {
				me.start = me.min;
				me.end = me.max;
			}
		},
		convertTicksToLabels: function() {
			var me = this;
			me.ticksAsNumbers = me.ticks.slice();
			me.zeroLineIndex = me.ticks.indexOf(0);

			Scale.prototype.convertTicksToLabels.call(me);
		}
	});
};


/***/ }),

/***/ "./node_modules/chart.js/src/scales/scale.logarithmic.js":
/*!***************************************************************!*\
  !*** ./node_modules/chart.js/src/scales/scale.logarithmic.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var helpers = __webpack_require__(/*! ../helpers/index */ "./node_modules/chart.js/src/helpers/index.js");
var Scale = __webpack_require__(/*! ../core/core.scale */ "./node_modules/chart.js/src/core/core.scale.js");
var scaleService = __webpack_require__(/*! ../core/core.scaleService */ "./node_modules/chart.js/src/core/core.scaleService.js");
var Ticks = __webpack_require__(/*! ../core/core.ticks */ "./node_modules/chart.js/src/core/core.ticks.js");

/**
 * Generate a set of logarithmic ticks
 * @param generationOptions the options used to generate the ticks
 * @param dataRange the range of the data
 * @returns {Array<Number>} array of tick values
 */
function generateTicks(generationOptions, dataRange) {
	var ticks = [];
	var valueOrDefault = helpers.valueOrDefault;

	// Figure out what the max number of ticks we can support it is based on the size of
	// the axis area. For now, we say that the minimum tick spacing in pixels must be 50
	// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on
	// the graph
	var tickVal = valueOrDefault(generationOptions.min, Math.pow(10, Math.floor(helpers.log10(dataRange.min))));

	var endExp = Math.floor(helpers.log10(dataRange.max));
	var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));
	var exp, significand;

	if (tickVal === 0) {
		exp = Math.floor(helpers.log10(dataRange.minNotZero));
		significand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));

		ticks.push(tickVal);
		tickVal = significand * Math.pow(10, exp);
	} else {
		exp = Math.floor(helpers.log10(tickVal));
		significand = Math.floor(tickVal / Math.pow(10, exp));
	}
	var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;

	do {
		ticks.push(tickVal);

		++significand;
		if (significand === 10) {
			significand = 1;
			++exp;
			precision = exp >= 0 ? 1 : precision;
		}

		tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;
	} while (exp < endExp || (exp === endExp && significand < endSignificand));

	var lastTick = valueOrDefault(generationOptions.max, tickVal);
	ticks.push(lastTick);

	return ticks;
}


module.exports = function(Chart) {

	var defaultConfig = {
		position: 'left',

		// label settings
		ticks: {
			callback: Ticks.formatters.logarithmic
		}
	};

	var LogarithmicScale = Scale.extend({
		determineDataLimits: function() {
			var me = this;
			var opts = me.options;
			var chart = me.chart;
			var data = chart.data;
			var datasets = data.datasets;
			var isHorizontal = me.isHorizontal();
			function IDMatches(meta) {
				return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;
			}

			// Calculate Range
			me.min = null;
			me.max = null;
			me.minNotZero = null;

			var hasStacks = opts.stacked;
			if (hasStacks === undefined) {
				helpers.each(datasets, function(dataset, datasetIndex) {
					if (hasStacks) {
						return;
					}

					var meta = chart.getDatasetMeta(datasetIndex);
					if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&
						meta.stack !== undefined) {
						hasStacks = true;
					}
				});
			}

			if (opts.stacked || hasStacks) {
				var valuesPerStack = {};

				helpers.each(datasets, function(dataset, datasetIndex) {
					var meta = chart.getDatasetMeta(datasetIndex);
					var key = [
						meta.type,
						// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined
						((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),
						meta.stack
					].join('.');

					if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {
						if (valuesPerStack[key] === undefined) {
							valuesPerStack[key] = [];
						}

						helpers.each(dataset.data, function(rawValue, index) {
							var values = valuesPerStack[key];
							var value = +me.getRightValue(rawValue);
							// invalid, hidden and negative values are ignored
							if (isNaN(value) || meta.data[index].hidden || value < 0) {
								return;
							}
							values[index] = values[index] || 0;
							values[index] += value;
						});
					}
				});

				helpers.each(valuesPerStack, function(valuesForType) {
					if (valuesForType.length > 0) {
						var minVal = helpers.min(valuesForType);
						var maxVal = helpers.max(valuesForType);
						me.min = me.min === null ? minVal : Math.min(me.min, minVal);
						me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);
					}
				});

			} else {
				helpers.each(datasets, function(dataset, datasetIndex) {
					var meta = chart.getDatasetMeta(datasetIndex);
					if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {
						helpers.each(dataset.data, function(rawValue, index) {
							var value = +me.getRightValue(rawValue);
							// invalid, hidden and negative values are ignored
							if (isNaN(value) || meta.data[index].hidden || value < 0) {
								return;
							}

							if (me.min === null) {
								me.min = value;
							} else if (value < me.min) {
								me.min = value;
							}

							if (me.max === null) {
								me.max = value;
							} else if (value > me.max) {
								me.max = value;
							}

							if (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {
								me.minNotZero = value;
							}
						});
					}
				});
			}

			// Common base implementation to handle ticks.min, ticks.max
			this.handleTickRangeOptions();
		},
		handleTickRangeOptions: function() {
			var me = this;
			var opts = me.options;
			var tickOpts = opts.ticks;
			var valueOrDefault = helpers.valueOrDefault;
			var DEFAULT_MIN = 1;
			var DEFAULT_MAX = 10;

			me.min = valueOrDefault(tickOpts.min, me.min);
			me.max = valueOrDefault(tickOpts.max, me.max);

			if (me.min === me.max) {
				if (me.min !== 0 && me.min !== null) {
					me.min = Math.pow(10, Math.floor(helpers.log10(me.min)) - 1);
					me.max = Math.pow(10, Math.floor(helpers.log10(me.max)) + 1);
				} else {
					me.min = DEFAULT_MIN;
					me.max = DEFAULT_MAX;
				}
			}
			if (me.min === null) {
				me.min = Math.pow(10, Math.floor(helpers.log10(me.max)) - 1);
			}
			if (me.max === null) {
				me.max = me.min !== 0
					? Math.pow(10, Math.floor(helpers.log10(me.min)) + 1)
					: DEFAULT_MAX;
			}
			if (me.minNotZero === null) {
				if (me.min > 0) {
					me.minNotZero = me.min;
				} else if (me.max < 1) {
					me.minNotZero = Math.pow(10, Math.floor(helpers.log10(me.max)));
				} else {
					me.minNotZero = DEFAULT_MIN;
				}
			}
		},
		buildTicks: function() {
			var me = this;
			var opts = me.options;
			var tickOpts = opts.ticks;
			var reverse = !me.isHorizontal();

			var generationOptions = {
				min: tickOpts.min,
				max: tickOpts.max
			};
			var ticks = me.ticks = generateTicks(generationOptions, me);

			// At this point, we need to update our max and min given the tick values since we have expanded the
			// range of the scale
			me.max = helpers.max(ticks);
			me.min = helpers.min(ticks);

			if (tickOpts.reverse) {
				reverse = !reverse;
				me.start = me.max;
				me.end = me.min;
			} else {
				me.start = me.min;
				me.end = me.max;
			}
			if (reverse) {
				ticks.reverse();
			}
		},
		convertTicksToLabels: function() {
			this.tickValues = this.ticks.slice();

			Scale.prototype.convertTicksToLabels.call(this);
		},
		// Get the correct tooltip label
		getLabelForIndex: function(index, datasetIndex) {
			return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);
		},
		getPixelForTick: function(index) {
			return this.getPixelForValue(this.tickValues[index]);
		},
		/**
		 * Returns the value of the first tick.
		 * @param {Number} value - The minimum not zero value.
		 * @return {Number} The first tick value.
		 * @private
		 */
		_getFirstTickValue: function(value) {
			var exp = Math.floor(helpers.log10(value));
			var significand = Math.floor(value / Math.pow(10, exp));

			return significand * Math.pow(10, exp);
		},
		getPixelForValue: function(value) {
			var me = this;
			var reverse = me.options.ticks.reverse;
			var log10 = helpers.log10;
			var firstTickValue = me._getFirstTickValue(me.minNotZero);
			var offset = 0;
			var innerDimension, pixel, start, end, sign;

			value = +me.getRightValue(value);
			if (reverse) {
				start = me.end;
				end = me.start;
				sign = -1;
			} else {
				start = me.start;
				end = me.end;
				sign = 1;
			}
			if (me.isHorizontal()) {
				innerDimension = me.width;
				pixel = reverse ? me.right : me.left;
			} else {
				innerDimension = me.height;
				sign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)
				pixel = reverse ? me.top : me.bottom;
			}
			if (value !== start) {
				if (start === 0) { // include zero tick
					offset = helpers.getValueOrDefault(
						me.options.ticks.fontSize,
						Chart.defaults.global.defaultFontSize
					);
					innerDimension -= offset;
					start = firstTickValue;
				}
				if (value !== 0) {
					offset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));
				}
				pixel += sign * offset;
			}
			return pixel;
		},
		getValueForPixel: function(pixel) {
			var me = this;
			var reverse = me.options.ticks.reverse;
			var log10 = helpers.log10;
			var firstTickValue = me._getFirstTickValue(me.minNotZero);
			var innerDimension, start, end, value;

			if (reverse) {
				start = me.end;
				end = me.start;
			} else {
				start = me.start;
				end = me.end;
			}
			if (me.isHorizontal()) {
				innerDimension = me.width;
				value = reverse ? me.right - pixel : pixel - me.left;
			} else {
				innerDimension = me.height;
				value = reverse ? pixel - me.top : me.bottom - pixel;
			}
			if (value !== start) {
				if (start === 0) { // include zero tick
					var offset = helpers.getValueOrDefault(
						me.options.ticks.fontSize,
						Chart.defaults.global.defaultFontSize
					);
					value -= offset;
					innerDimension -= offset;
					start = firstTickValue;
				}
				value *= log10(end) - log10(start);
				value /= innerDimension;
				value = Math.pow(10, log10(start) + value);
			}
			return value;
		}
	});

	scaleService.registerScaleType('logarithmic', LogarithmicScale, defaultConfig);
};


/***/ }),

/***/ "./node_modules/chart.js/src/scales/scale.radialLinear.js":
/*!****************************************************************!*\
  !*** ./node_modules/chart.js/src/scales/scale.radialLinear.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var defaults = __webpack_require__(/*! ../core/core.defaults */ "./node_modules/chart.js/src/core/core.defaults.js");
var helpers = __webpack_require__(/*! ../helpers/index */ "./node_modules/chart.js/src/helpers/index.js");
var scaleService = __webpack_require__(/*! ../core/core.scaleService */ "./node_modules/chart.js/src/core/core.scaleService.js");
var Ticks = __webpack_require__(/*! ../core/core.ticks */ "./node_modules/chart.js/src/core/core.ticks.js");

module.exports = function(Chart) {

	var globalDefaults = defaults.global;

	var defaultConfig = {
		display: true,

		// Boolean - Whether to animate scaling the chart from the centre
		animate: true,
		position: 'chartArea',

		angleLines: {
			display: true,
			color: 'rgba(0, 0, 0, 0.1)',
			lineWidth: 1
		},

		gridLines: {
			circular: false
		},

		// label settings
		ticks: {
			// Boolean - Show a backdrop to the scale label
			showLabelBackdrop: true,

			// String - The colour of the label backdrop
			backdropColor: 'rgba(255,255,255,0.75)',

			// Number - The backdrop padding above & below the label in pixels
			backdropPaddingY: 2,

			// Number - The backdrop padding to the side of the label in pixels
			backdropPaddingX: 2,

			callback: Ticks.formatters.linear
		},

		pointLabels: {
			// Boolean - if true, show point labels
			display: true,

			// Number - Point label font size in pixels
			fontSize: 10,

			// Function - Used to convert point labels
			callback: function(label) {
				return label;
			}
		}
	};

	function getValueCount(scale) {
		var opts = scale.options;
		return opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;
	}

	function getPointLabelFontOptions(scale) {
		var pointLabelOptions = scale.options.pointLabels;
		var fontSize = helpers.valueOrDefault(pointLabelOptions.fontSize, globalDefaults.defaultFontSize);
		var fontStyle = helpers.valueOrDefault(pointLabelOptions.fontStyle, globalDefaults.defaultFontStyle);
		var fontFamily = helpers.valueOrDefault(pointLabelOptions.fontFamily, globalDefaults.defaultFontFamily);
		var font = helpers.fontString(fontSize, fontStyle, fontFamily);

		return {
			size: fontSize,
			style: fontStyle,
			family: fontFamily,
			font: font
		};
	}

	function measureLabelSize(ctx, fontSize, label) {
		if (helpers.isArray(label)) {
			return {
				w: helpers.longestText(ctx, ctx.font, label),
				h: (label.length * fontSize) + ((label.length - 1) * 1.5 * fontSize)
			};
		}

		return {
			w: ctx.measureText(label).width,
			h: fontSize
		};
	}

	function determineLimits(angle, pos, size, min, max) {
		if (angle === min || angle === max) {
			return {
				start: pos - (size / 2),
				end: pos + (size / 2)
			};
		} else if (angle < min || angle > max) {
			return {
				start: pos - size - 5,
				end: pos
			};
		}

		return {
			start: pos,
			end: pos + size + 5
		};
	}

	/**
	 * Helper function to fit a radial linear scale with point labels
	 */
	function fitWithPointLabels(scale) {
		/*
		 * Right, this is really confusing and there is a lot of maths going on here
		 * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9
		 *
		 * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif
		 *
		 * Solution:
		 *
		 * We assume the radius of the polygon is half the size of the canvas at first
		 * at each index we check if the text overlaps.
		 *
		 * Where it does, we store that angle and that index.
		 *
		 * After finding the largest index and angle we calculate how much we need to remove
		 * from the shape radius to move the point inwards by that x.
		 *
		 * We average the left and right distances to get the maximum shape radius that can fit in the box
		 * along with labels.
		 *
		 * Once we have that, we can find the centre point for the chart, by taking the x text protrusion
		 * on each side, removing that from the size, halving it and adding the left x protrusion width.
		 *
		 * This will mean we have a shape fitted to the canvas, as large as it can be with the labels
		 * and position it in the most space efficient manner
		 *
		 * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif
		 */

		var plFont = getPointLabelFontOptions(scale);

		// Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.
		// Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points
		var largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);
		var furthestLimits = {
			r: scale.width,
			l: 0,
			t: scale.height,
			b: 0
		};
		var furthestAngles = {};
		var i, textSize, pointPosition;

		scale.ctx.font = plFont.font;
		scale._pointLabelSizes = [];

		var valueCount = getValueCount(scale);
		for (i = 0; i < valueCount; i++) {
			pointPosition = scale.getPointPosition(i, largestPossibleRadius);
			textSize = measureLabelSize(scale.ctx, plFont.size, scale.pointLabels[i] || '');
			scale._pointLabelSizes[i] = textSize;

			// Add quarter circle to make degree 0 mean top of circle
			var angleRadians = scale.getIndexAngle(i);
			var angle = helpers.toDegrees(angleRadians) % 360;
			var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);
			var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);

			if (hLimits.start < furthestLimits.l) {
				furthestLimits.l = hLimits.start;
				furthestAngles.l = angleRadians;
			}

			if (hLimits.end > furthestLimits.r) {
				furthestLimits.r = hLimits.end;
				furthestAngles.r = angleRadians;
			}

			if (vLimits.start < furthestLimits.t) {
				furthestLimits.t = vLimits.start;
				furthestAngles.t = angleRadians;
			}

			if (vLimits.end > furthestLimits.b) {
				furthestLimits.b = vLimits.end;
				furthestAngles.b = angleRadians;
			}
		}

		scale.setReductions(largestPossibleRadius, furthestLimits, furthestAngles);
	}

	/**
	 * Helper function to fit a radial linear scale with no point labels
	 */
	function fit(scale) {
		var largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);
		scale.drawingArea = Math.round(largestPossibleRadius);
		scale.setCenterPoint(0, 0, 0, 0);
	}

	function getTextAlignForAngle(angle) {
		if (angle === 0 || angle === 180) {
			return 'center';
		} else if (angle < 180) {
			return 'left';
		}

		return 'right';
	}

	function fillText(ctx, text, position, fontSize) {
		if (helpers.isArray(text)) {
			var y = position.y;
			var spacing = 1.5 * fontSize;

			for (var i = 0; i < text.length; ++i) {
				ctx.fillText(text[i], position.x, y);
				y += spacing;
			}
		} else {
			ctx.fillText(text, position.x, position.y);
		}
	}

	function adjustPointPositionForLabelHeight(angle, textSize, position) {
		if (angle === 90 || angle === 270) {
			position.y -= (textSize.h / 2);
		} else if (angle > 270 || angle < 90) {
			position.y -= textSize.h;
		}
	}

	function drawPointLabels(scale) {
		var ctx = scale.ctx;
		var opts = scale.options;
		var angleLineOpts = opts.angleLines;
		var pointLabelOpts = opts.pointLabels;

		ctx.lineWidth = angleLineOpts.lineWidth;
		ctx.strokeStyle = angleLineOpts.color;

		var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);

		// Point Label Font
		var plFont = getPointLabelFontOptions(scale);

		ctx.textBaseline = 'top';

		for (var i = getValueCount(scale) - 1; i >= 0; i--) {
			if (angleLineOpts.display) {
				var outerPosition = scale.getPointPosition(i, outerDistance);
				ctx.beginPath();
				ctx.moveTo(scale.xCenter, scale.yCenter);
				ctx.lineTo(outerPosition.x, outerPosition.y);
				ctx.stroke();
				ctx.closePath();
			}

			if (pointLabelOpts.display) {
				// Extra 3px out for some label spacing
				var pointLabelPosition = scale.getPointPosition(i, outerDistance + 5);

				// Keep this in loop since we may support array properties here
				var pointLabelFontColor = helpers.valueAtIndexOrDefault(pointLabelOpts.fontColor, i, globalDefaults.defaultFontColor);
				ctx.font = plFont.font;
				ctx.fillStyle = pointLabelFontColor;

				var angleRadians = scale.getIndexAngle(i);
				var angle = helpers.toDegrees(angleRadians);
				ctx.textAlign = getTextAlignForAngle(angle);
				adjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);
				fillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.size);
			}
		}
	}

	function drawRadiusLine(scale, gridLineOpts, radius, index) {
		var ctx = scale.ctx;
		ctx.strokeStyle = helpers.valueAtIndexOrDefault(gridLineOpts.color, index - 1);
		ctx.lineWidth = helpers.valueAtIndexOrDefault(gridLineOpts.lineWidth, index - 1);

		if (scale.options.gridLines.circular) {
			// Draw circular arcs between the points
			ctx.beginPath();
			ctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);
			ctx.closePath();
			ctx.stroke();
		} else {
			// Draw straight lines connecting each index
			var valueCount = getValueCount(scale);

			if (valueCount === 0) {
				return;
			}

			ctx.beginPath();
			var pointPosition = scale.getPointPosition(0, radius);
			ctx.moveTo(pointPosition.x, pointPosition.y);

			for (var i = 1; i < valueCount; i++) {
				pointPosition = scale.getPointPosition(i, radius);
				ctx.lineTo(pointPosition.x, pointPosition.y);
			}

			ctx.closePath();
			ctx.stroke();
		}
	}

	function numberOrZero(param) {
		return helpers.isNumber(param) ? param : 0;
	}

	var LinearRadialScale = Chart.LinearScaleBase.extend({
		setDimensions: function() {
			var me = this;
			var opts = me.options;
			var tickOpts = opts.ticks;
			// Set the unconstrained dimension before label rotation
			me.width = me.maxWidth;
			me.height = me.maxHeight;
			me.xCenter = Math.round(me.width / 2);
			me.yCenter = Math.round(me.height / 2);

			var minSize = helpers.min([me.height, me.width]);
			var tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);
			me.drawingArea = opts.display ? (minSize / 2) - (tickFontSize / 2 + tickOpts.backdropPaddingY) : (minSize / 2);
		},
		determineDataLimits: function() {
			var me = this;
			var chart = me.chart;
			var min = Number.POSITIVE_INFINITY;
			var max = Number.NEGATIVE_INFINITY;

			helpers.each(chart.data.datasets, function(dataset, datasetIndex) {
				if (chart.isDatasetVisible(datasetIndex)) {
					var meta = chart.getDatasetMeta(datasetIndex);

					helpers.each(dataset.data, function(rawValue, index) {
						var value = +me.getRightValue(rawValue);
						if (isNaN(value) || meta.data[index].hidden) {
							return;
						}

						min = Math.min(value, min);
						max = Math.max(value, max);
					});
				}
			});

			me.min = (min === Number.POSITIVE_INFINITY ? 0 : min);
			me.max = (max === Number.NEGATIVE_INFINITY ? 0 : max);

			// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero
			me.handleTickRangeOptions();
		},
		getTickLimit: function() {
			var tickOpts = this.options.ticks;
			var tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);
			return Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(this.drawingArea / (1.5 * tickFontSize)));
		},
		convertTicksToLabels: function() {
			var me = this;

			Chart.LinearScaleBase.prototype.convertTicksToLabels.call(me);

			// Point labels
			me.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);
		},
		getLabelForIndex: function(index, datasetIndex) {
			return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);
		},
		fit: function() {
			if (this.options.pointLabels.display) {
				fitWithPointLabels(this);
			} else {
				fit(this);
			}
		},
		/**
		 * Set radius reductions and determine new radius and center point
		 * @private
		 */
		setReductions: function(largestPossibleRadius, furthestLimits, furthestAngles) {
			var me = this;
			var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);
			var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);
			var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);
			var radiusReductionBottom = -Math.max(furthestLimits.b - me.height, 0) / Math.cos(furthestAngles.b);

			radiusReductionLeft = numberOrZero(radiusReductionLeft);
			radiusReductionRight = numberOrZero(radiusReductionRight);
			radiusReductionTop = numberOrZero(radiusReductionTop);
			radiusReductionBottom = numberOrZero(radiusReductionBottom);

			me.drawingArea = Math.min(
				Math.round(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),
				Math.round(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));
			me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);
		},
		setCenterPoint: function(leftMovement, rightMovement, topMovement, bottomMovement) {
			var me = this;
			var maxRight = me.width - rightMovement - me.drawingArea;
			var maxLeft = leftMovement + me.drawingArea;
			var maxTop = topMovement + me.drawingArea;
			var maxBottom = me.height - bottomMovement - me.drawingArea;

			me.xCenter = Math.round(((maxLeft + maxRight) / 2) + me.left);
			me.yCenter = Math.round(((maxTop + maxBottom) / 2) + me.top);
		},

		getIndexAngle: function(index) {
			var angleMultiplier = (Math.PI * 2) / getValueCount(this);
			var startAngle = this.chart.options && this.chart.options.startAngle ?
				this.chart.options.startAngle :
				0;

			var startAngleRadians = startAngle * Math.PI * 2 / 360;

			// Start from the top instead of right, so remove a quarter of the circle
			return index * angleMultiplier + startAngleRadians;
		},
		getDistanceFromCenterForValue: function(value) {
			var me = this;

			if (value === null) {
				return 0; // null always in center
			}

			// Take into account half font size + the yPadding of the top value
			var scalingFactor = me.drawingArea / (me.max - me.min);
			if (me.options.ticks.reverse) {
				return (me.max - value) * scalingFactor;
			}
			return (value - me.min) * scalingFactor;
		},
		getPointPosition: function(index, distanceFromCenter) {
			var me = this;
			var thisAngle = me.getIndexAngle(index) - (Math.PI / 2);
			return {
				x: Math.round(Math.cos(thisAngle) * distanceFromCenter) + me.xCenter,
				y: Math.round(Math.sin(thisAngle) * distanceFromCenter) + me.yCenter
			};
		},
		getPointPositionForValue: function(index, value) {
			return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));
		},

		getBasePosition: function() {
			var me = this;
			var min = me.min;
			var max = me.max;

			return me.getPointPositionForValue(0,
				me.beginAtZero ? 0 :
				min < 0 && max < 0 ? max :
				min > 0 && max > 0 ? min :
				0);
		},

		draw: function() {
			var me = this;
			var opts = me.options;
			var gridLineOpts = opts.gridLines;
			var tickOpts = opts.ticks;
			var valueOrDefault = helpers.valueOrDefault;

			if (opts.display) {
				var ctx = me.ctx;
				var startAngle = this.getIndexAngle(0);

				// Tick Font
				var tickFontSize = valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);
				var tickFontStyle = valueOrDefault(tickOpts.fontStyle, globalDefaults.defaultFontStyle);
				var tickFontFamily = valueOrDefault(tickOpts.fontFamily, globalDefaults.defaultFontFamily);
				var tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);

				helpers.each(me.ticks, function(label, index) {
					// Don't draw a centre value (if it is minimum)
					if (index > 0 || tickOpts.reverse) {
						var yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]);

						// Draw circular lines around the scale
						if (gridLineOpts.display && index !== 0) {
							drawRadiusLine(me, gridLineOpts, yCenterOffset, index);
						}

						if (tickOpts.display) {
							var tickFontColor = valueOrDefault(tickOpts.fontColor, globalDefaults.defaultFontColor);
							ctx.font = tickLabelFont;

							ctx.save();
							ctx.translate(me.xCenter, me.yCenter);
							ctx.rotate(startAngle);

							if (tickOpts.showLabelBackdrop) {
								var labelWidth = ctx.measureText(label).width;
								ctx.fillStyle = tickOpts.backdropColor;
								ctx.fillRect(
									-labelWidth / 2 - tickOpts.backdropPaddingX,
									-yCenterOffset - tickFontSize / 2 - tickOpts.backdropPaddingY,
									labelWidth + tickOpts.backdropPaddingX * 2,
									tickFontSize + tickOpts.backdropPaddingY * 2
								);
							}

							ctx.textAlign = 'center';
							ctx.textBaseline = 'middle';
							ctx.fillStyle = tickFontColor;
							ctx.fillText(label, 0, -yCenterOffset);
							ctx.restore();
						}
					}
				});

				if (opts.angleLines.display || opts.pointLabels.display) {
					drawPointLabels(me);
				}
			}
		}
	});

	scaleService.registerScaleType('radialLinear', LinearRadialScale, defaultConfig);
};


/***/ }),

/***/ "./node_modules/chart.js/src/scales/scale.time.js":
/*!********************************************************!*\
  !*** ./node_modules/chart.js/src/scales/scale.time.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* global window: false */


var moment = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
moment = typeof moment === 'function' ? moment : window.moment;

var defaults = __webpack_require__(/*! ../core/core.defaults */ "./node_modules/chart.js/src/core/core.defaults.js");
var helpers = __webpack_require__(/*! ../helpers/index */ "./node_modules/chart.js/src/helpers/index.js");
var Scale = __webpack_require__(/*! ../core/core.scale */ "./node_modules/chart.js/src/core/core.scale.js");
var scaleService = __webpack_require__(/*! ../core/core.scaleService */ "./node_modules/chart.js/src/core/core.scaleService.js");

// Integer constants are from the ES6 spec.
var MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;
var MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;

var INTERVALS = {
	millisecond: {
		common: true,
		size: 1,
		steps: [1, 2, 5, 10, 20, 50, 100, 250, 500]
	},
	second: {
		common: true,
		size: 1000,
		steps: [1, 2, 5, 10, 15, 30]
	},
	minute: {
		common: true,
		size: 60000,
		steps: [1, 2, 5, 10, 15, 30]
	},
	hour: {
		common: true,
		size: 3600000,
		steps: [1, 2, 3, 6, 12]
	},
	day: {
		common: true,
		size: 86400000,
		steps: [1, 2, 5]
	},
	week: {
		common: false,
		size: 604800000,
		steps: [1, 2, 3, 4]
	},
	month: {
		common: true,
		size: 2.628e9,
		steps: [1, 2, 3]
	},
	quarter: {
		common: false,
		size: 7.884e9,
		steps: [1, 2, 3, 4]
	},
	year: {
		common: true,
		size: 3.154e10
	}
};

var UNITS = Object.keys(INTERVALS);

function sorter(a, b) {
	return a - b;
}

function arrayUnique(items) {
	var hash = {};
	var out = [];
	var i, ilen, item;

	for (i = 0, ilen = items.length; i < ilen; ++i) {
		item = items[i];
		if (!hash[item]) {
			hash[item] = true;
			out.push(item);
		}
	}

	return out;
}

/**
 * Returns an array of {time, pos} objects used to interpolate a specific `time` or position
 * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is
 * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other
 * extremity (left + width or top + height). Note that it would be more optimized to directly
 * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need
 * to create the lookup table. The table ALWAYS contains at least two items: min and max.
 *
 * @param {Number[]} timestamps - timestamps sorted from lowest to highest.
 * @param {String} distribution - If 'linear', timestamps will be spread linearly along the min
 * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.
 * If 'series', timestamps will be positioned at the same distance from each other. In this
 * case, only timestamps that break the time linearity are registered, meaning that in the
 * best case, all timestamps are linear, the table contains only min and max.
 */
function buildLookupTable(timestamps, min, max, distribution) {
	if (distribution === 'linear' || !timestamps.length) {
		return [
			{time: min, pos: 0},
			{time: max, pos: 1}
		];
	}

	var table = [];
	var items = [min];
	var i, ilen, prev, curr, next;

	for (i = 0, ilen = timestamps.length; i < ilen; ++i) {
		curr = timestamps[i];
		if (curr > min && curr < max) {
			items.push(curr);
		}
	}

	items.push(max);

	for (i = 0, ilen = items.length; i < ilen; ++i) {
		next = items[i + 1];
		prev = items[i - 1];
		curr = items[i];

		// only add points that breaks the scale linearity
		if (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {
			table.push({time: curr, pos: i / (ilen - 1)});
		}
	}

	return table;
}

// @see adapted from http://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/
function lookup(table, key, value) {
	var lo = 0;
	var hi = table.length - 1;
	var mid, i0, i1;

	while (lo >= 0 && lo <= hi) {
		mid = (lo + hi) >> 1;
		i0 = table[mid - 1] || null;
		i1 = table[mid];

		if (!i0) {
			// given value is outside table (before first item)
			return {lo: null, hi: i1};
		} else if (i1[key] < value) {
			lo = mid + 1;
		} else if (i0[key] > value) {
			hi = mid - 1;
		} else {
			return {lo: i0, hi: i1};
		}
	}

	// given value is outside table (after last item)
	return {lo: i1, hi: null};
}

/**
 * Linearly interpolates the given source `value` using the table items `skey` values and
 * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')
 * returns the position for a timestamp equal to 42. If value is out of bounds, values at
 * index [0, 1] or [n - 1, n] are used for the interpolation.
 */
function interpolate(table, skey, sval, tkey) {
	var range = lookup(table, skey, sval);

	// Note: the lookup table ALWAYS contains at least 2 items (min and max)
	var prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;
	var next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;

	var span = next[skey] - prev[skey];
	var ratio = span ? (sval - prev[skey]) / span : 0;
	var offset = (next[tkey] - prev[tkey]) * ratio;

	return prev[tkey] + offset;
}

/**
 * Convert the given value to a moment object using the given time options.
 * @see http://momentjs.com/docs/#/parsing/
 */
function momentify(value, options) {
	var parser = options.parser;
	var format = options.parser || options.format;

	if (typeof parser === 'function') {
		return parser(value);
	}

	if (typeof value === 'string' && typeof format === 'string') {
		return moment(value, format);
	}

	if (!(value instanceof moment)) {
		value = moment(value);
	}

	if (value.isValid()) {
		return value;
	}

	// Labels are in an incompatible moment format and no `parser` has been provided.
	// The user might still use the deprecated `format` option to convert his inputs.
	if (typeof format === 'function') {
		return format(value);
	}

	return value;
}

function parse(input, scale) {
	if (helpers.isNullOrUndef(input)) {
		return null;
	}

	var options = scale.options.time;
	var value = momentify(scale.getRightValue(input), options);
	if (!value.isValid()) {
		return null;
	}

	if (options.round) {
		value.startOf(options.round);
	}

	return value.valueOf();
}

/**
 * Returns the number of unit to skip to be able to display up to `capacity` number of ticks
 * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.
 */
function determineStepSize(min, max, unit, capacity) {
	var range = max - min;
	var interval = INTERVALS[unit];
	var milliseconds = interval.size;
	var steps = interval.steps;
	var i, ilen, factor;

	if (!steps) {
		return Math.ceil(range / (capacity * milliseconds));
	}

	for (i = 0, ilen = steps.length; i < ilen; ++i) {
		factor = steps[i];
		if (Math.ceil(range / (milliseconds * factor)) <= capacity) {
			break;
		}
	}

	return factor;
}

/**
 * Figures out what unit results in an appropriate number of auto-generated ticks
 */
function determineUnitForAutoTicks(minUnit, min, max, capacity) {
	var ilen = UNITS.length;
	var i, interval, factor;

	for (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {
		interval = INTERVALS[UNITS[i]];
		factor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;

		if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {
			return UNITS[i];
		}
	}

	return UNITS[ilen - 1];
}

/**
 * Figures out what unit to format a set of ticks with
 */
function determineUnitForFormatting(ticks, minUnit, min, max) {
	var duration = moment.duration(moment(max).diff(moment(min)));
	var ilen = UNITS.length;
	var i, unit;

	for (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {
		unit = UNITS[i];
		if (INTERVALS[unit].common && duration.as(unit) >= ticks.length) {
			return unit;
		}
	}

	return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];
}

function determineMajorUnit(unit) {
	for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {
		if (INTERVALS[UNITS[i]].common) {
			return UNITS[i];
		}
	}
}

/**
 * Generates a maximum of `capacity` timestamps between min and max, rounded to the
 * `minor` unit, aligned on the `major` unit and using the given scale time `options`.
 * Important: this method can return ticks outside the min and max range, it's the
 * responsibility of the calling code to clamp values if needed.
 */
function generate(min, max, capacity, options) {
	var timeOpts = options.time;
	var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);
	var major = determineMajorUnit(minor);
	var stepSize = helpers.valueOrDefault(timeOpts.stepSize, timeOpts.unitStepSize);
	var weekday = minor === 'week' ? timeOpts.isoWeekday : false;
	var majorTicksEnabled = options.ticks.major.enabled;
	var interval = INTERVALS[minor];
	var first = moment(min);
	var last = moment(max);
	var ticks = [];
	var time;

	if (!stepSize) {
		stepSize = determineStepSize(min, max, minor, capacity);
	}

	// For 'week' unit, handle the first day of week option
	if (weekday) {
		first = first.isoWeekday(weekday);
		last = last.isoWeekday(weekday);
	}

	// Align first/last ticks on unit
	first = first.startOf(weekday ? 'day' : minor);
	last = last.startOf(weekday ? 'day' : minor);

	// Make sure that the last tick include max
	if (last < max) {
		last.add(1, minor);
	}

	time = moment(first);

	if (majorTicksEnabled && major && !weekday && !timeOpts.round) {
		// Align the first tick on the previous `minor` unit aligned on the `major` unit:
		// we first aligned time on the previous `major` unit then add the number of full
		// stepSize there is between first and the previous major time.
		time.startOf(major);
		time.add(~~((first - time) / (interval.size * stepSize)) * stepSize, minor);
	}

	for (; time < last; time.add(stepSize, minor)) {
		ticks.push(+time);
	}

	ticks.push(+time);

	return ticks;
}

/**
 * Returns the right and left offsets from edges in the form of {left, right}.
 * Offsets are added when the `offset` option is true.
 */
function computeOffsets(table, ticks, min, max, options) {
	var left = 0;
	var right = 0;
	var upper, lower;

	if (options.offset && ticks.length) {
		if (!options.time.min) {
			upper = ticks.length > 1 ? ticks[1] : max;
			lower = ticks[0];
			left = (
				interpolate(table, 'time', upper, 'pos') -
				interpolate(table, 'time', lower, 'pos')
			) / 2;
		}
		if (!options.time.max) {
			upper = ticks[ticks.length - 1];
			lower = ticks.length > 1 ? ticks[ticks.length - 2] : min;
			right = (
				interpolate(table, 'time', upper, 'pos') -
				interpolate(table, 'time', lower, 'pos')
			) / 2;
		}
	}

	return {left: left, right: right};
}

function ticksFromTimestamps(values, majorUnit) {
	var ticks = [];
	var i, ilen, value, major;

	for (i = 0, ilen = values.length; i < ilen; ++i) {
		value = values[i];
		major = majorUnit ? value === +moment(value).startOf(majorUnit) : false;

		ticks.push({
			value: value,
			major: major
		});
	}

	return ticks;
}

function determineLabelFormat(data, timeOpts) {
	var i, momentDate, hasTime;
	var ilen = data.length;

	// find the label with the most parts (milliseconds, minutes, etc.)
	// format all labels with the same level of detail as the most specific label
	for (i = 0; i < ilen; i++) {
		momentDate = momentify(data[i], timeOpts);
		if (momentDate.millisecond() !== 0) {
			return 'MMM D, YYYY h:mm:ss.SSS a';
		}
		if (momentDate.second() !== 0 || momentDate.minute() !== 0 || momentDate.hour() !== 0) {
			hasTime = true;
		}
	}
	if (hasTime) {
		return 'MMM D, YYYY h:mm:ss a';
	}
	return 'MMM D, YYYY';
}

module.exports = function() {

	var defaultConfig = {
		position: 'bottom',

		/**
		 * Data distribution along the scale:
		 * - 'linear': data are spread according to their time (distances can vary),
		 * - 'series': data are spread at the same distance from each other.
		 * @see https://github.com/chartjs/Chart.js/pull/4507
		 * @since 2.7.0
		 */
		distribution: 'linear',

		/**
		 * Scale boundary strategy (bypassed by min/max time options)
		 * - `data`: make sure data are fully visible, ticks outside are removed
		 * - `ticks`: make sure ticks are fully visible, data outside are truncated
		 * @see https://github.com/chartjs/Chart.js/pull/4556
		 * @since 2.7.0
		 */
		bounds: 'data',

		time: {
			parser: false, // false == a pattern string from http://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment
			format: false, // DEPRECATED false == date objects, moment object, callback or a pattern string from http://momentjs.com/docs/#/parsing/string-format/
			unit: false, // false == automatic or override with week, month, year, etc.
			round: false, // none, or override with week, month, year, etc.
			displayFormat: false, // DEPRECATED
			isoWeekday: false, // override week start day - see http://momentjs.com/docs/#/get-set/iso-weekday/
			minUnit: 'millisecond',

			// defaults to unit's corresponding unitFormat below or override using pattern string from http://momentjs.com/docs/#/displaying/format/
			displayFormats: {
				millisecond: 'h:mm:ss.SSS a', // 11:20:01.123 AM,
				second: 'h:mm:ss a', // 11:20:01 AM
				minute: 'h:mm a', // 11:20 AM
				hour: 'hA', // 5PM
				day: 'MMM D', // Sep 4
				week: 'll', // Week 46, or maybe "[W]WW - YYYY" ?
				month: 'MMM YYYY', // Sept 2015
				quarter: '[Q]Q - YYYY', // Q3
				year: 'YYYY' // 2015
			},
		},
		ticks: {
			autoSkip: false,

			/**
			 * Ticks generation input values:
			 * - 'auto': generates "optimal" ticks based on scale size and time options.
			 * - 'data': generates ticks from data (including labels from data {t|x|y} objects).
			 * - 'labels': generates ticks from user given `data.labels` values ONLY.
			 * @see https://github.com/chartjs/Chart.js/pull/4507
			 * @since 2.7.0
			 */
			source: 'auto',

			major: {
				enabled: false
			}
		}
	};

	var TimeScale = Scale.extend({
		initialize: function() {
			if (!moment) {
				throw new Error('Chart.js - Moment.js could not be found! You must include it before Chart.js to use the time scale. Download at https://momentjs.com');
			}

			this.mergeTicksOptions();

			Scale.prototype.initialize.call(this);
		},

		update: function() {
			var me = this;
			var options = me.options;

			// DEPRECATIONS: output a message only one time per update
			if (options.time && options.time.format) {
				console.warn('options.time.format is deprecated and replaced by options.time.parser.');
			}

			return Scale.prototype.update.apply(me, arguments);
		},

		/**
		 * Allows data to be referenced via 't' attribute
		 */
		getRightValue: function(rawValue) {
			if (rawValue && rawValue.t !== undefined) {
				rawValue = rawValue.t;
			}
			return Scale.prototype.getRightValue.call(this, rawValue);
		},

		determineDataLimits: function() {
			var me = this;
			var chart = me.chart;
			var timeOpts = me.options.time;
			var unit = timeOpts.unit || 'day';
			var min = MAX_INTEGER;
			var max = MIN_INTEGER;
			var timestamps = [];
			var datasets = [];
			var labels = [];
			var i, j, ilen, jlen, data, timestamp;

			// Convert labels to timestamps
			for (i = 0, ilen = chart.data.labels.length; i < ilen; ++i) {
				labels.push(parse(chart.data.labels[i], me));
			}

			// Convert data to timestamps
			for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {
				if (chart.isDatasetVisible(i)) {
					data = chart.data.datasets[i].data;

					// Let's consider that all data have the same format.
					if (helpers.isObject(data[0])) {
						datasets[i] = [];

						for (j = 0, jlen = data.length; j < jlen; ++j) {
							timestamp = parse(data[j], me);
							timestamps.push(timestamp);
							datasets[i][j] = timestamp;
						}
					} else {
						timestamps.push.apply(timestamps, labels);
						datasets[i] = labels.slice(0);
					}
				} else {
					datasets[i] = [];
				}
			}

			if (labels.length) {
				// Sort labels **after** data have been converted
				labels = arrayUnique(labels).sort(sorter);
				min = Math.min(min, labels[0]);
				max = Math.max(max, labels[labels.length - 1]);
			}

			if (timestamps.length) {
				timestamps = arrayUnique(timestamps).sort(sorter);
				min = Math.min(min, timestamps[0]);
				max = Math.max(max, timestamps[timestamps.length - 1]);
			}

			min = parse(timeOpts.min, me) || min;
			max = parse(timeOpts.max, me) || max;

			// In case there is no valid min/max, set limits based on unit time option
			min = min === MAX_INTEGER ? +moment().startOf(unit) : min;
			max = max === MIN_INTEGER ? +moment().endOf(unit) + 1 : max;

			// Make sure that max is strictly higher than min (required by the lookup table)
			me.min = Math.min(min, max);
			me.max = Math.max(min + 1, max);

			// PRIVATE
			me._horizontal = me.isHorizontal();
			me._table = [];
			me._timestamps = {
				data: timestamps,
				datasets: datasets,
				labels: labels
			};
		},

		buildTicks: function() {
			var me = this;
			var min = me.min;
			var max = me.max;
			var options = me.options;
			var timeOpts = options.time;
			var timestamps = [];
			var ticks = [];
			var i, ilen, timestamp;

			switch (options.ticks.source) {
			case 'data':
				timestamps = me._timestamps.data;
				break;
			case 'labels':
				timestamps = me._timestamps.labels;
				break;
			case 'auto':
			default:
				timestamps = generate(min, max, me.getLabelCapacity(min), options);
			}

			if (options.bounds === 'ticks' && timestamps.length) {
				min = timestamps[0];
				max = timestamps[timestamps.length - 1];
			}

			// Enforce limits with user min/max options
			min = parse(timeOpts.min, me) || min;
			max = parse(timeOpts.max, me) || max;

			// Remove ticks outside the min/max range
			for (i = 0, ilen = timestamps.length; i < ilen; ++i) {
				timestamp = timestamps[i];
				if (timestamp >= min && timestamp <= max) {
					ticks.push(timestamp);
				}
			}

			me.min = min;
			me.max = max;

			// PRIVATE
			me._unit = timeOpts.unit || determineUnitForFormatting(ticks, timeOpts.minUnit, me.min, me.max);
			me._majorUnit = determineMajorUnit(me._unit);
			me._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);
			me._offsets = computeOffsets(me._table, ticks, min, max, options);
			me._labelFormat = determineLabelFormat(me._timestamps.data, timeOpts);

			return ticksFromTimestamps(ticks, me._majorUnit);
		},

		getLabelForIndex: function(index, datasetIndex) {
			var me = this;
			var data = me.chart.data;
			var timeOpts = me.options.time;
			var label = data.labels && index < data.labels.length ? data.labels[index] : '';
			var value = data.datasets[datasetIndex].data[index];

			if (helpers.isObject(value)) {
				label = me.getRightValue(value);
			}
			if (timeOpts.tooltipFormat) {
				return momentify(label, timeOpts).format(timeOpts.tooltipFormat);
			}
			if (typeof label === 'string') {
				return label;
			}

			return momentify(label, timeOpts).format(me._labelFormat);
		},

		/**
		 * Function to format an individual tick mark
		 * @private
		 */
		tickFormatFunction: function(tick, index, ticks, formatOverride) {
			var me = this;
			var options = me.options;
			var time = tick.valueOf();
			var formats = options.time.displayFormats;
			var minorFormat = formats[me._unit];
			var majorUnit = me._majorUnit;
			var majorFormat = formats[majorUnit];
			var majorTime = tick.clone().startOf(majorUnit).valueOf();
			var majorTickOpts = options.ticks.major;
			var major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;
			var label = tick.format(formatOverride ? formatOverride : major ? majorFormat : minorFormat);
			var tickOpts = major ? majorTickOpts : options.ticks.minor;
			var formatter = helpers.valueOrDefault(tickOpts.callback, tickOpts.userCallback);

			return formatter ? formatter(label, index, ticks) : label;
		},

		convertTicksToLabels: function(ticks) {
			var labels = [];
			var i, ilen;

			for (i = 0, ilen = ticks.length; i < ilen; ++i) {
				labels.push(this.tickFormatFunction(moment(ticks[i].value), i, ticks));
			}

			return labels;
		},

		/**
		 * @private
		 */
		getPixelForOffset: function(time) {
			var me = this;
			var size = me._horizontal ? me.width : me.height;
			var start = me._horizontal ? me.left : me.top;
			var pos = interpolate(me._table, 'time', time, 'pos');

			return start + size * (me._offsets.left + pos) / (me._offsets.left + 1 + me._offsets.right);
		},

		getPixelForValue: function(value, index, datasetIndex) {
			var me = this;
			var time = null;

			if (index !== undefined && datasetIndex !== undefined) {
				time = me._timestamps.datasets[datasetIndex][index];
			}

			if (time === null) {
				time = parse(value, me);
			}

			if (time !== null) {
				return me.getPixelForOffset(time);
			}
		},

		getPixelForTick: function(index) {
			var ticks = this.getTicks();
			return index >= 0 && index < ticks.length ?
				this.getPixelForOffset(ticks[index].value) :
				null;
		},

		getValueForPixel: function(pixel) {
			var me = this;
			var size = me._horizontal ? me.width : me.height;
			var start = me._horizontal ? me.left : me.top;
			var pos = (size ? (pixel - start) / size : 0) * (me._offsets.left + 1 + me._offsets.left) - me._offsets.right;
			var time = interpolate(me._table, 'pos', pos, 'time');

			return moment(time);
		},

		/**
		 * Crude approximation of what the label width might be
		 * @private
		 */
		getLabelWidth: function(label) {
			var me = this;
			var ticksOpts = me.options.ticks;
			var tickLabelWidth = me.ctx.measureText(label).width;
			var angle = helpers.toRadians(ticksOpts.maxRotation);
			var cosRotation = Math.cos(angle);
			var sinRotation = Math.sin(angle);
			var tickFontSize = helpers.valueOrDefault(ticksOpts.fontSize, defaults.global.defaultFontSize);

			return (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation);
		},

		/**
		 * @private
		 */
		getLabelCapacity: function(exampleTime) {
			var me = this;

			var formatOverride = me.options.time.displayFormats.millisecond;	// Pick the longest format for guestimation

			var exampleLabel = me.tickFormatFunction(moment(exampleTime), 0, [], formatOverride);
			var tickLabelWidth = me.getLabelWidth(exampleLabel);
			var innerWidth = me.isHorizontal() ? me.width : me.height;

			var capacity = Math.floor(innerWidth / tickLabelWidth);
			return capacity > 0 ? capacity : 1;
		}
	});

	scaleService.registerScaleType('time', TimeScale, defaultConfig);
};


/***/ }),

/***/ "./node_modules/chartjs-color-string/color-string.js":
/*!***********************************************************!*\
  !*** ./node_modules/chartjs-color-string/color-string.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* MIT license */
var colorNames = __webpack_require__(/*! color-name */ "./node_modules/color-name/index.js");

module.exports = {
   getRgba: getRgba,
   getHsla: getHsla,
   getRgb: getRgb,
   getHsl: getHsl,
   getHwb: getHwb,
   getAlpha: getAlpha,

   hexString: hexString,
   rgbString: rgbString,
   rgbaString: rgbaString,
   percentString: percentString,
   percentaString: percentaString,
   hslString: hslString,
   hslaString: hslaString,
   hwbString: hwbString,
   keyword: keyword
}

function getRgba(string) {
   if (!string) {
      return;
   }
   var abbr =  /^#([a-fA-F0-9]{3})$/i,
       hex =  /^#([a-fA-F0-9]{6})$/i,
       rgba = /^rgba?\(\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/i,
       per = /^rgba?\(\s*([+-]?[\d\.]+)\%\s*,\s*([+-]?[\d\.]+)\%\s*,\s*([+-]?[\d\.]+)\%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/i,
       keyword = /(\w+)/;

   var rgb = [0, 0, 0],
       a = 1,
       match = string.match(abbr);
   if (match) {
      match = match[1];
      for (var i = 0; i < rgb.length; i++) {
         rgb[i] = parseInt(match[i] + match[i], 16);
      }
   }
   else if (match = string.match(hex)) {
      match = match[1];
      for (var i = 0; i < rgb.length; i++) {
         rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);
      }
   }
   else if (match = string.match(rgba)) {
      for (var i = 0; i < rgb.length; i++) {
         rgb[i] = parseInt(match[i + 1]);
      }
      a = parseFloat(match[4]);
   }
   else if (match = string.match(per)) {
      for (var i = 0; i < rgb.length; i++) {
         rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);
      }
      a = parseFloat(match[4]);
   }
   else if (match = string.match(keyword)) {
      if (match[1] == "transparent") {
         return [0, 0, 0, 0];
      }
      rgb = colorNames[match[1]];
      if (!rgb) {
         return;
      }
   }

   for (var i = 0; i < rgb.length; i++) {
      rgb[i] = scale(rgb[i], 0, 255);
   }
   if (!a && a != 0) {
      a = 1;
   }
   else {
      a = scale(a, 0, 1);
   }
   rgb[3] = a;
   return rgb;
}

function getHsla(string) {
   if (!string) {
      return;
   }
   var hsl = /^hsla?\(\s*([+-]?\d+)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)/;
   var match = string.match(hsl);
   if (match) {
      var alpha = parseFloat(match[4]);
      var h = scale(parseInt(match[1]), 0, 360),
          s = scale(parseFloat(match[2]), 0, 100),
          l = scale(parseFloat(match[3]), 0, 100),
          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);
      return [h, s, l, a];
   }
}

function getHwb(string) {
   if (!string) {
      return;
   }
   var hwb = /^hwb\(\s*([+-]?\d+)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)/;
   var match = string.match(hwb);
   if (match) {
    var alpha = parseFloat(match[4]);
      var h = scale(parseInt(match[1]), 0, 360),
          w = scale(parseFloat(match[2]), 0, 100),
          b = scale(parseFloat(match[3]), 0, 100),
          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);
      return [h, w, b, a];
   }
}

function getRgb(string) {
   var rgba = getRgba(string);
   return rgba && rgba.slice(0, 3);
}

function getHsl(string) {
  var hsla = getHsla(string);
  return hsla && hsla.slice(0, 3);
}

function getAlpha(string) {
   var vals = getRgba(string);
   if (vals) {
      return vals[3];
   }
   else if (vals = getHsla(string)) {
      return vals[3];
   }
   else if (vals = getHwb(string)) {
      return vals[3];
   }
}

// generators
function hexString(rgb) {
   return "#" + hexDouble(rgb[0]) + hexDouble(rgb[1])
              + hexDouble(rgb[2]);
}

function rgbString(rgba, alpha) {
   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {
      return rgbaString(rgba, alpha);
   }
   return "rgb(" + rgba[0] + ", " + rgba[1] + ", " + rgba[2] + ")";
}

function rgbaString(rgba, alpha) {
   if (alpha === undefined) {
      alpha = (rgba[3] !== undefined ? rgba[3] : 1);
   }
   return "rgba(" + rgba[0] + ", " + rgba[1] + ", " + rgba[2]
           + ", " + alpha + ")";
}

function percentString(rgba, alpha) {
   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {
      return percentaString(rgba, alpha);
   }
   var r = Math.round(rgba[0]/255 * 100),
       g = Math.round(rgba[1]/255 * 100),
       b = Math.round(rgba[2]/255 * 100);

   return "rgb(" + r + "%, " + g + "%, " + b + "%)";
}

function percentaString(rgba, alpha) {
   var r = Math.round(rgba[0]/255 * 100),
       g = Math.round(rgba[1]/255 * 100),
       b = Math.round(rgba[2]/255 * 100);
   return "rgba(" + r + "%, " + g + "%, " + b + "%, " + (alpha || rgba[3] || 1) + ")";
}

function hslString(hsla, alpha) {
   if (alpha < 1 || (hsla[3] && hsla[3] < 1)) {
      return hslaString(hsla, alpha);
   }
   return "hsl(" + hsla[0] + ", " + hsla[1] + "%, " + hsla[2] + "%)";
}

function hslaString(hsla, alpha) {
   if (alpha === undefined) {
      alpha = (hsla[3] !== undefined ? hsla[3] : 1);
   }
   return "hsla(" + hsla[0] + ", " + hsla[1] + "%, " + hsla[2] + "%, "
           + alpha + ")";
}

// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax
// (hwb have alpha optional & 1 is default value)
function hwbString(hwb, alpha) {
   if (alpha === undefined) {
      alpha = (hwb[3] !== undefined ? hwb[3] : 1);
   }
   return "hwb(" + hwb[0] + ", " + hwb[1] + "%, " + hwb[2] + "%"
           + (alpha !== undefined && alpha !== 1 ? ", " + alpha : "") + ")";
}

function keyword(rgb) {
  return reverseNames[rgb.slice(0, 3)];
}

// helpers
function scale(num, min, max) {
   return Math.min(Math.max(min, num), max);
}

function hexDouble(num) {
  var str = num.toString(16).toUpperCase();
  return (str.length < 2) ? "0" + str : str;
}


//create a list of reverse color names
var reverseNames = {};
for (var name in colorNames) {
   reverseNames[colorNames[name]] = name;
}


/***/ }),

/***/ "./node_modules/chartjs-color/index.js":
/*!*********************************************!*\
  !*** ./node_modules/chartjs-color/index.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* MIT license */
var convert = __webpack_require__(/*! color-convert */ "./node_modules/chartjs-color/node_modules/color-convert/index.js");
var string = __webpack_require__(/*! chartjs-color-string */ "./node_modules/chartjs-color-string/color-string.js");

var Color = function (obj) {
	if (obj instanceof Color) {
		return obj;
	}
	if (!(this instanceof Color)) {
		return new Color(obj);
	}

	this.valid = false;
	this.values = {
		rgb: [0, 0, 0],
		hsl: [0, 0, 0],
		hsv: [0, 0, 0],
		hwb: [0, 0, 0],
		cmyk: [0, 0, 0, 0],
		alpha: 1
	};

	// parse Color() argument
	var vals;
	if (typeof obj === 'string') {
		vals = string.getRgba(obj);
		if (vals) {
			this.setValues('rgb', vals);
		} else if (vals = string.getHsla(obj)) {
			this.setValues('hsl', vals);
		} else if (vals = string.getHwb(obj)) {
			this.setValues('hwb', vals);
		}
	} else if (typeof obj === 'object') {
		vals = obj;
		if (vals.r !== undefined || vals.red !== undefined) {
			this.setValues('rgb', vals);
		} else if (vals.l !== undefined || vals.lightness !== undefined) {
			this.setValues('hsl', vals);
		} else if (vals.v !== undefined || vals.value !== undefined) {
			this.setValues('hsv', vals);
		} else if (vals.w !== undefined || vals.whiteness !== undefined) {
			this.setValues('hwb', vals);
		} else if (vals.c !== undefined || vals.cyan !== undefined) {
			this.setValues('cmyk', vals);
		}
	}
};

Color.prototype = {
	isValid: function () {
		return this.valid;
	},
	rgb: function () {
		return this.setSpace('rgb', arguments);
	},
	hsl: function () {
		return this.setSpace('hsl', arguments);
	},
	hsv: function () {
		return this.setSpace('hsv', arguments);
	},
	hwb: function () {
		return this.setSpace('hwb', arguments);
	},
	cmyk: function () {
		return this.setSpace('cmyk', arguments);
	},

	rgbArray: function () {
		return this.values.rgb;
	},
	hslArray: function () {
		return this.values.hsl;
	},
	hsvArray: function () {
		return this.values.hsv;
	},
	hwbArray: function () {
		var values = this.values;
		if (values.alpha !== 1) {
			return values.hwb.concat([values.alpha]);
		}
		return values.hwb;
	},
	cmykArray: function () {
		return this.values.cmyk;
	},
	rgbaArray: function () {
		var values = this.values;
		return values.rgb.concat([values.alpha]);
	},
	hslaArray: function () {
		var values = this.values;
		return values.hsl.concat([values.alpha]);
	},
	alpha: function (val) {
		if (val === undefined) {
			return this.values.alpha;
		}
		this.setValues('alpha', val);
		return this;
	},

	red: function (val) {
		return this.setChannel('rgb', 0, val);
	},
	green: function (val) {
		return this.setChannel('rgb', 1, val);
	},
	blue: function (val) {
		return this.setChannel('rgb', 2, val);
	},
	hue: function (val) {
		if (val) {
			val %= 360;
			val = val < 0 ? 360 + val : val;
		}
		return this.setChannel('hsl', 0, val);
	},
	saturation: function (val) {
		return this.setChannel('hsl', 1, val);
	},
	lightness: function (val) {
		return this.setChannel('hsl', 2, val);
	},
	saturationv: function (val) {
		return this.setChannel('hsv', 1, val);
	},
	whiteness: function (val) {
		return this.setChannel('hwb', 1, val);
	},
	blackness: function (val) {
		return this.setChannel('hwb', 2, val);
	},
	value: function (val) {
		return this.setChannel('hsv', 2, val);
	},
	cyan: function (val) {
		return this.setChannel('cmyk', 0, val);
	},
	magenta: function (val) {
		return this.setChannel('cmyk', 1, val);
	},
	yellow: function (val) {
		return this.setChannel('cmyk', 2, val);
	},
	black: function (val) {
		return this.setChannel('cmyk', 3, val);
	},

	hexString: function () {
		return string.hexString(this.values.rgb);
	},
	rgbString: function () {
		return string.rgbString(this.values.rgb, this.values.alpha);
	},
	rgbaString: function () {
		return string.rgbaString(this.values.rgb, this.values.alpha);
	},
	percentString: function () {
		return string.percentString(this.values.rgb, this.values.alpha);
	},
	hslString: function () {
		return string.hslString(this.values.hsl, this.values.alpha);
	},
	hslaString: function () {
		return string.hslaString(this.values.hsl, this.values.alpha);
	},
	hwbString: function () {
		return string.hwbString(this.values.hwb, this.values.alpha);
	},
	keyword: function () {
		return string.keyword(this.values.rgb, this.values.alpha);
	},

	rgbNumber: function () {
		var rgb = this.values.rgb;
		return (rgb[0] << 16) | (rgb[1] << 8) | rgb[2];
	},

	luminosity: function () {
		// http://www.w3.org/TR/WCAG20/#relativeluminancedef
		var rgb = this.values.rgb;
		var lum = [];
		for (var i = 0; i < rgb.length; i++) {
			var chan = rgb[i] / 255;
			lum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);
		}
		return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];
	},

	contrast: function (color2) {
		// http://www.w3.org/TR/WCAG20/#contrast-ratiodef
		var lum1 = this.luminosity();
		var lum2 = color2.luminosity();
		if (lum1 > lum2) {
			return (lum1 + 0.05) / (lum2 + 0.05);
		}
		return (lum2 + 0.05) / (lum1 + 0.05);
	},

	level: function (color2) {
		var contrastRatio = this.contrast(color2);
		if (contrastRatio >= 7.1) {
			return 'AAA';
		}

		return (contrastRatio >= 4.5) ? 'AA' : '';
	},

	dark: function () {
		// YIQ equation from http://24ways.org/2010/calculating-color-contrast
		var rgb = this.values.rgb;
		var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;
		return yiq < 128;
	},

	light: function () {
		return !this.dark();
	},

	negate: function () {
		var rgb = [];
		for (var i = 0; i < 3; i++) {
			rgb[i] = 255 - this.values.rgb[i];
		}
		this.setValues('rgb', rgb);
		return this;
	},

	lighten: function (ratio) {
		var hsl = this.values.hsl;
		hsl[2] += hsl[2] * ratio;
		this.setValues('hsl', hsl);
		return this;
	},

	darken: function (ratio) {
		var hsl = this.values.hsl;
		hsl[2] -= hsl[2] * ratio;
		this.setValues('hsl', hsl);
		return this;
	},

	saturate: function (ratio) {
		var hsl = this.values.hsl;
		hsl[1] += hsl[1] * ratio;
		this.setValues('hsl', hsl);
		return this;
	},

	desaturate: function (ratio) {
		var hsl = this.values.hsl;
		hsl[1] -= hsl[1] * ratio;
		this.setValues('hsl', hsl);
		return this;
	},

	whiten: function (ratio) {
		var hwb = this.values.hwb;
		hwb[1] += hwb[1] * ratio;
		this.setValues('hwb', hwb);
		return this;
	},

	blacken: function (ratio) {
		var hwb = this.values.hwb;
		hwb[2] += hwb[2] * ratio;
		this.setValues('hwb', hwb);
		return this;
	},

	greyscale: function () {
		var rgb = this.values.rgb;
		// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale
		var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;
		this.setValues('rgb', [val, val, val]);
		return this;
	},

	clearer: function (ratio) {
		var alpha = this.values.alpha;
		this.setValues('alpha', alpha - (alpha * ratio));
		return this;
	},

	opaquer: function (ratio) {
		var alpha = this.values.alpha;
		this.setValues('alpha', alpha + (alpha * ratio));
		return this;
	},

	rotate: function (degrees) {
		var hsl = this.values.hsl;
		var hue = (hsl[0] + degrees) % 360;
		hsl[0] = hue < 0 ? 360 + hue : hue;
		this.setValues('hsl', hsl);
		return this;
	},

	/**
	 * Ported from sass implementation in C
	 * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209
	 */
	mix: function (mixinColor, weight) {
		var color1 = this;
		var color2 = mixinColor;
		var p = weight === undefined ? 0.5 : weight;

		var w = 2 * p - 1;
		var a = color1.alpha() - color2.alpha();

		var w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;
		var w2 = 1 - w1;

		return this
			.rgb(
				w1 * color1.red() + w2 * color2.red(),
				w1 * color1.green() + w2 * color2.green(),
				w1 * color1.blue() + w2 * color2.blue()
			)
			.alpha(color1.alpha() * p + color2.alpha() * (1 - p));
	},

	toJSON: function () {
		return this.rgb();
	},

	clone: function () {
		// NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,
		// making the final build way to big to embed in Chart.js. So let's do it manually,
		// assuming that values to clone are 1 dimension arrays containing only numbers,
		// except 'alpha' which is a number.
		var result = new Color();
		var source = this.values;
		var target = result.values;
		var value, type;

		for (var prop in source) {
			if (source.hasOwnProperty(prop)) {
				value = source[prop];
				type = ({}).toString.call(value);
				if (type === '[object Array]') {
					target[prop] = value.slice(0);
				} else if (type === '[object Number]') {
					target[prop] = value;
				} else {
					console.error('unexpected color value:', value);
				}
			}
		}

		return result;
	}
};

Color.prototype.spaces = {
	rgb: ['red', 'green', 'blue'],
	hsl: ['hue', 'saturation', 'lightness'],
	hsv: ['hue', 'saturation', 'value'],
	hwb: ['hue', 'whiteness', 'blackness'],
	cmyk: ['cyan', 'magenta', 'yellow', 'black']
};

Color.prototype.maxes = {
	rgb: [255, 255, 255],
	hsl: [360, 100, 100],
	hsv: [360, 100, 100],
	hwb: [360, 100, 100],
	cmyk: [100, 100, 100, 100]
};

Color.prototype.getValues = function (space) {
	var values = this.values;
	var vals = {};

	for (var i = 0; i < space.length; i++) {
		vals[space.charAt(i)] = values[space][i];
	}

	if (values.alpha !== 1) {
		vals.a = values.alpha;
	}

	// {r: 255, g: 255, b: 255, a: 0.4}
	return vals;
};

Color.prototype.setValues = function (space, vals) {
	var values = this.values;
	var spaces = this.spaces;
	var maxes = this.maxes;
	var alpha = 1;
	var i;

	this.valid = true;

	if (space === 'alpha') {
		alpha = vals;
	} else if (vals.length) {
		// [10, 10, 10]
		values[space] = vals.slice(0, space.length);
		alpha = vals[space.length];
	} else if (vals[space.charAt(0)] !== undefined) {
		// {r: 10, g: 10, b: 10}
		for (i = 0; i < space.length; i++) {
			values[space][i] = vals[space.charAt(i)];
		}

		alpha = vals.a;
	} else if (vals[spaces[space][0]] !== undefined) {
		// {red: 10, green: 10, blue: 10}
		var chans = spaces[space];

		for (i = 0; i < space.length; i++) {
			values[space][i] = vals[chans[i]];
		}

		alpha = vals.alpha;
	}

	values.alpha = Math.max(0, Math.min(1, (alpha === undefined ? values.alpha : alpha)));

	if (space === 'alpha') {
		return false;
	}

	var capped;

	// cap values of the space prior converting all values
	for (i = 0; i < space.length; i++) {
		capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));
		values[space][i] = Math.round(capped);
	}

	// convert to all the other color spaces
	for (var sname in spaces) {
		if (sname !== space) {
			values[sname] = convert[space][sname](values[space]);
		}
	}

	return true;
};

Color.prototype.setSpace = function (space, args) {
	var vals = args[0];

	if (vals === undefined) {
		// color.rgb()
		return this.getValues(space);
	}

	// color.rgb(10, 10, 10)
	if (typeof vals === 'number') {
		vals = Array.prototype.slice.call(args);
	}

	this.setValues(space, vals);
	return this;
};

Color.prototype.setChannel = function (space, index, val) {
	var svalues = this.values[space];
	if (val === undefined) {
		// color.red()
		return svalues[index];
	} else if (val === svalues[index]) {
		// color.red(color.red())
		return this;
	}

	// color.red(100)
	svalues[index] = val;
	this.setValues(space, svalues);

	return this;
};

if (typeof window !== 'undefined') {
	window.Color = Color;
}

module.exports = Color;


/***/ }),

/***/ "./node_modules/chartjs-color/node_modules/color-convert/conversions.js":
/*!******************************************************************************!*\
  !*** ./node_modules/chartjs-color/node_modules/color-convert/conversions.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/* MIT license */

module.exports = {
  rgb2hsl: rgb2hsl,
  rgb2hsv: rgb2hsv,
  rgb2hwb: rgb2hwb,
  rgb2cmyk: rgb2cmyk,
  rgb2keyword: rgb2keyword,
  rgb2xyz: rgb2xyz,
  rgb2lab: rgb2lab,
  rgb2lch: rgb2lch,

  hsl2rgb: hsl2rgb,
  hsl2hsv: hsl2hsv,
  hsl2hwb: hsl2hwb,
  hsl2cmyk: hsl2cmyk,
  hsl2keyword: hsl2keyword,

  hsv2rgb: hsv2rgb,
  hsv2hsl: hsv2hsl,
  hsv2hwb: hsv2hwb,
  hsv2cmyk: hsv2cmyk,
  hsv2keyword: hsv2keyword,

  hwb2rgb: hwb2rgb,
  hwb2hsl: hwb2hsl,
  hwb2hsv: hwb2hsv,
  hwb2cmyk: hwb2cmyk,
  hwb2keyword: hwb2keyword,

  cmyk2rgb: cmyk2rgb,
  cmyk2hsl: cmyk2hsl,
  cmyk2hsv: cmyk2hsv,
  cmyk2hwb: cmyk2hwb,
  cmyk2keyword: cmyk2keyword,

  keyword2rgb: keyword2rgb,
  keyword2hsl: keyword2hsl,
  keyword2hsv: keyword2hsv,
  keyword2hwb: keyword2hwb,
  keyword2cmyk: keyword2cmyk,
  keyword2lab: keyword2lab,
  keyword2xyz: keyword2xyz,

  xyz2rgb: xyz2rgb,
  xyz2lab: xyz2lab,
  xyz2lch: xyz2lch,

  lab2xyz: lab2xyz,
  lab2rgb: lab2rgb,
  lab2lch: lab2lch,

  lch2lab: lch2lab,
  lch2xyz: lch2xyz,
  lch2rgb: lch2rgb
}


function rgb2hsl(rgb) {
  var r = rgb[0]/255,
      g = rgb[1]/255,
      b = rgb[2]/255,
      min = Math.min(r, g, b),
      max = Math.max(r, g, b),
      delta = max - min,
      h, s, l;

  if (max == min)
    h = 0;
  else if (r == max)
    h = (g - b) / delta;
  else if (g == max)
    h = 2 + (b - r) / delta;
  else if (b == max)
    h = 4 + (r - g)/ delta;

  h = Math.min(h * 60, 360);

  if (h < 0)
    h += 360;

  l = (min + max) / 2;

  if (max == min)
    s = 0;
  else if (l <= 0.5)
    s = delta / (max + min);
  else
    s = delta / (2 - max - min);

  return [h, s * 100, l * 100];
}

function rgb2hsv(rgb) {
  var r = rgb[0],
      g = rgb[1],
      b = rgb[2],
      min = Math.min(r, g, b),
      max = Math.max(r, g, b),
      delta = max - min,
      h, s, v;

  if (max == 0)
    s = 0;
  else
    s = (delta/max * 1000)/10;

  if (max == min)
    h = 0;
  else if (r == max)
    h = (g - b) / delta;
  else if (g == max)
    h = 2 + (b - r) / delta;
  else if (b == max)
    h = 4 + (r - g) / delta;

  h = Math.min(h * 60, 360);

  if (h < 0)
    h += 360;

  v = ((max / 255) * 1000) / 10;

  return [h, s, v];
}

function rgb2hwb(rgb) {
  var r = rgb[0],
      g = rgb[1],
      b = rgb[2],
      h = rgb2hsl(rgb)[0],
      w = 1/255 * Math.min(r, Math.min(g, b)),
      b = 1 - 1/255 * Math.max(r, Math.max(g, b));

  return [h, w * 100, b * 100];
}

function rgb2cmyk(rgb) {
  var r = rgb[0] / 255,
      g = rgb[1] / 255,
      b = rgb[2] / 255,
      c, m, y, k;

  k = Math.min(1 - r, 1 - g, 1 - b);
  c = (1 - r - k) / (1 - k) || 0;
  m = (1 - g - k) / (1 - k) || 0;
  y = (1 - b - k) / (1 - k) || 0;
  return [c * 100, m * 100, y * 100, k * 100];
}

function rgb2keyword(rgb) {
  return reverseKeywords[JSON.stringify(rgb)];
}

function rgb2xyz(rgb) {
  var r = rgb[0] / 255,
      g = rgb[1] / 255,
      b = rgb[2] / 255;

  // assume sRGB
  r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);
  g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);
  b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);

  var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);
  var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);
  var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);

  return [x * 100, y *100, z * 100];
}

function rgb2lab(rgb) {
  var xyz = rgb2xyz(rgb),
        x = xyz[0],
        y = xyz[1],
        z = xyz[2],
        l, a, b;

  x /= 95.047;
  y /= 100;
  z /= 108.883;

  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);
  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);
  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);

  l = (116 * y) - 16;
  a = 500 * (x - y);
  b = 200 * (y - z);

  return [l, a, b];
}

function rgb2lch(args) {
  return lab2lch(rgb2lab(args));
}

function hsl2rgb(hsl) {
  var h = hsl[0] / 360,
      s = hsl[1] / 100,
      l = hsl[2] / 100,
      t1, t2, t3, rgb, val;

  if (s == 0) {
    val = l * 255;
    return [val, val, val];
  }

  if (l < 0.5)
    t2 = l * (1 + s);
  else
    t2 = l + s - l * s;
  t1 = 2 * l - t2;

  rgb = [0, 0, 0];
  for (var i = 0; i < 3; i++) {
    t3 = h + 1 / 3 * - (i - 1);
    t3 < 0 && t3++;
    t3 > 1 && t3--;

    if (6 * t3 < 1)
      val = t1 + (t2 - t1) * 6 * t3;
    else if (2 * t3 < 1)
      val = t2;
    else if (3 * t3 < 2)
      val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;
    else
      val = t1;

    rgb[i] = val * 255;
  }

  return rgb;
}

function hsl2hsv(hsl) {
  var h = hsl[0],
      s = hsl[1] / 100,
      l = hsl[2] / 100,
      sv, v;

  if(l === 0) {
      // no need to do calc on black
      // also avoids divide by 0 error
      return [0, 0, 0];
  }

  l *= 2;
  s *= (l <= 1) ? l : 2 - l;
  v = (l + s) / 2;
  sv = (2 * s) / (l + s);
  return [h, sv * 100, v * 100];
}

function hsl2hwb(args) {
  return rgb2hwb(hsl2rgb(args));
}

function hsl2cmyk(args) {
  return rgb2cmyk(hsl2rgb(args));
}

function hsl2keyword(args) {
  return rgb2keyword(hsl2rgb(args));
}


function hsv2rgb(hsv) {
  var h = hsv[0] / 60,
      s = hsv[1] / 100,
      v = hsv[2] / 100,
      hi = Math.floor(h) % 6;

  var f = h - Math.floor(h),
      p = 255 * v * (1 - s),
      q = 255 * v * (1 - (s * f)),
      t = 255 * v * (1 - (s * (1 - f))),
      v = 255 * v;

  switch(hi) {
    case 0:
      return [v, t, p];
    case 1:
      return [q, v, p];
    case 2:
      return [p, v, t];
    case 3:
      return [p, q, v];
    case 4:
      return [t, p, v];
    case 5:
      return [v, p, q];
  }
}

function hsv2hsl(hsv) {
  var h = hsv[0],
      s = hsv[1] / 100,
      v = hsv[2] / 100,
      sl, l;

  l = (2 - s) * v;
  sl = s * v;
  sl /= (l <= 1) ? l : 2 - l;
  sl = sl || 0;
  l /= 2;
  return [h, sl * 100, l * 100];
}

function hsv2hwb(args) {
  return rgb2hwb(hsv2rgb(args))
}

function hsv2cmyk(args) {
  return rgb2cmyk(hsv2rgb(args));
}

function hsv2keyword(args) {
  return rgb2keyword(hsv2rgb(args));
}

// http://dev.w3.org/csswg/css-color/#hwb-to-rgb
function hwb2rgb(hwb) {
  var h = hwb[0] / 360,
      wh = hwb[1] / 100,
      bl = hwb[2] / 100,
      ratio = wh + bl,
      i, v, f, n;

  // wh + bl cant be > 1
  if (ratio > 1) {
    wh /= ratio;
    bl /= ratio;
  }

  i = Math.floor(6 * h);
  v = 1 - bl;
  f = 6 * h - i;
  if ((i & 0x01) != 0) {
    f = 1 - f;
  }
  n = wh + f * (v - wh);  // linear interpolation

  switch (i) {
    default:
    case 6:
    case 0: r = v; g = n; b = wh; break;
    case 1: r = n; g = v; b = wh; break;
    case 2: r = wh; g = v; b = n; break;
    case 3: r = wh; g = n; b = v; break;
    case 4: r = n; g = wh; b = v; break;
    case 5: r = v; g = wh; b = n; break;
  }

  return [r * 255, g * 255, b * 255];
}

function hwb2hsl(args) {
  return rgb2hsl(hwb2rgb(args));
}

function hwb2hsv(args) {
  return rgb2hsv(hwb2rgb(args));
}

function hwb2cmyk(args) {
  return rgb2cmyk(hwb2rgb(args));
}

function hwb2keyword(args) {
  return rgb2keyword(hwb2rgb(args));
}

function cmyk2rgb(cmyk) {
  var c = cmyk[0] / 100,
      m = cmyk[1] / 100,
      y = cmyk[2] / 100,
      k = cmyk[3] / 100,
      r, g, b;

  r = 1 - Math.min(1, c * (1 - k) + k);
  g = 1 - Math.min(1, m * (1 - k) + k);
  b = 1 - Math.min(1, y * (1 - k) + k);
  return [r * 255, g * 255, b * 255];
}

function cmyk2hsl(args) {
  return rgb2hsl(cmyk2rgb(args));
}

function cmyk2hsv(args) {
  return rgb2hsv(cmyk2rgb(args));
}

function cmyk2hwb(args) {
  return rgb2hwb(cmyk2rgb(args));
}

function cmyk2keyword(args) {
  return rgb2keyword(cmyk2rgb(args));
}


function xyz2rgb(xyz) {
  var x = xyz[0] / 100,
      y = xyz[1] / 100,
      z = xyz[2] / 100,
      r, g, b;

  r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);
  g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);
  b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);

  // assume sRGB
  r = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)
    : r = (r * 12.92);

  g = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)
    : g = (g * 12.92);

  b = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)
    : b = (b * 12.92);

  r = Math.min(Math.max(0, r), 1);
  g = Math.min(Math.max(0, g), 1);
  b = Math.min(Math.max(0, b), 1);

  return [r * 255, g * 255, b * 255];
}

function xyz2lab(xyz) {
  var x = xyz[0],
      y = xyz[1],
      z = xyz[2],
      l, a, b;

  x /= 95.047;
  y /= 100;
  z /= 108.883;

  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);
  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);
  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);

  l = (116 * y) - 16;
  a = 500 * (x - y);
  b = 200 * (y - z);

  return [l, a, b];
}

function xyz2lch(args) {
  return lab2lch(xyz2lab(args));
}

function lab2xyz(lab) {
  var l = lab[0],
      a = lab[1],
      b = lab[2],
      x, y, z, y2;

  if (l <= 8) {
    y = (l * 100) / 903.3;
    y2 = (7.787 * (y / 100)) + (16 / 116);
  } else {
    y = 100 * Math.pow((l + 16) / 116, 3);
    y2 = Math.pow(y / 100, 1/3);
  }

  x = x / 95.047 <= 0.008856 ? x = (95.047 * ((a / 500) + y2 - (16 / 116))) / 7.787 : 95.047 * Math.pow((a / 500) + y2, 3);

  z = z / 108.883 <= 0.008859 ? z = (108.883 * (y2 - (b / 200) - (16 / 116))) / 7.787 : 108.883 * Math.pow(y2 - (b / 200), 3);

  return [x, y, z];
}

function lab2lch(lab) {
  var l = lab[0],
      a = lab[1],
      b = lab[2],
      hr, h, c;

  hr = Math.atan2(b, a);
  h = hr * 360 / 2 / Math.PI;
  if (h < 0) {
    h += 360;
  }
  c = Math.sqrt(a * a + b * b);
  return [l, c, h];
}

function lab2rgb(args) {
  return xyz2rgb(lab2xyz(args));
}

function lch2lab(lch) {
  var l = lch[0],
      c = lch[1],
      h = lch[2],
      a, b, hr;

  hr = h / 360 * 2 * Math.PI;
  a = c * Math.cos(hr);
  b = c * Math.sin(hr);
  return [l, a, b];
}

function lch2xyz(args) {
  return lab2xyz(lch2lab(args));
}

function lch2rgb(args) {
  return lab2rgb(lch2lab(args));
}

function keyword2rgb(keyword) {
  return cssKeywords[keyword];
}

function keyword2hsl(args) {
  return rgb2hsl(keyword2rgb(args));
}

function keyword2hsv(args) {
  return rgb2hsv(keyword2rgb(args));
}

function keyword2hwb(args) {
  return rgb2hwb(keyword2rgb(args));
}

function keyword2cmyk(args) {
  return rgb2cmyk(keyword2rgb(args));
}

function keyword2lab(args) {
  return rgb2lab(keyword2rgb(args));
}

function keyword2xyz(args) {
  return rgb2xyz(keyword2rgb(args));
}

var cssKeywords = {
  aliceblue:  [240,248,255],
  antiquewhite: [250,235,215],
  aqua: [0,255,255],
  aquamarine: [127,255,212],
  azure:  [240,255,255],
  beige:  [245,245,220],
  bisque: [255,228,196],
  black:  [0,0,0],
  blanchedalmond: [255,235,205],
  blue: [0,0,255],
  blueviolet: [138,43,226],
  brown:  [165,42,42],
  burlywood:  [222,184,135],
  cadetblue:  [95,158,160],
  chartreuse: [127,255,0],
  chocolate:  [210,105,30],
  coral:  [255,127,80],
  cornflowerblue: [100,149,237],
  cornsilk: [255,248,220],
  crimson:  [220,20,60],
  cyan: [0,255,255],
  darkblue: [0,0,139],
  darkcyan: [0,139,139],
  darkgoldenrod:  [184,134,11],
  darkgray: [169,169,169],
  darkgreen:  [0,100,0],
  darkgrey: [169,169,169],
  darkkhaki:  [189,183,107],
  darkmagenta:  [139,0,139],
  darkolivegreen: [85,107,47],
  darkorange: [255,140,0],
  darkorchid: [153,50,204],
  darkred:  [139,0,0],
  darksalmon: [233,150,122],
  darkseagreen: [143,188,143],
  darkslateblue:  [72,61,139],
  darkslategray:  [47,79,79],
  darkslategrey:  [47,79,79],
  darkturquoise:  [0,206,209],
  darkviolet: [148,0,211],
  deeppink: [255,20,147],
  deepskyblue:  [0,191,255],
  dimgray:  [105,105,105],
  dimgrey:  [105,105,105],
  dodgerblue: [30,144,255],
  firebrick:  [178,34,34],
  floralwhite:  [255,250,240],
  forestgreen:  [34,139,34],
  fuchsia:  [255,0,255],
  gainsboro:  [220,220,220],
  ghostwhite: [248,248,255],
  gold: [255,215,0],
  goldenrod:  [218,165,32],
  gray: [128,128,128],
  green:  [0,128,0],
  greenyellow:  [173,255,47],
  grey: [128,128,128],
  honeydew: [240,255,240],
  hotpink:  [255,105,180],
  indianred:  [205,92,92],
  indigo: [75,0,130],
  ivory:  [255,255,240],
  khaki:  [240,230,140],
  lavender: [230,230,250],
  lavenderblush:  [255,240,245],
  lawngreen:  [124,252,0],
  lemonchiffon: [255,250,205],
  lightblue:  [173,216,230],
  lightcoral: [240,128,128],
  lightcyan:  [224,255,255],
  lightgoldenrodyellow: [250,250,210],
  lightgray:  [211,211,211],
  lightgreen: [144,238,144],
  lightgrey:  [211,211,211],
  lightpink:  [255,182,193],
  lightsalmon:  [255,160,122],
  lightseagreen:  [32,178,170],
  lightskyblue: [135,206,250],
  lightslategray: [119,136,153],
  lightslategrey: [119,136,153],
  lightsteelblue: [176,196,222],
  lightyellow:  [255,255,224],
  lime: [0,255,0],
  limegreen:  [50,205,50],
  linen:  [250,240,230],
  magenta:  [255,0,255],
  maroon: [128,0,0],
  mediumaquamarine: [102,205,170],
  mediumblue: [0,0,205],
  mediumorchid: [186,85,211],
  mediumpurple: [147,112,219],
  mediumseagreen: [60,179,113],
  mediumslateblue:  [123,104,238],
  mediumspringgreen:  [0,250,154],
  mediumturquoise:  [72,209,204],
  mediumvioletred:  [199,21,133],
  midnightblue: [25,25,112],
  mintcream:  [245,255,250],
  mistyrose:  [255,228,225],
  moccasin: [255,228,181],
  navajowhite:  [255,222,173],
  navy: [0,0,128],
  oldlace:  [253,245,230],
  olive:  [128,128,0],
  olivedrab:  [107,142,35],
  orange: [255,165,0],
  orangered:  [255,69,0],
  orchid: [218,112,214],
  palegoldenrod:  [238,232,170],
  palegreen:  [152,251,152],
  paleturquoise:  [175,238,238],
  palevioletred:  [219,112,147],
  papayawhip: [255,239,213],
  peachpuff:  [255,218,185],
  peru: [205,133,63],
  pink: [255,192,203],
  plum: [221,160,221],
  powderblue: [176,224,230],
  purple: [128,0,128],
  rebeccapurple: [102, 51, 153],
  red:  [255,0,0],
  rosybrown:  [188,143,143],
  royalblue:  [65,105,225],
  saddlebrown:  [139,69,19],
  salmon: [250,128,114],
  sandybrown: [244,164,96],
  seagreen: [46,139,87],
  seashell: [255,245,238],
  sienna: [160,82,45],
  silver: [192,192,192],
  skyblue:  [135,206,235],
  slateblue:  [106,90,205],
  slategray:  [112,128,144],
  slategrey:  [112,128,144],
  snow: [255,250,250],
  springgreen:  [0,255,127],
  steelblue:  [70,130,180],
  tan:  [210,180,140],
  teal: [0,128,128],
  thistle:  [216,191,216],
  tomato: [255,99,71],
  turquoise:  [64,224,208],
  violet: [238,130,238],
  wheat:  [245,222,179],
  white:  [255,255,255],
  whitesmoke: [245,245,245],
  yellow: [255,255,0],
  yellowgreen:  [154,205,50]
};

var reverseKeywords = {};
for (var key in cssKeywords) {
  reverseKeywords[JSON.stringify(cssKeywords[key])] = key;
}


/***/ }),

/***/ "./node_modules/chartjs-color/node_modules/color-convert/index.js":
/*!************************************************************************!*\
  !*** ./node_modules/chartjs-color/node_modules/color-convert/index.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var conversions = __webpack_require__(/*! ./conversions */ "./node_modules/chartjs-color/node_modules/color-convert/conversions.js");

var convert = function() {
   return new Converter();
}

for (var func in conversions) {
  // export Raw versions
  convert[func + "Raw"] =  (function(func) {
    // accept array or plain args
    return function(arg) {
      if (typeof arg == "number")
        arg = Array.prototype.slice.call(arguments);
      return conversions[func](arg);
    }
  })(func);

  var pair = /(\w+)2(\w+)/.exec(func),
      from = pair[1],
      to = pair[2];

  // export rgb2hsl and ["rgb"]["hsl"]
  convert[from] = convert[from] || {};

  convert[from][to] = convert[func] = (function(func) { 
    return function(arg) {
      if (typeof arg == "number")
        arg = Array.prototype.slice.call(arguments);
      
      var val = conversions[func](arg);
      if (typeof val == "string" || val === undefined)
        return val; // keyword

      for (var i = 0; i < val.length; i++)
        val[i] = Math.round(val[i]);
      return val;
    }
  })(func);
}


/* Converter does lazy conversion and caching */
var Converter = function() {
   this.convs = {};
};

/* Either get the values for a space or
  set the values for a space, depending on args */
Converter.prototype.routeSpace = function(space, args) {
   var values = args[0];
   if (values === undefined) {
      // color.rgb()
      return this.getValues(space);
   }
   // color.rgb(10, 10, 10)
   if (typeof values == "number") {
      values = Array.prototype.slice.call(args);        
   }

   return this.setValues(space, values);
};
  
/* Set the values for a space, invalidating cache */
Converter.prototype.setValues = function(space, values) {
   this.space = space;
   this.convs = {};
   this.convs[space] = values;
   return this;
};

/* Get the values for a space. If there's already
  a conversion for the space, fetch it, otherwise
  compute it */
Converter.prototype.getValues = function(space) {
   var vals = this.convs[space];
   if (!vals) {
      var fspace = this.space,
          from = this.convs[fspace];
      vals = convert[fspace][space](from);

      this.convs[space] = vals;
   }
  return vals;
};

["rgb", "hsl", "hsv", "cmyk", "keyword"].forEach(function(space) {
   Converter.prototype[space] = function(vals) {
      return this.routeSpace(space, arguments);
   }
});

module.exports = convert;

/***/ }),

/***/ "./node_modules/color-name/index.js":
/*!******************************************!*\
  !*** ./node_modules/color-name/index.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = {
	"aliceblue": [240, 248, 255],
	"antiquewhite": [250, 235, 215],
	"aqua": [0, 255, 255],
	"aquamarine": [127, 255, 212],
	"azure": [240, 255, 255],
	"beige": [245, 245, 220],
	"bisque": [255, 228, 196],
	"black": [0, 0, 0],
	"blanchedalmond": [255, 235, 205],
	"blue": [0, 0, 255],
	"blueviolet": [138, 43, 226],
	"brown": [165, 42, 42],
	"burlywood": [222, 184, 135],
	"cadetblue": [95, 158, 160],
	"chartreuse": [127, 255, 0],
	"chocolate": [210, 105, 30],
	"coral": [255, 127, 80],
	"cornflowerblue": [100, 149, 237],
	"cornsilk": [255, 248, 220],
	"crimson": [220, 20, 60],
	"cyan": [0, 255, 255],
	"darkblue": [0, 0, 139],
	"darkcyan": [0, 139, 139],
	"darkgoldenrod": [184, 134, 11],
	"darkgray": [169, 169, 169],
	"darkgreen": [0, 100, 0],
	"darkgrey": [169, 169, 169],
	"darkkhaki": [189, 183, 107],
	"darkmagenta": [139, 0, 139],
	"darkolivegreen": [85, 107, 47],
	"darkorange": [255, 140, 0],
	"darkorchid": [153, 50, 204],
	"darkred": [139, 0, 0],
	"darksalmon": [233, 150, 122],
	"darkseagreen": [143, 188, 143],
	"darkslateblue": [72, 61, 139],
	"darkslategray": [47, 79, 79],
	"darkslategrey": [47, 79, 79],
	"darkturquoise": [0, 206, 209],
	"darkviolet": [148, 0, 211],
	"deeppink": [255, 20, 147],
	"deepskyblue": [0, 191, 255],
	"dimgray": [105, 105, 105],
	"dimgrey": [105, 105, 105],
	"dodgerblue": [30, 144, 255],
	"firebrick": [178, 34, 34],
	"floralwhite": [255, 250, 240],
	"forestgreen": [34, 139, 34],
	"fuchsia": [255, 0, 255],
	"gainsboro": [220, 220, 220],
	"ghostwhite": [248, 248, 255],
	"gold": [255, 215, 0],
	"goldenrod": [218, 165, 32],
	"gray": [128, 128, 128],
	"green": [0, 128, 0],
	"greenyellow": [173, 255, 47],
	"grey": [128, 128, 128],
	"honeydew": [240, 255, 240],
	"hotpink": [255, 105, 180],
	"indianred": [205, 92, 92],
	"indigo": [75, 0, 130],
	"ivory": [255, 255, 240],
	"khaki": [240, 230, 140],
	"lavender": [230, 230, 250],
	"lavenderblush": [255, 240, 245],
	"lawngreen": [124, 252, 0],
	"lemonchiffon": [255, 250, 205],
	"lightblue": [173, 216, 230],
	"lightcoral": [240, 128, 128],
	"lightcyan": [224, 255, 255],
	"lightgoldenrodyellow": [250, 250, 210],
	"lightgray": [211, 211, 211],
	"lightgreen": [144, 238, 144],
	"lightgrey": [211, 211, 211],
	"lightpink": [255, 182, 193],
	"lightsalmon": [255, 160, 122],
	"lightseagreen": [32, 178, 170],
	"lightskyblue": [135, 206, 250],
	"lightslategray": [119, 136, 153],
	"lightslategrey": [119, 136, 153],
	"lightsteelblue": [176, 196, 222],
	"lightyellow": [255, 255, 224],
	"lime": [0, 255, 0],
	"limegreen": [50, 205, 50],
	"linen": [250, 240, 230],
	"magenta": [255, 0, 255],
	"maroon": [128, 0, 0],
	"mediumaquamarine": [102, 205, 170],
	"mediumblue": [0, 0, 205],
	"mediumorchid": [186, 85, 211],
	"mediumpurple": [147, 112, 219],
	"mediumseagreen": [60, 179, 113],
	"mediumslateblue": [123, 104, 238],
	"mediumspringgreen": [0, 250, 154],
	"mediumturquoise": [72, 209, 204],
	"mediumvioletred": [199, 21, 133],
	"midnightblue": [25, 25, 112],
	"mintcream": [245, 255, 250],
	"mistyrose": [255, 228, 225],
	"moccasin": [255, 228, 181],
	"navajowhite": [255, 222, 173],
	"navy": [0, 0, 128],
	"oldlace": [253, 245, 230],
	"olive": [128, 128, 0],
	"olivedrab": [107, 142, 35],
	"orange": [255, 165, 0],
	"orangered": [255, 69, 0],
	"orchid": [218, 112, 214],
	"palegoldenrod": [238, 232, 170],
	"palegreen": [152, 251, 152],
	"paleturquoise": [175, 238, 238],
	"palevioletred": [219, 112, 147],
	"papayawhip": [255, 239, 213],
	"peachpuff": [255, 218, 185],
	"peru": [205, 133, 63],
	"pink": [255, 192, 203],
	"plum": [221, 160, 221],
	"powderblue": [176, 224, 230],
	"purple": [128, 0, 128],
	"rebeccapurple": [102, 51, 153],
	"red": [255, 0, 0],
	"rosybrown": [188, 143, 143],
	"royalblue": [65, 105, 225],
	"saddlebrown": [139, 69, 19],
	"salmon": [250, 128, 114],
	"sandybrown": [244, 164, 96],
	"seagreen": [46, 139, 87],
	"seashell": [255, 245, 238],
	"sienna": [160, 82, 45],
	"silver": [192, 192, 192],
	"skyblue": [135, 206, 235],
	"slateblue": [106, 90, 205],
	"slategray": [112, 128, 144],
	"slategrey": [112, 128, 144],
	"snow": [255, 250, 250],
	"springgreen": [0, 255, 127],
	"steelblue": [70, 130, 180],
	"tan": [210, 180, 140],
	"teal": [0, 128, 128],
	"thistle": [216, 191, 216],
	"tomato": [255, 99, 71],
	"turquoise": [64, 224, 208],
	"violet": [238, 130, 238],
	"wheat": [245, 222, 179],
	"white": [255, 255, 255],
	"whitesmoke": [245, 245, 245],
	"yellow": [255, 255, 0],
	"yellowgreen": [154, 205, 50]
};


/***/ }),

/***/ "./node_modules/ng2-charts/charts/charts.js":
/*!**************************************************!*\
  !*** ./node_modules/ng2-charts/charts/charts.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var chart_js_1 = __webpack_require__(/*! chart.js */ "./node_modules/chart.js/src/chart.js");
/* tslint:disable-next-line */
var BaseChartDirective = (function () {
    function BaseChartDirective(element) {
        this.labels = [];
        this.options = {};
        this.chartClick = new core_1.EventEmitter();
        this.chartHover = new core_1.EventEmitter();
        this.initFlag = false;
        this.element = element;
    }
    BaseChartDirective.prototype.ngOnInit = function () {
        this.ctx = this.element.nativeElement.getContext('2d');
        this.cvs = this.element.nativeElement;
        this.initFlag = true;
        if (this.data || this.datasets) {
            this.refresh();
        }
    };
    BaseChartDirective.prototype.ngOnChanges = function (changes) {
        if (this.initFlag) {
            // Check if the changes are in the data or datasets
            if (changes.hasOwnProperty('data') || changes.hasOwnProperty('datasets')) {
                if (changes['data']) {
                    this.updateChartData(changes['data'].currentValue);
                }
                else {
                    this.updateChartData(changes['datasets'].currentValue);
                }
                this.chart.update();
            }
            else {
                // otherwise rebuild the chart
                this.refresh();
            }
        }
    };
    BaseChartDirective.prototype.ngOnDestroy = function () {
        if (this.chart) {
            this.chart.destroy();
            this.chart = void 0;
        }
    };
    BaseChartDirective.prototype.getChartBuilder = function (ctx /*, data:Array<any>, options:any*/) {
        var _this = this;
        var datasets = this.getDatasets();
        var options = Object.assign({}, this.options);
        if (this.legend === false) {
            options.legend = { display: false };
        }
        // hock for onHover and onClick events
        options.hover = options.hover || {};
        if (!options.hover.onHover) {
            options.hover.onHover = function (active) {
                if (active && !active.length) {
                    return;
                }
                _this.chartHover.emit({ active: active });
            };
        }
        if (!options.onClick) {
            options.onClick = function (event, active) {
                _this.chartClick.emit({ event: event, active: active });
            };
        }
        var opts = {
            type: this.chartType,
            data: {
                labels: this.labels,
                datasets: datasets
            },
            options: options
        };
        return new chart_js_1.Chart(ctx, opts);
    };
    BaseChartDirective.prototype.updateChartData = function (newDataValues) {
        if (Array.isArray(newDataValues[0].data)) {
            this.chart.data.datasets.forEach(function (dataset, i) {
                dataset.data = newDataValues[i].data;
                if (newDataValues[i].label) {
                    dataset.label = newDataValues[i].label;
                }
            });
        }
        else {
            this.chart.data.datasets[0].data = newDataValues;
        }
    };
    BaseChartDirective.prototype.getDatasets = function () {
        var _this = this;
        var datasets = void 0;
        // in case if datasets is not provided, but data is present
        if (!this.datasets || !this.datasets.length && (this.data && this.data.length)) {
            if (Array.isArray(this.data[0])) {
                datasets = this.data.map(function (data, index) {
                    return { data: data, label: _this.labels[index] || "Label " + index };
                });
            }
            else {
                datasets = [{ data: this.data, label: "Label 0" }];
            }
        }
        if (this.datasets && this.datasets.length ||
            (datasets && datasets.length)) {
            datasets = (this.datasets || datasets)
                .map(function (elm, index) {
                var newElm = Object.assign({}, elm);
                if (_this.colors && _this.colors.length) {
                    Object.assign(newElm, _this.colors[index]);
                }
                else {
                    Object.assign(newElm, getColors(_this.chartType, index, newElm.data.length));
                }
                return newElm;
            });
        }
        if (!datasets) {
            throw new Error("ng-charts configuration error,\n      data or datasets field are required to render char " + this.chartType);
        }
        return datasets;
    };
    BaseChartDirective.prototype.refresh = function () {
        // if (this.options && this.options.responsive) {
        //   setTimeout(() => this.refresh(), 50);
        // }
        // todo: remove this line, it is producing flickering
        this.ngOnDestroy();
        this.chart = this.getChartBuilder(this.ctx /*, data, this.options*/);
    };
    return BaseChartDirective;
}());
BaseChartDirective.defaultColors = [
    [255, 99, 132],
    [54, 162, 235],
    [255, 206, 86],
    [231, 233, 237],
    [75, 192, 192],
    [151, 187, 205],
    [220, 220, 220],
    [247, 70, 74],
    [70, 191, 189],
    [253, 180, 92],
    [148, 159, 177],
    [77, 83, 96]
];
__decorate([
    core_1.Input(),
    __metadata("design:type", Array)
], BaseChartDirective.prototype, "data", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Array)
], BaseChartDirective.prototype, "datasets", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Array)
], BaseChartDirective.prototype, "labels", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Object)
], BaseChartDirective.prototype, "options", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", String)
], BaseChartDirective.prototype, "chartType", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Array)
], BaseChartDirective.prototype, "colors", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Boolean)
], BaseChartDirective.prototype, "legend", void 0);
__decorate([
    core_1.Output(),
    __metadata("design:type", core_1.EventEmitter)
], BaseChartDirective.prototype, "chartClick", void 0);
__decorate([
    core_1.Output(),
    __metadata("design:type", core_1.EventEmitter)
], BaseChartDirective.prototype, "chartHover", void 0);
BaseChartDirective = __decorate([
    core_1.Directive({ selector: 'canvas[baseChart]', exportAs: 'base-chart' }),
    __metadata("design:paramtypes", [core_1.ElementRef])
], BaseChartDirective);
exports.BaseChartDirective = BaseChartDirective;
function rgba(colour, alpha) {
    return 'rgba(' + colour.concat(alpha).join(',') + ')';
}
function getRandomInt(min, max) {
    return Math.floor(Math.random() * (max - min + 1)) + min;
}
function formatLineColor(colors) {
    return {
        backgroundColor: rgba(colors, 0.4),
        borderColor: rgba(colors, 1),
        pointBackgroundColor: rgba(colors, 1),
        pointBorderColor: '#fff',
        pointHoverBackgroundColor: '#fff',
        pointHoverBorderColor: rgba(colors, 0.8)
    };
}
function formatBarColor(colors) {
    return {
        backgroundColor: rgba(colors, 0.6),
        borderColor: rgba(colors, 1),
        hoverBackgroundColor: rgba(colors, 0.8),
        hoverBorderColor: rgba(colors, 1)
    };
}
function formatPieColors(colors) {
    return {
        backgroundColor: colors.map(function (color) { return rgba(color, 0.6); }),
        borderColor: colors.map(function () { return '#fff'; }),
        pointBackgroundColor: colors.map(function (color) { return rgba(color, 1); }),
        pointBorderColor: colors.map(function () { return '#fff'; }),
        pointHoverBackgroundColor: colors.map(function (color) { return rgba(color, 1); }),
        pointHoverBorderColor: colors.map(function (color) { return rgba(color, 1); })
    };
}
function formatPolarAreaColors(colors) {
    return {
        backgroundColor: colors.map(function (color) { return rgba(color, 0.6); }),
        borderColor: colors.map(function (color) { return rgba(color, 1); }),
        hoverBackgroundColor: colors.map(function (color) { return rgba(color, 0.8); }),
        hoverBorderColor: colors.map(function (color) { return rgba(color, 1); })
    };
}
function getRandomColor() {
    return [getRandomInt(0, 255), getRandomInt(0, 255), getRandomInt(0, 255)];
}
/**
 * Generate colors for line|bar charts
 * @param index
 * @returns {number[]|Color}
 */
function generateColor(index) {
    return BaseChartDirective.defaultColors[index] || getRandomColor();
}
/**
 * Generate colors for pie|doughnut charts
 * @param count
 * @returns {Colors}
 */
function generateColors(count) {
    var colorsArr = new Array(count);
    for (var i = 0; i < count; i++) {
        colorsArr[i] = BaseChartDirective.defaultColors[i] || getRandomColor();
    }
    return colorsArr;
}
/**
 * Generate colors by chart type
 * @param chartType
 * @param index
 * @param count
 * @returns {Color}
 */
function getColors(chartType, index, count) {
    if (chartType === 'pie' || chartType === 'doughnut') {
        return formatPieColors(generateColors(count));
    }
    if (chartType === 'polarArea') {
        return formatPolarAreaColors(generateColors(count));
    }
    if (chartType === 'line' || chartType === 'radar') {
        return formatLineColor(generateColor(index));
    }
    if (chartType === 'bar' || chartType === 'horizontalBar') {
        return formatBarColor(generateColor(index));
    }
    return generateColor(index);
}
var ChartsModule = (function () {
    function ChartsModule() {
    }
    return ChartsModule;
}());
ChartsModule = __decorate([
    core_1.NgModule({
        declarations: [
            BaseChartDirective
        ],
        exports: [
            BaseChartDirective
        ],
        imports: []
    })
], ChartsModule);
exports.ChartsModule = ChartsModule;


/***/ }),

/***/ "./node_modules/ng2-charts/index.js":
/*!******************************************!*\
  !*** ./node_modules/ng2-charts/index.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__(/*! ./charts/charts */ "./node_modules/ng2-charts/charts/charts.js"));


/***/ }),

/***/ "./node_modules/ngx-pagination/dist/ngx-pagination.js":
/*!************************************************************!*\
  !*** ./node_modules/ngx-pagination/dist/ngx-pagination.js ***!
  \************************************************************/
/*! exports provided: ɵb, ɵa, NgxPaginationModule, PaginationService, PaginationControlsComponent, PaginationControlsDirective, PaginatePipe */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵb", function() { return DEFAULT_STYLES; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵa", function() { return DEFAULT_TEMPLATE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgxPaginationModule", function() { return NgxPaginationModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PaginationService", function() { return PaginationService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PaginationControlsComponent", function() { return PaginationControlsComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PaginationControlsDirective", function() { return PaginationControlsDirective; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PaginatePipe", function() { return PaginatePipe; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");



var PaginationService = /** @class */ (function () {
    function PaginationService() {
        this.change = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.instances = {};
        this.DEFAULT_ID = 'DEFAULT_PAGINATION_ID';
    }
    PaginationService.prototype.defaultId = function () { return this.DEFAULT_ID; };
    /**
     * Register a PaginationInstance with this service. Returns a
     * boolean value signifying whether the instance is new or
     * updated (true = new or updated, false = unchanged).
     */
    PaginationService.prototype.register = function (instance) {
        if (instance.id == null) {
            instance.id = this.DEFAULT_ID;
        }
        if (!this.instances[instance.id]) {
            this.instances[instance.id] = instance;
            return true;
        }
        else {
            return this.updateInstance(instance);
        }
    };
    /**
     * Check each property of the instance and update any that have changed. Return
     * true if any changes were made, else return false.
     */
    PaginationService.prototype.updateInstance = function (instance) {
        var changed = false;
        for (var prop in this.instances[instance.id]) {
            if (instance[prop] !== this.instances[instance.id][prop]) {
                this.instances[instance.id][prop] = instance[prop];
                changed = true;
            }
        }
        return changed;
    };
    /**
     * Returns the current page number.
     */
    PaginationService.prototype.getCurrentPage = function (id) {
        if (this.instances[id]) {
            return this.instances[id].currentPage;
        }
    };
    /**
     * Sets the current page number.
     */
    PaginationService.prototype.setCurrentPage = function (id, page) {
        if (this.instances[id]) {
            var instance = this.instances[id];
            var maxPage = Math.ceil(instance.totalItems / instance.itemsPerPage);
            if (page <= maxPage && 1 <= page) {
                this.instances[id].currentPage = page;
                this.change.emit(id);
            }
        }
    };
    /**
     * Sets the value of instance.totalItems
     */
    PaginationService.prototype.setTotalItems = function (id, totalItems) {
        if (this.instances[id] && 0 <= totalItems) {
            this.instances[id].totalItems = totalItems;
            this.change.emit(id);
        }
    };
    /**
     * Sets the value of instance.itemsPerPage.
     */
    PaginationService.prototype.setItemsPerPage = function (id, itemsPerPage) {
        if (this.instances[id]) {
            this.instances[id].itemsPerPage = itemsPerPage;
            this.change.emit(id);
        }
    };
    /**
     * Returns a clone of the pagination instance object matching the id. If no
     * id specified, returns the instance corresponding to the default id.
     */
    PaginationService.prototype.getInstance = function (id) {
        if (id === void 0) { id = this.DEFAULT_ID; }
        if (this.instances[id]) {
            return this.clone(this.instances[id]);
        }
        return {};
    };
    /**
     * Perform a shallow clone of an object.
     */
    PaginationService.prototype.clone = function (obj) {
        var target = {};
        for (var i in obj) {
            if (obj.hasOwnProperty(i)) {
                target[i] = obj[i];
            }
        }
        return target;
    };
    return PaginationService;
}());

var __decorate$1 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var LARGE_NUMBER = Number.MAX_SAFE_INTEGER;
var PaginatePipe = /** @class */ (function () {
    function PaginatePipe(service) {
        this.service = service;
        // store the values from the last time the pipe was invoked
        this.state = {};
    }
    PaginatePipe.prototype.transform = function (collection, args) {
        // When an observable is passed through the AsyncPipe, it will output
        // `null` until the subscription resolves. In this case, we want to
        // use the cached data from the `state` object to prevent the NgFor
        // from flashing empty until the real values arrive.
        if (!(collection instanceof Array)) {
            var _id = args.id || this.service.defaultId();
            if (this.state[_id]) {
                return this.state[_id].slice;
            }
            else {
                return collection;
            }
        }
        var serverSideMode = args.totalItems && args.totalItems !== collection.length;
        var instance = this.createInstance(collection, args);
        var id = instance.id;
        var start, end;
        var perPage = instance.itemsPerPage;
        var emitChange = this.service.register(instance);
        if (!serverSideMode && collection instanceof Array) {
            perPage = +perPage || LARGE_NUMBER;
            start = (instance.currentPage - 1) * perPage;
            end = start + perPage;
            var isIdentical = this.stateIsIdentical(id, collection, start, end);
            if (isIdentical) {
                return this.state[id].slice;
            }
            else {
                var slice = collection.slice(start, end);
                this.saveState(id, collection, slice, start, end);
                this.service.change.emit(id);
                return slice;
            }
        }
        else {
            if (emitChange) {
                this.service.change.emit(id);
            }
            // save the state for server-side collection to avoid null
            // flash as new data loads.
            this.saveState(id, collection, collection, start, end);
            return collection;
        }
    };
    /**
     * Create an PaginationInstance object, using defaults for any optional properties not supplied.
     */
    PaginatePipe.prototype.createInstance = function (collection, config) {
        this.checkConfig(config);
        return {
            id: config.id != null ? config.id : this.service.defaultId(),
            itemsPerPage: +config.itemsPerPage || 0,
            currentPage: +config.currentPage || 1,
            totalItems: +config.totalItems || collection.length
        };
    };
    /**
     * Ensure the argument passed to the filter contains the required properties.
     */
    PaginatePipe.prototype.checkConfig = function (config) {
        var required = ['itemsPerPage', 'currentPage'];
        var missing = required.filter(function (prop) { return !(prop in config); });
        if (0 < missing.length) {
            throw new Error("PaginatePipe: Argument is missing the following required properties: " + missing.join(', '));
        }
    };
    /**
     * To avoid returning a brand new array each time the pipe is run, we store the state of the sliced
     * array for a given id. This means that the next time the pipe is run on this collection & id, we just
     * need to check that the collection, start and end points are all identical, and if so, return the
     * last sliced array.
     */
    PaginatePipe.prototype.saveState = function (id, collection, slice, start, end) {
        this.state[id] = {
            collection: collection,
            size: collection.length,
            slice: slice,
            start: start,
            end: end
        };
    };
    /**
     * For a given id, returns true if the collection, size, start and end values are identical.
     */
    PaginatePipe.prototype.stateIsIdentical = function (id, collection, start, end) {
        var state = this.state[id];
        if (!state) {
            return false;
        }
        var isMetaDataIdentical = state.size === collection.length &&
            state.start === start &&
            state.end === end;
        if (!isMetaDataIdentical) {
            return false;
        }
        return state.slice.every(function (element, index) { return element === collection[start + index]; });
    };
    PaginatePipe = __decorate$1([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Pipe"])({
            name: 'paginate',
            pure: false
        }),
        __metadata("design:paramtypes", [PaginationService])
    ], PaginatePipe);
    return PaginatePipe;
}());

/**
 * The default template and styles for the pagination links are borrowed directly
 * from Zurb Foundation 6: http://foundation.zurb.com/sites/docs/pagination.html
 */
var DEFAULT_TEMPLATE = "\n    <pagination-template  #p=\"paginationApi\"\n                         [id]=\"id\"\n                         [maxSize]=\"maxSize\"\n                         (pageChange)=\"pageChange.emit($event)\"\n                         (pageBoundsCorrection)=\"pageBoundsCorrection.emit($event)\">\n    <ul class=\"ngx-pagination\" \n        role=\"navigation\" \n        [attr.aria-label]=\"screenReaderPaginationLabel\" \n        [class.responsive]=\"responsive\"\n        *ngIf=\"!(autoHide && p.pages.length <= 1)\">\n\n        <li class=\"pagination-previous\" [class.disabled]=\"p.isFirstPage()\" *ngIf=\"directionLinks\"> \n            <a tabindex=\"0\" *ngIf=\"1 < p.getCurrent()\" (keyup.enter)=\"p.previous()\" (click)=\"p.previous()\" [attr.aria-label]=\"previousLabel + ' ' + screenReaderPageLabel\">\n                {{ previousLabel }} <span class=\"show-for-sr\">{{ screenReaderPageLabel }}</span>\n            </a>\n            <span *ngIf=\"p.isFirstPage()\">\n                {{ previousLabel }} <span class=\"show-for-sr\">{{ screenReaderPageLabel }}</span>\n            </span>\n        </li> \n\n        <li class=\"small-screen\">\n            {{ p.getCurrent() }} / {{ p.getLastPage() }}\n        </li>\n\n        <li [class.current]=\"p.getCurrent() === page.value\" \n            [class.ellipsis]=\"page.label === '...'\"\n            *ngFor=\"let page of p.pages\">\n            <a tabindex=\"0\" (keyup.enter)=\"p.setCurrent(page.value)\" (click)=\"p.setCurrent(page.value)\" *ngIf=\"p.getCurrent() !== page.value\">\n                <span class=\"show-for-sr\">{{ screenReaderPageLabel }} </span>\n                <span>{{ (page.label === '...') ? page.label : (page.label | number:'') }}</span>\n            </a>\n            <ng-container *ngIf=\"p.getCurrent() === page.value\">\n                <span class=\"show-for-sr\">{{ screenReaderCurrentLabel }} </span>\n                <span>{{ (page.label === '...') ? page.label : (page.label | number:'') }}</span> \n            </ng-container>\n        </li>\n\n        <li class=\"pagination-next\" [class.disabled]=\"p.isLastPage()\" *ngIf=\"directionLinks\">\n            <a tabindex=\"0\" *ngIf=\"!p.isLastPage()\" (keyup.enter)=\"p.next()\" (click)=\"p.next()\" [attr.aria-label]=\"nextLabel + ' ' + screenReaderPageLabel\">\n                 {{ nextLabel }} <span class=\"show-for-sr\">{{ screenReaderPageLabel }}</span>\n            </a>\n            <span *ngIf=\"p.isLastPage()\">\n                 {{ nextLabel }} <span class=\"show-for-sr\">{{ screenReaderPageLabel }}</span>\n            </span>\n        </li>\n\n    </ul>\n    </pagination-template>\n    ";
var DEFAULT_STYLES = "\n.ngx-pagination {\n  margin-left: 0;\n  margin-bottom: 1rem; }\n  .ngx-pagination::before, .ngx-pagination::after {\n    content: ' ';\n    display: table; }\n  .ngx-pagination::after {\n    clear: both; }\n  .ngx-pagination li {\n    -moz-user-select: none;\n    -webkit-user-select: none;\n    -ms-user-select: none;\n    margin-right: 0.0625rem;\n    border-radius: 0; }\n  .ngx-pagination li {\n    display: inline-block; }\n  .ngx-pagination a,\n  .ngx-pagination button {\n    color: #0a0a0a; \n    display: block;\n    padding: 0.1875rem 0.625rem;\n    border-radius: 0; }\n    .ngx-pagination a:hover,\n    .ngx-pagination button:hover {\n      background: #e6e6e6; }\n  .ngx-pagination .current {\n    padding: 0.1875rem 0.625rem;\n    background: #2199e8;\n    color: #fefefe;\n    cursor: default; }\n  .ngx-pagination .disabled {\n    padding: 0.1875rem 0.625rem;\n    color: #cacaca;\n    cursor: default; } \n    .ngx-pagination .disabled:hover {\n      background: transparent; }\n  .ngx-pagination a, .ngx-pagination button {\n    cursor: pointer; }\n\n.ngx-pagination .pagination-previous a::before,\n.ngx-pagination .pagination-previous.disabled::before { \n  content: '\u00AB';\n  display: inline-block;\n  margin-right: 0.5rem; }\n\n.ngx-pagination .pagination-next a::after,\n.ngx-pagination .pagination-next.disabled::after {\n  content: '\u00BB';\n  display: inline-block;\n  margin-left: 0.5rem; }\n\n.ngx-pagination .show-for-sr {\n  position: absolute !important;\n  width: 1px;\n  height: 1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0); }\n.ngx-pagination .small-screen {\n  display: none; }\n@media screen and (max-width: 601px) {\n  .ngx-pagination.responsive .small-screen {\n    display: inline-block; } \n  .ngx-pagination.responsive li:not(.small-screen):not(.pagination-previous):not(.pagination-next) {\n    display: none; }\n}\n  ";

var __decorate$2 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata$1 = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
function coerceToBoolean(input) {
    return !!input && input !== 'false';
}
/**
 * The default pagination controls component. Actually just a default implementation of a custom template.
 */
var PaginationControlsComponent = /** @class */ (function () {
    function PaginationControlsComponent() {
        this.maxSize = 7;
        this.previousLabel = 'Previous';
        this.nextLabel = 'Next';
        this.screenReaderPaginationLabel = 'Pagination';
        this.screenReaderPageLabel = 'page';
        this.screenReaderCurrentLabel = "You're on page";
        this.pageChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.pageBoundsCorrection = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this._directionLinks = true;
        this._autoHide = false;
        this._responsive = false;
    }
    Object.defineProperty(PaginationControlsComponent.prototype, "directionLinks", {
        get: function () {
            return this._directionLinks;
        },
        set: function (value) {
            this._directionLinks = coerceToBoolean(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PaginationControlsComponent.prototype, "autoHide", {
        get: function () {
            return this._autoHide;
        },
        set: function (value) {
            this._autoHide = coerceToBoolean(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PaginationControlsComponent.prototype, "responsive", {
        get: function () {
            return this._responsive;
        },
        set: function (value) {
            this._responsive = coerceToBoolean(value);
        },
        enumerable: true,
        configurable: true
    });
    __decorate$2([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata$1("design:type", String)
    ], PaginationControlsComponent.prototype, "id", void 0);
    __decorate$2([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata$1("design:type", Number)
    ], PaginationControlsComponent.prototype, "maxSize", void 0);
    __decorate$2([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata$1("design:type", Boolean),
        __metadata$1("design:paramtypes", [Boolean])
    ], PaginationControlsComponent.prototype, "directionLinks", null);
    __decorate$2([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata$1("design:type", Boolean),
        __metadata$1("design:paramtypes", [Boolean])
    ], PaginationControlsComponent.prototype, "autoHide", null);
    __decorate$2([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata$1("design:type", Boolean),
        __metadata$1("design:paramtypes", [Boolean])
    ], PaginationControlsComponent.prototype, "responsive", null);
    __decorate$2([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata$1("design:type", String)
    ], PaginationControlsComponent.prototype, "previousLabel", void 0);
    __decorate$2([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata$1("design:type", String)
    ], PaginationControlsComponent.prototype, "nextLabel", void 0);
    __decorate$2([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata$1("design:type", String)
    ], PaginationControlsComponent.prototype, "screenReaderPaginationLabel", void 0);
    __decorate$2([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata$1("design:type", String)
    ], PaginationControlsComponent.prototype, "screenReaderPageLabel", void 0);
    __decorate$2([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata$1("design:type", String)
    ], PaginationControlsComponent.prototype, "screenReaderCurrentLabel", void 0);
    __decorate$2([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata$1("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"])
    ], PaginationControlsComponent.prototype, "pageChange", void 0);
    __decorate$2([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata$1("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"])
    ], PaginationControlsComponent.prototype, "pageBoundsCorrection", void 0);
    PaginationControlsComponent = __decorate$2([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'pagination-controls',
            template: DEFAULT_TEMPLATE,
            styles: [DEFAULT_STYLES],
            changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].OnPush,
            encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewEncapsulation"].None
        })
    ], PaginationControlsComponent);
    return PaginationControlsComponent;
}());

var __decorate$3 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata$2 = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
/**
 * This directive is what powers all pagination controls components, including the default one.
 * It exposes an API which is hooked up to the PaginationService to keep the PaginatePipe in sync
 * with the pagination controls.
 */
var PaginationControlsDirective = /** @class */ (function () {
    function PaginationControlsDirective(service, changeDetectorRef) {
        var _this = this;
        this.service = service;
        this.changeDetectorRef = changeDetectorRef;
        this.maxSize = 7;
        this.pageChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.pageBoundsCorrection = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.pages = [];
        this.changeSub = this.service.change
            .subscribe(function (id) {
            if (_this.id === id) {
                _this.updatePageLinks();
                _this.changeDetectorRef.markForCheck();
                _this.changeDetectorRef.detectChanges();
            }
        });
    }
    PaginationControlsDirective.prototype.ngOnInit = function () {
        if (this.id === undefined) {
            this.id = this.service.defaultId();
        }
        this.updatePageLinks();
    };
    PaginationControlsDirective.prototype.ngOnChanges = function (changes) {
        this.updatePageLinks();
    };
    PaginationControlsDirective.prototype.ngOnDestroy = function () {
        this.changeSub.unsubscribe();
    };
    /**
     * Go to the previous page
     */
    PaginationControlsDirective.prototype.previous = function () {
        this.checkValidId();
        this.setCurrent(this.getCurrent() - 1);
    };
    /**
     * Go to the next page
     */
    PaginationControlsDirective.prototype.next = function () {
        this.checkValidId();
        this.setCurrent(this.getCurrent() + 1);
    };
    /**
     * Returns true if current page is first page
     */
    PaginationControlsDirective.prototype.isFirstPage = function () {
        return this.getCurrent() === 1;
    };
    /**
     * Returns true if current page is last page
     */
    PaginationControlsDirective.prototype.isLastPage = function () {
        return this.getLastPage() === this.getCurrent();
    };
    /**
     * Set the current page number.
     */
    PaginationControlsDirective.prototype.setCurrent = function (page) {
        this.pageChange.emit(page);
    };
    /**
     * Get the current page number.
     */
    PaginationControlsDirective.prototype.getCurrent = function () {
        return this.service.getCurrentPage(this.id);
    };
    /**
     * Returns the last page number
     */
    PaginationControlsDirective.prototype.getLastPage = function () {
        var inst = this.service.getInstance(this.id);
        if (inst.totalItems < 1) {
            // when there are 0 or fewer (an error case) items, there are no "pages" as such,
            // but it makes sense to consider a single, empty page as the last page.
            return 1;
        }
        return Math.ceil(inst.totalItems / inst.itemsPerPage);
    };
    PaginationControlsDirective.prototype.getTotalItems = function () {
        return this.service.getInstance(this.id).totalItems;
    };
    PaginationControlsDirective.prototype.checkValidId = function () {
        if (this.service.getInstance(this.id).id == null) {
            console.warn("PaginationControlsDirective: the specified id \"" + this.id + "\" does not match any registered PaginationInstance");
        }
    };
    /**
     * Updates the page links and checks that the current page is valid. Should run whenever the
     * PaginationService.change stream emits a value matching the current ID, or when any of the
     * input values changes.
     */
    PaginationControlsDirective.prototype.updatePageLinks = function () {
        var _this = this;
        var inst = this.service.getInstance(this.id);
        var correctedCurrentPage = this.outOfBoundCorrection(inst);
        if (correctedCurrentPage !== inst.currentPage) {
            setTimeout(function () {
                _this.pageBoundsCorrection.emit(correctedCurrentPage);
                _this.pages = _this.createPageArray(inst.currentPage, inst.itemsPerPage, inst.totalItems, _this.maxSize);
            });
        }
        else {
            this.pages = this.createPageArray(inst.currentPage, inst.itemsPerPage, inst.totalItems, this.maxSize);
        }
    };
    /**
     * Checks that the instance.currentPage property is within bounds for the current page range.
     * If not, return a correct value for currentPage, or the current value if OK.
     */
    PaginationControlsDirective.prototype.outOfBoundCorrection = function (instance) {
        var totalPages = Math.ceil(instance.totalItems / instance.itemsPerPage);
        if (totalPages < instance.currentPage && 0 < totalPages) {
            return totalPages;
        }
        else if (instance.currentPage < 1) {
            return 1;
        }
        return instance.currentPage;
    };
    /**
     * Returns an array of Page objects to use in the pagination controls.
     */
    PaginationControlsDirective.prototype.createPageArray = function (currentPage, itemsPerPage, totalItems, paginationRange) {
        // paginationRange could be a string if passed from attribute, so cast to number.
        paginationRange = +paginationRange;
        var pages = [];
        var totalPages = Math.ceil(totalItems / itemsPerPage);
        var halfWay = Math.ceil(paginationRange / 2);
        var isStart = currentPage <= halfWay;
        var isEnd = totalPages - halfWay < currentPage;
        var isMiddle = !isStart && !isEnd;
        var ellipsesNeeded = paginationRange < totalPages;
        var i = 1;
        while (i <= totalPages && i <= paginationRange) {
            var label = void 0;
            var pageNumber = this.calculatePageNumber(i, currentPage, paginationRange, totalPages);
            var openingEllipsesNeeded = (i === 2 && (isMiddle || isEnd));
            var closingEllipsesNeeded = (i === paginationRange - 1 && (isMiddle || isStart));
            if (ellipsesNeeded && (openingEllipsesNeeded || closingEllipsesNeeded)) {
                label = '...';
            }
            else {
                label = pageNumber;
            }
            pages.push({
                label: label,
                value: pageNumber
            });
            i++;
        }
        return pages;
    };
    /**
     * Given the position in the sequence of pagination links [i],
     * figure out what page number corresponds to that position.
     */
    PaginationControlsDirective.prototype.calculatePageNumber = function (i, currentPage, paginationRange, totalPages) {
        var halfWay = Math.ceil(paginationRange / 2);
        if (i === paginationRange) {
            return totalPages;
        }
        else if (i === 1) {
            return i;
        }
        else if (paginationRange < totalPages) {
            if (totalPages - halfWay < currentPage) {
                return totalPages - paginationRange + i;
            }
            else if (halfWay < currentPage) {
                return currentPage - halfWay + i;
            }
            else {
                return i;
            }
        }
        else {
            return i;
        }
    };
    __decorate$3([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata$2("design:type", String)
    ], PaginationControlsDirective.prototype, "id", void 0);
    __decorate$3([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata$2("design:type", Number)
    ], PaginationControlsDirective.prototype, "maxSize", void 0);
    __decorate$3([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata$2("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"])
    ], PaginationControlsDirective.prototype, "pageChange", void 0);
    __decorate$3([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata$2("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"])
    ], PaginationControlsDirective.prototype, "pageBoundsCorrection", void 0);
    PaginationControlsDirective = __decorate$3([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"])({
            selector: 'pagination-template,[pagination-template]',
            exportAs: 'paginationApi'
        }),
        __metadata$2("design:paramtypes", [PaginationService,
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"]])
    ], PaginationControlsDirective);
    return PaginationControlsDirective;
}());

var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var NgxPaginationModule = /** @class */ (function () {
    function NgxPaginationModule() {
    }
    NgxPaginationModule = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
            imports: [_angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"]],
            declarations: [
                PaginatePipe,
                PaginationControlsComponent,
                PaginationControlsDirective
            ],
            providers: [PaginationService],
            exports: [PaginatePipe, PaginationControlsComponent, PaginationControlsDirective]
        })
    ], NgxPaginationModule);
    return NgxPaginationModule;
}());

/**
 * Generated bundle index. Do not edit.
 */




/***/ }),

/***/ "./node_modules/primeng/components/message/message.js":
/*!************************************************************!*\
  !*** ./node_modules/primeng/components/message/message.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var common_1 = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
var UIMessage = /** @class */ (function () {
    function UIMessage() {
    }
    Object.defineProperty(UIMessage.prototype, "icon", {
        get: function () {
            var icon = null;
            if (this.severity) {
                switch (this.severity) {
                    case 'success':
                        icon = 'pi pi-check';
                        break;
                    case 'info':
                        icon = 'pi pi-info-circle';
                        break;
                    case 'error':
                        icon = 'pi pi-times';
                        break;
                    case 'warn':
                        icon = 'pi pi-exclamation-triangle';
                        break;
                    default:
                        icon = 'pi pi-info-circle';
                        break;
                }
            }
            return icon;
        },
        enumerable: true,
        configurable: true
    });
    __decorate([
        core_1.Input(),
        __metadata("design:type", String)
    ], UIMessage.prototype, "severity", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", String)
    ], UIMessage.prototype, "text", void 0);
    UIMessage = __decorate([
        core_1.Component({
            selector: 'p-message',
            template: "\n        <div aria-live=\"polite\" class=\"ui-message ui-widget ui-corner-all\" *ngIf=\"severity\"\n        [ngClass]=\"{'ui-message-info': (severity === 'info'),\n                'ui-message-warn': (severity === 'warn'),\n                'ui-message-error': (severity === 'error'),\n                'ui-message-success': (severity === 'success')}\">\n            <span class=\"ui-message-icon\" [ngClass]=\"icon\"></span>\n            <span class=\"ui-message-text\">{{text}}</span>\n        </div>\n    "
        })
    ], UIMessage);
    return UIMessage;
}());
exports.UIMessage = UIMessage;
var MessageModule = /** @class */ (function () {
    function MessageModule() {
    }
    MessageModule = __decorate([
        core_1.NgModule({
            imports: [common_1.CommonModule],
            exports: [UIMessage],
            declarations: [UIMessage]
        })
    ], MessageModule);
    return MessageModule;
}());
exports.MessageModule = MessageModule;
//# sourceMappingURL=message.js.map

/***/ }),

/***/ "./node_modules/primeng/components/table/table.js":
/*!********************************************************!*\
  !*** ./node_modules/primeng/components/table/table.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var common_1 = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
var shared_1 = __webpack_require__(/*! ../common/shared */ "./node_modules/primeng/components/common/shared.js");
var paginator_1 = __webpack_require__(/*! ../paginator/paginator */ "./node_modules/primeng/components/paginator/paginator.js");
var domhandler_1 = __webpack_require__(/*! ../dom/domhandler */ "./node_modules/primeng/components/dom/domhandler.js");
var objectutils_1 = __webpack_require__(/*! ../utils/objectutils */ "./node_modules/primeng/components/utils/objectutils.js");
var core_2 = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var rxjs_1 = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
var TableService = /** @class */ (function () {
    function TableService() {
        this.sortSource = new rxjs_1.Subject();
        this.selectionSource = new rxjs_1.Subject();
        this.contextMenuSource = new rxjs_1.Subject();
        this.valueSource = new rxjs_1.Subject();
        this.totalRecordsSource = new rxjs_1.Subject();
        this.columnsSource = new rxjs_1.Subject();
        this.sortSource$ = this.sortSource.asObservable();
        this.selectionSource$ = this.selectionSource.asObservable();
        this.contextMenuSource$ = this.contextMenuSource.asObservable();
        this.valueSource$ = this.valueSource.asObservable();
        this.totalRecordsSource$ = this.totalRecordsSource.asObservable();
        this.columnsSource$ = this.columnsSource.asObservable();
    }
    TableService.prototype.onSort = function (sortMeta) {
        this.sortSource.next(sortMeta);
    };
    TableService.prototype.onSelectionChange = function () {
        this.selectionSource.next();
    };
    TableService.prototype.onContextMenu = function (data) {
        this.contextMenuSource.next(data);
    };
    TableService.prototype.onValueChange = function (value) {
        this.valueSource.next(value);
    };
    TableService.prototype.onTotalRecordsChange = function (value) {
        this.totalRecordsSource.next(value);
    };
    TableService.prototype.onColumnsChange = function (columns) {
        this.columnsSource.next(columns);
    };
    TableService = __decorate([
        core_2.Injectable()
    ], TableService);
    return TableService;
}());
exports.TableService = TableService;
var Table = /** @class */ (function () {
    function Table(el, domHandler, objectUtils, zone, tableService) {
        this.el = el;
        this.domHandler = domHandler;
        this.objectUtils = objectUtils;
        this.zone = zone;
        this.tableService = tableService;
        this.first = 0;
        this.pageLinks = 5;
        this.alwaysShowPaginator = true;
        this.paginatorPosition = 'bottom';
        this.defaultSortOrder = 1;
        this.sortMode = 'single';
        this.resetPageOnSort = true;
        this.selectionChange = new core_1.EventEmitter();
        this.contextMenuSelectionChange = new core_1.EventEmitter();
        this.contextMenuSelectionMode = "separate";
        this.rowTrackBy = function (index, item) { return item; };
        this.lazy = false;
        this.lazyLoadOnInit = true;
        this.compareSelectionBy = 'deepEquals';
        this.csvSeparator = ',';
        this.exportFilename = 'download';
        this.filters = {};
        this.filterDelay = 300;
        this.expandedRowKeys = {};
        this.rowExpandMode = 'multiple';
        this.virtualScrollDelay = 500;
        this.virtualRowHeight = 28;
        this.columnResizeMode = 'fit';
        this.loadingIcon = 'pi pi-spinner';
        this.onRowSelect = new core_1.EventEmitter();
        this.onRowUnselect = new core_1.EventEmitter();
        this.onPage = new core_1.EventEmitter();
        this.onSort = new core_1.EventEmitter();
        this.onFilter = new core_1.EventEmitter();
        this.onLazyLoad = new core_1.EventEmitter();
        this.onRowExpand = new core_1.EventEmitter();
        this.onRowCollapse = new core_1.EventEmitter();
        this.onContextMenuSelect = new core_1.EventEmitter();
        this.onColResize = new core_1.EventEmitter();
        this.onColReorder = new core_1.EventEmitter();
        this.onRowReorder = new core_1.EventEmitter();
        this.onEditInit = new core_1.EventEmitter();
        this.onEditComplete = new core_1.EventEmitter();
        this.onEditCancel = new core_1.EventEmitter();
        this.onHeaderCheckboxToggle = new core_1.EventEmitter();
        this.sortFunction = new core_1.EventEmitter();
        this._value = [];
        this._totalRecords = 0;
        this.selectionKeys = {};
        this._sortOrder = 1;
        this.filterConstraints = {
            startsWith: function (value, filter) {
                if (filter === undefined || filter === null || filter.trim() === '') {
                    return true;
                }
                if (value === undefined || value === null) {
                    return false;
                }
                var filterValue = filter.toLowerCase();
                return value.toString().toLowerCase().slice(0, filterValue.length) === filterValue;
            },
            contains: function (value, filter) {
                if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {
                    return true;
                }
                if (value === undefined || value === null) {
                    return false;
                }
                return value.toString().toLowerCase().indexOf(filter.toLowerCase()) !== -1;
            },
            endsWith: function (value, filter) {
                if (filter === undefined || filter === null || filter.trim() === '') {
                    return true;
                }
                if (value === undefined || value === null) {
                    return false;
                }
                var filterValue = filter.toString().toLowerCase();
                return value.toString().toLowerCase().indexOf(filterValue, value.toString().length - filterValue.length) !== -1;
            },
            equals: function (value, filter) {
                if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {
                    return true;
                }
                if (value === undefined || value === null) {
                    return false;
                }
                if (value.getTime && filter.getTime)
                    return value.getTime() === filter.getTime();
                else
                    return value.toString().toLowerCase() == filter.toString().toLowerCase();
            },
            notEquals: function (value, filter) {
                if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {
                    return false;
                }
                if (value === undefined || value === null) {
                    return true;
                }
                if (value.getTime && filter.getTime)
                    return value.getTime() !== filter.getTime();
                else
                    return value.toString().toLowerCase() != filter.toString().toLowerCase();
            },
            in: function (value, filter) {
                if (filter === undefined || filter === null || filter.length === 0) {
                    return true;
                }
                if (value === undefined || value === null) {
                    return false;
                }
                for (var i = 0; i < filter.length; i++) {
                    if (filter[i] === value || (value.getTime && filter[i].getTime && value.getTime() === filter[i].getTime())) {
                        return true;
                    }
                }
                return false;
            },
            lt: function (value, filter) {
                if (filter === undefined || filter === null) {
                    return true;
                }
                if (value === undefined || value === null) {
                    return false;
                }
                if (value.getTime && filter.getTime)
                    return value.getTime() < filter.getTime();
                else
                    return value < filter;
            },
            lte: function (value, filter) {
                if (filter === undefined || filter === null) {
                    return true;
                }
                if (value === undefined || value === null) {
                    return false;
                }
                if (value.getTime && filter.getTime)
                    return value.getTime() <= filter.getTime();
                else
                    return value <= filter;
            },
            gt: function (value, filter) {
                if (filter === undefined || filter === null) {
                    return true;
                }
                if (value === undefined || value === null) {
                    return false;
                }
                if (value.getTime && filter.getTime)
                    return value.getTime() > filter.getTime();
                else
                    return value > filter;
            },
            gte: function (value, filter) {
                if (filter === undefined || filter === null) {
                    return true;
                }
                if (value === undefined || value === null) {
                    return false;
                }
                if (value.getTime && filter.getTime)
                    return value.getTime() >= filter.getTime();
                else
                    return value >= filter;
            }
        };
    }
    Table.prototype.ngOnInit = function () {
        if (this.lazy && this.lazyLoadOnInit) {
            this.onLazyLoad.emit(this.createLazyLoadMetadata());
        }
        this.initialized = true;
    };
    Table.prototype.ngAfterContentInit = function () {
        var _this = this;
        this.templates.forEach(function (item) {
            switch (item.getType()) {
                case 'caption':
                    _this.captionTemplate = item.template;
                    break;
                case 'header':
                    _this.headerTemplate = item.template;
                    break;
                case 'body':
                    _this.bodyTemplate = item.template;
                    break;
                case 'footer':
                    _this.footerTemplate = item.template;
                    break;
                case 'summary':
                    _this.summaryTemplate = item.template;
                    break;
                case 'colgroup':
                    _this.colGroupTemplate = item.template;
                    break;
                case 'rowexpansion':
                    _this.expandedRowTemplate = item.template;
                    break;
                case 'frozenrows':
                    _this.frozenRowsTemplate = item.template;
                    break;
                case 'frozenheader':
                    _this.frozenHeaderTemplate = item.template;
                    break;
                case 'frozenbody':
                    _this.frozenBodyTemplate = item.template;
                    break;
                case 'frozenfooter':
                    _this.frozenFooterTemplate = item.template;
                    break;
                case 'frozencolgroup':
                    _this.frozenColGroupTemplate = item.template;
                    break;
                case 'emptymessage':
                    _this.emptyMessageTemplate = item.template;
                    break;
                case 'paginatorleft':
                    _this.paginatorLeftTemplate = item.template;
                    break;
                case 'paginatorright':
                    _this.paginatorRightTemplate = item.template;
                    break;
            }
        });
    };
    Object.defineProperty(Table.prototype, "value", {
        get: function () {
            return this._value;
        },
        set: function (val) {
            this._value = val;
            if (!this.lazy) {
                this.totalRecords = (this._value ? this._value.length : 0);
                if (this.sortMode == 'single' && this.sortField)
                    this.sortSingle();
                else if (this.sortMode == 'multiple' && this.multiSortMeta)
                    this.sortMultiple();
                else if (this.hasFilter()) //sort already filters
                    this._filter();
            }
            if (this.virtualScroll && this.virtualScrollCallback) {
                this.virtualScrollCallback();
            }
            this.tableService.onValueChange(val);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Table.prototype, "columns", {
        get: function () {
            return this._columns;
        },
        set: function (cols) {
            this._columns = cols;
            this.tableService.onColumnsChange(cols);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Table.prototype, "totalRecords", {
        get: function () {
            return this._totalRecords;
        },
        set: function (val) {
            this._totalRecords = val;
            this.tableService.onTotalRecordsChange(this._totalRecords);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Table.prototype, "sortField", {
        get: function () {
            return this._sortField;
        },
        set: function (val) {
            this._sortField = val;
            //avoid triggering lazy load prior to lazy initialization at onInit
            if (!this.lazy || this.initialized) {
                if (this.sortMode === 'single') {
                    this.sortSingle();
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Table.prototype, "sortOrder", {
        get: function () {
            return this._sortOrder;
        },
        set: function (val) {
            this._sortOrder = val;
            //avoid triggering lazy load prior to lazy initialization at onInit
            if (!this.lazy || this.initialized) {
                if (this.sortMode === 'single') {
                    this.sortSingle();
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Table.prototype, "multiSortMeta", {
        get: function () {
            return this._multiSortMeta;
        },
        set: function (val) {
            this._multiSortMeta = val;
            if (this.sortMode === 'multiple') {
                this.sortMultiple();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Table.prototype, "selection", {
        get: function () {
            return this._selection;
        },
        set: function (val) {
            this._selection = val;
            if (!this.preventSelectionSetterPropagation) {
                this.updateSelectionKeys();
                this.tableService.onSelectionChange();
            }
            this.preventSelectionSetterPropagation = false;
        },
        enumerable: true,
        configurable: true
    });
    Table.prototype.updateSelectionKeys = function () {
        if (this.dataKey && this._selection) {
            this.selectionKeys = {};
            if (Array.isArray(this._selection)) {
                for (var _i = 0, _a = this._selection; _i < _a.length; _i++) {
                    var data = _a[_i];
                    this.selectionKeys[String(this.objectUtils.resolveFieldData(data, this.dataKey))] = 1;
                }
            }
            else {
                this.selectionKeys[String(this.objectUtils.resolveFieldData(this._selection, this.dataKey))] = 1;
            }
        }
    };
    Table.prototype.onPageChange = function (event) {
        this.first = event.first;
        this.rows = event.rows;
        if (this.lazy) {
            this.onLazyLoad.emit(this.createLazyLoadMetadata());
        }
        this.onPage.emit({
            first: this.first,
            rows: this.rows
        });
        this.tableService.onValueChange(this.value);
    };
    Table.prototype.sort = function (event) {
        var originalEvent = event.originalEvent;
        if (this.sortMode === 'single') {
            this._sortOrder = (this.sortField === event.field) ? this.sortOrder * -1 : this.defaultSortOrder;
            this._sortField = event.field;
            this.sortSingle();
        }
        if (this.sortMode === 'multiple') {
            var metaKey = originalEvent.metaKey || originalEvent.ctrlKey;
            var sortMeta = this.getSortMeta(event.field);
            if (sortMeta) {
                if (!metaKey) {
                    this._multiSortMeta = [{ field: event.field, order: sortMeta.order * -1 }];
                }
                else {
                    sortMeta.order = sortMeta.order * -1;
                }
            }
            else {
                if (!metaKey || !this.multiSortMeta) {
                    this._multiSortMeta = [];
                }
                this.multiSortMeta.push({ field: event.field, order: this.defaultSortOrder });
            }
            this.sortMultiple();
        }
    };
    Table.prototype.sortSingle = function () {
        var _this = this;
        if (this.sortField && this.sortOrder) {
            if (this.resetPageOnSort) {
                this.first = 0;
            }
            if (this.lazy) {
                this.onLazyLoad.emit(this.createLazyLoadMetadata());
            }
            else if (this.value) {
                if (this.customSort) {
                    this.sortFunction.emit({
                        data: this.value,
                        mode: this.sortMode,
                        field: this.sortField,
                        order: this.sortOrder
                    });
                }
                else {
                    this.value.sort(function (data1, data2) {
                        var value1 = _this.objectUtils.resolveFieldData(data1, _this.sortField);
                        var value2 = _this.objectUtils.resolveFieldData(data2, _this.sortField);
                        var result = null;
                        if (value1 == null && value2 != null)
                            result = -1;
                        else if (value1 != null && value2 == null)
                            result = 1;
                        else if (value1 == null && value2 == null)
                            result = 0;
                        else if (typeof value1 === 'string' && typeof value2 === 'string')
                            result = value1.localeCompare(value2);
                        else
                            result = (value1 < value2) ? -1 : (value1 > value2) ? 1 : 0;
                        return (_this.sortOrder * result);
                    });
                }
                if (this.hasFilter()) {
                    this._filter();
                }
            }
            var sortMeta = {
                field: this.sortField,
                order: this.sortOrder
            };
            this.onSort.emit(sortMeta);
            this.tableService.onSort(sortMeta);
        }
    };
    Table.prototype.sortMultiple = function () {
        var _this = this;
        if (this.multiSortMeta) {
            if (this.lazy) {
                this.onLazyLoad.emit(this.createLazyLoadMetadata());
            }
            else if (this.value) {
                if (this.customSort) {
                    this.sortFunction.emit({
                        data: this.value,
                        mode: this.sortMode,
                        multiSortMeta: this.multiSortMeta
                    });
                }
                else {
                    this.value.sort(function (data1, data2) {
                        return _this.multisortField(data1, data2, _this.multiSortMeta, 0);
                    });
                }
                if (this.hasFilter()) {
                    this._filter();
                }
            }
            this.onSort.emit({
                multisortmeta: this.multiSortMeta
            });
            this.tableService.onSort(this.multiSortMeta);
        }
    };
    Table.prototype.multisortField = function (data1, data2, multiSortMeta, index) {
        var value1 = this.objectUtils.resolveFieldData(data1, multiSortMeta[index].field);
        var value2 = this.objectUtils.resolveFieldData(data2, multiSortMeta[index].field);
        var result = null;
        if (value1 == null && value2 != null)
            result = -1;
        else if (value1 != null && value2 == null)
            result = 1;
        else if (value1 == null && value2 == null)
            result = 0;
        if (typeof value1 == 'string' || value1 instanceof String) {
            if (value1.localeCompare && (value1 != value2)) {
                return (multiSortMeta[index].order * value1.localeCompare(value2));
            }
        }
        else {
            result = (value1 < value2) ? -1 : 1;
        }
        if (value1 == value2) {
            return (multiSortMeta.length - 1) > (index) ? (this.multisortField(data1, data2, multiSortMeta, index + 1)) : 0;
        }
        return (multiSortMeta[index].order * result);
    };
    Table.prototype.getSortMeta = function (field) {
        if (this.multiSortMeta && this.multiSortMeta.length) {
            for (var i = 0; i < this.multiSortMeta.length; i++) {
                if (this.multiSortMeta[i].field === field) {
                    return this.multiSortMeta[i];
                }
            }
        }
        return null;
    };
    Table.prototype.isSorted = function (field) {
        if (this.sortMode === 'single') {
            return (this.sortField && this.sortField === field);
        }
        else if (this.sortMode === 'multiple') {
            var sorted = false;
            if (this.multiSortMeta) {
                for (var i = 0; i < this.multiSortMeta.length; i++) {
                    if (this.multiSortMeta[i].field == field) {
                        sorted = true;
                        break;
                    }
                }
            }
            return sorted;
        }
    };
    Table.prototype.handleRowClick = function (event) {
        var targetNode = event.originalEvent.target.nodeName;
        if (targetNode == 'INPUT' || targetNode == 'BUTTON' || targetNode == 'A' || (this.domHandler.hasClass(event.originalEvent.target, 'ui-clickable'))) {
            return;
        }
        if (this.selectionMode) {
            this.preventSelectionSetterPropagation = true;
            if (this.isMultipleSelectionMode() && event.originalEvent.shiftKey && this.anchorRowIndex != null) {
                this.domHandler.clearSelection();
                if (this.rangeRowIndex != null) {
                    this.clearSelectionRange(event.originalEvent);
                }
                this.rangeRowIndex = event.rowIndex;
                this.selectRange(event.originalEvent, event.rowIndex);
            }
            else {
                var rowData = event.rowData;
                var selected = this.isSelected(rowData);
                var metaSelection = this.rowTouched ? false : this.metaKeySelection;
                var dataKeyValue = this.dataKey ? String(this.objectUtils.resolveFieldData(rowData, this.dataKey)) : null;
                this.anchorRowIndex = event.rowIndex;
                this.rangeRowIndex = event.rowIndex;
                if (metaSelection) {
                    var metaKey = event.originalEvent.metaKey || event.originalEvent.ctrlKey;
                    if (selected && metaKey) {
                        if (this.isSingleSelectionMode()) {
                            this._selection = null;
                            this.selectionKeys = {};
                            this.selectionChange.emit(null);
                        }
                        else {
                            var selectionIndex_1 = this.findIndexInSelection(rowData);
                            this._selection = this.selection.filter(function (val, i) { return i != selectionIndex_1; });
                            this.selectionChange.emit(this.selection);
                            if (dataKeyValue) {
                                delete this.selectionKeys[dataKeyValue];
                            }
                        }
                        this.onRowUnselect.emit({ originalEvent: event.originalEvent, data: rowData, type: 'row' });
                    }
                    else {
                        if (this.isSingleSelectionMode()) {
                            this._selection = rowData;
                            this.selectionChange.emit(rowData);
                            if (dataKeyValue) {
                                this.selectionKeys = {};
                                this.selectionKeys[dataKeyValue] = 1;
                            }
                        }
                        else if (this.isMultipleSelectionMode()) {
                            if (metaKey) {
                                this._selection = this.selection || [];
                            }
                            else {
                                this._selection = [];
                                this.selectionKeys = {};
                            }
                            this._selection = this.selection.concat([rowData]);
                            this.selectionChange.emit(this.selection);
                            if (dataKeyValue) {
                                this.selectionKeys[dataKeyValue] = 1;
                            }
                        }
                        this.onRowSelect.emit({ originalEvent: event.originalEvent, data: rowData, type: 'row', index: event.rowIndex });
                    }
                }
                else {
                    if (this.selectionMode === 'single') {
                        if (selected) {
                            this._selection = null;
                            this.selectionKeys = {};
                            this.selectionChange.emit(this.selection);
                            this.onRowUnselect.emit({ originalEvent: event.originalEvent, data: rowData, type: 'row' });
                        }
                        else {
                            this._selection = rowData;
                            this.selectionChange.emit(this.selection);
                            this.onRowSelect.emit({ originalEvent: event.originalEvent, data: rowData, type: 'row', index: event.rowIndex });
                            if (dataKeyValue) {
                                this.selectionKeys = {};
                                this.selectionKeys[dataKeyValue] = 1;
                            }
                        }
                    }
                    else if (this.selectionMode === 'multiple') {
                        if (selected) {
                            var selectionIndex_2 = this.findIndexInSelection(rowData);
                            this._selection = this.selection.filter(function (val, i) { return i != selectionIndex_2; });
                            this.selectionChange.emit(this.selection);
                            this.onRowUnselect.emit({ originalEvent: event.originalEvent, data: rowData, type: 'row' });
                            if (dataKeyValue) {
                                delete this.selectionKeys[dataKeyValue];
                            }
                        }
                        else {
                            this._selection = this.selection ? this.selection.concat([rowData]) : [rowData];
                            this.selectionChange.emit(this.selection);
                            this.onRowSelect.emit({ originalEvent: event.originalEvent, data: rowData, type: 'row', index: event.rowIndex });
                            if (dataKeyValue) {
                                this.selectionKeys[dataKeyValue] = 1;
                            }
                        }
                    }
                }
            }
            this.tableService.onSelectionChange();
        }
        this.rowTouched = false;
    };
    Table.prototype.handleRowTouchEnd = function (event) {
        this.rowTouched = true;
    };
    Table.prototype.handleRowRightClick = function (event) {
        if (this.contextMenu) {
            var rowData = event.rowData;
            if (this.contextMenuSelectionMode === 'separate') {
                this.contextMenuSelection = rowData;
                this.contextMenuSelectionChange.emit(rowData);
                this.onContextMenuSelect.emit({ originalEvent: event.originalEvent, data: rowData });
                this.contextMenu.show(event.originalEvent);
                this.tableService.onContextMenu(rowData);
            }
            else if (this.contextMenuSelectionMode === 'joint') {
                this.preventSelectionSetterPropagation = true;
                var selected = this.isSelected(rowData);
                var dataKeyValue = this.dataKey ? String(this.objectUtils.resolveFieldData(rowData, this.dataKey)) : null;
                if (!selected) {
                    if (this.isSingleSelectionMode()) {
                        this.selection = rowData;
                        this.selectionChange.emit(rowData);
                    }
                    else if (this.isMultipleSelectionMode()) {
                        this.selection = [rowData];
                        this.selectionChange.emit(this.selection);
                    }
                    if (dataKeyValue) {
                        this.selectionKeys[dataKeyValue] = 1;
                    }
                }
                this.contextMenu.show(event.originalEvent);
                this.onContextMenuSelect.emit({ originalEvent: event, data: rowData });
            }
        }
    };
    Table.prototype.selectRange = function (event, rowIndex) {
        var rangeStart, rangeEnd;
        if (this.anchorRowIndex > rowIndex) {
            rangeStart = rowIndex;
            rangeEnd = this.anchorRowIndex;
        }
        else if (this.anchorRowIndex < rowIndex) {
            rangeStart = this.anchorRowIndex;
            rangeEnd = rowIndex;
        }
        else {
            rangeStart = rowIndex;
            rangeEnd = rowIndex;
        }
        for (var i = rangeStart; i <= rangeEnd; i++) {
            var rangeRowData = this.filteredValue ? this.filteredValue[i] : this.value[i];
            if (!this.isSelected(rangeRowData)) {
                this._selection = this.selection.concat([rangeRowData]);
                var dataKeyValue = this.dataKey ? String(this.objectUtils.resolveFieldData(rangeRowData, this.dataKey)) : null;
                if (dataKeyValue) {
                    this.selectionKeys[dataKeyValue] = 1;
                }
                this.onRowSelect.emit({ originalEvent: event, data: rangeRowData, type: 'row' });
            }
        }
        this.selectionChange.emit(this.selection);
    };
    Table.prototype.clearSelectionRange = function (event) {
        var rangeStart, rangeEnd;
        if (this.rangeRowIndex > this.anchorRowIndex) {
            rangeStart = this.anchorRowIndex;
            rangeEnd = this.rangeRowIndex;
        }
        else if (this.rangeRowIndex < this.anchorRowIndex) {
            rangeStart = this.rangeRowIndex;
            rangeEnd = this.anchorRowIndex;
        }
        else {
            rangeStart = this.rangeRowIndex;
            rangeEnd = this.rangeRowIndex;
        }
        var _loop_1 = function (i) {
            var rangeRowData = this_1.value[i];
            var selectionIndex = this_1.findIndexInSelection(rangeRowData);
            this_1._selection = this_1.selection.filter(function (val, i) { return i != selectionIndex; });
            var dataKeyValue = this_1.dataKey ? String(this_1.objectUtils.resolveFieldData(rangeRowData, this_1.dataKey)) : null;
            if (dataKeyValue) {
                delete this_1.selectionKeys[dataKeyValue];
            }
            this_1.onRowUnselect.emit({ originalEvent: event, data: rangeRowData, type: 'row' });
        };
        var this_1 = this;
        for (var i = rangeStart; i <= rangeEnd; i++) {
            _loop_1(i);
        }
    };
    Table.prototype.isSelected = function (rowData) {
        if (rowData && this.selection) {
            if (this.dataKey) {
                return this.selectionKeys[this.objectUtils.resolveFieldData(rowData, this.dataKey)] !== undefined;
            }
            else {
                if (this.selection instanceof Array)
                    return this.findIndexInSelection(rowData) > -1;
                else
                    return this.equals(rowData, this.selection);
            }
        }
        return false;
    };
    Table.prototype.findIndexInSelection = function (rowData) {
        var index = -1;
        if (this.selection && this.selection.length) {
            for (var i = 0; i < this.selection.length; i++) {
                if (this.equals(rowData, this.selection[i])) {
                    index = i;
                    break;
                }
            }
        }
        return index;
    };
    Table.prototype.toggleRowWithRadio = function (event, rowData) {
        this.preventSelectionSetterPropagation = true;
        if (this.selection != rowData) {
            this._selection = rowData;
            this.selectionChange.emit(this.selection);
            this.onRowSelect.emit({ originalEvent: event.originalEvent, index: event.rowIndex, data: rowData, type: 'radiobutton' });
            if (this.dataKey) {
                this.selectionKeys = {};
                this.selectionKeys[String(this.objectUtils.resolveFieldData(rowData, this.dataKey))] = 1;
            }
        }
        else {
            this._selection = null;
            this.selectionChange.emit(this.selection);
            this.onRowUnselect.emit({ originalEvent: event.originalEvent, index: event.rowIndex, data: rowData, type: 'radiobutton' });
        }
        this.tableService.onSelectionChange();
    };
    Table.prototype.toggleRowWithCheckbox = function (event, rowData) {
        this.selection = this.selection || [];
        var selected = this.isSelected(rowData);
        var dataKeyValue = this.dataKey ? String(this.objectUtils.resolveFieldData(rowData, this.dataKey)) : null;
        this.preventSelectionSetterPropagation = true;
        if (selected) {
            var selectionIndex_3 = this.findIndexInSelection(rowData);
            this._selection = this.selection.filter(function (val, i) { return i != selectionIndex_3; });
            this.selectionChange.emit(this.selection);
            this.onRowUnselect.emit({ originalEvent: event.originalEvent, index: event.rowIndex, data: rowData, type: 'checkbox' });
            if (dataKeyValue) {
                delete this.selectionKeys[dataKeyValue];
            }
        }
        else {
            this._selection = this.selection ? this.selection.concat([rowData]) : [rowData];
            this.selectionChange.emit(this.selection);
            this.onRowSelect.emit({ originalEvent: event.originalEvent, index: event.rowIndex, data: rowData, type: 'checkbox' });
            if (dataKeyValue) {
                this.selectionKeys[dataKeyValue] = 1;
            }
        }
        this.tableService.onSelectionChange();
    };
    Table.prototype.toggleRowsWithCheckbox = function (event, check) {
        this._selection = check ? this.filteredValue ? this.filteredValue.slice() : this.value.slice() : [];
        this.preventSelectionSetterPropagation = true;
        this.updateSelectionKeys();
        this.selectionChange.emit(this._selection);
        this.tableService.onSelectionChange();
        this.onHeaderCheckboxToggle.emit({ originalEvent: event, checked: check });
    };
    Table.prototype.equals = function (data1, data2) {
        return this.compareSelectionBy === 'equals' ? (data1 === data2) : this.objectUtils.equals(data1, data2, this.dataKey);
    };
    Table.prototype.filter = function (value, field, matchMode) {
        var _this = this;
        if (this.filterTimeout) {
            clearTimeout(this.filterTimeout);
        }
        if (!this.isFilterBlank(value)) {
            this.filters[field] = { value: value, matchMode: matchMode };
        }
        else if (this.filters[field]) {
            delete this.filters[field];
        }
        this.filterTimeout = setTimeout(function () {
            _this._filter();
            _this.filterTimeout = null;
        }, this.filterDelay);
    };
    Table.prototype.filterGlobal = function (value, matchMode) {
        this.filter(value, 'global', matchMode);
    };
    Table.prototype.isFilterBlank = function (filter) {
        if (filter !== null && filter !== undefined) {
            if ((typeof filter === 'string' && filter.trim().length == 0) || (filter instanceof Array && filter.length == 0))
                return true;
            else
                return false;
        }
        return true;
    };
    Table.prototype._filter = function () {
        this.first = 0;
        if (this.lazy) {
            this.onLazyLoad.emit(this.createLazyLoadMetadata());
        }
        else {
            if (!this.value) {
                return;
            }
            if (!this.hasFilter()) {
                this.filteredValue = null;
                if (this.paginator) {
                    this.totalRecords = this.value ? this.value.length : 0;
                }
            }
            else {
                var globalFilterFieldsArray = void 0;
                if (this.filters['global']) {
                    if (!this.columns && !this.globalFilterFields)
                        throw new Error('Global filtering requires dynamic columns or globalFilterFields to be defined.');
                    else
                        globalFilterFieldsArray = this.globalFilterFields || this.columns;
                }
                this.filteredValue = [];
                for (var i = 0; i < this.value.length; i++) {
                    var localMatch = true;
                    var globalMatch = false;
                    var localFiltered = false;
                    for (var prop in this.filters) {
                        if (this.filters.hasOwnProperty(prop) && prop !== 'global') {
                            localFiltered = true;
                            var filterMeta = this.filters[prop];
                            var filterField = prop;
                            var filterValue = filterMeta.value;
                            var filterMatchMode = filterMeta.matchMode || 'startsWith';
                            var dataFieldValue = this.objectUtils.resolveFieldData(this.value[i], filterField);
                            var filterConstraint = this.filterConstraints[filterMatchMode];
                            if (!filterConstraint(dataFieldValue, filterValue)) {
                                localMatch = false;
                            }
                            if (!localMatch) {
                                break;
                            }
                        }
                    }
                    if (this.filters['global'] && !globalMatch && globalFilterFieldsArray) {
                        for (var j = 0; j < globalFilterFieldsArray.length; j++) {
                            var globalFilterField = globalFilterFieldsArray[j].field || globalFilterFieldsArray[j];
                            globalMatch = this.filterConstraints[this.filters['global'].matchMode](this.objectUtils.resolveFieldData(this.value[i], globalFilterField), this.filters['global'].value);
                            if (globalMatch) {
                                break;
                            }
                        }
                    }
                    var matches = void 0;
                    if (this.filters['global']) {
                        matches = localFiltered ? (localFiltered && localMatch && globalMatch) : globalMatch;
                    }
                    else {
                        matches = localFiltered && localMatch;
                    }
                    if (matches) {
                        this.filteredValue.push(this.value[i]);
                    }
                }
                if (this.filteredValue.length === this.value.length) {
                    this.filteredValue = null;
                }
                if (this.paginator) {
                    this.totalRecords = this.filteredValue ? this.filteredValue.length : this.value ? this.value.length : 0;
                }
            }
        }
        this.onFilter.emit({
            filters: this.filters,
            filteredValue: this.filteredValue || this.value
        });
        this.tableService.onValueChange(this.value);
    };
    Table.prototype.hasFilter = function () {
        var empty = true;
        for (var prop in this.filters) {
            if (this.filters.hasOwnProperty(prop)) {
                empty = false;
                break;
            }
        }
        return !empty;
    };
    Table.prototype.createLazyLoadMetadata = function () {
        return {
            first: this.first,
            rows: this.virtualScroll ? this.rows * 2 : this.rows,
            sortField: this.sortField,
            sortOrder: this.sortOrder,
            filters: this.filters,
            globalFilter: this.filters && this.filters['global'] ? this.filters['global'].value : null,
            multiSortMeta: this.multiSortMeta
        };
    };
    Table.prototype.reset = function () {
        this._sortField = null;
        this._sortOrder = this.defaultSortOrder;
        this._multiSortMeta = null;
        this.tableService.onSort(null);
        this.filteredValue = null;
        this.filters = {};
        this.first = 0;
        if (this.lazy) {
            this.onLazyLoad.emit(this.createLazyLoadMetadata());
        }
        else {
            this.totalRecords = (this._value ? this._value.length : 0);
        }
    };
    Table.prototype.exportCSV = function (options) {
        var _this = this;
        var data = this.filteredValue || this.value;
        var csv = '\ufeff';
        if (options && options.selectionOnly) {
            data = this.selection || [];
        }
        //headers
        for (var i = 0; i < this.columns.length; i++) {
            var column = this.columns[i];
            if (column.exportable !== false && column.field) {
                csv += '"' + (column.header || column.field) + '"';
                if (i < (this.columns.length - 1)) {
                    csv += this.csvSeparator;
                }
            }
        }
        //body
        data.forEach(function (record, i) {
            csv += '\n';
            for (var i_1 = 0; i_1 < _this.columns.length; i_1++) {
                var column = _this.columns[i_1];
                if (column.exportable !== false && column.field) {
                    var cellData = _this.objectUtils.resolveFieldData(record, column.field);
                    if (cellData != null) {
                        if (_this.exportFunction) {
                            cellData = _this.exportFunction({
                                data: cellData,
                                field: column.field
                            });
                        }
                        else
                            cellData = String(cellData).replace(/"/g, '""');
                    }
                    else
                        cellData = '';
                    csv += '"' + cellData + '"';
                    if (i_1 < (_this.columns.length - 1)) {
                        csv += _this.csvSeparator;
                    }
                }
            }
        });
        var blob = new Blob([csv], {
            type: 'text/csv;charset=utf-8;'
        });
        if (window.navigator.msSaveOrOpenBlob) {
            navigator.msSaveOrOpenBlob(blob, this.exportFilename + '.csv');
        }
        else {
            var link = document.createElement("a");
            link.style.display = 'none';
            document.body.appendChild(link);
            if (link.download !== undefined) {
                link.setAttribute('href', URL.createObjectURL(blob));
                link.setAttribute('download', this.exportFilename + '.csv');
                link.click();
            }
            else {
                csv = 'data:text/csv;charset=utf-8,' + csv;
                window.open(encodeURI(csv));
            }
            document.body.removeChild(link);
        }
    };
    Table.prototype.updateEditingCell = function (cell) {
        this.editingCell = cell;
        this.bindDocumentEditListener();
    };
    Table.prototype.isEditingCellValid = function () {
        return (this.editingCell && this.domHandler.find(this.editingCell, '.ng-invalid.ng-dirty').length === 0);
    };
    Table.prototype.bindDocumentEditListener = function () {
        var _this = this;
        if (!this.documentEditListener) {
            this.documentEditListener = function (event) {
                if (_this.editingCell && !_this.editingCellClick && _this.isEditingCellValid()) {
                    _this.domHandler.removeClass(_this.editingCell, 'ui-editing-cell');
                    _this.editingCell = null;
                    _this.unbindDocumentEditListener();
                }
                _this.editingCellClick = false;
            };
            document.addEventListener('click', this.documentEditListener);
        }
    };
    Table.prototype.unbindDocumentEditListener = function () {
        if (this.documentEditListener) {
            document.removeEventListener('click', this.documentEditListener);
            this.documentEditListener = null;
        }
    };
    Table.prototype.toggleRow = function (rowData, event) {
        if (!this.dataKey) {
            throw new Error('dataKey must be defined to use row expansion');
        }
        var dataKeyValue = String(this.objectUtils.resolveFieldData(rowData, this.dataKey));
        if (this.expandedRowKeys[dataKeyValue] != null) {
            delete this.expandedRowKeys[dataKeyValue];
            this.onRowCollapse.emit({
                originalEvent: event,
                data: rowData
            });
        }
        else {
            if (this.rowExpandMode === 'single') {
                this.expandedRowKeys = {};
            }
            this.expandedRowKeys[dataKeyValue] = 1;
            this.onRowExpand.emit({
                originalEvent: event,
                data: rowData
            });
        }
        if (event) {
            event.preventDefault();
        }
    };
    Table.prototype.isRowExpanded = function (rowData) {
        return this.expandedRowKeys[String(this.objectUtils.resolveFieldData(rowData, this.dataKey))] === 1;
    };
    Table.prototype.isSingleSelectionMode = function () {
        return this.selectionMode === 'single';
    };
    Table.prototype.isMultipleSelectionMode = function () {
        return this.selectionMode === 'multiple';
    };
    Table.prototype.onColumnResizeBegin = function (event) {
        var containerLeft = this.domHandler.getOffset(this.containerViewChild.nativeElement).left;
        this.lastResizerHelperX = (event.pageX - containerLeft + this.containerViewChild.nativeElement.scrollLeft);
        event.preventDefault();
    };
    Table.prototype.onColumnResize = function (event) {
        var containerLeft = this.domHandler.getOffset(this.containerViewChild.nativeElement).left;
        this.domHandler.addClass(this.containerViewChild.nativeElement, 'ui-unselectable-text');
        this.resizeHelperViewChild.nativeElement.style.height = this.containerViewChild.nativeElement.offsetHeight + 'px';
        this.resizeHelperViewChild.nativeElement.style.top = 0 + 'px';
        this.resizeHelperViewChild.nativeElement.style.left = (event.pageX - containerLeft + this.containerViewChild.nativeElement.scrollLeft) + 'px';
        this.resizeHelperViewChild.nativeElement.style.display = 'block';
    };
    Table.prototype.onColumnResizeEnd = function (event, column) {
        var delta = this.resizeHelperViewChild.nativeElement.offsetLeft - this.lastResizerHelperX;
        var columnWidth = column.offsetWidth;
        var minWidth = parseInt(column.style.minWidth || 15);
        if (columnWidth + delta < minWidth) {
            delta = minWidth - columnWidth;
        }
        var newColumnWidth = columnWidth + delta;
        if (newColumnWidth >= minWidth) {
            if (this.columnResizeMode === 'fit') {
                var nextColumn = column.nextElementSibling;
                while (!nextColumn.offsetParent) {
                    nextColumn = nextColumn.nextElementSibling;
                }
                if (nextColumn) {
                    var nextColumnWidth = nextColumn.offsetWidth - delta;
                    var nextColumnMinWidth = nextColumn.style.minWidth || 15;
                    if (newColumnWidth > 15 && nextColumnWidth > parseInt(nextColumnMinWidth)) {
                        if (this.scrollable) {
                            var scrollableView = this.findParentScrollableView(column);
                            var scrollableBodyTable = this.domHandler.findSingle(scrollableView, 'table.ui-table-scrollable-body-table');
                            var scrollableHeaderTable = this.domHandler.findSingle(scrollableView, 'table.ui-table-scrollable-header-table');
                            var scrollableFooterTable = this.domHandler.findSingle(scrollableView, 'table.ui-table-scrollable-footer-table');
                            var resizeColumnIndex = this.domHandler.index(column);
                            this.resizeColGroup(scrollableHeaderTable, resizeColumnIndex, newColumnWidth, nextColumnWidth);
                            this.resizeColGroup(scrollableBodyTable, resizeColumnIndex, newColumnWidth, nextColumnWidth);
                            this.resizeColGroup(scrollableFooterTable, resizeColumnIndex, newColumnWidth, nextColumnWidth);
                        }
                        else {
                            column.style.width = newColumnWidth + 'px';
                            if (nextColumn) {
                                nextColumn.style.width = nextColumnWidth + 'px';
                            }
                        }
                    }
                }
            }
            else if (this.columnResizeMode === 'expand') {
                if (this.scrollable) {
                    var scrollableView = this.findParentScrollableView(column);
                    var scrollableBodyTable = this.domHandler.findSingle(scrollableView, 'table.ui-table-scrollable-body-table');
                    var scrollableHeaderTable = this.domHandler.findSingle(scrollableView, 'table.ui-table-scrollable-header-table');
                    var scrollableFooterTable = this.domHandler.findSingle(scrollableView, 'table.ui-table-scrollable-footer-table');
                    scrollableBodyTable.style.width = scrollableBodyTable.offsetWidth + delta + 'px';
                    scrollableHeaderTable.style.width = scrollableHeaderTable.offsetWidth + delta + 'px';
                    if (scrollableFooterTable) {
                        scrollableFooterTable.style.width = scrollableHeaderTable.offsetWidth + delta + 'px';
                    }
                    var resizeColumnIndex = this.domHandler.index(column);
                    this.resizeColGroup(scrollableHeaderTable, resizeColumnIndex, newColumnWidth, null);
                    this.resizeColGroup(scrollableBodyTable, resizeColumnIndex, newColumnWidth, null);
                    this.resizeColGroup(scrollableFooterTable, resizeColumnIndex, newColumnWidth, null);
                }
                else {
                    this.tableViewChild.nativeElement.style.width = this.tableViewChild.nativeElement.offsetWidth + delta + 'px';
                    column.style.width = newColumnWidth + 'px';
                    var containerWidth = this.tableViewChild.nativeElement.style.width;
                    this.containerViewChild.nativeElement.style.width = containerWidth + 'px';
                }
            }
            this.onColResize.emit({
                element: column,
                delta: delta
            });
        }
        this.resizeHelperViewChild.nativeElement.style.display = 'none';
        this.domHandler.removeClass(this.containerViewChild.nativeElement, 'ui-unselectable-text');
    };
    Table.prototype.findParentScrollableView = function (column) {
        if (column) {
            var parent_1 = column.parentElement;
            while (parent_1 && !this.domHandler.hasClass(parent_1, 'ui-table-scrollable-view')) {
                parent_1 = parent_1.parentElement;
            }
            return parent_1;
        }
        else {
            return null;
        }
    };
    Table.prototype.resizeColGroup = function (table, resizeColumnIndex, newColumnWidth, nextColumnWidth) {
        if (table) {
            var colGroup = table.children[0].nodeName === 'COLGROUP' ? table.children[0] : null;
            if (colGroup) {
                var col = colGroup.children[resizeColumnIndex];
                var nextCol = col.nextElementSibling;
                col.style.width = newColumnWidth + 'px';
                if (nextCol && nextColumnWidth) {
                    nextCol.style.width = nextColumnWidth + 'px';
                }
            }
            else {
                throw "Scrollable tables require a colgroup to support resizable columns";
            }
        }
    };
    Table.prototype.onColumnDragStart = function (event, columnElement) {
        this.reorderIconWidth = this.domHandler.getHiddenElementOuterWidth(this.reorderIndicatorUpViewChild.nativeElement);
        this.reorderIconHeight = this.domHandler.getHiddenElementOuterHeight(this.reorderIndicatorDownViewChild.nativeElement);
        this.draggedColumn = columnElement;
        event.dataTransfer.setData('text', 'b'); // For firefox
    };
    Table.prototype.onColumnDragEnter = function (event, dropHeader) {
        if (this.reorderableColumns && this.draggedColumn && dropHeader) {
            event.preventDefault();
            var containerOffset = this.domHandler.getOffset(this.containerViewChild.nativeElement);
            var dropHeaderOffset = this.domHandler.getOffset(dropHeader);
            if (this.draggedColumn != dropHeader) {
                var targetLeft = dropHeaderOffset.left - containerOffset.left;
                var targetTop = containerOffset.top - dropHeaderOffset.top;
                var columnCenter = dropHeaderOffset.left + dropHeader.offsetWidth / 2;
                this.reorderIndicatorUpViewChild.nativeElement.style.top = dropHeaderOffset.top - containerOffset.top - (this.reorderIconHeight - 1) + 'px';
                this.reorderIndicatorDownViewChild.nativeElement.style.top = dropHeaderOffset.top - containerOffset.top + dropHeader.offsetHeight + 'px';
                if (event.pageX > columnCenter) {
                    this.reorderIndicatorUpViewChild.nativeElement.style.left = (targetLeft + dropHeader.offsetWidth - Math.ceil(this.reorderIconWidth / 2)) + 'px';
                    this.reorderIndicatorDownViewChild.nativeElement.style.left = (targetLeft + dropHeader.offsetWidth - Math.ceil(this.reorderIconWidth / 2)) + 'px';
                    this.dropPosition = 1;
                }
                else {
                    this.reorderIndicatorUpViewChild.nativeElement.style.left = (targetLeft - Math.ceil(this.reorderIconWidth / 2)) + 'px';
                    this.reorderIndicatorDownViewChild.nativeElement.style.left = (targetLeft - Math.ceil(this.reorderIconWidth / 2)) + 'px';
                    this.dropPosition = -1;
                }
                this.reorderIndicatorUpViewChild.nativeElement.style.display = 'block';
                this.reorderIndicatorDownViewChild.nativeElement.style.display = 'block';
            }
            else {
                event.dataTransfer.dropEffect = 'none';
            }
        }
    };
    Table.prototype.onColumnDragLeave = function (event) {
        if (this.reorderableColumns && this.draggedColumn) {
            event.preventDefault();
            this.reorderIndicatorUpViewChild.nativeElement.style.display = 'none';
            this.reorderIndicatorDownViewChild.nativeElement.style.display = 'none';
        }
    };
    Table.prototype.onColumnDrop = function (event, dropColumn) {
        event.preventDefault();
        if (this.draggedColumn) {
            var dragIndex = this.domHandler.indexWithinGroup(this.draggedColumn, 'preorderablecolumn');
            var dropIndex = this.domHandler.indexWithinGroup(dropColumn, 'preorderablecolumn');
            var allowDrop = (dragIndex != dropIndex);
            if (allowDrop && ((dropIndex - dragIndex == 1 && this.dropPosition === -1) || (dragIndex - dropIndex == 1 && this.dropPosition === 1))) {
                allowDrop = false;
            }
            if (allowDrop) {
                this.objectUtils.reorderArray(this.columns, dragIndex, dropIndex);
                this.onColReorder.emit({
                    dragIndex: dragIndex,
                    dropIndex: dropIndex,
                    columns: this.columns
                });
            }
            this.reorderIndicatorUpViewChild.nativeElement.style.display = 'none';
            this.reorderIndicatorDownViewChild.nativeElement.style.display = 'none';
            this.draggedColumn.draggable = false;
            this.draggedColumn = null;
            this.dropPosition = null;
        }
    };
    Table.prototype.onRowDragStart = function (event, index) {
        this.rowDragging = true;
        this.draggedRowIndex = index;
        event.dataTransfer.setData('text', 'b'); // For firefox
    };
    Table.prototype.onRowDragOver = function (event, index, rowElement) {
        if (this.rowDragging && this.draggedRowIndex !== index) {
            var rowY = this.domHandler.getOffset(rowElement).top + this.domHandler.getWindowScrollTop();
            var pageY = event.pageY;
            var rowMidY = rowY + this.domHandler.getOuterHeight(rowElement) / 2;
            var prevRowElement = rowElement.previousElementSibling;
            if (pageY < rowMidY) {
                this.domHandler.removeClass(rowElement, 'ui-table-dragpoint-bottom');
                this.droppedRowIndex = index;
                if (prevRowElement)
                    this.domHandler.addClass(prevRowElement, 'ui-table-dragpoint-bottom');
                else
                    this.domHandler.addClass(rowElement, 'ui-table-dragpoint-top');
            }
            else {
                if (prevRowElement)
                    this.domHandler.removeClass(prevRowElement, 'ui-table-dragpoint-bottom');
                else
                    this.domHandler.addClass(rowElement, 'ui-table-dragpoint-top');
                this.droppedRowIndex = index + 1;
                this.domHandler.addClass(rowElement, 'ui-table-dragpoint-bottom');
            }
        }
    };
    Table.prototype.onRowDragLeave = function (event, rowElement) {
        var prevRowElement = rowElement.previousElementSibling;
        if (prevRowElement) {
            this.domHandler.removeClass(prevRowElement, 'ui-table-dragpoint-bottom');
        }
        this.domHandler.removeClass(rowElement, 'ui-table-dragpoint-bottom');
        this.domHandler.removeClass(rowElement, 'ui-table-dragpoint-top');
    };
    Table.prototype.onRowDragEnd = function (event) {
        this.rowDragging = false;
        this.draggedRowIndex = null;
        this.droppedRowIndex = null;
    };
    Table.prototype.onRowDrop = function (event, rowElement) {
        if (this.droppedRowIndex != null) {
            var dropIndex = (this.draggedRowIndex > this.droppedRowIndex) ? this.droppedRowIndex : (this.droppedRowIndex === 0) ? 0 : this.droppedRowIndex - 1;
            this.objectUtils.reorderArray(this.value, this.draggedRowIndex, dropIndex);
            this.onRowReorder.emit({
                dragIndex: this.draggedRowIndex,
                dropIndex: this.droppedRowIndex
            });
        }
        //cleanup
        this.onRowDragLeave(event, rowElement);
        this.onRowDragEnd(event);
    };
    Table.prototype.handleVirtualScroll = function (event) {
        var _this = this;
        this.first = (event.page - 1) * this.rows;
        this.virtualScrollCallback = event.callback;
        this.zone.run(function () {
            if (_this.virtualScrollTimer) {
                clearTimeout(_this.virtualScrollTimer);
            }
            _this.virtualScrollTimer = setTimeout(function () {
                _this.onLazyLoad.emit(_this.createLazyLoadMetadata());
            }, _this.virtualScrollDelay);
        });
    };
    Table.prototype.isEmpty = function () {
        var data = this.filteredValue || this.value;
        return data == null || data.length == 0;
    };
    Table.prototype.getBlockableElement = function () {
        return this.el.nativeElement.children[0];
    };
    Table.prototype.ngOnDestroy = function () {
        this.unbindDocumentEditListener();
        this.editingCell = null;
        this.initialized = null;
    };
    __decorate([
        core_1.Input(),
        __metadata("design:type", Array)
    ], Table.prototype, "frozenColumns", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Array)
    ], Table.prototype, "frozenValue", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], Table.prototype, "style", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", String)
    ], Table.prototype, "styleClass", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], Table.prototype, "tableStyle", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", String)
    ], Table.prototype, "tableStyleClass", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], Table.prototype, "paginator", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Number)
    ], Table.prototype, "rows", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Number)
    ], Table.prototype, "first", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Number)
    ], Table.prototype, "pageLinks", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Array)
    ], Table.prototype, "rowsPerPageOptions", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], Table.prototype, "alwaysShowPaginator", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", String)
    ], Table.prototype, "paginatorPosition", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], Table.prototype, "paginatorDropdownAppendTo", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Number)
    ], Table.prototype, "defaultSortOrder", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", String)
    ], Table.prototype, "sortMode", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], Table.prototype, "resetPageOnSort", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", String)
    ], Table.prototype, "selectionMode", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", core_1.EventEmitter)
    ], Table.prototype, "selectionChange", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], Table.prototype, "contextMenuSelection", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", core_1.EventEmitter)
    ], Table.prototype, "contextMenuSelectionChange", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", String)
    ], Table.prototype, "contextMenuSelectionMode", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", String)
    ], Table.prototype, "dataKey", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], Table.prototype, "metaKeySelection", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Function)
    ], Table.prototype, "rowTrackBy", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], Table.prototype, "lazy", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], Table.prototype, "lazyLoadOnInit", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", String)
    ], Table.prototype, "compareSelectionBy", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", String)
    ], Table.prototype, "csvSeparator", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", String)
    ], Table.prototype, "exportFilename", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], Table.prototype, "filters", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Array)
    ], Table.prototype, "globalFilterFields", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Number)
    ], Table.prototype, "filterDelay", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], Table.prototype, "expandedRowKeys", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", String)
    ], Table.prototype, "rowExpandMode", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], Table.prototype, "scrollable", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", String)
    ], Table.prototype, "scrollHeight", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], Table.prototype, "virtualScroll", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Number)
    ], Table.prototype, "virtualScrollDelay", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Number)
    ], Table.prototype, "virtualRowHeight", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", String)
    ], Table.prototype, "frozenWidth", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], Table.prototype, "responsive", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], Table.prototype, "contextMenu", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], Table.prototype, "resizableColumns", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", String)
    ], Table.prototype, "columnResizeMode", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], Table.prototype, "reorderableColumns", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], Table.prototype, "loading", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", String)
    ], Table.prototype, "loadingIcon", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], Table.prototype, "rowHover", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], Table.prototype, "customSort", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], Table.prototype, "autoLayout", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], Table.prototype, "exportFunction", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", core_1.EventEmitter)
    ], Table.prototype, "onRowSelect", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", core_1.EventEmitter)
    ], Table.prototype, "onRowUnselect", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", core_1.EventEmitter)
    ], Table.prototype, "onPage", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", core_1.EventEmitter)
    ], Table.prototype, "onSort", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", core_1.EventEmitter)
    ], Table.prototype, "onFilter", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", core_1.EventEmitter)
    ], Table.prototype, "onLazyLoad", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", core_1.EventEmitter)
    ], Table.prototype, "onRowExpand", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", core_1.EventEmitter)
    ], Table.prototype, "onRowCollapse", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", core_1.EventEmitter)
    ], Table.prototype, "onContextMenuSelect", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", core_1.EventEmitter)
    ], Table.prototype, "onColResize", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", core_1.EventEmitter)
    ], Table.prototype, "onColReorder", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", core_1.EventEmitter)
    ], Table.prototype, "onRowReorder", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", core_1.EventEmitter)
    ], Table.prototype, "onEditInit", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", core_1.EventEmitter)
    ], Table.prototype, "onEditComplete", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", core_1.EventEmitter)
    ], Table.prototype, "onEditCancel", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", core_1.EventEmitter)
    ], Table.prototype, "onHeaderCheckboxToggle", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", core_1.EventEmitter)
    ], Table.prototype, "sortFunction", void 0);
    __decorate([
        core_1.ViewChild('container'),
        __metadata("design:type", core_1.ElementRef)
    ], Table.prototype, "containerViewChild", void 0);
    __decorate([
        core_1.ViewChild('resizeHelper'),
        __metadata("design:type", core_1.ElementRef)
    ], Table.prototype, "resizeHelperViewChild", void 0);
    __decorate([
        core_1.ViewChild('reorderIndicatorUp'),
        __metadata("design:type", core_1.ElementRef)
    ], Table.prototype, "reorderIndicatorUpViewChild", void 0);
    __decorate([
        core_1.ViewChild('reorderIndicatorDown'),
        __metadata("design:type", core_1.ElementRef)
    ], Table.prototype, "reorderIndicatorDownViewChild", void 0);
    __decorate([
        core_1.ViewChild('table'),
        __metadata("design:type", core_1.ElementRef)
    ], Table.prototype, "tableViewChild", void 0);
    __decorate([
        core_1.ContentChildren(shared_1.PrimeTemplate),
        __metadata("design:type", core_1.QueryList)
    ], Table.prototype, "templates", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Array),
        __metadata("design:paramtypes", [Array])
    ], Table.prototype, "value", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Array),
        __metadata("design:paramtypes", [Array])
    ], Table.prototype, "columns", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], Table.prototype, "totalRecords", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], Table.prototype, "sortField", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], Table.prototype, "sortOrder", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Array),
        __metadata("design:paramtypes", [Array])
    ], Table.prototype, "multiSortMeta", null);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], Table.prototype, "selection", null);
    Table = __decorate([
        core_1.Component({
            selector: 'p-table',
            template: "\n        <div #container [ngStyle]=\"style\" [class]=\"styleClass\"\n            [ngClass]=\"{'ui-table ui-widget': true, 'ui-table-responsive': responsive, 'ui-table-resizable': resizableColumns,\n                'ui-table-resizable-fit': (resizableColumns && columnResizeMode === 'fit'),\n                'ui-table-hoverable-rows': (rowHover||selectionMode), 'ui-table-auto-layout': autoLayout}\">\n            <div class=\"ui-table-loading ui-widget-overlay\" *ngIf=\"loading\"></div>\n            <div class=\"ui-table-loading-content\" *ngIf=\"loading\">\n                <i [class]=\"'ui-table-loading-icon pi-spin ' + loadingIcon\"></i>\n            </div>\n            <div *ngIf=\"captionTemplate\" class=\"ui-table-caption ui-widget-header\">\n                <ng-container *ngTemplateOutlet=\"captionTemplate\"></ng-container>\n            </div>\n            <p-paginator [rows]=\"rows\" [first]=\"first\" [totalRecords]=\"totalRecords\" [pageLinkSize]=\"pageLinks\" styleClass=\"ui-paginator-top\" [alwaysShow]=\"alwaysShowPaginator\"\n                (onPageChange)=\"onPageChange($event)\" [rowsPerPageOptions]=\"rowsPerPageOptions\" *ngIf=\"paginator && (paginatorPosition === 'top' || paginatorPosition =='both')\"\n                [templateLeft]=\"paginatorLeftTemplate\" [templateRight]=\"paginatorRightTemplate\" [dropdownAppendTo]=\"paginatorDropdownAppendTo\"></p-paginator>\n            \n            <div class=\"ui-table-wrapper\" *ngIf=\"!scrollable\">\n                <table #table [ngClass]=\"tableStyleClass\" [ngStyle]=\"tableStyle\">\n                    <ng-container *ngTemplateOutlet=\"colGroupTemplate; context {$implicit: columns}\"></ng-container>\n                    <thead class=\"ui-table-thead\">\n                        <ng-container *ngTemplateOutlet=\"headerTemplate; context: {$implicit: columns}\"></ng-container>\n                    </thead>\n                    <tfoot class=\"ui-table-tfoot\">\n                        <ng-container *ngTemplateOutlet=\"footerTemplate; context {$implicit: columns}\"></ng-container>\n                    </tfoot>\n                    <tbody class=\"ui-table-tbody\" [pTableBody]=\"columns\" [pTableBodyTemplate]=\"bodyTemplate\"></tbody>\n                </table>\n            </div>\n\n            <div class=\"ui-table-scrollable-wrapper\" *ngIf=\"scrollable\">\n               <div class=\"ui-table-scrollable-view ui-table-frozen-view\" *ngIf=\"frozenColumns||frozenBodyTemplate\" [pScrollableView]=\"frozenColumns\" [frozen]=\"true\" [ngStyle]=\"{width: frozenWidth}\" [scrollHeight]=\"scrollHeight\"></div>\n               <div class=\"ui-table-scrollable-view\" [pScrollableView]=\"columns\" [frozen]=\"false\" [scrollHeight]=\"scrollHeight\"></div>\n            </div>\n            \n            <p-paginator [rows]=\"rows\" [first]=\"first\" [totalRecords]=\"totalRecords\" [pageLinkSize]=\"pageLinks\" styleClass=\"ui-paginator-bottom\" [alwaysShow]=\"alwaysShowPaginator\"\n                (onPageChange)=\"onPageChange($event)\" [rowsPerPageOptions]=\"rowsPerPageOptions\" *ngIf=\"paginator && (paginatorPosition === 'bottom' || paginatorPosition =='both')\"\n                [templateLeft]=\"paginatorLeftTemplate\" [templateRight]=\"paginatorRightTemplate\" [dropdownAppendTo]=\"paginatorDropdownAppendTo\"></p-paginator>\n            <div *ngIf=\"summaryTemplate\" class=\"ui-table-summary ui-widget-header\">\n                <ng-container *ngTemplateOutlet=\"summaryTemplate\"></ng-container>\n            </div>\n\n            <div #resizeHelper class=\"ui-column-resizer-helper ui-state-highlight\" style=\"display:none\" *ngIf=\"resizableColumns\"></div>\n\n            <span #reorderIndicatorUp class=\"pi pi-arrow-down ui-table-reorder-indicator-up\" style=\"display:none\" *ngIf=\"reorderableColumns\"></span>\n            <span #reorderIndicatorDown class=\"pi pi-arrow-up ui-table-reorder-indicator-down\" style=\"display:none\" *ngIf=\"reorderableColumns\"></span>\n        </div>\n    ",
            providers: [domhandler_1.DomHandler, objectutils_1.ObjectUtils, TableService]
        }),
        __metadata("design:paramtypes", [core_1.ElementRef, domhandler_1.DomHandler, objectutils_1.ObjectUtils, core_1.NgZone, TableService])
    ], Table);
    return Table;
}());
exports.Table = Table;
var TableBody = /** @class */ (function () {
    function TableBody(dt) {
        this.dt = dt;
    }
    __decorate([
        core_1.Input("pTableBody"),
        __metadata("design:type", Array)
    ], TableBody.prototype, "columns", void 0);
    __decorate([
        core_1.Input("pTableBodyTemplate"),
        __metadata("design:type", core_1.TemplateRef)
    ], TableBody.prototype, "template", void 0);
    TableBody = __decorate([
        core_1.Component({
            selector: '[pTableBody]',
            template: "\n        <ng-container *ngIf=\"!dt.expandedRowTemplate\">\n            <ng-template ngFor let-rowData let-rowIndex=\"index\" [ngForOf]=\"(dt.paginator && !dt.lazy) ? ((dt.filteredValue||dt.value) | slice:dt.first:(dt.first + dt.rows)) : (dt.filteredValue||dt.value)\" [ngForTrackBy]=\"dt.rowTrackBy\">\n                <ng-container *ngTemplateOutlet=\"template; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns}\"></ng-container>\n            </ng-template>\n        </ng-container>\n        <ng-container *ngIf=\"dt.expandedRowTemplate\">\n            <ng-template ngFor let-rowData let-rowIndex=\"index\" [ngForOf]=\"(dt.paginator && !dt.lazy) ? ((dt.filteredValue||dt.value) | slice:dt.first:(dt.first + dt.rows)) : (dt.filteredValue||dt.value)\" [ngForTrackBy]=\"dt.rowTrackBy\">\n                <ng-container *ngTemplateOutlet=\"template; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, expanded: dt.isRowExpanded(rowData)}\"></ng-container>\n                <ng-container *ngIf=\"dt.isRowExpanded(rowData)\">\n                    <ng-container *ngTemplateOutlet=\"dt.expandedRowTemplate; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns}\"></ng-container>\n                </ng-container>\n            </ng-template>\n        </ng-container>\n        <ng-container *ngIf=\"dt.isEmpty()\">\n            <ng-container *ngTemplateOutlet=\"dt.emptyMessageTemplate; context: {$implicit: columns}\"></ng-container>\n        </ng-container>\n    "
        }),
        __metadata("design:paramtypes", [Table])
    ], TableBody);
    return TableBody;
}());
exports.TableBody = TableBody;
var ScrollableView = /** @class */ (function () {
    function ScrollableView(dt, el, domHandler, zone) {
        var _this = this;
        this.dt = dt;
        this.el = el;
        this.domHandler = domHandler;
        this.zone = zone;
        this.subscription = this.dt.tableService.valueSource$.subscribe(function () {
            _this.zone.runOutsideAngular(function () {
                setTimeout(function () {
                    _this.alignScrollBar();
                }, 50);
            });
        });
        if (this.dt.virtualScroll) {
            this.totalRecordsSubscription = this.dt.tableService.totalRecordsSource$.subscribe(function () {
                _this.zone.runOutsideAngular(function () {
                    setTimeout(function () {
                        _this.setVirtualScrollerHeight();
                    }, 50);
                });
            });
        }
        this.initialized = false;
    }
    Object.defineProperty(ScrollableView.prototype, "scrollHeight", {
        get: function () {
            return this._scrollHeight;
        },
        set: function (val) {
            this._scrollHeight = val;
            this.setScrollHeight();
        },
        enumerable: true,
        configurable: true
    });
    ScrollableView.prototype.ngAfterViewChecked = function () {
        if (!this.initialized && this.el.nativeElement.offsetParent) {
            this.alignScrollBar();
            this.setScrollHeight();
            this.initialized = true;
        }
    };
    ScrollableView.prototype.ngAfterViewInit = function () {
        var _this = this;
        if (!this.frozen) {
            if (this.dt.frozenColumns || this.dt.frozenBodyTemplate) {
                this.domHandler.addClass(this.el.nativeElement, 'ui-table-unfrozen-view');
            }
            if (this.dt.frozenWidth) {
                this.el.nativeElement.style.left = this.dt.frozenWidth;
                this.el.nativeElement.style.width = 'calc(100% - ' + this.dt.frozenWidth + ')';
            }
            var frozenView = this.el.nativeElement.previousElementSibling;
            if (frozenView) {
                this.frozenSiblingBody = this.domHandler.findSingle(frozenView, '.ui-table-scrollable-body');
            }
        }
        else {
            this.scrollBodyViewChild.nativeElement.style.marginBottom = this.domHandler.calculateScrollbarWidth() + 'px';
            var scrollableView = this.el.nativeElement.nextElementSibling;
            if (scrollableView) {
                this.scrollableSiblingBody = this.domHandler.findSingle(scrollableView, '.ui-table-scrollable-body');
            }
        }
        this.bindEvents();
        this.setScrollHeight();
        this.alignScrollBar();
        if (this.frozen) {
            this.columnsSubscription = this.dt.tableService.columnsSource$.subscribe(function () {
                _this.zone.runOutsideAngular(function () {
                    setTimeout(function () {
                        _this.setScrollHeight();
                    }, 50);
                });
            });
        }
        if (this.dt.virtualScroll) {
            this.setVirtualScrollerHeight();
        }
    };
    ScrollableView.prototype.bindEvents = function () {
        var _this = this;
        this.zone.runOutsideAngular(function () {
            var scrollBarWidth = _this.domHandler.calculateScrollbarWidth();
            if (_this.scrollHeaderViewChild && _this.scrollHeaderViewChild.nativeElement) {
                _this.headerScrollListener = _this.onHeaderScroll.bind(_this);
                _this.scrollHeaderBoxViewChild.nativeElement.addEventListener('scroll', _this.headerScrollListener);
            }
            if (_this.scrollFooterViewChild && _this.scrollFooterViewChild.nativeElement) {
                _this.footerScrollListener = _this.onFooterScroll.bind(_this);
                _this.scrollFooterViewChild.nativeElement.addEventListener('scroll', _this.footerScrollListener);
            }
            if (!_this.frozen) {
                _this.bodyScrollListener = _this.onBodyScroll.bind(_this);
                _this.scrollBodyViewChild.nativeElement.addEventListener('scroll', _this.bodyScrollListener);
            }
        });
    };
    ScrollableView.prototype.unbindEvents = function () {
        if (this.scrollHeaderViewChild && this.scrollHeaderViewChild.nativeElement) {
            this.scrollHeaderBoxViewChild.nativeElement.removeEventListener('scroll', this.headerScrollListener);
        }
        if (this.scrollFooterViewChild && this.scrollFooterViewChild.nativeElement) {
            this.scrollFooterViewChild.nativeElement.removeEventListener('scroll', this.footerScrollListener);
        }
        this.scrollBodyViewChild.nativeElement.addEventListener('scroll', this.bodyScrollListener);
    };
    ScrollableView.prototype.onHeaderScroll = function (event) {
        this.scrollHeaderViewChild.nativeElement.scrollLeft = 0;
    };
    ScrollableView.prototype.onFooterScroll = function (event) {
        this.scrollFooterViewChild.nativeElement.scrollLeft = 0;
    };
    ScrollableView.prototype.onBodyScroll = function (event) {
        var _this = this;
        if (this.scrollHeaderViewChild && this.scrollHeaderViewChild.nativeElement) {
            this.scrollHeaderBoxViewChild.nativeElement.style.marginLeft = -1 * this.scrollBodyViewChild.nativeElement.scrollLeft + 'px';
        }
        if (this.scrollFooterViewChild && this.scrollFooterViewChild.nativeElement) {
            this.scrollFooterBoxViewChild.nativeElement.style.marginLeft = -1 * this.scrollBodyViewChild.nativeElement.scrollLeft + 'px';
        }
        if (this.frozenSiblingBody) {
            this.frozenSiblingBody.scrollTop = this.scrollBodyViewChild.nativeElement.scrollTop;
        }
        if (this.dt.virtualScroll) {
            var viewport = this.domHandler.getOuterHeight(this.scrollBodyViewChild.nativeElement);
            var tableHeight = this.domHandler.getOuterHeight(this.scrollTableViewChild.nativeElement);
            var pageHeight_1 = this.dt.virtualRowHeight * this.dt.rows;
            var virtualTableHeight = this.domHandler.getOuterHeight(this.virtualScrollerViewChild.nativeElement);
            var pageCount = (virtualTableHeight / pageHeight_1) || 1;
            var scrollBodyTop = this.scrollTableViewChild.nativeElement.style.top || '0';
            if ((this.scrollBodyViewChild.nativeElement.scrollTop + viewport > parseFloat(scrollBodyTop) + tableHeight) || (this.scrollBodyViewChild.nativeElement.scrollTop < parseFloat(scrollBodyTop))) {
                var page_1 = Math.floor((this.scrollBodyViewChild.nativeElement.scrollTop * pageCount) / (this.scrollBodyViewChild.nativeElement.scrollHeight)) + 1;
                this.dt.handleVirtualScroll({
                    page: page_1,
                    callback: function () {
                        _this.scrollTableViewChild.nativeElement.style.top = ((page_1 - 1) * pageHeight_1) + 'px';
                        if (_this.frozenSiblingBody) {
                            _this.frozenSiblingBody.children[0].style.top = _this.scrollTableViewChild.nativeElement.style.top;
                        }
                    }
                });
            }
        }
    };
    ScrollableView.prototype.setScrollHeight = function () {
        if (this.scrollHeight && this.scrollBodyViewChild && this.scrollBodyViewChild.nativeElement) {
            if (this.scrollHeight.indexOf('%') !== -1) {
                this.scrollBodyViewChild.nativeElement.style.visibility = 'hidden';
                this.scrollBodyViewChild.nativeElement.style.height = '100px'; //temporary height to calculate static height
                var containerHeight = this.domHandler.getOuterHeight(this.dt.el.nativeElement.children[0]);
                var relativeHeight = this.domHandler.getOuterHeight(this.dt.el.nativeElement.parentElement) * parseInt(this.scrollHeight) / 100;
                var staticHeight = containerHeight - 100; //total height of headers, footers, paginators
                var scrollBodyHeight = (relativeHeight - staticHeight);
                if (this.frozen) {
                    scrollBodyHeight -= this.domHandler.calculateScrollbarWidth();
                }
                this.scrollBodyViewChild.nativeElement.style.height = 'auto';
                this.scrollBodyViewChild.nativeElement.style.maxHeight = scrollBodyHeight + 'px';
                this.scrollBodyViewChild.nativeElement.style.visibility = 'visible';
            }
            else {
                if (this.frozen && this.scrollableSiblingBody && this.domHandler.getOuterWidth(this.scrollableSiblingBody) < this.domHandler.getOuterWidth(this.scrollableSiblingBody.children[0]))
                    this.scrollBodyViewChild.nativeElement.style.maxHeight = (parseInt(this.scrollHeight) - this.domHandler.calculateScrollbarWidth()) + 'px';
                else
                    this.scrollBodyViewChild.nativeElement.style.maxHeight = this.scrollHeight;
            }
        }
    };
    ScrollableView.prototype.setVirtualScrollerHeight = function () {
        if (this.virtualScrollerViewChild.nativeElement) {
            this.virtualScrollerViewChild.nativeElement.style.height = this.dt.totalRecords * this.dt.virtualRowHeight + 'px';
        }
    };
    ScrollableView.prototype.hasVerticalOverflow = function () {
        return this.domHandler.getOuterHeight(this.scrollTableViewChild.nativeElement) > this.domHandler.getOuterHeight(this.scrollBodyViewChild.nativeElement);
    };
    ScrollableView.prototype.alignScrollBar = function () {
        if (!this.frozen) {
            var scrollBarWidth = this.hasVerticalOverflow() ? this.domHandler.calculateScrollbarWidth() : 0;
            this.scrollHeaderBoxViewChild.nativeElement.style.marginRight = scrollBarWidth + 'px';
            if (this.scrollFooterBoxViewChild && this.scrollFooterBoxViewChild.nativeElement) {
                this.scrollFooterBoxViewChild.nativeElement.style.marginRight = scrollBarWidth + 'px';
            }
        }
        this.initialized = false;
    };
    ScrollableView.prototype.ngOnDestroy = function () {
        this.unbindEvents();
        this.frozenSiblingBody = null;
        if (this.subscription) {
            this.subscription.unsubscribe();
        }
        if (this.totalRecordsSubscription) {
            this.totalRecordsSubscription.unsubscribe();
        }
        if (this.columnsSubscription) {
            this.columnsSubscription.unsubscribe();
        }
        this.initialized = false;
    };
    __decorate([
        core_1.Input("pScrollableView"),
        __metadata("design:type", Array)
    ], ScrollableView.prototype, "columns", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], ScrollableView.prototype, "frozen", void 0);
    __decorate([
        core_1.ViewChild('scrollHeader'),
        __metadata("design:type", core_1.ElementRef)
    ], ScrollableView.prototype, "scrollHeaderViewChild", void 0);
    __decorate([
        core_1.ViewChild('scrollHeaderBox'),
        __metadata("design:type", core_1.ElementRef)
    ], ScrollableView.prototype, "scrollHeaderBoxViewChild", void 0);
    __decorate([
        core_1.ViewChild('scrollBody'),
        __metadata("design:type", core_1.ElementRef)
    ], ScrollableView.prototype, "scrollBodyViewChild", void 0);
    __decorate([
        core_1.ViewChild('scrollTable'),
        __metadata("design:type", core_1.ElementRef)
    ], ScrollableView.prototype, "scrollTableViewChild", void 0);
    __decorate([
        core_1.ViewChild('scrollFooter'),
        __metadata("design:type", core_1.ElementRef)
    ], ScrollableView.prototype, "scrollFooterViewChild", void 0);
    __decorate([
        core_1.ViewChild('scrollFooterBox'),
        __metadata("design:type", core_1.ElementRef)
    ], ScrollableView.prototype, "scrollFooterBoxViewChild", void 0);
    __decorate([
        core_1.ViewChild('virtualScroller'),
        __metadata("design:type", core_1.ElementRef)
    ], ScrollableView.prototype, "virtualScrollerViewChild", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], ScrollableView.prototype, "scrollHeight", null);
    ScrollableView = __decorate([
        core_1.Component({
            selector: '[pScrollableView]',
            template: "\n        <div #scrollHeader class=\"ui-table-scrollable-header ui-widget-header\">\n            <div #scrollHeaderBox class=\"ui-table-scrollable-header-box\">\n                <table class=\"ui-table-scrollable-header-table\" [ngClass]=\"dt.tableStyleClass\" [ngStyle]=\"dt.tableStyle\">\n                    <ng-container *ngTemplateOutlet=\"frozen ? dt.frozenColGroupTemplate||dt.colGroupTemplate : dt.colGroupTemplate; context {$implicit: columns}\"></ng-container>\n                    <thead class=\"ui-table-thead\">\n                        <ng-container *ngTemplateOutlet=\"frozen ? dt.frozenHeaderTemplate||dt.headerTemplate : dt.headerTemplate; context {$implicit: columns}\"></ng-container>\n                    </thead>\n                    <tbody class=\"ui-table-tbody\">\n                        <ng-template ngFor let-rowData let-rowIndex=\"index\" [ngForOf]=\"dt.frozenValue\" [ngForTrackBy]=\"dt.rowTrackBy\">\n                            <ng-container *ngTemplateOutlet=\"dt.frozenRowsTemplate; context: {$implicit: rowData, rowIndex: rowIndex, columns: columns}\"></ng-container>\n                        </ng-template>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n        <div #scrollBody class=\"ui-table-scrollable-body\">\n            <table #scrollTable [ngClass]=\"{'ui-table-scrollable-body-table': true, 'ui-table-virtual-table': dt.virtualScroll}\" [class]=\"dt.tableStyleClass\" [ngStyle]=\"dt.tableStyle\">\n                <ng-container *ngTemplateOutlet=\"frozen ? dt.frozenColGroupTemplate||dt.colGroupTemplate : dt.colGroupTemplate; context {$implicit: columns}\"></ng-container>\n                <tbody class=\"ui-table-tbody\" [pTableBody]=\"columns\" [pTableBodyTemplate]=\"frozen ? dt.frozenBodyTemplate||dt.bodyTemplate : dt.bodyTemplate\"></tbody>\n            </table>\n            <div #virtualScroller class=\"ui-table-virtual-scroller\"></div>\n        </div>\n        <div #scrollFooter *ngIf=\"dt.footerTemplate\" class=\"ui-table-scrollable-footer ui-widget-header\">\n            <div #scrollFooterBox class=\"ui-table-scrollable-footer-box\">\n                <table class=\"ui-table-scrollable-footer-table\" [ngClass]=\"dt.tableStyleClass\" [ngStyle]=\"dt.tableStyle\">\n                    <ng-container *ngTemplateOutlet=\"frozen ? dt.frozenColGroupTemplate||dt.colGroupTemplate : dt.colGroupTemplate; context {$implicit: columns}\"></ng-container>\n                    <tfoot class=\"ui-table-tfoot\">\n                        <ng-container *ngTemplateOutlet=\"frozen ? dt.frozenFooterTemplate||dt.footerTemplate : dt.footerTemplate; context {$implicit: columns}\"></ng-container>\n                    </tfoot>\n                </table>\n            </div>\n        </div>\n    "
        }),
        __metadata("design:paramtypes", [Table, core_1.ElementRef, domhandler_1.DomHandler, core_1.NgZone])
    ], ScrollableView);
    return ScrollableView;
}());
exports.ScrollableView = ScrollableView;
var SortableColumn = /** @class */ (function () {
    function SortableColumn(dt, domHandler) {
        var _this = this;
        this.dt = dt;
        this.domHandler = domHandler;
        if (this.isEnabled()) {
            this.subscription = this.dt.tableService.sortSource$.subscribe(function (sortMeta) {
                _this.updateSortState();
            });
        }
    }
    SortableColumn.prototype.ngOnInit = function () {
        if (this.isEnabled()) {
            this.updateSortState();
        }
    };
    SortableColumn.prototype.updateSortState = function () {
        this.sorted = this.dt.isSorted(this.field);
    };
    SortableColumn.prototype.onClick = function (event) {
        if (this.isEnabled()) {
            this.updateSortState();
            this.dt.sort({
                originalEvent: event,
                field: this.field
            });
            this.domHandler.clearSelection();
        }
    };
    SortableColumn.prototype.onEnterKey = function (event) {
        this.onClick(event);
    };
    SortableColumn.prototype.isEnabled = function () {
        return this.pSortableColumnDisabled !== true;
    };
    SortableColumn.prototype.ngOnDestroy = function () {
        if (this.subscription) {
            this.subscription.unsubscribe();
        }
    };
    __decorate([
        core_1.Input("pSortableColumn"),
        __metadata("design:type", String)
    ], SortableColumn.prototype, "field", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], SortableColumn.prototype, "pSortableColumnDisabled", void 0);
    __decorate([
        core_1.HostListener('click', ['$event']),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [MouseEvent]),
        __metadata("design:returntype", void 0)
    ], SortableColumn.prototype, "onClick", null);
    __decorate([
        core_1.HostListener('keydown.enter', ['$event']),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [MouseEvent]),
        __metadata("design:returntype", void 0)
    ], SortableColumn.prototype, "onEnterKey", null);
    SortableColumn = __decorate([
        core_1.Directive({
            selector: '[pSortableColumn]',
            providers: [domhandler_1.DomHandler],
            host: {
                '[class.ui-sortable-column]': 'isEnabled()',
                '[class.ui-state-highlight]': 'sorted',
                '[attr.tabindex]': 'isEnabled() ? "0" : null'
            }
        }),
        __metadata("design:paramtypes", [Table, domhandler_1.DomHandler])
    ], SortableColumn);
    return SortableColumn;
}());
exports.SortableColumn = SortableColumn;
var SortIcon = /** @class */ (function () {
    function SortIcon(dt) {
        var _this = this;
        this.dt = dt;
        this.subscription = this.dt.tableService.sortSource$.subscribe(function (sortMeta) {
            _this.updateSortState();
        });
    }
    SortIcon.prototype.ngOnInit = function () {
        this.updateSortState();
    };
    SortIcon.prototype.onClick = function (event) {
        event.preventDefault();
    };
    SortIcon.prototype.updateSortState = function () {
        if (this.dt.sortMode === 'single') {
            this.sortOrder = this.dt.isSorted(this.field) ? this.dt.sortOrder : 0;
        }
        else if (this.dt.sortMode === 'multiple') {
            var sortMeta = this.dt.getSortMeta(this.field);
            this.sortOrder = sortMeta ? sortMeta.order : 0;
        }
    };
    Object.defineProperty(SortIcon.prototype, "ariaText", {
        get: function () {
            var text;
            switch (this.sortOrder) {
                case 1:
                    text = this.ariaLabelAsc;
                    break;
                case -1:
                    text = this.ariaLabelDesc;
                    break;
                default:
                    text = this.ariaLabel;
                    break;
            }
            return text;
        },
        enumerable: true,
        configurable: true
    });
    SortIcon.prototype.ngOnDestroy = function () {
        if (this.subscription) {
            this.subscription.unsubscribe();
        }
    };
    __decorate([
        core_1.Input(),
        __metadata("design:type", String)
    ], SortIcon.prototype, "field", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", String)
    ], SortIcon.prototype, "ariaLabel", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", String)
    ], SortIcon.prototype, "ariaLabelDesc", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", String)
    ], SortIcon.prototype, "ariaLabelAsc", void 0);
    SortIcon = __decorate([
        core_1.Component({
            selector: 'p-sortIcon',
            template: "\n        <i class=\"ui-sortable-column-icon pi pi-fw\" [ngClass]=\"{'pi-sort-up': sortOrder === 1, 'pi-sort-down': sortOrder === -1, 'pi-sort': sortOrder === 0}\"></i>\n    "
        }),
        __metadata("design:paramtypes", [Table])
    ], SortIcon);
    return SortIcon;
}());
exports.SortIcon = SortIcon;
var SelectableRow = /** @class */ (function () {
    function SelectableRow(dt, domHandler, tableService) {
        var _this = this;
        this.dt = dt;
        this.domHandler = domHandler;
        this.tableService = tableService;
        if (this.isEnabled()) {
            this.subscription = this.dt.tableService.selectionSource$.subscribe(function () {
                _this.selected = _this.dt.isSelected(_this.data);
            });
        }
    }
    SelectableRow.prototype.ngOnInit = function () {
        if (this.isEnabled()) {
            this.selected = this.dt.isSelected(this.data);
        }
    };
    SelectableRow.prototype.onClick = function (event) {
        if (this.isEnabled()) {
            this.dt.handleRowClick({
                originalEvent: event,
                rowData: this.data,
                rowIndex: this.index
            });
        }
    };
    SelectableRow.prototype.onTouchEnd = function (event) {
        if (this.isEnabled()) {
            this.dt.handleRowTouchEnd(event);
        }
    };
    SelectableRow.prototype.onKeyDown = function (event) {
        if (this.isEnabled()) {
            var row = event.target;
            switch (event.which) {
                //down arrow
                case 40:
                    var nextRow = this.findNextSelectableRow(row);
                    if (nextRow) {
                        nextRow.focus();
                    }
                    event.preventDefault();
                    break;
                //up arrow
                case 38:
                    var prevRow = this.findPrevSelectableRow(row);
                    if (prevRow) {
                        prevRow.focus();
                    }
                    event.preventDefault();
                    break;
                //enter
                case 13:
                    this.dt.handleRowClick({
                        originalEvent: event,
                        rowData: this.data,
                        rowIndex: this.index
                    });
                    break;
                default:
                    //no op
                    break;
            }
        }
    };
    SelectableRow.prototype.findNextSelectableRow = function (row) {
        var nextRow = row.nextElementSibling;
        if (nextRow) {
            if (this.domHandler.hasClass(nextRow, 'ui-selectable-row'))
                return nextRow;
            else
                return this.findNextSelectableRow(nextRow);
        }
        else {
            return null;
        }
    };
    SelectableRow.prototype.findPrevSelectableRow = function (row) {
        var prevRow = row.previousElementSibling;
        if (prevRow) {
            if (this.domHandler.hasClass(prevRow, 'ui-selectable-row'))
                return prevRow;
            else
                return this.findPrevSelectableRow(prevRow);
        }
        else {
            return null;
        }
    };
    SelectableRow.prototype.isEnabled = function () {
        return this.pSelectableRowDisabled !== true;
    };
    SelectableRow.prototype.ngOnDestroy = function () {
        if (this.subscription) {
            this.subscription.unsubscribe();
        }
    };
    __decorate([
        core_1.Input("pSelectableRow"),
        __metadata("design:type", Object)
    ], SelectableRow.prototype, "data", void 0);
    __decorate([
        core_1.Input("pSelectableRowIndex"),
        __metadata("design:type", Number)
    ], SelectableRow.prototype, "index", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], SelectableRow.prototype, "pSelectableRowDisabled", void 0);
    __decorate([
        core_1.HostListener('click', ['$event']),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Event]),
        __metadata("design:returntype", void 0)
    ], SelectableRow.prototype, "onClick", null);
    __decorate([
        core_1.HostListener('touchend', ['$event']),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Event]),
        __metadata("design:returntype", void 0)
    ], SelectableRow.prototype, "onTouchEnd", null);
    __decorate([
        core_1.HostListener('keydown', ['$event']),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [KeyboardEvent]),
        __metadata("design:returntype", void 0)
    ], SelectableRow.prototype, "onKeyDown", null);
    SelectableRow = __decorate([
        core_1.Directive({
            selector: '[pSelectableRow]',
            providers: [domhandler_1.DomHandler],
            host: {
                '[class.ui-selectable-row]': 'isEnabled()',
                '[class.ui-state-highlight]': 'selected',
                '[attr.tabindex]': 'isEnabled() ? 0 : undefined',
            }
        }),
        __metadata("design:paramtypes", [Table, domhandler_1.DomHandler, TableService])
    ], SelectableRow);
    return SelectableRow;
}());
exports.SelectableRow = SelectableRow;
var SelectableRowDblClick = /** @class */ (function () {
    function SelectableRowDblClick(dt, domHandler, tableService) {
        var _this = this;
        this.dt = dt;
        this.domHandler = domHandler;
        this.tableService = tableService;
        if (this.isEnabled()) {
            this.subscription = this.dt.tableService.selectionSource$.subscribe(function () {
                _this.selected = _this.dt.isSelected(_this.data);
            });
        }
    }
    SelectableRowDblClick.prototype.ngOnInit = function () {
        if (this.isEnabled()) {
            this.selected = this.dt.isSelected(this.data);
        }
    };
    SelectableRowDblClick.prototype.onClick = function (event) {
        if (this.isEnabled()) {
            this.dt.handleRowClick({
                originalEvent: event,
                rowData: this.data,
                rowIndex: this.index
            });
        }
    };
    SelectableRowDblClick.prototype.isEnabled = function () {
        return this.pSelectableRowDisabled !== true;
    };
    SelectableRowDblClick.prototype.ngOnDestroy = function () {
        if (this.subscription) {
            this.subscription.unsubscribe();
        }
    };
    __decorate([
        core_1.Input("pSelectableRowDblClick"),
        __metadata("design:type", Object)
    ], SelectableRowDblClick.prototype, "data", void 0);
    __decorate([
        core_1.Input("pSelectableRowIndex"),
        __metadata("design:type", Number)
    ], SelectableRowDblClick.prototype, "index", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], SelectableRowDblClick.prototype, "pSelectableRowDisabled", void 0);
    __decorate([
        core_1.HostListener('dblclick', ['$event']),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Event]),
        __metadata("design:returntype", void 0)
    ], SelectableRowDblClick.prototype, "onClick", null);
    SelectableRowDblClick = __decorate([
        core_1.Directive({
            selector: '[pSelectableRowDblClick]',
            providers: [domhandler_1.DomHandler],
            host: {
                '[class.ui-state-highlight]': 'selected'
            }
        }),
        __metadata("design:paramtypes", [Table, domhandler_1.DomHandler, TableService])
    ], SelectableRowDblClick);
    return SelectableRowDblClick;
}());
exports.SelectableRowDblClick = SelectableRowDblClick;
var ContextMenuRow = /** @class */ (function () {
    function ContextMenuRow(dt, tableService) {
        var _this = this;
        this.dt = dt;
        this.tableService = tableService;
        if (this.isEnabled()) {
            this.subscription = this.dt.tableService.contextMenuSource$.subscribe(function (data) {
                _this.selected = _this.dt.equals(_this.data, data);
            });
        }
    }
    ContextMenuRow.prototype.onContextMenu = function (event) {
        if (this.isEnabled()) {
            this.dt.handleRowRightClick({
                originalEvent: event,
                rowData: this.data
            });
            event.preventDefault();
        }
    };
    ContextMenuRow.prototype.isEnabled = function () {
        return this.pContextMenuRowDisabled !== true;
    };
    ContextMenuRow.prototype.ngOnDestroy = function () {
        if (this.subscription) {
            this.subscription.unsubscribe();
        }
    };
    __decorate([
        core_1.Input("pContextMenuRow"),
        __metadata("design:type", Object)
    ], ContextMenuRow.prototype, "data", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], ContextMenuRow.prototype, "pContextMenuRowDisabled", void 0);
    __decorate([
        core_1.HostListener('contextmenu', ['$event']),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Event]),
        __metadata("design:returntype", void 0)
    ], ContextMenuRow.prototype, "onContextMenu", null);
    ContextMenuRow = __decorate([
        core_1.Directive({
            selector: '[pContextMenuRow]',
            host: {
                '[class.ui-contextmenu-selected]': 'selected'
            }
        }),
        __metadata("design:paramtypes", [Table, TableService])
    ], ContextMenuRow);
    return ContextMenuRow;
}());
exports.ContextMenuRow = ContextMenuRow;
var RowToggler = /** @class */ (function () {
    function RowToggler(dt) {
        this.dt = dt;
    }
    RowToggler.prototype.onClick = function (event) {
        if (this.isEnabled()) {
            this.dt.toggleRow(this.data, event);
            event.preventDefault();
        }
    };
    RowToggler.prototype.isEnabled = function () {
        return this.pRowTogglerDisabled !== true;
    };
    __decorate([
        core_1.Input('pRowToggler'),
        __metadata("design:type", Object)
    ], RowToggler.prototype, "data", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], RowToggler.prototype, "pRowTogglerDisabled", void 0);
    __decorate([
        core_1.HostListener('click', ['$event']),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Event]),
        __metadata("design:returntype", void 0)
    ], RowToggler.prototype, "onClick", null);
    RowToggler = __decorate([
        core_1.Directive({
            selector: '[pRowToggler]'
        }),
        __metadata("design:paramtypes", [Table])
    ], RowToggler);
    return RowToggler;
}());
exports.RowToggler = RowToggler;
var ResizableColumn = /** @class */ (function () {
    function ResizableColumn(dt, el, domHandler, zone) {
        this.dt = dt;
        this.el = el;
        this.domHandler = domHandler;
        this.zone = zone;
    }
    ResizableColumn.prototype.ngAfterViewInit = function () {
        var _this = this;
        if (this.isEnabled()) {
            this.domHandler.addClass(this.el.nativeElement, 'ui-resizable-column');
            this.resizer = document.createElement('span');
            this.resizer.className = 'ui-column-resizer ui-clickable';
            this.el.nativeElement.appendChild(this.resizer);
            this.zone.runOutsideAngular(function () {
                _this.resizerMouseDownListener = _this.onMouseDown.bind(_this);
                _this.resizer.addEventListener('mousedown', _this.resizerMouseDownListener);
            });
        }
    };
    ResizableColumn.prototype.bindDocumentEvents = function () {
        var _this = this;
        this.zone.runOutsideAngular(function () {
            _this.documentMouseMoveListener = _this.onDocumentMouseMove.bind(_this);
            document.addEventListener('mousemove', _this.documentMouseMoveListener);
            _this.documentMouseUpListener = _this.onDocumentMouseUp.bind(_this);
            document.addEventListener('mouseup', _this.documentMouseUpListener);
        });
    };
    ResizableColumn.prototype.unbindDocumentEvents = function () {
        if (this.documentMouseMoveListener) {
            document.removeEventListener('mousemove', this.documentMouseMoveListener);
            this.documentMouseMoveListener = null;
        }
        if (this.documentMouseUpListener) {
            document.removeEventListener('mouseup', this.documentMouseUpListener);
            this.documentMouseUpListener = null;
        }
    };
    ResizableColumn.prototype.onMouseDown = function (event) {
        this.dt.onColumnResizeBegin(event);
        this.bindDocumentEvents();
    };
    ResizableColumn.prototype.onDocumentMouseMove = function (event) {
        this.dt.onColumnResize(event);
    };
    ResizableColumn.prototype.onDocumentMouseUp = function (event) {
        this.dt.onColumnResizeEnd(event, this.el.nativeElement);
        this.unbindDocumentEvents();
    };
    ResizableColumn.prototype.isEnabled = function () {
        return this.pResizableColumnDisabled !== true;
    };
    ResizableColumn.prototype.ngOnDestroy = function () {
        if (this.resizerMouseDownListener) {
            this.resizer.removeEventListener('mousedown', this.resizerMouseDownListener);
        }
        this.unbindDocumentEvents();
    };
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], ResizableColumn.prototype, "pResizableColumnDisabled", void 0);
    ResizableColumn = __decorate([
        core_1.Directive({
            selector: '[pResizableColumn]'
        }),
        __metadata("design:paramtypes", [Table, core_1.ElementRef, domhandler_1.DomHandler, core_1.NgZone])
    ], ResizableColumn);
    return ResizableColumn;
}());
exports.ResizableColumn = ResizableColumn;
var ReorderableColumn = /** @class */ (function () {
    function ReorderableColumn(dt, el, domHandler, zone) {
        this.dt = dt;
        this.el = el;
        this.domHandler = domHandler;
        this.zone = zone;
    }
    ReorderableColumn.prototype.ngAfterViewInit = function () {
        if (this.isEnabled()) {
            this.bindEvents();
        }
    };
    ReorderableColumn.prototype.bindEvents = function () {
        var _this = this;
        this.zone.runOutsideAngular(function () {
            _this.mouseDownListener = _this.onMouseDown.bind(_this);
            _this.el.nativeElement.addEventListener('mousedown', _this.mouseDownListener);
            _this.dragStartListener = _this.onDragStart.bind(_this);
            _this.el.nativeElement.addEventListener('dragstart', _this.dragStartListener);
            _this.dragOverListener = _this.onDragEnter.bind(_this);
            _this.el.nativeElement.addEventListener('dragover', _this.dragOverListener);
            _this.dragEnterListener = _this.onDragEnter.bind(_this);
            _this.el.nativeElement.addEventListener('dragenter', _this.dragEnterListener);
            _this.dragLeaveListener = _this.onDragLeave.bind(_this);
            _this.el.nativeElement.addEventListener('dragleave', _this.dragLeaveListener);
        });
    };
    ReorderableColumn.prototype.unbindEvents = function () {
        if (this.mouseDownListener) {
            document.removeEventListener('mousedown', this.mouseDownListener);
            this.mouseDownListener = null;
        }
        if (this.dragOverListener) {
            document.removeEventListener('dragover', this.dragOverListener);
            this.dragOverListener = null;
        }
        if (this.dragEnterListener) {
            document.removeEventListener('dragenter', this.dragEnterListener);
            this.dragEnterListener = null;
        }
        if (this.dragEnterListener) {
            document.removeEventListener('dragenter', this.dragEnterListener);
            this.dragEnterListener = null;
        }
        if (this.dragLeaveListener) {
            document.removeEventListener('dragleave', this.dragLeaveListener);
            this.dragLeaveListener = null;
        }
    };
    ReorderableColumn.prototype.onMouseDown = function (event) {
        if (event.target.nodeName === 'INPUT' || event.target.nodeName === 'TEXTAREA' || this.domHandler.hasClass(event.target, 'ui-column-resizer'))
            this.el.nativeElement.draggable = false;
        else
            this.el.nativeElement.draggable = true;
    };
    ReorderableColumn.prototype.onDragStart = function (event) {
        this.dt.onColumnDragStart(event, this.el.nativeElement);
    };
    ReorderableColumn.prototype.onDragOver = function (event) {
        event.preventDefault();
    };
    ReorderableColumn.prototype.onDragEnter = function (event) {
        this.dt.onColumnDragEnter(event, this.el.nativeElement);
    };
    ReorderableColumn.prototype.onDragLeave = function (event) {
        this.dt.onColumnDragLeave(event);
    };
    ReorderableColumn.prototype.onDrop = function (event) {
        if (this.isEnabled()) {
            this.dt.onColumnDrop(event, this.el.nativeElement);
        }
    };
    ReorderableColumn.prototype.isEnabled = function () {
        return this.pReorderableColumnDisabled !== true;
    };
    ReorderableColumn.prototype.ngOnDestroy = function () {
        this.unbindEvents();
    };
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], ReorderableColumn.prototype, "pReorderableColumnDisabled", void 0);
    __decorate([
        core_1.HostListener('drop', ['$event']),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Object]),
        __metadata("design:returntype", void 0)
    ], ReorderableColumn.prototype, "onDrop", null);
    ReorderableColumn = __decorate([
        core_1.Directive({
            selector: '[pReorderableColumn]'
        }),
        __metadata("design:paramtypes", [Table, core_1.ElementRef, domhandler_1.DomHandler, core_1.NgZone])
    ], ReorderableColumn);
    return ReorderableColumn;
}());
exports.ReorderableColumn = ReorderableColumn;
var EditableColumn = /** @class */ (function () {
    function EditableColumn(dt, el, domHandler, zone) {
        this.dt = dt;
        this.el = el;
        this.domHandler = domHandler;
        this.zone = zone;
    }
    EditableColumn.prototype.ngAfterViewInit = function () {
        if (this.isEnabled()) {
            this.domHandler.addClass(this.el.nativeElement, 'ui-editable-column');
        }
    };
    EditableColumn.prototype.onClick = function (event) {
        if (this.isEnabled()) {
            this.dt.editingCellClick = true;
            if (this.dt.editingCell) {
                if (this.dt.editingCell !== this.el.nativeElement) {
                    if (!this.dt.isEditingCellValid()) {
                        return;
                    }
                    this.domHandler.removeClass(this.dt.editingCell, 'ui-editing-cell');
                    this.openCell();
                }
            }
            else {
                this.openCell();
            }
        }
    };
    EditableColumn.prototype.openCell = function () {
        var _this = this;
        this.dt.updateEditingCell(this.el.nativeElement);
        this.domHandler.addClass(this.el.nativeElement, 'ui-editing-cell');
        this.dt.onEditInit.emit({ field: this.field, data: this.data });
        this.zone.runOutsideAngular(function () {
            setTimeout(function () {
                var focusable = _this.domHandler.findSingle(_this.el.nativeElement, 'input, textarea');
                if (focusable) {
                    focusable.focus();
                }
            }, 50);
        });
    };
    EditableColumn.prototype.closeEditingCell = function () {
        this.domHandler.removeClass(this.dt.editingCell, 'ui-editing-cell');
        this.dt.editingCell = null;
        this.dt.unbindDocumentEditListener();
    };
    EditableColumn.prototype.onKeyDown = function (event) {
        if (this.isEnabled()) {
            //enter
            if (event.keyCode == 13) {
                if (this.dt.isEditingCellValid()) {
                    this.closeEditingCell();
                    this.dt.onEditComplete.emit({ field: this.field, data: this.data });
                }
                event.preventDefault();
            }
            //escape
            else if (event.keyCode == 27) {
                if (this.dt.isEditingCellValid()) {
                    this.closeEditingCell();
                    this.dt.onEditCancel.emit({ field: this.field, data: this.data });
                }
                event.preventDefault();
            }
            //tab
            else if (event.keyCode == 9) {
                this.dt.onEditComplete.emit({ field: this.field, data: this.data });
                if (event.shiftKey)
                    this.moveToPreviousCell(event);
                else
                    this.moveToNextCell(event);
            }
        }
    };
    EditableColumn.prototype.findCell = function (element) {
        if (element) {
            var cell = element;
            while (cell && !this.domHandler.hasClass(cell, 'ui-editing-cell')) {
                cell = cell.parentElement;
            }
            return cell;
        }
        else {
            return null;
        }
    };
    EditableColumn.prototype.moveToPreviousCell = function (event) {
        var currentCell = this.findCell(event.target);
        var row = currentCell.parentElement;
        var targetCell = this.findPreviousEditableColumn(currentCell);
        if (targetCell) {
            this.domHandler.invokeElementMethod(event.target, 'blur');
            this.domHandler.invokeElementMethod(targetCell, 'click');
            event.preventDefault();
        }
    };
    EditableColumn.prototype.moveToNextCell = function (event) {
        var currentCell = this.findCell(event.target);
        var row = currentCell.parentElement;
        var targetCell = this.findNextEditableColumn(currentCell);
        if (targetCell) {
            this.domHandler.invokeElementMethod(event.target, 'blur');
            this.domHandler.invokeElementMethod(targetCell, 'click');
            event.preventDefault();
        }
    };
    EditableColumn.prototype.findPreviousEditableColumn = function (cell) {
        var prevCell = cell.previousElementSibling;
        if (!prevCell) {
            var previousRow = cell.parentElement.previousElementSibling;
            if (previousRow) {
                prevCell = previousRow.lastElementChild;
            }
        }
        if (prevCell) {
            if (this.domHandler.hasClass(prevCell, 'ui-editable-column'))
                return prevCell;
            else
                return this.findPreviousEditableColumn(prevCell);
        }
        else {
            return null;
        }
    };
    EditableColumn.prototype.findNextEditableColumn = function (cell) {
        var nextCell = cell.nextElementSibling;
        if (!nextCell) {
            var nextRow = cell.parentElement.nextElementSibling;
            if (nextRow) {
                nextCell = nextRow.firstElementChild;
            }
        }
        if (nextCell) {
            if (this.domHandler.hasClass(nextCell, 'ui-editable-column'))
                return nextCell;
            else
                return this.findNextEditableColumn(nextCell);
        }
        else {
            return null;
        }
    };
    EditableColumn.prototype.isEnabled = function () {
        return this.pEditableColumnDisabled !== true;
    };
    __decorate([
        core_1.Input("pEditableColumn"),
        __metadata("design:type", Object)
    ], EditableColumn.prototype, "data", void 0);
    __decorate([
        core_1.Input("pEditableColumnField"),
        __metadata("design:type", Object)
    ], EditableColumn.prototype, "field", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], EditableColumn.prototype, "pEditableColumnDisabled", void 0);
    __decorate([
        core_1.HostListener('click', ['$event']),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [MouseEvent]),
        __metadata("design:returntype", void 0)
    ], EditableColumn.prototype, "onClick", null);
    __decorate([
        core_1.HostListener('keydown', ['$event']),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [KeyboardEvent]),
        __metadata("design:returntype", void 0)
    ], EditableColumn.prototype, "onKeyDown", null);
    EditableColumn = __decorate([
        core_1.Directive({
            selector: '[pEditableColumn]'
        }),
        __metadata("design:paramtypes", [Table, core_1.ElementRef, domhandler_1.DomHandler, core_1.NgZone])
    ], EditableColumn);
    return EditableColumn;
}());
exports.EditableColumn = EditableColumn;
var CellEditor = /** @class */ (function () {
    function CellEditor(dt, editableColumn) {
        this.dt = dt;
        this.editableColumn = editableColumn;
    }
    CellEditor.prototype.ngAfterContentInit = function () {
        var _this = this;
        this.templates.forEach(function (item) {
            switch (item.getType()) {
                case 'input':
                    _this.inputTemplate = item.template;
                    break;
                case 'output':
                    _this.outputTemplate = item.template;
                    break;
            }
        });
    };
    __decorate([
        core_1.ContentChildren(shared_1.PrimeTemplate),
        __metadata("design:type", core_1.QueryList)
    ], CellEditor.prototype, "templates", void 0);
    CellEditor = __decorate([
        core_1.Component({
            selector: 'p-cellEditor',
            template: "\n        <ng-container *ngIf=\"dt.editingCell && dt.editingCell === editableColumn.el.nativeElement\">\n            <ng-container *ngTemplateOutlet=\"inputTemplate\"></ng-container>\n        </ng-container>\n        <ng-container *ngIf=\"!dt.editingCell || dt.editingCell !== editableColumn.el.nativeElement\">\n            <ng-container *ngTemplateOutlet=\"outputTemplate\"></ng-container>\n        </ng-container>\n    "
        }),
        __metadata("design:paramtypes", [Table, EditableColumn])
    ], CellEditor);
    return CellEditor;
}());
exports.CellEditor = CellEditor;
var TableRadioButton = /** @class */ (function () {
    function TableRadioButton(dt, domHandler, tableService) {
        var _this = this;
        this.dt = dt;
        this.domHandler = domHandler;
        this.tableService = tableService;
        this.subscription = this.dt.tableService.selectionSource$.subscribe(function () {
            _this.checked = _this.dt.isSelected(_this.value);
        });
    }
    TableRadioButton.prototype.ngOnInit = function () {
        this.checked = this.dt.isSelected(this.value);
    };
    TableRadioButton.prototype.onClick = function (event) {
        if (!this.disabled) {
            this.dt.toggleRowWithRadio({
                originalEvent: event,
                rowIndex: this.index
            }, this.value);
        }
        this.domHandler.clearSelection();
    };
    TableRadioButton.prototype.onFocus = function () {
        this.domHandler.addClass(this.boxViewChild.nativeElement, 'ui-state-focus');
    };
    TableRadioButton.prototype.onBlur = function () {
        this.domHandler.removeClass(this.boxViewChild.nativeElement, 'ui-state-focus');
    };
    TableRadioButton.prototype.ngOnDestroy = function () {
        if (this.subscription) {
            this.subscription.unsubscribe();
        }
    };
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], TableRadioButton.prototype, "disabled", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], TableRadioButton.prototype, "value", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Number)
    ], TableRadioButton.prototype, "index", void 0);
    __decorate([
        core_1.ViewChild('box'),
        __metadata("design:type", core_1.ElementRef)
    ], TableRadioButton.prototype, "boxViewChild", void 0);
    TableRadioButton = __decorate([
        core_1.Component({
            selector: 'p-tableRadioButton',
            template: "\n        <div class=\"ui-radiobutton ui-widget\" (click)=\"onClick($event)\">\n            <div class=\"ui-helper-hidden-accessible\">\n                <input type=\"radio\" [checked]=\"checked\" (focus)=\"onFocus()\" (blur)=\"onBlur()\" [disabled]=\"disabled\">\n            </div>\n            <div #box [ngClass]=\"{'ui-radiobutton-box ui-widget ui-state-default':true,\n                'ui-state-active':checked, 'ui-state-disabled':disabled}\">\n                <span class=\"ui-radiobutton-icon ui-clickable\" [ngClass]=\"{'pi pi-circle-on':checked}\"></span>\n            </div>\n        </div>\n    "
        }),
        __metadata("design:paramtypes", [Table, domhandler_1.DomHandler, TableService])
    ], TableRadioButton);
    return TableRadioButton;
}());
exports.TableRadioButton = TableRadioButton;
var TableCheckbox = /** @class */ (function () {
    function TableCheckbox(dt, domHandler, tableService) {
        var _this = this;
        this.dt = dt;
        this.domHandler = domHandler;
        this.tableService = tableService;
        this.subscription = this.dt.tableService.selectionSource$.subscribe(function () {
            _this.checked = _this.dt.isSelected(_this.value);
        });
    }
    TableCheckbox.prototype.ngOnInit = function () {
        this.checked = this.dt.isSelected(this.value);
    };
    TableCheckbox.prototype.onClick = function (event) {
        if (!this.disabled) {
            this.dt.toggleRowWithCheckbox({
                originalEvent: event,
                rowIndex: this.index
            }, this.value);
        }
        this.domHandler.clearSelection();
    };
    TableCheckbox.prototype.onFocus = function () {
        this.domHandler.addClass(this.boxViewChild.nativeElement, 'ui-state-focus');
    };
    TableCheckbox.prototype.onBlur = function () {
        this.domHandler.removeClass(this.boxViewChild.nativeElement, 'ui-state-focus');
    };
    TableCheckbox.prototype.ngOnDestroy = function () {
        if (this.subscription) {
            this.subscription.unsubscribe();
        }
    };
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], TableCheckbox.prototype, "disabled", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], TableCheckbox.prototype, "value", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Number)
    ], TableCheckbox.prototype, "index", void 0);
    __decorate([
        core_1.ViewChild('box'),
        __metadata("design:type", core_1.ElementRef)
    ], TableCheckbox.prototype, "boxViewChild", void 0);
    TableCheckbox = __decorate([
        core_1.Component({
            selector: 'p-tableCheckbox',
            template: "\n        <div class=\"ui-chkbox ui-widget\" (click)=\"onClick($event)\">\n            <div class=\"ui-helper-hidden-accessible\">\n                <input type=\"checkbox\" [checked]=\"checked\" (focus)=\"onFocus()\" (blur)=\"onBlur()\" [disabled]=\"disabled\">\n            </div>\n            <div #box [ngClass]=\"{'ui-chkbox-box ui-widget ui-state-default':true,\n                'ui-state-active':checked, 'ui-state-disabled':disabled}\">\n                <span class=\"ui-chkbox-icon ui-clickable\" [ngClass]=\"{'pi pi-check':checked}\"></span>\n            </div>\n        </div>\n    "
        }),
        __metadata("design:paramtypes", [Table, domhandler_1.DomHandler, TableService])
    ], TableCheckbox);
    return TableCheckbox;
}());
exports.TableCheckbox = TableCheckbox;
var TableHeaderCheckbox = /** @class */ (function () {
    function TableHeaderCheckbox(dt, domHandler, tableService) {
        var _this = this;
        this.dt = dt;
        this.domHandler = domHandler;
        this.tableService = tableService;
        this.valueChangeSubscription = this.dt.tableService.valueSource$.subscribe(function () {
            _this.checked = _this.updateCheckedState();
        });
        this.selectionChangeSubscription = this.dt.tableService.selectionSource$.subscribe(function () {
            _this.checked = _this.updateCheckedState();
        });
    }
    TableHeaderCheckbox.prototype.ngOnInit = function () {
        this.checked = this.updateCheckedState();
    };
    TableHeaderCheckbox.prototype.onClick = function (event, checked) {
        if (!this.disabled) {
            if (this.dt.value && this.dt.value.length > 0) {
                this.dt.toggleRowsWithCheckbox(event, !checked);
            }
        }
        this.domHandler.clearSelection();
    };
    TableHeaderCheckbox.prototype.onFocus = function () {
        this.domHandler.addClass(this.boxViewChild.nativeElement, 'ui-state-focus');
    };
    TableHeaderCheckbox.prototype.onBlur = function () {
        this.domHandler.removeClass(this.boxViewChild.nativeElement, 'ui-state-focus');
    };
    TableHeaderCheckbox.prototype.isDisabled = function () {
        return this.disabled || !this.dt.value || !this.dt.value.length;
    };
    TableHeaderCheckbox.prototype.ngOnDestroy = function () {
        if (this.selectionChangeSubscription) {
            this.selectionChangeSubscription.unsubscribe();
        }
        if (this.valueChangeSubscription) {
            this.valueChangeSubscription.unsubscribe();
        }
    };
    TableHeaderCheckbox.prototype.updateCheckedState = function () {
        var val = this.dt.filteredValue || this.dt.value;
        return (val && val.length > 0 && this.dt.selection && this.dt.selection.length > 0 && this.dt.selection.length === val.length);
    };
    __decorate([
        core_1.ViewChild('box'),
        __metadata("design:type", core_1.ElementRef)
    ], TableHeaderCheckbox.prototype, "boxViewChild", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], TableHeaderCheckbox.prototype, "disabled", void 0);
    TableHeaderCheckbox = __decorate([
        core_1.Component({
            selector: 'p-tableHeaderCheckbox',
            template: "\n        <div class=\"ui-chkbox ui-widget\" (click)=\"onClick($event, cb.checked)\">\n            <div class=\"ui-helper-hidden-accessible\">\n                <input #cb type=\"checkbox\" [checked]=\"checked\" (focus)=\"onFocus()\" (blur)=\"onBlur()\" [disabled]=\"isDisabled()\">\n            </div>\n            <div #box [ngClass]=\"{'ui-chkbox-box ui-widget ui-state-default':true,\n                'ui-state-active':checked, 'ui-state-disabled': isDisabled()}\">\n                <span class=\"ui-chkbox-icon ui-clickable\" [ngClass]=\"{'pi pi-check':checked}\"></span>\n            </div>\n        </div>\n    "
        }),
        __metadata("design:paramtypes", [Table, domhandler_1.DomHandler, TableService])
    ], TableHeaderCheckbox);
    return TableHeaderCheckbox;
}());
exports.TableHeaderCheckbox = TableHeaderCheckbox;
var ReorderableRowHandle = /** @class */ (function () {
    function ReorderableRowHandle(el, domHandler) {
        this.el = el;
        this.domHandler = domHandler;
    }
    ReorderableRowHandle.prototype.ngAfterViewInit = function () {
        this.domHandler.addClass(this.el.nativeElement, 'ui-table-reorderablerow-handle');
    };
    __decorate([
        core_1.Input("pReorderableRowHandle"),
        __metadata("design:type", Number)
    ], ReorderableRowHandle.prototype, "index", void 0);
    ReorderableRowHandle = __decorate([
        core_1.Directive({
            selector: '[pReorderableRowHandle]'
        }),
        __metadata("design:paramtypes", [core_1.ElementRef, domhandler_1.DomHandler])
    ], ReorderableRowHandle);
    return ReorderableRowHandle;
}());
exports.ReorderableRowHandle = ReorderableRowHandle;
var ReorderableRow = /** @class */ (function () {
    function ReorderableRow(dt, el, domHandler, zone) {
        this.dt = dt;
        this.el = el;
        this.domHandler = domHandler;
        this.zone = zone;
    }
    ReorderableRow.prototype.ngAfterViewInit = function () {
        if (this.isEnabled()) {
            this.el.nativeElement.droppable = true;
            this.bindEvents();
        }
    };
    ReorderableRow.prototype.bindEvents = function () {
        var _this = this;
        this.zone.runOutsideAngular(function () {
            _this.mouseDownListener = _this.onMouseDown.bind(_this);
            _this.el.nativeElement.addEventListener('mousedown', _this.mouseDownListener);
            _this.dragStartListener = _this.onDragStart.bind(_this);
            _this.el.nativeElement.addEventListener('dragstart', _this.dragStartListener);
            _this.dragEndListener = _this.onDragEnd.bind(_this);
            _this.el.nativeElement.addEventListener('dragend', _this.dragEndListener);
            _this.dragOverListener = _this.onDragOver.bind(_this);
            _this.el.nativeElement.addEventListener('dragover', _this.dragOverListener);
            _this.dragLeaveListener = _this.onDragLeave.bind(_this);
            _this.el.nativeElement.addEventListener('dragleave', _this.dragLeaveListener);
        });
    };
    ReorderableRow.prototype.unbindEvents = function () {
        if (this.mouseDownListener) {
            document.removeEventListener('mousedown', this.mouseDownListener);
            this.mouseDownListener = null;
        }
        if (this.dragStartListener) {
            document.removeEventListener('dragstart', this.dragStartListener);
            this.dragStartListener = null;
        }
        if (this.dragEndListener) {
            document.removeEventListener('dragend', this.dragEndListener);
            this.dragEndListener = null;
        }
        if (this.dragOverListener) {
            document.removeEventListener('dragover', this.dragOverListener);
            this.dragOverListener = null;
        }
        if (this.dragLeaveListener) {
            document.removeEventListener('dragleave', this.dragLeaveListener);
            this.dragLeaveListener = null;
        }
    };
    ReorderableRow.prototype.onMouseDown = function (event) {
        if (this.domHandler.hasClass(event.target, 'ui-table-reorderablerow-handle'))
            this.el.nativeElement.draggable = true;
        else
            this.el.nativeElement.draggable = false;
    };
    ReorderableRow.prototype.onDragStart = function (event) {
        this.dt.onRowDragStart(event, this.index);
    };
    ReorderableRow.prototype.onDragEnd = function (event) {
        this.dt.onRowDragEnd(event);
        this.el.nativeElement.draggable = false;
    };
    ReorderableRow.prototype.onDragOver = function (event) {
        this.dt.onRowDragOver(event, this.index, this.el.nativeElement);
        event.preventDefault();
    };
    ReorderableRow.prototype.onDragLeave = function (event) {
        this.dt.onRowDragLeave(event, this.el.nativeElement);
    };
    ReorderableRow.prototype.isEnabled = function () {
        return this.pReorderableRowDisabled !== true;
    };
    ReorderableRow.prototype.onDrop = function (event) {
        if (this.isEnabled() && this.dt.rowDragging) {
            this.dt.onRowDrop(event, this.el.nativeElement);
        }
        event.preventDefault();
    };
    __decorate([
        core_1.Input("pReorderableRow"),
        __metadata("design:type", Number)
    ], ReorderableRow.prototype, "index", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], ReorderableRow.prototype, "pReorderableRowDisabled", void 0);
    __decorate([
        core_1.HostListener('drop', ['$event']),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Object]),
        __metadata("design:returntype", void 0)
    ], ReorderableRow.prototype, "onDrop", null);
    ReorderableRow = __decorate([
        core_1.Directive({
            selector: '[pReorderableRow]'
        }),
        __metadata("design:paramtypes", [Table, core_1.ElementRef, domhandler_1.DomHandler, core_1.NgZone])
    ], ReorderableRow);
    return ReorderableRow;
}());
exports.ReorderableRow = ReorderableRow;
var TableModule = /** @class */ (function () {
    function TableModule() {
    }
    TableModule = __decorate([
        core_1.NgModule({
            imports: [common_1.CommonModule, paginator_1.PaginatorModule],
            exports: [Table, shared_1.SharedModule, SortableColumn, SelectableRow, RowToggler, ContextMenuRow, ResizableColumn, ReorderableColumn, EditableColumn, CellEditor, SortIcon, TableRadioButton, TableCheckbox, TableHeaderCheckbox, ReorderableRowHandle, ReorderableRow, SelectableRowDblClick],
            declarations: [Table, SortableColumn, SelectableRow, RowToggler, ContextMenuRow, ResizableColumn, ReorderableColumn, EditableColumn, CellEditor, TableBody, ScrollableView, SortIcon, TableRadioButton, TableCheckbox, TableHeaderCheckbox, ReorderableRowHandle, ReorderableRow, SelectableRowDblClick]
        })
    ], TableModule);
    return TableModule;
}());
exports.TableModule = TableModule;
//# sourceMappingURL=table.js.map

/***/ }),

/***/ "./node_modules/primeng/message.js":
/*!*****************************************!*\
  !*** ./node_modules/primeng/message.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* Shorthand */

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./components/message/message */ "./node_modules/primeng/components/message/message.js"));

/***/ }),

/***/ "./node_modules/primeng/messages.js":
/*!******************************************!*\
  !*** ./node_modules/primeng/messages.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* Shorthand */

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./components/messages/messages */ "./node_modules/primeng/components/messages/messages.js"));

/***/ }),

/***/ "./node_modules/primeng/table.js":
/*!***************************************!*\
  !*** ./node_modules/primeng/table.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* Shorthand */

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./components/table/table */ "./node_modules/primeng/components/table/table.js"));

/***/ }),

/***/ "./src/app/layout/agency-admin/agency-admin-routing.module.ts":
/*!********************************************************************!*\
  !*** ./src/app/layout/agency-admin/agency-admin-routing.module.ts ***!
  \********************************************************************/
/*! exports provided: DasboardRoutingModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DasboardRoutingModule", function() { return DasboardRoutingModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _components_agency_admin_dashboard_agency_admin_dashboard_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./components/agency-admin-dashboard/agency-admin-dashboard.component */ "./src/app/layout/agency-admin/components/agency-admin-dashboard/agency-admin-dashboard.component.ts");
/* harmony import */ var _components_agency_admin_activitydetail_agency_admin_activitydetail_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./components/agency-admin-activitydetail/agency-admin-activitydetail.component */ "./src/app/layout/agency-admin/components/agency-admin-activitydetail/agency-admin-activitydetail.component.ts");
/* harmony import */ var _components_agency_admin_daily_activity_agency_admin_daily_activity_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./components/agency-admin-daily-activity/agency-admin-daily-activity.component */ "./src/app/layout/agency-admin/components/agency-admin-daily-activity/agency-admin-daily-activity.component.ts");
/* harmony import */ var _components_agency_admin_post_activity_agency_admin_post_activity_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./components/agency-admin-post-activity/agency-admin-post-activity.component */ "./src/app/layout/agency-admin/components/agency-admin-post-activity/agency-admin-post-activity.component.ts");
/* harmony import */ var _components_agency_admin_parent_agency_admin_parent_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./components/agency-admin-parent/agency-admin-parent.component */ "./src/app/layout/agency-admin/components/agency-admin-parent/agency-admin-parent.component.ts");
/* harmony import */ var _components_agency_admin_teacherstaff_agency_admin_teacherstaff_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./components/agency-admin-teacherstaff/agency-admin-teacherstaff.component */ "./src/app/layout/agency-admin/components/agency-admin-teacherstaff/agency-admin-teacherstaff.component.ts");
/* harmony import */ var _components_agency_admin_settings_agency_admin_settings_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./components/agency-admin-settings/agency-admin-settings.component */ "./src/app/layout/agency-admin/components/agency-admin-settings/agency-admin-settings.component.ts");
/* harmony import */ var _components_agency_admin_payment_agency_admin_payment_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./components/agency-admin-payment/agency-admin-payment.component */ "./src/app/layout/agency-admin/components/agency-admin-payment/agency-admin-payment.component.ts");
/* harmony import */ var _components_agency_admin_attendence_agency_admin_attendence_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./components/agency-admin-attendence/agency-admin-attendence.component */ "./src/app/layout/agency-admin/components/agency-admin-attendence/agency-admin-attendence.component.ts");
/* harmony import */ var _components_agency_admin_message_agency_admin_message_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./components/agency-admin-message/agency-admin-message.component */ "./src/app/layout/agency-admin/components/agency-admin-message/agency-admin-message.component.ts");
/* harmony import */ var _components_agency_admin_student_list_agency_admin_student_list_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./components/agency-admin-student-list/agency-admin-student-list.component */ "./src/app/layout/agency-admin/components/agency-admin-student-list/agency-admin-student-list.component.ts");
/* harmony import */ var _components_agency_admin_incident_report_agency_admin_incident_report_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./components/agency-admin-incident-report/agency-admin-incident-report.component */ "./src/app/layout/agency-admin/components/agency-admin-incident-report/agency-admin-incident-report.component.ts");
/* harmony import */ var _components_agency_admin_classes_agency_admin_classes_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./components/agency-admin-classes/agency-admin-classes.component */ "./src/app/layout/agency-admin/components/agency-admin-classes/agency-admin-classes.component.ts");
/* harmony import */ var _components_agency_admin_add_student_agency_admin_add_student_component__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./components/agency-admin-add-student/agency-admin-add-student.component */ "./src/app/layout/agency-admin/components/agency-admin-add-student/agency-admin-add-student.component.ts");
/* harmony import */ var _components_agency_admin_event_planner_agency_admin_event_planner_component__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./components/agency-admin-event-planner/agency-admin-event-planner.component */ "./src/app/layout/agency-admin/components/agency-admin-event-planner/agency-admin-event-planner.component.ts");
/* harmony import */ var _components_agency_admin_meal_planner_agency_admin_meal_planner_component__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./components/agency-admin-meal-planner/agency-admin-meal-planner.component */ "./src/app/layout/agency-admin/components/agency-admin-meal-planner/agency-admin-meal-planner.component.ts");
/* harmony import */ var _components_agency_student_details_agency_student_details_component__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./components/agency-student-details/agency-student-details.component */ "./src/app/layout/agency-admin/components/agency-student-details/agency-student-details.component.ts");
/* harmony import */ var _components_agency_student_break_agency_student_break_component__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./components/agency-student-break/agency-student-break.component */ "./src/app/layout/agency-admin/components/agency-student-break/agency-student-break.component.ts");
/* harmony import */ var _components_agency_admin_classassignment_agency_admin_classassignment_component__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./components/agency-admin-classassignment/agency-admin-classassignment.component */ "./src/app/layout/agency-admin/components/agency-admin-classassignment/agency-admin-classassignment.component.ts");
/* harmony import */ var _components_agency_admin_profile_agency_admin_profile_component__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./components/agency-admin-profile/agency-admin-profile.component */ "./src/app/layout/agency-admin/components/agency-admin-profile/agency-admin-profile.component.ts");
/* harmony import */ var _components_agency_admin_birth_reports_agency_admin_reports_component__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./components/agency-admin-birth-reports/agency-admin-reports.component */ "./src/app/layout/agency-admin/components/agency-admin-birth-reports/agency-admin-reports.component.ts");
/* harmony import */ var _components_agency_admin_attendance_report_agency_admin_attendance_report_component__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./components/agency-admin-attendance-report/agency-admin-attendance-report.component */ "./src/app/layout/agency-admin/components/agency-admin-attendance-report/agency-admin-attendance-report.component.ts");
/* harmony import */ var _components_agency_admin_duepayment_report_agency_admin_duepayment_report_component__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./components/agency-admin-duepayment-report/agency-admin-duepayment-report.component */ "./src/app/layout/agency-admin/components/agency-admin-duepayment-report/agency-admin-duepayment-report.component.ts");
/* harmony import */ var _components_agency_admin_enrollment_report_agency_admin_enrollment_report_component__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./components/agency-admin-enrollment-report/agency-admin-enrollment-report.component */ "./src/app/layout/agency-admin/components/agency-admin-enrollment-report/agency-admin-enrollment-report.component.ts");
/* harmony import */ var _components_agency_admin_ledger_report_agency_admin_ledger_report_component__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./components/agency-admin-ledger-report/agency-admin-ledger-report.component */ "./src/app/layout/agency-admin/components/agency-admin-ledger-report/agency-admin-ledger-report.component.ts");
/* harmony import */ var _components_agency_admin_kiosklog_report_agency_admin_kiosklog_report_component__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./components/agency-admin-kiosklog-report/agency-admin-kiosklog-report.component */ "./src/app/layout/agency-admin/components/agency-admin-kiosklog-report/agency-admin-kiosklog-report.component.ts");
/* harmony import */ var _components_agency_admin_family_details_report_agency_admin_family_details_report_component__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./components/agency-admin-family-details-report/agency-admin-family-details-report.component */ "./src/app/layout/agency-admin/components/agency-admin-family-details-report/agency-admin-family-details-report.component.ts");
/* harmony import */ var _components_agency_admin_medication_report_agency_admin_medication_report_component__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./components/agency-admin-medication-report/agency-admin-medication-report.component */ "./src/app/layout/agency-admin/components/agency-admin-medication-report/agency-admin-medication-report.component.ts");
/* harmony import */ var _components_agency_admin_allergy_report_agency_admin_allergy_report_component__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./components/agency-admin-allergy-report/agency-admin-allergy-report.component */ "./src/app/layout/agency-admin/components/agency-admin-allergy-report/agency-admin-allergy-report.component.ts");
/* harmony import */ var _components_agency_admin_givenmedication_report_agency_admin_givenmedication_report_component__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./components/agency-admin-givenmedication-report/agency-admin-givenmedication-report.component */ "./src/app/layout/agency-admin/components/agency-admin-givenmedication-report/agency-admin-givenmedication-report.component.ts");
/* harmony import */ var _components_agency_admin_teacher_attendance_report_agency_admin_teacher_attendance_report_component__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./components/agency-admin-teacher-attendance-report/agency-admin-teacher-attendance-report.component */ "./src/app/layout/agency-admin/components/agency-admin-teacher-attendance-report/agency-admin-teacher-attendance-report.component.ts");
/* harmony import */ var _components_agency_admin_account_agency_admin_account_component__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./components/agency-admin-account/agency-admin-account.component */ "./src/app/layout/agency-admin/components/agency-admin-account/agency-admin-account.component.ts");
/* harmony import */ var _components_agency_accledger_report_agency_accledger_report_component__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./components/agency-accledger-report/agency-accledger-report.component */ "./src/app/layout/agency-admin/components/agency-accledger-report/agency-accledger-report.component.ts");
/* harmony import */ var _components_agency_admin_add_fees_agency_admin_add_fees_component__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./components/agency-admin-add-fees/agency-admin-add-fees.component */ "./src/app/layout/agency-admin/components/agency-admin-add-fees/agency-admin-add-fees.component.ts");
/* harmony import */ var _components_agency_admin_msg_brodcast_agency_admin_msg_brodcast_component__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./components/agency-admin-msg-brodcast/agency-admin-msg-brodcast.component */ "./src/app/layout/agency-admin/components/agency-admin-msg-brodcast/agency-admin-msg-brodcast.component.ts");
/* harmony import */ var _components_agency_admin_discount_agency_admin_discount_component__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./components/agency-admin-discount/agency-admin-discount.component */ "./src/app/layout/agency-admin/components/agency-admin-discount/agency-admin-discount.component.ts");
/* harmony import */ var _components_agency_admin_subsidy_agency_admin_subsidy_component__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./components/agency-admin-subsidy/agency-admin-subsidy.component */ "./src/app/layout/agency-admin/components/agency-admin-subsidy/agency-admin-subsidy.component.ts");
/* harmony import */ var _components_advance_payment_advance_payment_component__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./components/advance-payment/advance-payment.component */ "./src/app/layout/agency-admin/components/advance-payment/advance-payment.component.ts");
/* harmony import */ var _components_agency_admin_class_transfer_report_agency_admin_classtransferreport_component__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./components/agency-admin-class-transfer-report/agency-admin-classtransferreport.component */ "./src/app/layout/agency-admin/components/agency-admin-class-transfer-report/agency-admin-classtransferreport.component.ts");
/* harmony import */ var _components_agency_admin_mealserve_report_agency_admin_mealservereport_component__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./components/agency-admin-mealserve-report/agency-admin-mealservereport.component */ "./src/app/layout/agency-admin/components/agency-admin-mealserve-report/agency-admin-mealservereport.component.ts");
/* harmony import */ var _components_agency_admin_newmealplanner_agency_admin_newmealplanner_component__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./components/agency-admin-newmealplanner/agency-admin-newmealplanner.component */ "./src/app/layout/agency-admin/components/agency-admin-newmealplanner/agency-admin-newmealplanner.component.ts");
/* harmony import */ var _components_agency_admin_teacher_hours_agency_admin_teacher_hours_component__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ./components/agency-admin-teacher-hours/agency-admin-teacher-hours.component */ "./src/app/layout/agency-admin/components/agency-admin-teacher-hours/agency-admin-teacher-hours.component.ts");
/* harmony import */ var _components_agency_admin_payment_ledger_agency_admin_payment_ledger_component__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./components/agency-admin-payment-ledger/agency-admin-payment-ledger.component */ "./src/app/layout/agency-admin/components/agency-admin-payment-ledger/agency-admin-payment-ledger.component.ts");
/* harmony import */ var _components_agency_admin_parent_ledger_agency_admin_parent_ledger_component__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ./components/agency-admin-parent-ledger/agency-admin-parent-ledger.component */ "./src/app/layout/agency-admin/components/agency-admin-parent-ledger/agency-admin-parent-ledger.component.ts");
/* harmony import */ var _components_agency_admin_report_agency_admin_report_component__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ./components/agency-admin-report/agency-admin-report.component */ "./src/app/layout/agency-admin/components/agency-admin-report/agency-admin-report.component.ts");
/* harmony import */ var _components_agency_admin_bank_deposit_report_agency_admin_bank_deposit_report_component__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ./components/agency-admin-bank-deposit-report/agency-admin-bank-deposit-report.component */ "./src/app/layout/agency-admin/components/agency-admin-bank-deposit-report/agency-admin-bank-deposit-report.component.ts");
/* harmony import */ var _components_agency_admin_students_deactivated_report_agency_admin_students_deactivated_report_component__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ./components/agency-admin-students-deactivated-report/agency-admin-students-deactivated-report.component */ "./src/app/layout/agency-admin/components/agency-admin-students-deactivated-report/agency-admin-students-deactivated-report.component.ts");
/* harmony import */ var _components_agency_admin_staff_birth_report_agency_admin_staff_birth_report_component__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ./components/agency-admin-staff-birth-report/agency-admin-staff-birth-report.component */ "./src/app/layout/agency-admin/components/agency-admin-staff-birth-report/agency-admin-staff-birth-report.component.ts");
/* harmony import */ var _components_agency_admin_kioskid_report_agency_admin_kioskid_report_component__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ./components/agency-admin-kioskid-report/agency-admin-kioskid-report.component */ "./src/app/layout/agency-admin/components/agency-admin-kioskid-report/agency-admin-kioskid-report.component.ts");
/* harmony import */ var _components_agency_admin_tax_statement_report_agency_admin_tax_statement_report_component__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ./components/agency-admin-tax-statement-report/agency-admin-tax-statement-report.component */ "./src/app/layout/agency-admin/components/agency-admin-tax-statement-report/agency-admin-tax-statement-report.component.ts");
/* harmony import */ var _components_agency_admin_bus_agency_admin_bus_component__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ./components/agency-admin-bus/agency-admin-bus.component */ "./src/app/layout/agency-admin/components/agency-admin-bus/agency-admin-bus.component.ts");
/* harmony import */ var _components_agency_admin_bus_report_agency_admin_bus_report_component__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! ./components/agency-admin-bus-report/agency-admin-bus-report.component */ "./src/app/layout/agency-admin/components/agency-admin-bus-report/agency-admin-bus-report.component.ts");
/* harmony import */ var _components_agency_admin_food_list_agency_admin_food_list_component__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! ./components/agency-admin-food-list/agency-admin-food-list.component */ "./src/app/layout/agency-admin/components/agency-admin-food-list/agency-admin-food-list.component.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};




























// tslint:disable-next-line:max-line-length



// tslint:disable-next-line:max-line-length

// tslint:disable-next-line:max-line-length








// tslint:disable-next-line:max-line-length







// tslint:disable-next-line: max-line-length








var routes = [
    {
        path: '',
        component: _components_agency_admin_dashboard_agency_admin_dashboard_component__WEBPACK_IMPORTED_MODULE_2__["AgencyAdminDashboardComponent"]
    },
    {
        path: 'dailyactivity',
        component: _components_agency_admin_daily_activity_agency_admin_daily_activity_component__WEBPACK_IMPORTED_MODULE_4__["AgencyAdminDailyActivityComponent"]
    },
    {
        path: 'postactivity',
        component: _components_agency_admin_post_activity_agency_admin_post_activity_component__WEBPACK_IMPORTED_MODULE_5__["AgencyAdminPostActivityComponent"]
    },
    {
        path: 'activitydetails/:id/:classid',
        component: _components_agency_admin_activitydetail_agency_admin_activitydetail_component__WEBPACK_IMPORTED_MODULE_3__["AgencyAdminActivitydetailComponent"]
    },
    {
        path: 'parentlist',
        component: _components_agency_admin_parent_agency_admin_parent_component__WEBPACK_IMPORTED_MODULE_6__["AgencyAdminParentComponent"]
    },
    {
        path: 'teacherlist',
        component: _components_agency_admin_teacherstaff_agency_admin_teacherstaff_component__WEBPACK_IMPORTED_MODULE_7__["AgencyAdminTeacherstaffComponent"]
    },
    {
        path: 'setting',
        component: _components_agency_admin_settings_agency_admin_settings_component__WEBPACK_IMPORTED_MODULE_8__["AgencyAdminSettingsComponent"]
    },
    {
        path: 'payment/:code',
        component: _components_agency_admin_payment_agency_admin_payment_component__WEBPACK_IMPORTED_MODULE_9__["AgencyAdminPaymentComponent"]
    },
    {
        path: 'payment',
        component: _components_agency_admin_payment_agency_admin_payment_component__WEBPACK_IMPORTED_MODULE_9__["AgencyAdminPaymentComponent"]
    },
    {
        path: 'parentledger',
        component: _components_agency_admin_parent_ledger_agency_admin_parent_ledger_component__WEBPACK_IMPORTED_MODULE_45__["AgencyAdminParentLedgerComponent"]
    },
    {
        path: 'attendence',
        component: _components_agency_admin_attendence_agency_admin_attendence_component__WEBPACK_IMPORTED_MODULE_10__["AgencyAdminAttendenceComponent"]
    },
    {
        path: 'birthreport',
        component: _components_agency_admin_birth_reports_agency_admin_reports_component__WEBPACK_IMPORTED_MODULE_22__["AgencyAdminReportsComponent"]
    },
    {
        path: 'message',
        component: _components_agency_admin_message_agency_admin_message_component__WEBPACK_IMPORTED_MODULE_11__["AgencyAdminMessageComponent"]
    },
    {
        path: 'studentlist',
        component: _components_agency_admin_student_list_agency_admin_student_list_component__WEBPACK_IMPORTED_MODULE_12__["AgencyAdminStudentListComponent"]
    },
    {
        path: 'adminincidentreport',
        component: _components_agency_admin_incident_report_agency_admin_incident_report_component__WEBPACK_IMPORTED_MODULE_13__["AgencyAdminIncidentReportComponent"]
    },
    {
        path: 'adminclasses',
        component: _components_agency_admin_classes_agency_admin_classes_component__WEBPACK_IMPORTED_MODULE_14__["AgencyAdminClassesComponent"]
    },
    {
        path: 'addstudent',
        component: _components_agency_admin_add_student_agency_admin_add_student_component__WEBPACK_IMPORTED_MODULE_15__["AgencyAdminAddStudentComponent"]
    },
    {
        path: 'eventplan',
        component: _components_agency_admin_event_planner_agency_admin_event_planner_component__WEBPACK_IMPORTED_MODULE_16__["AgencyAdminEventPlannerComponent"]
    },
    {
        path: 'mealplan',
        component: _components_agency_admin_meal_planner_agency_admin_meal_planner_component__WEBPACK_IMPORTED_MODULE_17__["AgencyAdminMealPlannerComponent"]
    },
    {
        path: 'studentdetails/:id/:parentid',
        component: _components_agency_student_details_agency_student_details_component__WEBPACK_IMPORTED_MODULE_18__["AgencyStudentDetailsComponent"]
    },
    {
        path: 'studentbreaks/:id/:attendanceid/:allowedit',
        component: _components_agency_student_break_agency_student_break_component__WEBPACK_IMPORTED_MODULE_19__["AgencyStudentBreakComponent"]
    },
    {
        path: 'classassignment',
        component: _components_agency_admin_classassignment_agency_admin_classassignment_component__WEBPACK_IMPORTED_MODULE_20__["AgencyAdminClassassignmentComponent"]
    },
    // {
    //     path: 'planpage',
    //     component: AgencyAdminPlanPageComponent
    // },
    {
        path: 'report',
        component: _components_agency_admin_report_agency_admin_report_component__WEBPACK_IMPORTED_MODULE_46__["AgencyAdminReportComponent"]
    },
    {
        path: 'profile/:id',
        component: _components_agency_admin_profile_agency_admin_profile_component__WEBPACK_IMPORTED_MODULE_21__["AgencyAdminProfileComponent"]
    },
    {
        path: 'attendancereport',
        component: _components_agency_admin_attendance_report_agency_admin_attendance_report_component__WEBPACK_IMPORTED_MODULE_23__["AgencyAdminAttendanceReportComponent"]
    },
    {
        path: 'paymentreport',
        component: _components_agency_admin_duepayment_report_agency_admin_duepayment_report_component__WEBPACK_IMPORTED_MODULE_24__["AgencyAdminDuepaymentReportComponent"]
    },
    {
        path: 'enrollmentreport',
        component: _components_agency_admin_enrollment_report_agency_admin_enrollment_report_component__WEBPACK_IMPORTED_MODULE_25__["AgencyAdminEnrollmentReportComponent"]
    },
    {
        path: 'ledgerreport',
        component: _components_agency_admin_ledger_report_agency_admin_ledger_report_component__WEBPACK_IMPORTED_MODULE_26__["AgencyAdminLedgerReportComponent"]
    },
    {
        path: 'kioskereport',
        component: _components_agency_admin_kiosklog_report_agency_admin_kiosklog_report_component__WEBPACK_IMPORTED_MODULE_27__["AgencyAdminKiosklogReportComponent"]
    },
    {
        path: 'familyreport',
        component: _components_agency_admin_family_details_report_agency_admin_family_details_report_component__WEBPACK_IMPORTED_MODULE_28__["AgencyAdminFamilyDetailsReportComponent"]
    },
    {
        path: 'medicationreport',
        component: _components_agency_admin_medication_report_agency_admin_medication_report_component__WEBPACK_IMPORTED_MODULE_29__["AgencyAdminMedicationReportComponent"]
    },
    {
        path: 'allergyreport',
        component: _components_agency_admin_allergy_report_agency_admin_allergy_report_component__WEBPACK_IMPORTED_MODULE_30__["AgencyAdminAllergyReportComponent"]
    },
    {
        path: 'givenmedicationreport',
        component: _components_agency_admin_givenmedication_report_agency_admin_givenmedication_report_component__WEBPACK_IMPORTED_MODULE_31__["AgencyAdminGivenmedicationReportComponent"]
    },
    {
        path: 'teacherattendancereport',
        component: _components_agency_admin_teacher_attendance_report_agency_admin_teacher_attendance_report_component__WEBPACK_IMPORTED_MODULE_32__["AgencyAdminTeacherAttendanceReportComponent"]
    },
    {
        path: 'account',
        component: _components_agency_admin_account_agency_admin_account_component__WEBPACK_IMPORTED_MODULE_33__["AgencyAdminAccountComponent"]
    },
    {
        path: 'accountledger',
        component: _components_agency_accledger_report_agency_accledger_report_component__WEBPACK_IMPORTED_MODULE_34__["AgencyAccledgerReportComponent"]
    },
    {
        path: 'addfees',
        component: _components_agency_admin_add_fees_agency_admin_add_fees_component__WEBPACK_IMPORTED_MODULE_35__["AgencyAdminAddFeesComponent"]
    },
    {
        path: 'brodcast',
        component: _components_agency_admin_msg_brodcast_agency_admin_msg_brodcast_component__WEBPACK_IMPORTED_MODULE_36__["AgencyAdminMsgBrodcastComponent"]
    },
    {
        path: 'discount',
        component: _components_agency_admin_discount_agency_admin_discount_component__WEBPACK_IMPORTED_MODULE_37__["AgencyAdminDiscountComponent"]
    },
    {
        path: 'subsidy',
        component: _components_agency_admin_subsidy_agency_admin_subsidy_component__WEBPACK_IMPORTED_MODULE_38__["AgencyAdminSubsidyComponent"]
    },
    {
        path: 'advancepayment',
        component: _components_advance_payment_advance_payment_component__WEBPACK_IMPORTED_MODULE_39__["AdvancePaymentComponent"]
    },
    {
        path: 'classtransferreport',
        component: _components_agency_admin_class_transfer_report_agency_admin_classtransferreport_component__WEBPACK_IMPORTED_MODULE_40__["AgencyAdminClasstransferreportComponent"]
    },
    {
        path: 'newmealplanner',
        component: _components_agency_admin_newmealplanner_agency_admin_newmealplanner_component__WEBPACK_IMPORTED_MODULE_42__["AgencyAdminNewmealplannerComponent"]
    },
    {
        path: 'teacherhours',
        component: _components_agency_admin_teacher_hours_agency_admin_teacher_hours_component__WEBPACK_IMPORTED_MODULE_43__["AgencyAdminTeacherHoursComponent"]
    },
    {
        path: 'mealservereport',
        component: _components_agency_admin_mealserve_report_agency_admin_mealservereport_component__WEBPACK_IMPORTED_MODULE_41__["AgencyAdminMealServereportComponent"]
    },
    {
        path: 'paymentledger/:parentid',
        component: _components_agency_admin_payment_ledger_agency_admin_payment_ledger_component__WEBPACK_IMPORTED_MODULE_44__["AgencyAdminPaymentLedgerComponent"]
    },
    {
        path: 'bankdepositreport',
        component: _components_agency_admin_bank_deposit_report_agency_admin_bank_deposit_report_component__WEBPACK_IMPORTED_MODULE_47__["AgencyAdminBankDepositReportComponent"]
    },
    {
        path: 'deactivatestudentreport',
        component: _components_agency_admin_students_deactivated_report_agency_admin_students_deactivated_report_component__WEBPACK_IMPORTED_MODULE_48__["AgencyAdminStudentsDeactivatedReportComponent"]
    },
    {
        path: 'staffbirthreport',
        component: _components_agency_admin_staff_birth_report_agency_admin_staff_birth_report_component__WEBPACK_IMPORTED_MODULE_49__["AgencyAdminStaffBirthReportComponent"]
    },
    {
        path: 'kioskidreport',
        component: _components_agency_admin_kioskid_report_agency_admin_kioskid_report_component__WEBPACK_IMPORTED_MODULE_50__["AgencyAdminKioskidReportComponent"]
    },
    {
        path: 'taxstatement',
        component: _components_agency_admin_tax_statement_report_agency_admin_tax_statement_report_component__WEBPACK_IMPORTED_MODULE_51__["AgencyAdminTaxStatementReportComponent"]
    },
    {
        path: 'buslist',
        component: _components_agency_admin_bus_agency_admin_bus_component__WEBPACK_IMPORTED_MODULE_52__["AgencyAdminBusComponent"]
    },
    {
        path: 'busreport',
        component: _components_agency_admin_bus_report_agency_admin_bus_report_component__WEBPACK_IMPORTED_MODULE_53__["AgencyAdminBusReportComponent"]
    },
    {
        path: 'foodlist',
        component: _components_agency_admin_food_list_agency_admin_food_list_component__WEBPACK_IMPORTED_MODULE_54__["AgencyAdminFoodListComponent"]
    }
];
var DasboardRoutingModule = /** @class */ (function () {
    function DasboardRoutingModule() {
    }
    DasboardRoutingModule = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
            imports: [_angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"].forChild(routes)],
            exports: [_angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"]]
        })
    ], DasboardRoutingModule);
    return DasboardRoutingModule;
}());



/***/ }),

/***/ "./src/app/layout/agency-admin/agency-admin.module.ts":
/*!************************************************************!*\
  !*** ./src/app/layout/agency-admin/agency-admin.module.ts ***!
  \************************************************************/
/*! exports provided: AgencyAdminModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AgencyAdminModule", function() { return AgencyAdminModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _agency_admin_routing_module__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./agency-admin-routing.module */ "./src/app/layout/agency-admin/agency-admin-routing.module.ts");
/* harmony import */ var primeng_table__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! primeng/table */ "./node_modules/primeng/table.js");
/* harmony import */ var primeng_table__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(primeng_table__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var primeng_dialog__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! primeng/dialog */ "./node_modules/primeng/dialog.js");
/* harmony import */ var primeng_dialog__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(primeng_dialog__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var primeng_calendar__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! primeng/calendar */ "./node_modules/primeng/calendar.js");
/* harmony import */ var primeng_calendar__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(primeng_calendar__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _components_agency_admin_dashboard_agency_admin_dashboard_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./components/agency-admin-dashboard/agency-admin-dashboard.component */ "./src/app/layout/agency-admin/components/agency-admin-dashboard/agency-admin-dashboard.component.ts");
/* harmony import */ var _components_agency_admin_add_student_agency_admin_add_student_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./components/agency-admin-add-student/agency-admin-add-student.component */ "./src/app/layout/agency-admin/components/agency-admin-add-student/agency-admin-add-student.component.ts");
/* harmony import */ var _components_agency_admin_activitydetail_agency_admin_activitydetail_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./components/agency-admin-activitydetail/agency-admin-activitydetail.component */ "./src/app/layout/agency-admin/components/agency-admin-activitydetail/agency-admin-activitydetail.component.ts");
/* harmony import */ var _components_agency_admin_attendence_agency_admin_attendence_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./components/agency-admin-attendence/agency-admin-attendence.component */ "./src/app/layout/agency-admin/components/agency-admin-attendence/agency-admin-attendence.component.ts");
/* harmony import */ var _components_agency_admin_classes_agency_admin_classes_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./components/agency-admin-classes/agency-admin-classes.component */ "./src/app/layout/agency-admin/components/agency-admin-classes/agency-admin-classes.component.ts");
/* harmony import */ var _components_agency_admin_daily_activity_agency_admin_daily_activity_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./components/agency-admin-daily-activity/agency-admin-daily-activity.component */ "./src/app/layout/agency-admin/components/agency-admin-daily-activity/agency-admin-daily-activity.component.ts");
/* harmony import */ var _components_agency_admin_event_planner_agency_admin_event_planner_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./components/agency-admin-event-planner/agency-admin-event-planner.component */ "./src/app/layout/agency-admin/components/agency-admin-event-planner/agency-admin-event-planner.component.ts");
/* harmony import */ var _components_agency_admin_incident_report_agency_admin_incident_report_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./components/agency-admin-incident-report/agency-admin-incident-report.component */ "./src/app/layout/agency-admin/components/agency-admin-incident-report/agency-admin-incident-report.component.ts");
/* harmony import */ var _components_agency_admin_meal_planner_agency_admin_meal_planner_component__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./components/agency-admin-meal-planner/agency-admin-meal-planner.component */ "./src/app/layout/agency-admin/components/agency-admin-meal-planner/agency-admin-meal-planner.component.ts");
/* harmony import */ var _components_agency_admin_message_agency_admin_message_component__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./components/agency-admin-message/agency-admin-message.component */ "./src/app/layout/agency-admin/components/agency-admin-message/agency-admin-message.component.ts");
/* harmony import */ var _components_agency_admin_parent_agency_admin_parent_component__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./components/agency-admin-parent/agency-admin-parent.component */ "./src/app/layout/agency-admin/components/agency-admin-parent/agency-admin-parent.component.ts");
/* harmony import */ var _components_agency_admin_payment_agency_admin_payment_component__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./components/agency-admin-payment/agency-admin-payment.component */ "./src/app/layout/agency-admin/components/agency-admin-payment/agency-admin-payment.component.ts");
/* harmony import */ var _components_agency_admin_post_activity_agency_admin_post_activity_component__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./components/agency-admin-post-activity/agency-admin-post-activity.component */ "./src/app/layout/agency-admin/components/agency-admin-post-activity/agency-admin-post-activity.component.ts");
/* harmony import */ var _components_agency_admin_settings_agency_admin_settings_component__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./components/agency-admin-settings/agency-admin-settings.component */ "./src/app/layout/agency-admin/components/agency-admin-settings/agency-admin-settings.component.ts");
/* harmony import */ var _components_agency_admin_teacherstaff_agency_admin_teacherstaff_component__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./components/agency-admin-teacherstaff/agency-admin-teacherstaff.component */ "./src/app/layout/agency-admin/components/agency-admin-teacherstaff/agency-admin-teacherstaff.component.ts");
/* harmony import */ var _components_agency_admin_viewchat_agency_admin_viewchat_component__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./components/agency-admin-viewchat/agency-admin-viewchat.component */ "./src/app/layout/agency-admin/components/agency-admin-viewchat/agency-admin-viewchat.component.ts");
/* harmony import */ var _components_agency_admin_student_list_agency_admin_student_list_component__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./components/agency-admin-student-list/agency-admin-student-list.component */ "./src/app/layout/agency-admin/components/agency-admin-student-list/agency-admin-student-list.component.ts");
/* harmony import */ var ngx_scrollbar__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ngx-scrollbar */ "./node_modules/ngx-scrollbar/fesm5/ngx-scrollbar.js");
/* harmony import */ var ng2_charts__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ng2-charts */ "./node_modules/ng2-charts/index.js");
/* harmony import */ var ng2_charts__WEBPACK_IMPORTED_MODULE_25___default = /*#__PURE__*/__webpack_require__.n(ng2_charts__WEBPACK_IMPORTED_MODULE_25__);
/* harmony import */ var primeng_multiselect__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! primeng/multiselect */ "./node_modules/primeng/multiselect.js");
/* harmony import */ var primeng_multiselect__WEBPACK_IMPORTED_MODULE_26___default = /*#__PURE__*/__webpack_require__.n(primeng_multiselect__WEBPACK_IMPORTED_MODULE_26__);
/* harmony import */ var ng_fullcalendar__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ng-fullcalendar */ "./node_modules/ng-fullcalendar/ng-fullcalendar.es5.js");
/* harmony import */ var _components_agency_student_details_agency_student_details_component__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./components/agency-student-details/agency-student-details.component */ "./src/app/layout/agency-admin/components/agency-student-details/agency-student-details.component.ts");
/* harmony import */ var ngx_bootstrap__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ngx-bootstrap */ "./node_modules/ngx-bootstrap/esm5/ngx-bootstrap.js");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ngx-spinner */ "./node_modules/ngx-spinner/fesm5/ngx-spinner.js");
/* harmony import */ var _shared_shared_module__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ../../shared/shared.module */ "./src/app/shared/shared.module.ts");
/* harmony import */ var primeng_paginator__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! primeng/paginator */ "./node_modules/primeng/paginator.js");
/* harmony import */ var primeng_paginator__WEBPACK_IMPORTED_MODULE_32___default = /*#__PURE__*/__webpack_require__.n(primeng_paginator__WEBPACK_IMPORTED_MODULE_32__);
/* harmony import */ var _components_agency_student_break_agency_student_break_component__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./components/agency-student-break/agency-student-break.component */ "./src/app/layout/agency-admin/components/agency-student-break/agency-student-break.component.ts");
/* harmony import */ var _components_agency_admin_classassignment_agency_admin_classassignment_component__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./components/agency-admin-classassignment/agency-admin-classassignment.component */ "./src/app/layout/agency-admin/components/agency-admin-classassignment/agency-admin-classassignment.component.ts");
/* harmony import */ var primeng_radiobutton__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! primeng/radiobutton */ "./node_modules/primeng/radiobutton.js");
/* harmony import */ var primeng_radiobutton__WEBPACK_IMPORTED_MODULE_35___default = /*#__PURE__*/__webpack_require__.n(primeng_radiobutton__WEBPACK_IMPORTED_MODULE_35__);
/* harmony import */ var primeng_inputswitch__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! primeng/inputswitch */ "./node_modules/primeng/inputswitch.js");
/* harmony import */ var primeng_inputswitch__WEBPACK_IMPORTED_MODULE_36___default = /*#__PURE__*/__webpack_require__.n(primeng_inputswitch__WEBPACK_IMPORTED_MODULE_36__);
/* harmony import */ var _components_agency_admin_plan_page_agency_admin_plan_page_component__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./components/agency-admin-plan-page/agency-admin-plan-page.component */ "./src/app/layout/agency-admin/components/agency-admin-plan-page/agency-admin-plan-page.component.ts");
/* harmony import */ var _components_agency_admin_profile_agency_admin_profile_component__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./components/agency-admin-profile/agency-admin-profile.component */ "./src/app/layout/agency-admin/components/agency-admin-profile/agency-admin-profile.component.ts");
/* harmony import */ var _components_agency_admin_attendance_report_agency_admin_attendance_report_component__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./components/agency-admin-attendance-report/agency-admin-attendance-report.component */ "./src/app/layout/agency-admin/components/agency-admin-attendance-report/agency-admin-attendance-report.component.ts");
/* harmony import */ var _components_agency_admin_birth_reports_agency_admin_reports_component__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./components/agency-admin-birth-reports/agency-admin-reports.component */ "./src/app/layout/agency-admin/components/agency-admin-birth-reports/agency-admin-reports.component.ts");
/* harmony import */ var _components_agency_admin_duepayment_report_agency_admin_duepayment_report_component__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./components/agency-admin-duepayment-report/agency-admin-duepayment-report.component */ "./src/app/layout/agency-admin/components/agency-admin-duepayment-report/agency-admin-duepayment-report.component.ts");
/* harmony import */ var _components_agency_admin_enrollment_report_agency_admin_enrollment_report_component__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./components/agency-admin-enrollment-report/agency-admin-enrollment-report.component */ "./src/app/layout/agency-admin/components/agency-admin-enrollment-report/agency-admin-enrollment-report.component.ts");
/* harmony import */ var _components_agency_admin_ledger_report_agency_admin_ledger_report_component__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ./components/agency-admin-ledger-report/agency-admin-ledger-report.component */ "./src/app/layout/agency-admin/components/agency-admin-ledger-report/agency-admin-ledger-report.component.ts");
/* harmony import */ var _components_agency_admin_kiosklog_report_agency_admin_kiosklog_report_component__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./components/agency-admin-kiosklog-report/agency-admin-kiosklog-report.component */ "./src/app/layout/agency-admin/components/agency-admin-kiosklog-report/agency-admin-kiosklog-report.component.ts");
/* harmony import */ var primeng_carousel__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! primeng/carousel */ "./node_modules/primeng/carousel.js");
/* harmony import */ var primeng_carousel__WEBPACK_IMPORTED_MODULE_45___default = /*#__PURE__*/__webpack_require__.n(primeng_carousel__WEBPACK_IMPORTED_MODULE_45__);
/* harmony import */ var _components_agency_admin_family_details_report_agency_admin_family_details_report_component__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ./components/agency-admin-family-details-report/agency-admin-family-details-report.component */ "./src/app/layout/agency-admin/components/agency-admin-family-details-report/agency-admin-family-details-report.component.ts");
/* harmony import */ var _components_agency_admin_medication_report_agency_admin_medication_report_component__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ./components/agency-admin-medication-report/agency-admin-medication-report.component */ "./src/app/layout/agency-admin/components/agency-admin-medication-report/agency-admin-medication-report.component.ts");
/* harmony import */ var _components_agency_admin_allergy_report_agency_admin_allergy_report_component__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ./components/agency-admin-allergy-report/agency-admin-allergy-report.component */ "./src/app/layout/agency-admin/components/agency-admin-allergy-report/agency-admin-allergy-report.component.ts");
/* harmony import */ var _components_agency_admin_givenmedication_report_agency_admin_givenmedication_report_component__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ./components/agency-admin-givenmedication-report/agency-admin-givenmedication-report.component */ "./src/app/layout/agency-admin/components/agency-admin-givenmedication-report/agency-admin-givenmedication-report.component.ts");
/* harmony import */ var _components_agency_admin_teacher_attendance_report_agency_admin_teacher_attendance_report_component__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ./components/agency-admin-teacher-attendance-report/agency-admin-teacher-attendance-report.component */ "./src/app/layout/agency-admin/components/agency-admin-teacher-attendance-report/agency-admin-teacher-attendance-report.component.ts");
/* harmony import */ var _components_agency_admin_account_agency_admin_account_component__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ./components/agency-admin-account/agency-admin-account.component */ "./src/app/layout/agency-admin/components/agency-admin-account/agency-admin-account.component.ts");
/* harmony import */ var _components_agency_accledger_report_agency_accledger_report_component__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ./components/agency-accledger-report/agency-accledger-report.component */ "./src/app/layout/agency-admin/components/agency-accledger-report/agency-accledger-report.component.ts");
/* harmony import */ var _components_agency_admin_add_fees_agency_admin_add_fees_component__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! ./components/agency-admin-add-fees/agency-admin-add-fees.component */ "./src/app/layout/agency-admin/components/agency-admin-add-fees/agency-admin-add-fees.component.ts");
/* harmony import */ var _components_agency_admin_msg_brodcast_agency_admin_msg_brodcast_component__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! ./components/agency-admin-msg-brodcast/agency-admin-msg-brodcast.component */ "./src/app/layout/agency-admin/components/agency-admin-msg-brodcast/agency-admin-msg-brodcast.component.ts");
/* harmony import */ var _components_agency_admin_discount_agency_admin_discount_component__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! ./components/agency-admin-discount/agency-admin-discount.component */ "./src/app/layout/agency-admin/components/agency-admin-discount/agency-admin-discount.component.ts");
/* harmony import */ var primeng_messages__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! primeng/messages */ "./node_modules/primeng/messages.js");
/* harmony import */ var primeng_messages__WEBPACK_IMPORTED_MODULE_56___default = /*#__PURE__*/__webpack_require__.n(primeng_messages__WEBPACK_IMPORTED_MODULE_56__);
/* harmony import */ var primeng_message__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(/*! primeng/message */ "./node_modules/primeng/message.js");
/* harmony import */ var primeng_message__WEBPACK_IMPORTED_MODULE_57___default = /*#__PURE__*/__webpack_require__.n(primeng_message__WEBPACK_IMPORTED_MODULE_57__);
/* harmony import */ var _components_agency_admin_subsidy_agency_admin_subsidy_component__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(/*! ./components/agency-admin-subsidy/agency-admin-subsidy.component */ "./src/app/layout/agency-admin/components/agency-admin-subsidy/agency-admin-subsidy.component.ts");
/* harmony import */ var _components_advance_payment_advance_payment_component__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(/*! ./components/advance-payment/advance-payment.component */ "./src/app/layout/agency-admin/components/advance-payment/advance-payment.component.ts");
/* harmony import */ var _components_agency_admin_class_transfer_report_agency_admin_classtransferreport_component__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(/*! ./components/agency-admin-class-transfer-report/agency-admin-classtransferreport.component */ "./src/app/layout/agency-admin/components/agency-admin-class-transfer-report/agency-admin-classtransferreport.component.ts");
/* harmony import */ var _components_agency_admin_mealserve_report_agency_admin_mealservereport_component__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(/*! ./components/agency-admin-mealserve-report/agency-admin-mealservereport.component */ "./src/app/layout/agency-admin/components/agency-admin-mealserve-report/agency-admin-mealservereport.component.ts");
/* harmony import */ var _components_agency_admin_newmealplanner_agency_admin_newmealplanner_component__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(/*! ./components/agency-admin-newmealplanner/agency-admin-newmealplanner.component */ "./src/app/layout/agency-admin/components/agency-admin-newmealplanner/agency-admin-newmealplanner.component.ts");
/* harmony import */ var _components_agency_admin_teachertime_agency_admin_teachertime_component__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(/*! ./components/agency-admin-teachertime/agency-admin-teachertime.component */ "./src/app/layout/agency-admin/components/agency-admin-teachertime/agency-admin-teachertime.component.ts");
/* harmony import */ var _components_agency_admin_teacher_hours_agency_admin_teacher_hours_component__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(/*! ./components/agency-admin-teacher-hours/agency-admin-teacher-hours.component */ "./src/app/layout/agency-admin/components/agency-admin-teacher-hours/agency-admin-teacher-hours.component.ts");
/* harmony import */ var primeng_fileupload__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(/*! primeng/fileupload */ "./node_modules/primeng/fileupload.js");
/* harmony import */ var primeng_fileupload__WEBPACK_IMPORTED_MODULE_65___default = /*#__PURE__*/__webpack_require__.n(primeng_fileupload__WEBPACK_IMPORTED_MODULE_65__);
/* harmony import */ var _components_agency_admin_payment_ledger_agency_admin_payment_ledger_component__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(/*! ./components/agency-admin-payment-ledger/agency-admin-payment-ledger.component */ "./src/app/layout/agency-admin/components/agency-admin-payment-ledger/agency-admin-payment-ledger.component.ts");
/* harmony import */ var ngx_pagination__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(/*! ngx-pagination */ "./node_modules/ngx-pagination/dist/ngx-pagination.js");
/* harmony import */ var _components_agency_admin_parent_ledger_agency_admin_parent_ledger_component__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(/*! ./components/agency-admin-parent-ledger/agency-admin-parent-ledger.component */ "./src/app/layout/agency-admin/components/agency-admin-parent-ledger/agency-admin-parent-ledger.component.ts");
/* harmony import */ var _components_agency_admin_report_agency_admin_report_component__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(/*! ./components/agency-admin-report/agency-admin-report.component */ "./src/app/layout/agency-admin/components/agency-admin-report/agency-admin-report.component.ts");
/* harmony import */ var _components_agency_admin_bank_deposit_report_agency_admin_bank_deposit_report_component__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(/*! ./components/agency-admin-bank-deposit-report/agency-admin-bank-deposit-report.component */ "./src/app/layout/agency-admin/components/agency-admin-bank-deposit-report/agency-admin-bank-deposit-report.component.ts");
/* harmony import */ var _components_agency_admin_students_deactivated_report_agency_admin_students_deactivated_report_component__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(/*! ./components/agency-admin-students-deactivated-report/agency-admin-students-deactivated-report.component */ "./src/app/layout/agency-admin/components/agency-admin-students-deactivated-report/agency-admin-students-deactivated-report.component.ts");
/* harmony import */ var _components_agency_admin_staff_birth_report_agency_admin_staff_birth_report_component__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(/*! ./components/agency-admin-staff-birth-report/agency-admin-staff-birth-report.component */ "./src/app/layout/agency-admin/components/agency-admin-staff-birth-report/agency-admin-staff-birth-report.component.ts");
/* harmony import */ var _components_agency_admin_kioskid_report_agency_admin_kioskid_report_component__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(/*! ./components/agency-admin-kioskid-report/agency-admin-kioskid-report.component */ "./src/app/layout/agency-admin/components/agency-admin-kioskid-report/agency-admin-kioskid-report.component.ts");
/* harmony import */ var _components_agency_admin_tax_statement_report_agency_admin_tax_statement_report_component__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__(/*! ./components/agency-admin-tax-statement-report/agency-admin-tax-statement-report.component */ "./src/app/layout/agency-admin/components/agency-admin-tax-statement-report/agency-admin-tax-statement-report.component.ts");
/* harmony import */ var _components_agency_admin_bus_agency_admin_bus_component__WEBPACK_IMPORTED_MODULE_75__ = __webpack_require__(/*! ./components/agency-admin-bus/agency-admin-bus.component */ "./src/app/layout/agency-admin/components/agency-admin-bus/agency-admin-bus.component.ts");
/* harmony import */ var _components_agency_admin_bus_report_agency_admin_bus_report_component__WEBPACK_IMPORTED_MODULE_76__ = __webpack_require__(/*! ./components/agency-admin-bus-report/agency-admin-bus-report.component */ "./src/app/layout/agency-admin/components/agency-admin-bus-report/agency-admin-bus-report.component.ts");
/* harmony import */ var _components_agency_admin_food_list_agency_admin_food_list_component__WEBPACK_IMPORTED_MODULE_77__ = __webpack_require__(/*! ./components/agency-admin-food-list/agency-admin-food-list.component */ "./src/app/layout/agency-admin/components/agency-admin-food-list/agency-admin-food-list.component.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};














































// tslint:disable-next-line:max-line-length



// tslint:disable-next-line:max-line-length

// tslint:disable-next-line:max-line-length










// tslint:disable-next-line:max-line-length







//import { JwPaginationComponent } from 'jw-angular-pagination';
// import {NgbPaginationModule} from '@ng-bootstrap/ng-bootstrap';



// tslint:disable-next-line: max-line-length








var AgencyAdminModule = /** @class */ (function () {
    function AgencyAdminModule() {
    }
    AgencyAdminModule = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
            imports: [
                _angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"],
                _agency_admin_routing_module__WEBPACK_IMPORTED_MODULE_2__["DasboardRoutingModule"],
                primeng_table__WEBPACK_IMPORTED_MODULE_3__["TableModule"],
                _angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormsModule"],
                ng_fullcalendar__WEBPACK_IMPORTED_MODULE_27__["FullCalendarModule"],
                ngx_scrollbar__WEBPACK_IMPORTED_MODULE_24__["NgScrollbarModule"],
                primeng_dialog__WEBPACK_IMPORTED_MODULE_5__["DialogModule"],
                _angular_forms__WEBPACK_IMPORTED_MODULE_4__["ReactiveFormsModule"],
                primeng_calendar__WEBPACK_IMPORTED_MODULE_6__["CalendarModule"],
                ng2_charts__WEBPACK_IMPORTED_MODULE_25__["ChartsModule"],
                primeng_multiselect__WEBPACK_IMPORTED_MODULE_26__["MultiSelectModule"],
                ngx_bootstrap__WEBPACK_IMPORTED_MODULE_29__["BsDatepickerModule"].forRoot(),
                ngx_spinner__WEBPACK_IMPORTED_MODULE_30__["NgxSpinnerModule"],
                _shared_shared_module__WEBPACK_IMPORTED_MODULE_31__["SharedModule"],
                primeng_paginator__WEBPACK_IMPORTED_MODULE_32__["PaginatorModule"],
                primeng_radiobutton__WEBPACK_IMPORTED_MODULE_35__["RadioButtonModule"],
                primeng_inputswitch__WEBPACK_IMPORTED_MODULE_36__["InputSwitchModule"],
                primeng_carousel__WEBPACK_IMPORTED_MODULE_45__["CarouselModule"],
                primeng_message__WEBPACK_IMPORTED_MODULE_57__["MessageModule"],
                primeng_messages__WEBPACK_IMPORTED_MODULE_56__["MessagesModule"],
                primeng_fileupload__WEBPACK_IMPORTED_MODULE_65__["FileUploadModule"],
                ngx_pagination__WEBPACK_IMPORTED_MODULE_67__["NgxPaginationModule"]
            ],
            declarations: [
                _components_agency_admin_dashboard_agency_admin_dashboard_component__WEBPACK_IMPORTED_MODULE_7__["AgencyAdminDashboardComponent"],
                _components_agency_admin_add_student_agency_admin_add_student_component__WEBPACK_IMPORTED_MODULE_8__["AgencyAdminAddStudentComponent"],
                _components_agency_admin_activitydetail_agency_admin_activitydetail_component__WEBPACK_IMPORTED_MODULE_9__["AgencyAdminActivitydetailComponent"],
                _components_agency_admin_attendence_agency_admin_attendence_component__WEBPACK_IMPORTED_MODULE_10__["AgencyAdminAttendenceComponent"],
                _components_agency_admin_classes_agency_admin_classes_component__WEBPACK_IMPORTED_MODULE_11__["AgencyAdminClassesComponent"],
                _components_agency_admin_daily_activity_agency_admin_daily_activity_component__WEBPACK_IMPORTED_MODULE_12__["AgencyAdminDailyActivityComponent"],
                _components_agency_admin_event_planner_agency_admin_event_planner_component__WEBPACK_IMPORTED_MODULE_13__["AgencyAdminEventPlannerComponent"],
                _components_agency_admin_incident_report_agency_admin_incident_report_component__WEBPACK_IMPORTED_MODULE_14__["AgencyAdminIncidentReportComponent"],
                _components_agency_admin_meal_planner_agency_admin_meal_planner_component__WEBPACK_IMPORTED_MODULE_15__["AgencyAdminMealPlannerComponent"],
                _components_agency_admin_message_agency_admin_message_component__WEBPACK_IMPORTED_MODULE_16__["AgencyAdminMessageComponent"],
                _components_agency_admin_parent_agency_admin_parent_component__WEBPACK_IMPORTED_MODULE_17__["AgencyAdminParentComponent"],
                _components_agency_admin_payment_agency_admin_payment_component__WEBPACK_IMPORTED_MODULE_18__["AgencyAdminPaymentComponent"],
                _components_agency_admin_post_activity_agency_admin_post_activity_component__WEBPACK_IMPORTED_MODULE_19__["AgencyAdminPostActivityComponent"],
                _components_agency_admin_birth_reports_agency_admin_reports_component__WEBPACK_IMPORTED_MODULE_40__["AgencyAdminReportsComponent"],
                _components_agency_admin_settings_agency_admin_settings_component__WEBPACK_IMPORTED_MODULE_20__["AgencyAdminSettingsComponent"],
                _components_agency_admin_teacherstaff_agency_admin_teacherstaff_component__WEBPACK_IMPORTED_MODULE_21__["AgencyAdminTeacherstaffComponent"],
                _components_agency_admin_viewchat_agency_admin_viewchat_component__WEBPACK_IMPORTED_MODULE_22__["AgencyAdminViewchatComponent"],
                _components_agency_admin_student_list_agency_admin_student_list_component__WEBPACK_IMPORTED_MODULE_23__["AgencyAdminStudentListComponent"],
                _components_agency_student_details_agency_student_details_component__WEBPACK_IMPORTED_MODULE_28__["AgencyStudentDetailsComponent"],
                _components_agency_student_break_agency_student_break_component__WEBPACK_IMPORTED_MODULE_33__["AgencyStudentBreakComponent"],
                _components_agency_admin_classassignment_agency_admin_classassignment_component__WEBPACK_IMPORTED_MODULE_34__["AgencyAdminClassassignmentComponent"],
                _components_agency_admin_plan_page_agency_admin_plan_page_component__WEBPACK_IMPORTED_MODULE_37__["AgencyAdminPlanPageComponent"],
                _components_agency_admin_profile_agency_admin_profile_component__WEBPACK_IMPORTED_MODULE_38__["AgencyAdminProfileComponent"],
                _components_agency_admin_attendance_report_agency_admin_attendance_report_component__WEBPACK_IMPORTED_MODULE_39__["AgencyAdminAttendanceReportComponent"],
                _components_agency_admin_duepayment_report_agency_admin_duepayment_report_component__WEBPACK_IMPORTED_MODULE_41__["AgencyAdminDuepaymentReportComponent"],
                _components_agency_admin_enrollment_report_agency_admin_enrollment_report_component__WEBPACK_IMPORTED_MODULE_42__["AgencyAdminEnrollmentReportComponent"],
                _components_agency_admin_ledger_report_agency_admin_ledger_report_component__WEBPACK_IMPORTED_MODULE_43__["AgencyAdminLedgerReportComponent"],
                _components_agency_admin_kiosklog_report_agency_admin_kiosklog_report_component__WEBPACK_IMPORTED_MODULE_44__["AgencyAdminKiosklogReportComponent"],
                _components_agency_admin_family_details_report_agency_admin_family_details_report_component__WEBPACK_IMPORTED_MODULE_46__["AgencyAdminFamilyDetailsReportComponent"],
                _components_agency_admin_medication_report_agency_admin_medication_report_component__WEBPACK_IMPORTED_MODULE_47__["AgencyAdminMedicationReportComponent"],
                _components_agency_admin_allergy_report_agency_admin_allergy_report_component__WEBPACK_IMPORTED_MODULE_48__["AgencyAdminAllergyReportComponent"],
                _components_agency_admin_givenmedication_report_agency_admin_givenmedication_report_component__WEBPACK_IMPORTED_MODULE_49__["AgencyAdminGivenmedicationReportComponent"],
                _components_agency_admin_teacher_attendance_report_agency_admin_teacher_attendance_report_component__WEBPACK_IMPORTED_MODULE_50__["AgencyAdminTeacherAttendanceReportComponent"],
                _components_agency_admin_account_agency_admin_account_component__WEBPACK_IMPORTED_MODULE_51__["AgencyAdminAccountComponent"],
                _components_agency_accledger_report_agency_accledger_report_component__WEBPACK_IMPORTED_MODULE_52__["AgencyAccledgerReportComponent"],
                _components_agency_admin_add_fees_agency_admin_add_fees_component__WEBPACK_IMPORTED_MODULE_53__["AgencyAdminAddFeesComponent"],
                _components_agency_admin_msg_brodcast_agency_admin_msg_brodcast_component__WEBPACK_IMPORTED_MODULE_54__["AgencyAdminMsgBrodcastComponent"],
                _components_agency_admin_discount_agency_admin_discount_component__WEBPACK_IMPORTED_MODULE_55__["AgencyAdminDiscountComponent"],
                _components_agency_admin_subsidy_agency_admin_subsidy_component__WEBPACK_IMPORTED_MODULE_58__["AgencyAdminSubsidyComponent"],
                _components_advance_payment_advance_payment_component__WEBPACK_IMPORTED_MODULE_59__["AdvancePaymentComponent"],
                _components_agency_admin_class_transfer_report_agency_admin_classtransferreport_component__WEBPACK_IMPORTED_MODULE_60__["AgencyAdminClasstransferreportComponent"],
                _components_agency_admin_mealserve_report_agency_admin_mealservereport_component__WEBPACK_IMPORTED_MODULE_61__["AgencyAdminMealServereportComponent"],
                _components_agency_admin_newmealplanner_agency_admin_newmealplanner_component__WEBPACK_IMPORTED_MODULE_62__["AgencyAdminNewmealplannerComponent"],
                _components_agency_admin_teachertime_agency_admin_teachertime_component__WEBPACK_IMPORTED_MODULE_63__["AgencyAdminTeachertimeComponent"],
                _components_agency_admin_teacher_hours_agency_admin_teacher_hours_component__WEBPACK_IMPORTED_MODULE_64__["AgencyAdminTeacherHoursComponent"],
                _components_agency_admin_payment_ledger_agency_admin_payment_ledger_component__WEBPACK_IMPORTED_MODULE_66__["AgencyAdminPaymentLedgerComponent"],
                _components_agency_admin_parent_ledger_agency_admin_parent_ledger_component__WEBPACK_IMPORTED_MODULE_68__["AgencyAdminParentLedgerComponent"],
                _components_agency_admin_report_agency_admin_report_component__WEBPACK_IMPORTED_MODULE_69__["AgencyAdminReportComponent"],
                _components_agency_admin_bank_deposit_report_agency_admin_bank_deposit_report_component__WEBPACK_IMPORTED_MODULE_70__["AgencyAdminBankDepositReportComponent"],
                _components_agency_admin_students_deactivated_report_agency_admin_students_deactivated_report_component__WEBPACK_IMPORTED_MODULE_71__["AgencyAdminStudentsDeactivatedReportComponent"],
                _components_agency_admin_staff_birth_report_agency_admin_staff_birth_report_component__WEBPACK_IMPORTED_MODULE_72__["AgencyAdminStaffBirthReportComponent"],
                _components_agency_admin_kioskid_report_agency_admin_kioskid_report_component__WEBPACK_IMPORTED_MODULE_73__["AgencyAdminKioskidReportComponent"],
                _components_agency_admin_tax_statement_report_agency_admin_tax_statement_report_component__WEBPACK_IMPORTED_MODULE_74__["AgencyAdminTaxStatementReportComponent"],
                _components_agency_admin_bus_agency_admin_bus_component__WEBPACK_IMPORTED_MODULE_75__["AgencyAdminBusComponent"],
                _components_agency_admin_bus_report_agency_admin_bus_report_component__WEBPACK_IMPORTED_MODULE_76__["AgencyAdminBusReportComponent"],
                _components_agency_admin_food_list_agency_admin_food_list_component__WEBPACK_IMPORTED_MODULE_77__["AgencyAdminFoodListComponent"]
            ]
        })
    ], AgencyAdminModule);
    return AgencyAdminModule;
}());



/***/ }),

/***/ "./src/app/layout/agency-admin/components/advance-payment/advance-payment.component.css":
/*!**********************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/advance-payment/advance-payment.component.css ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9hZ2VuY3ktYWRtaW4vY29tcG9uZW50cy9hZHZhbmNlLXBheW1lbnQvYWR2YW5jZS1wYXltZW50LmNvbXBvbmVudC5jc3MifQ== */"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/advance-payment/advance-payment.component.html":
/*!***********************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/advance-payment/advance-payment.component.html ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"wrapper\">\r\n  <div class=\"container-fluid\">\r\n\r\n    <div class=\"pagetitle\">\r\n      <div>\r\n        <h2>Advance Payment\r\n          <!-- <span>/ ParentList </span> -->\r\n        </h2>\r\n      </div>\r\n   \r\n    </div>\r\n    <div class=\"subhead d-flex justify-content-between mt-20\">\r\n      <div>\r\n        <h3>Advance Payment List</h3>\r\n      </div>\r\n    </div>\r\n    <div class=\"card cardfilter\">\r\n      <div class=\"row algcenter\">\r\n\r\n        <div class=\"leftfilter\">\r\n          <div class=\"search-date\">\r\n            <div class=\"pr15 label-text\">Search Name : </div>\r\n            <input type=\"text\" placeholder=\"Search parent name\" (keydown)=\"keyDownFunction($event)\" [(ngModel)]=\"nameSearch\" class=\"form-control mr15\"\r\n              id=\"\">\r\n          </div>\r\n          <div class=\"search-date\">\r\n            <div class=\"label-text\">Search By Activation</div>\r\n            <div class=\"pr15\">\r\n              <div class=\"form-group\">\r\n                <select name=\"\" id=\"\" [(ngModel)]=\"activationType\">\r\n                  <option value=\"\">All</option>\r\n                  <option value=\"Activated\">Active</option>\r\n                  <option value=\"Deactivated\">Deactive</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"filter-buttons\">\r\n            <button type=\"submit\" class=\"btn btn-send\" (click)=\"getAllParentList()\">Search</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"innertable\">\r\n      <div class=\"table-responsive\">\r\n        <table class=\"table\">\r\n          <thead class=\"thead-light\">\r\n            <tr>\r\n              <th scope=\"col\">Photo</th>\r\n              <th scope=\"col\">Parent Name</th>\r\n              <th scope=\"col\">Balance Amount</th>\r\n              <th scope=\"col\">Email</th>\r\n              <th scope=\"col\">User Status</th>\r\n              <th scope=\"col\" class=\"text-center\">Advance Payment</th>\r\n          </thead>\r\n          <tbody>\r\n            <tr *ngFor=\"let parent of parentList\">\r\n              <!-- <td>\r\n                  <label class=\"checkboxcustom\">\r\n                    <input type=\"checkbox\">\r\n                    <span class=\"checkmark\"></span>\r\n                  </label>\r\n                </td>\r\n                <td scope=\"row\">PID: {{parent.id}}</td> -->\r\n              <td>\r\n                <img src=\"{{parent.imagePath}}\" onError=\"this.src='assets/img/user.png'\" alt=\"\"\r\n                  class=\"img-circle childimg\">\r\n              </td>\r\n              <td>{{parent.parentName}}</td>\r\n              <td>${{parent.advancePaymentBalanceAmount}} </td>\r\n              <td>{{parent.email}}</td>\r\n              <td>{{parent.isDelete ? 'Deactive' : 'Active'}}</td>\r\n              <td class=\"text-center\">\r\n                  <button class=\"form-control\" (click)=\"parentInfoForAdavance(parent)\"  class=\"btn btn-info text-center\"\r\n                   data-toggle=\"modal\" data-target=\".advancepay\">Pay Advance</button>\r\n                </td>\r\n  \r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <div class=\"text-center\">\r\n          <span *ngIf=\"parentList.length == 0 && !loader\">No record found</span>\r\n        </div>\r\n      </div>\r\n        <p-paginator   [alwaysShow]=\"false\" [rows]=\"limit\" [totalRecords]=\"totalRecord\" (onPageChange)=\"paginate($event)\">\r\n        </p-paginator>\r\n     \r\n      \r\n    </div>\r\n\r\n  </div>\r\n\r\n  <!-- Rejected User List\r\n  <div class=\"modal fade rejectedUsr\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myLargeModalLabel\"\r\n    aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-lg\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Rejected Parent List</h5>\r\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <div class=\"innertable\">\r\n            <div class=\"table-responsive\">\r\n\r\n              <table class=\"table\">\r\n                <thead class=\"thead-light\">\r\n                  <tr>\r\n                    <th scope=\"col\">Parent First Name</th>\r\n                    <th scope=\"col\">Parent Last Name</th>\r\n                    <th scope=\"col\">Parent Email Address</th>\r\n                    <th scope=\"col\">Reason</th>\r\n\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n\r\n                  <tr *ngFor=\"let student of rejectedUserList\">\r\n\r\n                    <td>{{student.firstName}}</td>\r\n                    <td>{{student.lastName}}</td>\r\n                    <td>{{student.emailId}}</td>\r\n                    <td>{{student.msg}}</td>\r\n\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div> -->\r\n\r\n \r\n       <!-- Modal for Advance payment -->\r\n    <div class=\"modal fade advancepay\" data-backdrop=\"static\"  id=\"breakout\" tabindex=\"-1\"\r\n    role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <h5 class=\"modal-title\" id=\"exampleModalLabel\">Add Advance Amount</h5>\r\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <div class=\"form-group\">\r\n            <label>Amount($)</label>\r\n            <input type=\"text\" maxlength=\"5\" class=\"form-control\"  (keypress)=\"commonService.allowOnlyNumberWithDecimal($event)\"\r\n              placeholder=\"Amount\" [(ngModel)]=\"advanceAmount\">\r\n          </div>\r\n\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n          <button type=\"button\" class=\"btn btn-primary\" (click)=\"saveAdvancePay()\">Add</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n\r\n</div>\r\n<ngx-spinner type=\"ball-atom\" size=\"medium\" color=\"#58A7FE\"></ngx-spinner>\r\n\r\n<app-confirm-box></app-confirm-box>"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/advance-payment/advance-payment.component.ts":
/*!*********************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/advance-payment/advance-payment.component.ts ***!
  \*********************************************************************************************/
/*! exports provided: AdvancePaymentComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AdvancePaymentComponent", function() { return AdvancePaymentComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var ngx_bootstrap__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ngx-bootstrap */ "./node_modules/ngx-bootstrap/esm5/ngx-bootstrap.js");
/* harmony import */ var src_app_layout_parent_shared_services_parent_api_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/layout/parent/shared/services/parent-api-service */ "./src/app/layout/parent/shared/services/parent-api-service.ts");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ngx-spinner */ "./node_modules/ngx-spinner/fesm5/ngx-spinner.js");
/* harmony import */ var src_app_shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/shared/services/error-handler/error-handler.service */ "./src/app/shared/services/error-handler/error-handler.service.ts");
/* harmony import */ var src_app_shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/shared/services/common/common.service */ "./src/app/shared/services/common/common.service.ts");
/* harmony import */ var src_app_shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/app/shared/services/notification-service/notification.service */ "./src/app/shared/services/notification-service/notification.service.ts");
/* harmony import */ var src_app_layout_parent_shared_constant__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/app/layout/parent/shared/constant */ "./src/app/layout/parent/shared/constant.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var primeng_api__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! primeng/api */ "./node_modules/primeng/api.js");
/* harmony import */ var primeng_api__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(primeng_api__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var _shared_constatant__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../shared/constatant */ "./src/app/layout/agency-admin/components/shared/constatant.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};












var AdvancePaymentComponent = /** @class */ (function () {
    function AdvancePaymentComponent(apiService, error, spinner, notification, commonService, fb, route, confirmationService, toaster) {
        this.apiService = apiService;
        this.error = error;
        this.spinner = spinner;
        this.notification = notification;
        this.commonService = commonService;
        this.fb = fb;
        this.route = route;
        this.confirmationService = confirmationService;
        this.toaster = toaster;
        this.linkedChildList = [];
        this.parentList = [];
        this.today = new Date();
        this.flag = false;
        this.formData = new FormData();
        this.disableEmail = false;
        this.masterParentList = [];
        this.parentChildList = [];
        this.childList = [];
        this.emailPattern = /^([\w-\.]+\u0040([\w-]+\.)+[\w-]{2,4})?$/;
        this.isSecondparent = false;
        this.isGuardian = false;
        this.relationTypeList = [];
        this.showExtraFields = false;
        this.isParent = true;
        this.reasonNotToAllowbox = true;
        this.activationType = 'Activated';
        this.pageNo = 0;
        this.limit = 10;
        this.totalRecord = 0;
        this.loader = true;
        this.dpConfig = new ngx_bootstrap__WEBPACK_IMPORTED_MODULE_2__["BsDatepickerConfig"]();
        this.nameSearch = '';
        this.rejectedUserList = [];
        this.advanceAmount = 0;
        this.parentIdForAdavance = 0;
        this.isSubscriptionActive = this.commonService.getSubscriptionStatus();
    }
    AdvancePaymentComponent.prototype.ngOnInit = function () {
        this.spinner.show();
        this.dpConfig = Object.assign({}, { containerClass: 'theme-dark-blue' }, { showWeekNumbers: false });
        this.image = '';
        this.countryList = [];
        this.cityList = [];
        this.stateList = [];
        this.parentVM = {};
        this.createParentForm();
        this.getAllParentList();
        this.getMasterParentList();
    };
    AdvancePaymentComponent.prototype.createParentForm = function () {
        this.profileForm = this.fb.group({
            firstname: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            lastname: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            email: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].pattern(this.emailPattern)]],
            mobile: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            photo: [''],
            typeofparent: ['parent'],
            masterparentid: [''],
            associatedchildid: [''],
            relationid: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
        });
    };
    AdvancePaymentComponent.prototype.editParentForm = function () {
        this.disableEmail = true;
        this.profileForm = this.fb.group({
            firstname: [this.parentVM.FirstName, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            lastname: [this.parentVM.LastName, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            email: [this.parentVM.EmailId],
            mobile: [this.parentVM.Mobile, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            photo: [''],
            typeofparent: [{ value: '', disabled: true }],
            masterparentid: [{ value: this.parentVM.addedByID, disabled: true }],
            associatedchildid: [this.childList],
            relationid: [this.parentVM.relationTypeId, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
        });
    };
    Object.defineProperty(AdvancePaymentComponent.prototype, "f", {
        // convenience getter for easy access to form fields
        get: function () { return this.profileForm.controls; },
        enumerable: true,
        configurable: true
    });
    AdvancePaymentComponent.prototype.getParentDetails = function (value) {
        var _this = this;
        this.addMode = false;
        this.spinner.show();
        var req = {
            'AgencyID': this.commonService.getAgencyId(),
            'classID': 0,
            'studentID': 0,
            'parentID': value.id,
            'studentName': 'string',
        };
        this.apiService.postData(src_app_layout_parent_shared_constant__WEBPACK_IMPORTED_MODULE_8__["ParentAPIURLs"].GetParentInformation, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                if (res.body.data !== null && res.body.data !== []) {
                    _this.parentVM.FirstName = res.body.data.firstName;
                    _this.parentVM.LastName = res.body.data.lastName;
                    _this.parentVM.EmailId = res.body.data.emailId;
                    _this.parentVM.Mobile = res.body.data.mobile;
                    _this.parentVM.Address = res.body.data.address;
                    _this.parentVM.CityId = res.body.data.cityId;
                    _this.parentVM.StateId = res.body.data.stateId;
                    _this.parentVM.CountryId = res.body.data.countryId;
                    _this.parentVM.PostalCode = res.body.data.postalCode;
                    _this.parentVM.DateOfBirth = new Date(res.body.data.dateOfBirth);
                    _this.parentVM.GenderID = res.body.data.genderID;
                    _this.id = res.body.data.id;
                    _this.parentVM.Profession = res.body.data.profession;
                    _this.parentVM.relationTypeId = res.body.data.relationTypeId;
                    _this.parentVM.addedByID = res.body.data.addedByID;
                    _this.parentVM.isParent = res.body.data.isParent;
                    _this.parentVM.IsAuthorizedToPickup = res.body.data.isAuthorizedToPickup;
                    _this.parentVM.ReasonNotToAllow = res.body.data.reasonNotToAllow;
                    _this.parentVM.employerName = res.body.data.employerName;
                    _this.parentVM.employerNumber = res.body.data.employerNumber;
                    _this.childList = [];
                    if (res.body.data.associatedChild !== null && res.body.data.associatedChild !== []) {
                        res.body.data.associatedChild.forEach(function (element) {
                            _this.childList.push(element.studentID);
                        });
                    }
                    if (res.body.data.isSecondaryParent === true) {
                        _this.isSecondparent = true;
                        _this.isGuardian = false;
                        _this.isParent = false;
                        _this.showExtraFields = true;
                        _this.profileForm.controls['masterparentid'].setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required);
                        _this.profileForm.controls['masterparentid'].updateValueAndValidity();
                        _this.profileForm.controls['associatedchildid'].setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required);
                        _this.profileForm.controls['associatedchildid'].updateValueAndValidity();
                    }
                    else if (_this.parentVM.isParent === true) {
                        _this.isGuardian = false;
                        _this.isParent = true;
                        _this.isSecondparent = false;
                        _this.showExtraFields = false;
                        _this.profileForm.controls['masterparentid'].setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].nullValidator);
                        _this.profileForm.controls['masterparentid'].updateValueAndValidity();
                        _this.profileForm.controls['associatedchildid'].setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].nullValidator);
                        _this.profileForm.controls['associatedchildid'].updateValueAndValidity();
                    }
                    else {
                        _this.isGuardian = true;
                        _this.isParent = false;
                        _this.isSecondparent = false;
                        _this.showExtraFields = true;
                        _this.profileForm.controls['masterparentid'].setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required);
                        _this.profileForm.controls['masterparentid'].updateValueAndValidity();
                        _this.profileForm.controls['associatedchildid'].setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required);
                        _this.profileForm.controls['associatedchildid'].updateValueAndValidity();
                    }
                    if (res.body.data.isAuthorizedToPickup === true) {
                        _this.reasonNotToAllowbox = false;
                        _this.profileForm.controls['notallowedreason'].setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].nullValidator);
                        _this.profileForm.controls['notallowedreason'].updateValueAndValidity();
                    }
                    else {
                        _this.reasonNotToAllowbox = true;
                        _this.profileForm.controls['notallowedreason'].setValue('');
                        _this.profileForm.controls['notallowedreason'].setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required);
                        _this.profileForm.controls['notallowedreason'].updateValueAndValidity();
                    }
                    _this.parentVM.HomePhone = res.body.data.homePhone;
                    _this.image = res.body.data.imagePath;
                    _this.editParentForm();
                    _this.getAllStudentOfParentList(2);
                }
                _this.spinner.hide();
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AdvancePaymentComponent.prototype.getAllParentList = function () {
        var _this = this;
        this.loader = true;
        this.parentList = [];
        var req = {
            'AgencyID': this.commonService.getAgencyId(),
            'ActivationType': this.activationType,
            'limit': this.limit,
            'page': this.pageNo,
            'ParentName': this.nameSearch
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_11__["AgencyAPIURLs"].GetAllParentInformationForAgency, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.totalRecord = res.body.totalRows;
                _this.parentList = res.body.data;
                _this.loader = false;
                _this.spinner.hide();
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AdvancePaymentComponent.prototype.getAllStudentOfParentList = function (type) {
        var _this = this;
        this.spinner.show();
        this.parentChildList = [];
        var req = {
            'AgencyID': this.commonService.getAgencyId(),
            'ParentID': type === 1 ? this.profileForm.value.masterparentid : this.parentVM.addedByID
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_11__["AgencyAPIURLs"].GetAllStudentForParentDropdown, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.parentChildList = res.body.data;
                _this.spinner.hide();
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AdvancePaymentComponent.prototype.getMasterParentList = function () {
        var _this = this;
        this.masterParentList = [];
        var req = {
            'AgencyID': this.commonService.getAgencyId(),
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_11__["AgencyAPIURLs"].GetMasterParentForDropdown, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.masterParentList = res.body.data;
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    // Method to delete/deactivate Parent
    AdvancePaymentComponent.prototype.activateParent = function (value) {
        var _this = this;
        this.confirmationService.confirm({
            message: 'Do you want to activate this user?',
            accept: function () {
                _this.spinner.show();
                var req = {
                    'AgencyID': _this.commonService.getAgencyId(),
                    'id': value.id,
                    'IsDeleted': false,
                    'UpdatedBy': _this.commonService.getReleventUserId('userdetails')
                };
                _this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_11__["AgencyAPIURLs"].ActivateParent, req, null).subscribe(function (res) {
                    if (res.body.statusCode === 200) {
                        _this.notification.success({ message: 'This user has been activated', title: '' });
                        _this.getAllParentList();
                    }
                    else {
                        _this.spinner.hide();
                        _this.error.unknownError();
                    }
                }, function (err) {
                    _this.spinner.hide();
                    _this.error.commonError(err);
                });
            }
        });
    };
    AdvancePaymentComponent.prototype.updateProfile = function () {
        var _this = this;
        this.linkedChildList = [];
        if (this.profileForm.valid) {
            this.spinner.show();
            this.parentVM.FirstName = this.profileForm.value.firstname;
            this.parentVM.LastName = this.profileForm.value.lastname;
            this.parentVM.EmailId = this.profileForm.value.email;
            this.parentVM.Mobile = this.profileForm.value.mobile;
            this.parentVM.relationTypeId = this.profileForm.value.relationid;
            this.parentVM.employerName = this.profileForm.value.employername;
            this.parentVM.employerNumber = this.profileForm.value.employernumber === '' ? 0 : this.profileForm.value.employernumber;
            this.parentVM.addedByID = this.profileForm.value.masterparentid === '' ? 0 : this.profileForm.value.masterparentid;
            if (this.isParent === true) {
                this.parentVM.isParent = true;
                this.parentVM.isGaurdian = false;
                this.parentVM.isSecondaryParent = false;
            }
            else if (this.isGuardian === true) {
                this.parentVM.isParent = false;
                this.parentVM.isGaurdian = true;
                this.parentVM.isSecondaryParent = false;
            }
            else {
                this.parentVM.isParent = false;
                this.parentVM.isGaurdian = false;
                this.parentVM.isSecondaryParent = true;
            }
            if (this.id === 0) {
                this.parentVM.createdBy = this.commonService.getReleventUserId('userdetails');
            }
            else {
                this.parentVM.updatedBy = this.commonService.getReleventUserId('userdetails');
            }
            if (this.profileForm.value.associatedchildid.length !== 0) {
                this.profileForm.value.associatedchildid.forEach(function (element) {
                    _this.linkedChildList.push({
                        'studentID': element,
                    });
                });
            }
            this.parentVM.ImagePath = this.image;
            this.parentVM.Id = this.id;
            this.image = this.profileimage;
            this.parentVM.AgencyID = this.commonService.getAgencyId();
            this.spinner.hide();
            this.parentVM.AssociatedChild = this.linkedChildList;
            console.log('data', this.parentVM);
            this.apiService.postData(src_app_layout_parent_shared_constant__WEBPACK_IMPORTED_MODULE_8__["ParentAPIURLs"].SaveParentInformation, this.parentVM, null).subscribe(function (res) {
                if (res.body.statusCode === 200) {
                    _this.flag = false;
                    _this.notification.success({
                        message: _this.id === 0 ? 'New user created successfully!' : 'User information updated successfully!',
                        title: ''
                    });
                    _this.spinner.hide();
                    $('.addparent').modal('hide');
                    _this.getAllParentList();
                }
                else if (res.body.statusCode === 986) {
                    _this.spinner.hide();
                    _this.notification.warning({ message: ' User already exist !', title: '' });
                }
                else if (res.body.statusCode === 205) {
                    _this.spinner.hide();
                    _this.notification.warning({ message: 'Please enter valid name', title: '' });
                }
                else {
                    _this.spinner.hide();
                    _this.error.unknownError();
                }
            }, function (err) {
                _this.spinner.hide();
                _this.error.commonError(err);
            });
        }
        else {
            this.spinner.hide();
            this.commonService.validateAllFields(this.profileForm);
        }
    };
    AdvancePaymentComponent.prototype.paginate = function (event) {
        this.pageNo = event.page;
        this.getAllParentList();
    };
    AdvancePaymentComponent.prototype.saveAdvancePay = function () {
        var _this = this;
        this.spinner.show();
        if (this.advanceAmount > 0) {
            var data = {
                'agencyID': this.commonService.getAgencyId(),
                'ParentId': this.parentIdForAdavance,
                'CreditAdvanceAmount': this.advanceAmount
            };
            this.apiService.postData(src_app_layout_parent_shared_constant__WEBPACK_IMPORTED_MODULE_8__["ParentAPIURLs"].SaveAdvanceFeePaymentDetails, data, null).subscribe(function (res) {
                if (res.body.statusCode === 200) {
                    $('.advancepay').modal('hide');
                    _this.getAllParentList();
                }
                else {
                    _this.spinner.hide();
                    _this.error.unknownError();
                }
            }, function (err) {
                _this.spinner.hide();
                _this.error.commonError(err);
            });
        }
        else {
            this.spinner.hide();
            this.notification.warning({ message: 'Amount should be grater than zero', title: '' });
        }
    };
    AdvancePaymentComponent.prototype.parentInfoForAdavance = function (value) {
        this.advanceAmount = 0;
        this.parentIdForAdavance = value.id;
    };
    AdvancePaymentComponent.prototype.keyDownFunction = function (event) {
        if (event.keyCode === 13) {
            this.getAllParentList();
        }
    };
    AdvancePaymentComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-advance-payment',
            template: __webpack_require__(/*! ./advance-payment.component.html */ "./src/app/layout/agency-admin/components/advance-payment/advance-payment.component.html"),
            styles: [__webpack_require__(/*! ./advance-payment.component.css */ "./src/app/layout/agency-admin/components/advance-payment/advance-payment.component.css")]
        }),
        __metadata("design:paramtypes", [src_app_layout_parent_shared_services_parent_api_service__WEBPACK_IMPORTED_MODULE_3__["ParentApiService"], src_app_shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_5__["ErrorHandlerService"],
            ngx_spinner__WEBPACK_IMPORTED_MODULE_4__["NgxSpinnerService"], src_app_shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_7__["NotificationService"],
            src_app_shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_6__["CommonService"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormBuilder"], _angular_router__WEBPACK_IMPORTED_MODULE_9__["ActivatedRoute"],
            primeng_api__WEBPACK_IMPORTED_MODULE_10__["ConfirmationService"], src_app_shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_7__["NotificationService"]])
    ], AdvancePaymentComponent);
    return AdvancePaymentComponent;
}());



/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-accledger-report/agency-accledger-report.component.css":
/*!**************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-accledger-report/agency-accledger-report.component.css ***!
  \**************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9hZ2VuY3ktYWRtaW4vY29tcG9uZW50cy9hZ2VuY3ktYWNjbGVkZ2VyLXJlcG9ydC9hZ2VuY3ktYWNjbGVkZ2VyLXJlcG9ydC5jb21wb25lbnQuY3NzIn0= */"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-accledger-report/agency-accledger-report.component.html":
/*!***************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-accledger-report/agency-accledger-report.component.html ***!
  \***************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"wrapper\">\r\n    <div class=\"container-fluid\">\r\n  \r\n      <div class=\"pagetitle\">\r\n        <div>\r\n          <h2>Report\r\n            <span>/ Ledger Report </span>\r\n          </h2>\r\n        </div>\r\n      </div>\r\n      <div class=\"subhead d-flex justify-content-between mt-20\">\r\n        <div>\r\n          <h3>Ledger List</h3>\r\n        </div>\r\n        <div style=\"cursor:pointer\" title=\"Download report\" (click)=\"pdfLedgerReport()\"><i class=\"fa fa-download\" aria-hidden=\"true\"></i>\r\n        </div>\r\n      </div>\r\n      <div class=\"card cardfilter\">\r\n           <div class=\"leftfilter\">\r\n          <div class=\"row algcenter\">\r\n            <div class=\"search-date\">\r\n              <div class=\"pr15 label-text\">Search Name : </div>\r\n              <input type=\"text\" placeholder=\"Search parent name\" [(ngModel)]=\"searchByParentName\" class=\"form-control mr15\" id=\"\">\r\n            </div>\r\n            <div class=\"search-date\">\r\n              <div class=\"pr15 label-text\">From Date : </div>\r\n              <input type=\"text\" placeholder=\"Search by date\" [(ngModel)]=\"fromDate\"  showWeekNumbers=\"false\"\r\n                 class=\"form-control mr15\" [bsConfig]=\"dpConfig\" bsDatepicker>\r\n                </div>\r\n                <div class=\"search-date\">\r\n                  <div class=\"pr15 label-text\">To Date : </div>\r\n                  <input type=\"text\" placeholder=\"Search by date\" [(ngModel)]=\"toDate\"  showWeekNumbers=\"false\"\r\n                     class=\"form-control mr15\" [bsConfig]=\"dpConfig\" bsDatepicker>\r\n                    </div>\r\n            <div class=\"filter-buttons\">\r\n              <button type=\"submit\" class=\"btn btn-send\" *ngIf=\"!showClearBtn\" (click)=\"search()\">Search</button>\r\n              <button type=\"submit\" class=\"btn btn-secondary\" *ngIf=\"showClearBtn\" (click)=\"clearSearch()\">Clear</button>\r\n            </div>\r\n        </div> \r\n      </div>\r\n  \r\n      <div class=\"studentlist\">\r\n        <!-- <table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"10\">\r\n          <tbody>\r\n  \r\n              <tr>\r\n                  <td width=\"100%\" valign=\"top\" style=\"border-bottom:1px solid #e9e9e9\">\r\n                      <strong style=\" font-size:18px; color:#000000;\">\r\n                          Ledger Report {{currentDate}}</strong>\r\n                  </td>\r\n              </tr>\r\n  \r\n          </tbody>\r\n      </table> -->\r\n  \r\n      <div class=\"studentlist\" *ngFor=\"let transMast of reportList\">\r\n      <table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"10\">\r\n          <tbody>\r\n  \r\n              <tr>\r\n                  <td width=\"100%\" valign=\"top\">\r\n                      Parent Name : {{transMast.parentName}}<br>\r\n                      Paid on : {{transMast.paymentDate | date: 'dd/MM/yyyy'}}<br>\r\n                      From date : {{transMast.invoiceFromDate | date: 'dd/MM/yyyy'}} , To Date : {{transMast.invoiceToDate | date: 'dd/MM/yyyy'}}\r\n  \r\n                  </td>\r\n              </tr>\r\n  \r\n          </tbody>\r\n      </table>\r\n  \r\n      <table width=\"100%\" border=\"1\" bordercolor=\"#e9e9e9\" cellspacing=\"0\" cellpadding=\"10\" style=\"border-collapse:collapse;\">\r\n          <tbody>\r\n              <tr bgcolor=\"#ebecec\">             \r\n                  <td bgcolor=\"#ebecec\" valign=\"middle\"><strong>Items</strong></td>\r\n                  <td bgcolor=\"#ebecec\" align=\"center\" valign=\"middle\"><strong>Dr</strong></td>\r\n                  <td bgcolor=\"#ebecec\" align=\"center\" valign=\"middle\"><strong>Cr </strong></td>\r\n                  <td bgcolor=\"#ebecec\" align=\"center\" valign=\"middle\"><strong>Net</strong></td>\r\n              </tr>\r\n              <tr>\r\n  \r\n                  <td valign=\"middle\"><span>Total Amount</span> </td>\r\n                  <td align=\"center\" valign=\"middle\">$0.00</td>\r\n                  <td align=\"center\" valign=\"middle\">${{transMast.totalAmount + \".00\"}} </td>\r\n                  <td align=\"center\" valign=\"middle\">${{transMast.totalAmount + \".00\"}} </td>\r\n              </tr>\r\n              <tr>                 \r\n                  <td valign=\"middle\"><span>Discount</span> </td>\r\n                  <td align=\"center\" valign=\"middle\">${{transMast.discountAmount + \".00\"}}</td>\r\n                  <td align=\"center\" valign=\"middle\">$0.00</td>\r\n                  <td align=\"center\" valign=\"middle\">${{transMast.discountAmount + \".00\"}}</td>\r\n              </tr>\r\n              <tr>                 \r\n                  <td valign=\"middle\"><span>Advance Fee</span> </td>\r\n                  <td align=\"center\" valign=\"middle\">${{transMast.advanceAmount + \".00\"}}</td>\r\n                  <td align=\"center\" valign=\"middle\">$0.00</td>\r\n                  <td align=\"center\" valign=\"middle\">${{transMast.advanceAmount + \".00\"}}</td>\r\n              </tr>\r\n              <tr>                 \r\n                  <td valign=\"middle\"><span>Subsidy Fee</span> </td>\r\n                  <td align=\"center\" valign=\"middle\">${{transMast.subsidyAmount + \".00\"}}</td>\r\n                  <td align=\"center\" valign=\"middle\">$0.00</td>\r\n                  <td align=\"center\" valign=\"middle\">${{transMast.subsidyAmount + \".00\"}}</td>\r\n              </tr>\r\n              <tr>\r\n  \r\n                  <td valign=\"middle\" align=\"right\" style=\"border-top: 2px solid #000000; padding-right: 30px;\" colspan=\"1\"><strong>\r\n                          Total:</strong></td>\r\n                  <td align=\"center\" valign=\"middle\" style=\"border-top: 2px solid #000000\"> <strong>${{transMast.discountAmount + transMast.advanceAmount + transMast.subsidyAmount + \".00\"}}</strong></td>\r\n                  <td align=\"center\" valign=\"middle\" style=\"border-top: 2px solid #000000\"><strong>${{transMast.totalAmount + \".00\"}}</strong></td>\r\n                  <td align=\"center\" valign=\"middle\" style=\"border-top: 2px solid #000000\"><strong>${{transMast.netTotal < 0 ? '0.00' :  transMast.netTotal}}</strong></td>\r\n              </tr>\r\n          </tbody>\r\n      </table>\r\n  \r\n  \r\n    </div>\r\n  \r\n    <div class=\"text-center\">\r\n      <span  *ngIf=\"reportList.length == 0 && !loader\" class=\"text-center\">No result found</span>\r\n    </div> \r\n</div>\r\n<p-paginator [alwaysShow]=\"false\" [rows]=\"limit\" [totalRecords]=\"totalRecord\" (onPageChange)=\"paginate($event)\"></p-paginator>\r\n  \r\n    \r\n      </div>\r\n    </div>\r\n  </div>\r\n  \r\n  <ngx-spinner type=\"ball-atom\" size=\"medium\" color=\"#58A7FE\"></ngx-spinner>\r\n  "

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-accledger-report/agency-accledger-report.component.ts":
/*!*************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-accledger-report/agency-accledger-report.component.ts ***!
  \*************************************************************************************************************/
/*! exports provided: AgencyAccledgerReportComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AgencyAccledgerReportComponent", function() { return AgencyAccledgerReportComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var ngx_bootstrap__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ngx-bootstrap */ "./node_modules/ngx-bootstrap/esm5/ngx-bootstrap.js");
/* harmony import */ var _shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../shared/services/agency-api-service/agency-api.service */ "./src/app/layout/agency-admin/components/shared/services/agency-api-service/agency-api.service.ts");
/* harmony import */ var src_app_shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/shared/services/error-handler/error-handler.service */ "./src/app/shared/services/error-handler/error-handler.service.ts");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ngx-spinner */ "./node_modules/ngx-spinner/fesm5/ngx-spinner.js");
/* harmony import */ var src_app_shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/shared/services/notification-service/notification.service */ "./src/app/shared/services/notification-service/notification.service.ts");
/* harmony import */ var src_app_shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/shared/services/common/common.service */ "./src/app/shared/services/common/common.service.ts");
/* harmony import */ var _shared_constatant__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../shared/constatant */ "./src/app/layout/agency-admin/components/shared/constatant.ts");
/* harmony import */ var src_environments_environment__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/environments/environment */ "./src/environments/environment.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









var AgencyAccledgerReportComponent = /** @class */ (function () {
    function AgencyAccledgerReportComponent(apiService, error, spinner, notification, commonService) {
        this.apiService = apiService;
        this.error = error;
        this.spinner = spinner;
        this.notification = notification;
        this.commonService = commonService;
        this.reportList = [];
        this.pageNo = 0;
        this.limit = 10;
        this.totalRecord = 0;
        this.searchByStudentName = '';
        this.searchByParentName = '';
        this.loader = true;
        this.dpConfig = new ngx_bootstrap__WEBPACK_IMPORTED_MODULE_1__["BsDatepickerConfig"]();
    }
    AgencyAccledgerReportComponent.prototype.ngOnInit = function () {
        this.dpConfig = Object.assign({}, { containerClass: 'theme-dark-blue' }, { showWeekNumbers: false });
        this.getLedgerReport();
    };
    AgencyAccledgerReportComponent.prototype.getLedgerReport = function () {
        var _this = this;
        this.loader = true;
        this.reportList = [];
        this.spinner.show();
        var data = {
            'agencyID': this.commonService.getAgencyId(),
            'parentName': this.searchByParentName,
            'page': this.pageNo,
            'limit': this.limit,
            'fromDate': this.fromDate ? this.fromDate : this.blankDate,
            'toDate': this.toDate ? this.toDate : this.blankDate
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_7__["AgencyAPIURLs"].AccountLedgerReport, data, null).subscribe(function (res) {
            _this.totalRecord = res.body.totalRows;
            if (res.body.statusCode === 200) {
                _this.spinner.hide();
                res.body.data.forEach(function (element) {
                    element.netTotal = (element.totalAmount) - (element.discountAmount + element.advanceAmount + element.subsidyAmount) + '.00';
                });
                _this.reportList = res.body.data;
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
            _this.loader = false;
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAccledgerReportComponent.prototype.paginate = function (event) {
        this.pageNo = event.page;
        this.getLedgerReport();
    };
    AgencyAccledgerReportComponent.prototype.pdfReportForDuePayment = function () {
        var _this = this;
        this.loader = true;
        this.spinner.show();
        var req = {
            'StudentName': this.searchByStudentName,
            'agencyID': this.commonService.getAgencyId()
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_7__["AgencyAPIURLs"].PdfReportForLedger, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                var filename = src_environments_environment__WEBPACK_IMPORTED_MODULE_8__["environment"].baseUrl + res.body.fileName;
                var name_1 = res.body.fileName;
                window.open(filename);
                setTimeout(function () {
                    _this.deletePdFFromServer(name_1);
                }, 5000);
            }
            else {
                _this.error.unknownError();
            }
            _this.loader = false;
            _this.spinner.hide();
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAccledgerReportComponent.prototype.pdfLedgerReport = function () {
        var _this = this;
        this.loader = true;
        this.spinner.show();
        var req = {
            'ParentName': this.searchByParentName,
            'agencyID': this.commonService.getAgencyId()
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_7__["AgencyAPIURLs"].GetAllLedgerReportPDF, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                var filename = src_environments_environment__WEBPACK_IMPORTED_MODULE_8__["environment"].baseUrl + res.body.fileName;
                var name_2 = res.body.fileName;
                window.open(filename);
                setTimeout(function () {
                    _this.deletePdFFromServer(name_2);
                }, 5000);
            }
            else {
                _this.error.unknownError();
            }
            _this.loader = false;
            _this.spinner.hide();
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    // Delete pdf after use from server
    AgencyAccledgerReportComponent.prototype.deletePdFFromServer = function (filename) {
        var req = {
            'fileName': filename,
            'agencyID': this.commonService.getAgencyId()
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_7__["AgencyAPIURLs"].DeleteExistingFile, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
            }
            else {
            }
        }, function (err) {
            console.log(err);
        });
    };
    AgencyAccledgerReportComponent.prototype.search = function () {
        this.pageNo = 0;
        this.showClearBtn = true;
        this.getLedgerReport();
    };
    AgencyAccledgerReportComponent.prototype.clearSearch = function () {
        this.searchByStudentName = '';
        this.fromDate = null;
        this.toDate = null;
        this.showClearBtn = false;
        this.getLedgerReport();
    };
    AgencyAccledgerReportComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-agency-accledger-report',
            template: __webpack_require__(/*! ./agency-accledger-report.component.html */ "./src/app/layout/agency-admin/components/agency-accledger-report/agency-accledger-report.component.html"),
            styles: [__webpack_require__(/*! ./agency-accledger-report.component.css */ "./src/app/layout/agency-admin/components/agency-accledger-report/agency-accledger-report.component.css")]
        }),
        __metadata("design:paramtypes", [_shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_2__["AgencyApiService"], src_app_shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_3__["ErrorHandlerService"],
            ngx_spinner__WEBPACK_IMPORTED_MODULE_4__["NgxSpinnerService"], src_app_shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_5__["NotificationService"],
            src_app_shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_6__["CommonService"]])
    ], AgencyAccledgerReportComponent);
    return AgencyAccledgerReportComponent;
}());



/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-account/agency-admin-account.component.css":
/*!********************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-account/agency-admin-account.component.css ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9hZ2VuY3ktYWRtaW4vY29tcG9uZW50cy9hZ2VuY3ktYWRtaW4tYWNjb3VudC9hZ2VuY3ktYWRtaW4tYWNjb3VudC5jb21wb25lbnQuY3NzIn0= */"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-account/agency-admin-account.component.html":
/*!*********************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-account/agency-admin-account.component.html ***!
  \*********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"wrapper\">\r\n  <div class=\"container-fluid\">\r\n\r\n    <div class=\"pagetitle\">\r\n      <div>\r\n        <h2>Dashboard\r\n          <span>/ Account </span>\r\n        </h2>\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\" class=\"btn btn-red \" data-toggle=\"modal\" data-target=\".addtransactiontype\"\r\n          (click)=\"clearTransMasterForm()\">Add Account\r\n          Master</button>\r\n        <a href=\"https://connect.stripe.com/express/oauth/authorize?client_id=ca_EqyWiw8fq7VHqbfxp2vvUgpHLOZumCeS&state={STATE_VALUE}\"\r\n          *ngIf=\"showBtnCreateAcc\" target=\"_blank\">\r\n          <button type=\"submit\" class=\"btn btn-red\">Create Stripe Account</button></a>\r\n\r\n      </div>\r\n\r\n      <!-- <div>\r\n          \r\n        </div> -->\r\n\r\n    </div>\r\n\r\n    <div class=\"subhead d-flex justify-content-between mt-20\">\r\n      <div>\r\n        <h3>Account</h3>\r\n      </div>\r\n      <div><i class=\"fa fa-print\" (click)=\"invoiceSchedular()\"></i></div>\r\n    </div>\r\n    <!-- <div class=\"subhead d-flex justify-content-between mt-20 mb-20\"><div><h3>Payment</h3></div></div>     -->\r\n    <div class=\"Paymetlist\">\r\n      <ul class=\"nav nav-pills mb-3\" id=\"pills-tab\" role=\"tablist\">\r\n        <li class=\"nav-item \" (click)=\"getTransactionMasterDetails();onTabChange()\">\r\n          <a class=\"nav-link active\" id=\"appTransaction\" data-toggle=\"pill\" href=\"#pills-appTransaction\" role=\"tab\"\r\n            aria-controls=\"pills-appTransaction\" aria-selected=\"true\">Account Master</a>\r\n        </li>\r\n        <!-- <li class=\"nav-item\" (click)=\"getPaymentDetails();getPaymentHistory();onTabChange()\">\r\n          <a class=\"nav-link \" id=\"appStudent\" data-toggle=\"pill\" href=\"#pills-appstudent\" role=\"tab\"\r\n            aria-controls=\"pills-appstudent\" aria-selected=\"false\">Payments</a>\r\n        </li> -->\r\n        <!-- <li class=\"nav-item\" (click)=\"getDuePaymentAccordingToAgency();onTabChange\">\r\n          <a class=\"nav-link\" id=\"penstudent\" data-toggle=\"pill\" href=\"#pills-penstudent\" role=\"tab\"\r\n            aria-controls=\"pills-penstudent\" aria-selected=\"false\">Due Payments</a>\r\n        </li> -->\r\n        <!-- <li>\r\n            <a class=\"nav-link \" id=\"appStudent\" data-toggle=\"pill\" href=\"#pills-bankaccount\" role=\"tab\"\r\n            aria-controls=\"pills-appstudent\" aria-selected=\"false\">Bank Account</a>\r\n        </li> -->\r\n      </ul>\r\n      <div class=\"tab-content\" id=\"pills-tabContent\">\r\n\r\n        <div class=\"tab-pane fade show active\" id=\"pills-appTransaction\" role=\"tabpanel\"\r\n          aria-labelledby=\"appTransaction\">\r\n\r\n          <!-- <b style=\"float:right;\" for=\"\">Offline Payment <span style=\"color:yellow; border: 1 1 1 1\"><i class=\"fa fa-square\" aria-hidden=\"true\"></i></span> </b> <br>  -->\r\n          <div class=\"innertable\">\r\n            <div class=\"table-responsive\">\r\n              <table class=\"table\">\r\n                <thead class=\"thead-light\">\r\n                  <tr>\r\n\r\n                    <!-- <th scope=\"col\">Invoid #ID</th> -->\r\n                    <!-- <th scope=\"col\">Invoice Title</th> -->\r\n                    <th scope=\"col\">Account Type</th>\r\n                    <th scope=\"col\">Account Name</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr *ngFor=\"let transMast of transMasterList\">\r\n                    <td>{{transMast.transactionTypeName}}</td>\r\n                    <td>{{transMast.description}}</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n              <div class=\"text-center\">\r\n                <span *ngIf=\"transMasterList.length === 0 && !loader\">No record found</span>\r\n              </div>\r\n            </div>\r\n            <p-paginator [alwaysShow]=\"false\" [rows]=\"limit\" [totalRecords]=\"totalRecord\"\r\n              (onPageChange)=\"paginate($event,2)\"></p-paginator>\r\n\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <!-- Payment History -->\r\n        <div class=\"tab-pane fade\" id=\"pills-appstudent\" role=\"tabpanel\" aria-labelledby=\"appStudent\">\r\n          <div class=\"innertable\">\r\n            <div class=\"table-responsive\">\r\n              <table class=\"table\">\r\n                <thead class=\"thead-light\">\r\n                  <tr>\r\n                    <th scope=\"col\">Student Name</th>\r\n                    <th scope=\"col\">Class</th>\r\n                    <th scope=\"col\">Parent Name</th>\r\n                    <th scope=\"col\">Amount</th>\r\n                    <th scope=\"col\">From Date </th>\r\n                    <th scope=\"col\">To Date</th>\r\n                    <th scope=\"col\">Paid on</th>\r\n                    <th scope=\"col\">Payment Mode</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr *ngFor=\"let payment of paymentHistoryList\">\r\n                    <td>{{payment.studentName}}</td>\r\n                    <td>{{payment.className}}</td>\r\n                    <td>{{payment.parentName}}</td>\r\n                    <td>${{payment.totalAmount}}</td>\r\n                    <td>{{payment.paymentFromDate| date}} </td>\r\n                    <td>{{payment.paymentToDate| date}} </td>\r\n                    <td>{{payment.paymentDate| date}}</td>\r\n\r\n                    <td> {{payment.isOffline ? 'Offline' : 'Online' }}</td>\r\n\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n              <div class=\"text-center\">\r\n                <span *ngIf=\"paymentHistoryList.length === 0 && !loader\">No record found</span>\r\n              </div>\r\n            </div>\r\n            <p-paginator [alwaysShow]=\"false\" [rows]=\"limit\" [totalRecords]=\"totalRecord\"\r\n              (onPageChange)=\"paginate($event,2)\"></p-paginator>\r\n\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Due Payment Tab -->\r\n\r\n        <div class=\"tab-pane fade\" id=\"pills-penstudent\" role=\"tabpanel\" aria-labelledby=\"penstudent\">\r\n          <div class=\"innertable\">\r\n            <div class=\"table-responsive\">\r\n              <table class=\"table\">\r\n                <thead class=\"thead-light\">\r\n                  <tr>\r\n                    <th scope=\"col\">Student Name</th>\r\n                    <th scope=\"col\">Class</th>\r\n                    <th scope=\"col\">Parent Name</th>\r\n                    <th scope=\"col\">Amount</th>\r\n                    <th scope=\"col\">From Date </th>\r\n                    <th scope=\"col\">To Date</th>\r\n                    <th class=\"text-center\" scope=\"col\">Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr *ngFor=\"let payment of paymentDueList \">\r\n                    <td>{{payment.studentName}}</td>\r\n                    <td>{{payment.className}}</td>\r\n                    <td>{{payment.parentName}}</td>\r\n                    <td>${{payment.totalAmount}}</td>\r\n                    <td>{{payment.invoiceFromDate| date}} </td>\r\n                    <td>{{payment.invoiceToDate| date}} </td>\r\n                    <td class=\"text-center\">\r\n                      <a>\r\n                        <i class=\"fa fa-eye\" data-toggle=\"modal\"\r\n                          (click)=\"getStudentDetails(payment);clearTranHeadForm()\" aria-hidden=\"true\"\r\n                          style=\"cursor:pointer\" data-target=\".editpayment\"></i>\r\n                      </a>\r\n                    </td>\r\n                    <td class=\"text-center\">\r\n                      <!--  <button  type=\"submit\" class=\"btn btn-send\"\r\n                        (click)=\"payOffline(payment)\">Pay</button>\r\n                         <button *ngIf=\"!payment.isTrasactionHeadAdded\" disabled type=\"submit\" class=\"btn btn-send\"\r\n                        >Pay</button>\r\n                      </td> -->\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n              <div class=\"text-center\">\r\n                <span *ngIf=\"paymentDueList.length === 0 && !loader\">No record found</span>\r\n              </div>\r\n            </div>\r\n            <p-paginator [alwaysShow]=\"false\" [rows]=\"limit\" [totalRecords]=\"totalRecord\"\r\n              (onPageChange)=\"paginate($event,2)\"></p-paginator>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Bank Account Tab -->\r\n        <div class=\"tab-pane fade\" id=\"pills-bankaccount\" role=\"tabpanel\" aria-labelledby=\"penstudent\">\r\n            <div class=\"innertable\">\r\n              <div class=\"table-responsive\">\r\n                <table class=\"table\">\r\n                  <thead class=\"thead-light\">\r\n                    <tr>\r\n                      <th scope=\"col\">Bank Name</th>\r\n                      <th scope=\"col\">Account No</th>\r\n                      <th scope=\"col\">IFSC</th>\r\n                      <th scope=\"col\">Opening Balance</th>\r\n                      <th  scope=\"col\">Default Account</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr *ngFor=\"let payment of bankAccountList \">\r\n                      <td>{{payment.description}}</td>\r\n                      <td>{{payment.accountNumber}}</td>\r\n                      <td>{{payment.ifsc}}</td>\r\n                      <td>${{payment.openingBalance}}</td>\r\n\r\n                      <td>\r\n                            \r\n                        <label class=\"checkboxcustom\">\r\n                          <input type=\"checkbox\" id=\"checkbox-in\" (click)=\"markAsDefaultAccount(payment)\" class=\"form-control abc\"\r\n                          [(ngModel)]=\"payment.isDefaultAccount\" >\r\n                          <span class=\"checkmark abc\"></span>\r\n                        </label>\r\n                      \r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n                <div class=\"text-center\">\r\n                  <span *ngIf=\"bankAccountList.length === 0 && !loader\">No record found</span>\r\n                </div>\r\n              </div>\r\n              <p-paginator [alwaysShow]=\"false\" [rows]=\"limit\" [totalRecords]=\"totalRecord\"\r\n                (onPageChange)=\"paginate($event,2)\"></p-paginator>\r\n            </div>\r\n          </div>\r\n\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n\r\n    <!--Edit Payment Modal  -->\r\n\r\n    <div class=\"modal fade editpayment\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myLargeModalLabel\"\r\n      aria-hidden=\"true\">\r\n      <div class=\"modal-dialog modal-lg\">\r\n        <div class=\"modal-content  white_box_table\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Edit Payment</h5>\r\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <div style=\"margin-bottom: 10px\">\r\n\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6\">\r\n                  <B>Invoice Number:</B>&nbsp; {{invoiceNo}} </div>\r\n                <div class=\"col-md-6\">\r\n                  <B>Generated fees:</B>&nbsp; $ {{generatedTutionFee}} </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"table-responsive\">\r\n              <table class=\"table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th scope=\"col\" class=\"wid26\">Transaction Type</th>\r\n                    <th scope=\"col\" class=\"wid26\">Description</th>\r\n                    <th scope=\"col\" class=\"wid26\">Amount</th>\r\n                    <th scope=\"col\" class=\"wid10\">Add</th>\r\n                    <th scope=\"col\" class=\"wid10\">Remove</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody [formGroup]=\"editTransForm\">\r\n                  <tr\r\n                    *ngFor=\"let disp of displayTransList;let item of editTransForm.get('transArraycollection').controls; let i = index;\"\r\n                    formArrayName=\"transArraycollection\">\r\n                    <td [formGroupName]=\"i\">\r\n                      <select class=\"form-control\" formControlName=\"transactionTypeID\" placeholder=\"Transcation Type\"\r\n                        id=\"exampleFormControlSelect1\" (change)=\"getTrasactionMasterList($event.target.value,i)\">\r\n                        <option value=\"\">Select Transcation Type</option>\r\n                        <option *ngFor=\"let transtype of trasactionTypeList\" [value]=\"transtype.transactionTypeID\">\r\n                          {{transtype.transactionTypeName}}</option>\r\n                      </select>\r\n                    </td>\r\n                    <td [formGroupName]=\"i\">\r\n                      <select class=\"form-control\" formControlName=\"description\" placeholder=\"Transcation Description\"\r\n                        id=\"exampleFormControlSelect1\">\r\n                        <option *ngFor=\"let transMasObj of trasactionMasterList[i]\" [value]=\"transMasObj.description\">\r\n                          {{transMasObj.description}}</option>\r\n\r\n                      </select>\r\n                    </td>\r\n                    <td [formGroupName]=\"i\">\r\n                      <input type=\"text \" formControlName=\"amount\" (input)=\"calculateTotleAmount()\" class=\"form-control\"\r\n                        id=\"\" aria-describedby=\"\" placeholder=\"Amount\">\r\n\r\n                    </td>\r\n                    <td class=\"verAligMiddle\">\r\n                      <a href=\"javascript:void(0);\">\r\n                        <i class=\"fa fa-plus-circle plusIcon\" (click)=\"addTrans()\" aria-hidden=\"true\"></i></a>\r\n\r\n                    </td>\r\n                    <td class=\"verAligMiddle\">\r\n                      <a href=\"javascript:void(0);\" *ngIf=\"displayTransList.length > 1\">\r\n                        <i class=\"fa fa-minus-circle minusIcon\" (click)=\"removeFood(disp)\" aria-hidden=\"true\"></i></a>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n\r\n            </div>\r\n\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <div style=\"margin-right:40px\"><b>Total Amount:</b> ${{totalAmount}} </div>\r\n            <button type=\"submit\" class=\"btn btn-primary\" (click)=\"saveHeadTransaction()\">Save</button> &nbsp;\r\n            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n    <div class=\"modal fade addtransactiontype\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myLargeModalLabel\"\r\n      aria-hidden=\"true\">\r\n      <div class=\"modal-dialog modal-lg\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Add Account Master</h5>\r\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <form [formGroup]=\"transactionForm\">\r\n\r\n              <div class=\"row mb-20\">\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Account Type*</label>\r\n                    <select class=\"form-control\" placeholder=\"Transcation Type\" formControlName=\"transcationtype\"\r\n                      id=\"exampleFormControlSelect1\" (change)=\"getTransactionType()\">\r\n                      <option [value]=\"\">Select Transcation Type</option>\r\n                      <option *ngFor=\"let transtype of trasactionTypeList\" [value]=\"transtype.transactionTypeID\">\r\n                        {{transtype.transactionTypeName}}</option>\r\n                    </select>\r\n                    <div *ngIf=\"f.transcationtype.invalid && (f.transcationtype.dirty || f.transcationtype.touched)\"\r\n                      class=\"text-left errormsg\">\r\n                      <span *ngIf=\"f.transcationtype.errors.required\">\r\n                        <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select Type</span>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Name*</label>\r\n                    <input type=\"text \" formControlName=\"transdescription\" class=\"form-control\" aria-describedby=\"\"\r\n                      placeholder=\"Name\">\r\n                    <div *ngIf=\"f.transdescription.invalid && (f.transdescription.dirty || f.transdescription.touched)\"\r\n                      class=\"text-left errormsg\">\r\n                      <span *ngIf=\"f.transdescription.errors.required\">\r\n                        <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please enter name</span>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div *ngIf=\"showBankdetails\">\r\n              <div class=\"row mb-20\">\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Account Number*</label>\r\n                    <input type=\"text \" formControlName=\"accountno\" (keypress)=\"commonService.allowOnlyNumber($event)\"\r\n                      maxlength=\"20\" class=\"form-control\" aria-describedby=\"\" placeholder=\"Account Number\">\r\n                    <div *ngIf=\"f.accountno.invalid && (f.accountno.dirty || f.accountno.touched)\"\r\n                      class=\"text-left errormsg\">\r\n                      <span *ngIf=\"f.accountno.errors.required\">\r\n                        <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please enter account no.</span>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">IFSC</label>\r\n                    <input type=\"text \" formControlName=\"ifsc\" \r\n                      maxlength=\"20\" class=\"form-control\" aria-describedby=\"\" placeholder=\"IFSC\">\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"row mb-20\">\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Opening Balance($)</label>\r\n                    <input type=\"text \" formControlName=\"openingbal\" (keypress)=\"commonService.allowOnlyNumber($event)\"\r\n                       class=\"form-control\" aria-describedby=\"\" placeholder=\"Name\">\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Account Holder Name*</label>\r\n                    <input type=\"text \" formControlName=\"accholdername\"  class=\"form-control\"\r\n                      aria-describedby=\"\" placeholder=\"Account Holder Name\">\r\n                    <div *ngIf=\"f.accholdername.invalid && (f.accholdername.dirty || f.accholdername.touched)\"\r\n                      class=\"text-left errormsg\">\r\n                      <span *ngIf=\"f.accholdername.errors.required\">\r\n                        <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please enter name</span>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <!-- <div class=\"row mb-20\">\r\n                <div class=\"col-3\">\r\n                    <div class=\"\">\r\n                        <label class=\"checkboxcustom\">\r\n                          <input type=\"checkbox\" id=\"checkbox-in\" class=\"form-control abc\"\r\n                             formControlName=\"isdefaultaccount\">\r\n                          <span class=\"checkmark abc\"></span><label style=\"margin-left: 18px;\"> Set As Default Account</label>\r\n                        </label>\r\n                      </div>\r\n                </div>\r\n              </div> -->\r\n            </div>\r\n\r\n            </form>\r\n\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-primary\" (click)=\"saveTransMasterInformation()\">Save</button> &nbsp;\r\n            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n    <!-- last -->\r\n  </div>\r\n</div>\r\n\r\n<app-confirm-box></app-confirm-box>\r\n<ngx-spinner type=\"ball-atom\" size=\"medium\" color=\"#58A7FE\"></ngx-spinner>\r\n"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-account/agency-admin-account.component.ts":
/*!*******************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-account/agency-admin-account.component.ts ***!
  \*******************************************************************************************************/
/*! exports provided: AgencyAdminAccountComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AgencyAdminAccountComponent", function() { return AgencyAdminAccountComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../shared/services/agency-api-service/agency-api.service */ "./src/app/layout/agency-admin/components/shared/services/agency-api-service/agency-api.service.ts");
/* harmony import */ var src_app_shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/shared/services/error-handler/error-handler.service */ "./src/app/shared/services/error-handler/error-handler.service.ts");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ngx-spinner */ "./node_modules/ngx-spinner/fesm5/ngx-spinner.js");
/* harmony import */ var src_app_shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/shared/services/notification-service/notification.service */ "./src/app/shared/services/notification-service/notification.service.ts");
/* harmony import */ var src_app_shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/app/shared/services/common/common.service */ "./src/app/shared/services/common/common.service.ts");
/* harmony import */ var primeng_api__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! primeng/api */ "./node_modules/primeng/api.js");
/* harmony import */ var primeng_api__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(primeng_api__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var _shared_constatant__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../shared/constatant */ "./src/app/layout/agency-admin/components/shared/constatant.ts");
/* harmony import */ var src_app_layout_parent_shared_constant__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! src/app/layout/parent/shared/constant */ "./src/app/layout/parent/shared/constant.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};











var AgencyAdminAccountComponent = /** @class */ (function () {
    function AgencyAdminAccountComponent(activatedRoute, apiService, error, spinner, notification, commonService, fb, route, confirmationService, formBuilder) {
        var _this = this;
        this.activatedRoute = activatedRoute;
        this.apiService = apiService;
        this.error = error;
        this.spinner = spinner;
        this.notification = notification;
        this.commonService = commonService;
        this.fb = fb;
        this.route = route;
        this.confirmationService = confirmationService;
        this.formBuilder = formBuilder;
        this.showBtnCreateAcc = false;
        this.paymentHistoryList = [];
        this.paymentDueList = [];
        this.trasactionTypeList = [];
        this.trasactionMasterList = []; // for dropdown
        this.transMasterList = []; // for listing
        this.bankAccountList = [];
        this.count = 0;
        this.pageNo = 0;
        this.limit = 10;
        this.totalRecord = 0;
        this.typeid = 0;
        this.loader = true;
        this.transactionTypeID = 0;
        this.transFieldCount = 0;
        this.tempTransArry = [];
        this.displayTransList = [];
        this.showBankdetails = false;
        this.activatedRoute.queryParams.subscribe(function (params) {
            _this.authCode = params['code'];
        });
    }
    AgencyAdminAccountComponent.prototype.ngOnInit = function () {
        this.pushSingleArryForTransHead();
        this.getPaymentDetails();
        this.getPaymentHistory();
        this.getTrasactionTypeList();
        this.getTransactionMasterDetails();
        this.newEditFormBuild();
        this.createTransMaster();
    };
    AgencyAdminAccountComponent.prototype.pushSingleArryForTransHead = function () {
        this.tempTransArry = [
            {
                'id': 1,
                'transactionTypeID': '',
                'studentID': '',
                'description': '',
                'amount': ''
            }
        ];
        this.displayTransList.push(this.tempTransArry);
    };
    AgencyAdminAccountComponent.prototype.createTransMaster = function () {
        this.transactionForm = this.formBuilder.group({
            transcationtype: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            transdescription: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            accountno: [''],
            ifsc: [''],
            accholdername: [''],
            isdefaultaccount: [false],
            openingbal: ['']
        });
    };
    AgencyAdminAccountComponent.prototype.newEditFormBuild = function () {
        this.editTransForm = this.fb.group({
            transArraycollection: this.fb.array([this.createItem()])
        });
    };
    Object.defineProperty(AgencyAdminAccountComponent.prototype, "f", {
        get: function () { return this.transactionForm.controls; },
        enumerable: true,
        configurable: true
    });
    /** method for Form array for transaction items */
    AgencyAdminAccountComponent.prototype.createItem = function () {
        return this.fb.group({
            transactionTypeID: [''],
            studentID: [''],
            description: [''],
            amount: ['']
        });
    };
    /** Method to add new transaction into form array while edit payment*/
    AgencyAdminAccountComponent.prototype.addTrans = function () {
        this.transFieldCount++;
        this.tempTransArry.push({ 'id': this.transFieldCount });
        this.items = this.editTransForm.get('transArraycollection');
        this.items.push(this.createItem());
        this.displayTransList = this.tempTransArry;
        this.calculateTotleAmount();
    };
    /**Remove trans heads on minus button */
    AgencyAdminAccountComponent.prototype.removeFood = function (data) {
        var index = this.displayTransList.findIndex(function (r) { return r.id === data.id; });
        this.items = this.editTransForm.get('transArraycollection');
        this.items.removeAt(index);
        this.displayTransList.splice(index, 1);
        this.calculateTotleAmount();
    };
    AgencyAdminAccountComponent.prototype.verifyEditTransaction = function () {
        this.saveHeadTransaction();
    };
    /**To create dynamic trasaction master list for discription drop down */
    AgencyAdminAccountComponent.prototype.pushValues = function () {
        var tempArray = [];
        this.trasactionMasterList.push(tempArray);
    };
    /** Get master transaction  master list for dropdown by API */
    AgencyAdminAccountComponent.prototype.getTrasactionMasterList = function (value, i) {
        var _this = this;
        this.trasactionMasterList[i] = [];
        this.pushValues();
        var req = {
            'TransactionTypeID': value,
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_9__["AgencyAPIURLs"].GetTransactionMaster, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.trasactionMasterList[i] = res.body.data;
                _this.spinner.hide();
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminAccountComponent.prototype.getStudentDetails = function (data) {
        if (data) {
            this.selectedStudentId = data.studentID;
            this.invoiceNo = data.invoiceNo;
            this.generatedTutionFee = data.totalAmount;
            this.invoiceFromDate = new Date(data.invoiceFromDate).toDateString();
            this.invoiceToDate = new Date(data.invoiceToDate).toDateString();
        }
    };
    /** Save Payment heads and subheads for perticuler student */
    AgencyAdminAccountComponent.prototype.saveHeadTransaction = function () {
        var _this = this;
        var agencyId = this.commonService.getAgencyId();
        var transArrayReq = [];
        this.spinner.show();
        if (this.validateEditPaymentForm()) {
            this.spinner.hide();
            this.notification.warning({ message: 'Please enter valid data', title: '' });
        }
        else {
            if (this.items.value.length !== 0 && this.items !== undefined) {
                this.items.value.forEach(function (element) {
                    transArrayReq.push({
                        'id': 0,
                        'transactionTypeID': element.transactionTypeID,
                        'studentID': _this.selectedStudentId,
                        'description': element.description,
                        'amount': element.amount,
                        'agencyID': agencyId,
                        'invoiceFromDate': _this.invoiceFromDate,
                        'invoiceToDate': _this.invoiceToDate,
                        'invoiceNo': _this.invoiceNo,
                        'totalAmount': _this.totalAmount
                    });
                });
            }
            this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_9__["AgencyAPIURLs"].SaveTransactionDetailsInfo, transArrayReq, null).subscribe(function (res) {
                if (res.body.statusCode === 200) {
                    _this.notification.success({ message: 'Transaction Details has been saved', title: '' });
                    _this.getDuePaymentAccordingToAgency();
                    $('.editpayment').modal('hide');
                    _this.spinner.hide();
                }
                else {
                    _this.spinner.hide();
                    _this.error.unknownError();
                }
            }, function (err) {
                _this.spinner.hide();
                _this.error.commonError(err);
            });
        }
    };
    /**Method to check validation for edit payment form */
    AgencyAdminAccountComponent.prototype.validateEditPaymentForm = function () {
        var status = false;
        if (this.items.value.length !== 0 && this.items !== undefined) {
            this.items.value.forEach(function (element) {
                if (element.transactionTypeID !== '' && element.description
                    && element.amount !== '') {
                    status = false;
                }
                else {
                    status = true;
                }
            });
        }
        return status;
    };
    AgencyAdminAccountComponent.prototype.calculateTotleAmount = function () {
        var _this = this;
        this.totalAmount = 0;
        if (this.items.value.length !== 0 && this.items !== undefined) {
            this.items.value.forEach(function (element) {
                var amount = +element.amount;
                _this.totalAmount = _this.totalAmount + amount;
            });
        }
    };
    AgencyAdminAccountComponent.prototype.getPaymentDetails = function () {
        var _this = this;
        this.spinner.show();
        var model = {
            'agencyID': this.commonService.getAgencyId()
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_9__["AgencyAPIURLs"].GetStripeDetailsForAgency, model, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                if (res.body.data === [] || res.body.data === null || res.body.data.length === 0) {
                    _this.showBtnCreateAcc = true;
                    if (_this.authCode) {
                        _this.confirm();
                    }
                }
                else {
                    _this.showBtnCreateAcc = false;
                }
                _this.spinner.hide();
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminAccountComponent.prototype.confirm = function () {
        var _this = this;
        this.spinner.show();
        var model = {
            'code': this.authCode,
            'agencyID': this.commonService.getAgencyId(),
            'currentUserId': this.commonService.getReleventUserId('userdetails')
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_9__["AgencyAPIURLs"].CreateStripeAccount, model, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.showBtnCreateAcc = false;
                _this.notification.success({ message: 'Strip account has been created successfully!', title: '' });
                _this.spinner.hide();
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminAccountComponent.prototype.getDuePaymentAccordingToAgency = function () {
        var _this = this;
        this.loader = true;
        this.paymentDueList = [];
        this.spinner.show();
        var model = {
            'agencyID': this.commonService.getAgencyId(),
            'limit': this.limit,
            'page': this.pageNo
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_9__["AgencyAPIURLs"].GetDuePaymentAccordingToAgency, model, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.totalRecord = res.body.totalRows;
                if (res.body.data !== null && res.body.data !== [] && res.body.data !== []) {
                    res.body.data.forEach(function (x) {
                        x.invoiceFromDate = new Date(x.invoiceFromDate);
                        x.invoiceToDate = new Date(x.invoiceToDate);
                    });
                    _this.paymentDueList = res.body.data;
                }
                _this.spinner.hide();
                _this.loader = false;
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminAccountComponent.prototype.getPaymentHistory = function () {
        var _this = this;
        this.loader = true;
        this.paymentHistoryList = [];
        this.spinner.show();
        var model = {
            'agencyID': this.commonService.getAgencyId(),
            'limit': this.limit,
            'page': this.pageNo
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_9__["AgencyAPIURLs"].GetPaymentDetailsForAgency, model, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.totalRecord = res.body.totalRows;
                if (res.body.data !== null && res.body.data !== [] && res.body.data !== []) {
                    res.body.data.forEach(function (x) {
                        x.paymentFromDate = new Date(x.paymentFromDate);
                        x.paymentToDate = new Date(x.paymentToDate);
                        x.paymentDate = new Date(x.paymentDate);
                    });
                    _this.paymentHistoryList = res.body.data;
                }
                _this.spinner.hide();
                _this.loader = false;
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminAccountComponent.prototype.invoiceSchedular = function () {
        var model = {
            'Frequency': 'Weekly'
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_9__["AgencyAPIURLs"].InvoiceSchedular, model, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
            }
        }, function (err) {
        });
    };
    AgencyAdminAccountComponent.prototype.paginate = function (event, tab) {
        this.pageNo = event.page;
        if (tab === 1) {
            this.getPaymentHistory();
        }
        else {
            this.getDuePaymentAccordingToAgency();
        }
    };
    AgencyAdminAccountComponent.prototype.onTabChange = function () {
        this.pageNo = 0;
    };
    AgencyAdminAccountComponent.prototype.payOffline = function (value) {
        var _this = this;
        this.confirmationService.confirm({
            message: 'Do you want to proceed for this offline payment?',
            accept: function () {
                _this.paymentSuccess(value);
            }
        });
    };
    AgencyAdminAccountComponent.prototype.paymentSuccess = function (value) {
        var _this = this;
        var model = {
            'tokenID': 0,
            'agencyID': this.commonService.getAgencyId(),
            'parentID': value.parentID,
            'studentID': value.studentID,
            'SourceToken': 0,
            'CreatedBy': this.commonService.getReleventUserId('userdetails'),
            'paymentFromDate': value.invoiceFromDate,
            'paymentToDate': value.invoiceToDate,
            'totalAmount': value.totalAmount,
            'InvoiceDetailsID': value.id,
            'IsOffline': true
        };
        this.apiService.postData(src_app_layout_parent_shared_constant__WEBPACK_IMPORTED_MODULE_10__["ParentAPIURLs"].PaymentDetails, model, null).subscribe(function (result) {
            if (result.body.statusCode === 200) {
                _this.getDuePaymentAccordingToAgency();
                _this.notification.success({ message: 'Payment Successfull!', title: '' });
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.error.commonError(err);
            _this.spinner.hide();
        });
    };
    AgencyAdminAccountComponent.prototype.getTrasactionTypeList = function () {
        var _this = this;
        this.trasactionTypeList = [];
        var req = {
            'AgencyID': 0,
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_9__["AgencyAPIURLs"].GetTransactionType, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.trasactionTypeList = res.body.data;
                _this.spinner.hide();
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminAccountComponent.prototype.saveTransMasterInformation = function () {
        var _this = this;
        this.spinner.show();
        if (this.transactionForm.valid) {
            var data = {
                'agencyID': this.commonService.getAgencyId(),
                'TransactionTypeID': this.transactionForm.controls.transcationtype.value,
                'Description': this.transactionForm.controls.transdescription.value,
                'AccountNumber': this.transactionForm.controls.accountno.value,
                'IFSC': this.transactionForm.controls.ifsc.value,
                'AccountHolderName': this.transactionForm.controls.accholdername.value,
                'OpeningBalance': this.transactionForm.controls.openingbal.value,
                'IsDefaultAccount': this.transactionForm.controls.isdefaultaccount.value,
            };
            this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_9__["AgencyAPIURLs"].SaveTransactionMasterInfo, data, null).subscribe(function (res) {
                if (res.body.statusCode === 200) {
                    $('.addtransactiontype').modal('hide');
                    _this.notification.success({ message: 'Transaction master added successfully', title: '' });
                    _this.spinner.hide();
                }
                else if (res.body.statusCode === 987) {
                    _this.notification.warning({ message: 'Already Exist', title: '' });
                    _this.spinner.hide();
                }
                else {
                    _this.spinner.hide();
                    _this.error.unknownError();
                }
            }, function (err) {
                _this.spinner.hide();
                _this.error.commonError(err);
            });
        }
        else {
            this.spinner.hide();
            this.commonService.validateAllFields(this.transactionForm);
        }
    };
    AgencyAdminAccountComponent.prototype.getTransactionMasterDetails = function () {
        var _this = this;
        this.transMasterList = [];
        var req = {
            'AgencyID': 0,
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_9__["AgencyAPIURLs"].GetTransactionMasterDetails, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.transMasterList = res.body.data;
                _this.spinner.hide();
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    /**To clear Transition master form */
    AgencyAdminAccountComponent.prototype.clearTransMasterForm = function () {
        this.createTransMaster();
    };
    /**Clear Trans head form method */
    AgencyAdminAccountComponent.prototype.clearTranHeadForm = function () {
        this.totalAmount = 0;
        this.displayTransList = [];
        this.items = this.clearItems;
        this.newEditFormBuild();
        this.items = this.editTransForm.get('transArraycollection');
        this.pushSingleArryForTransHead();
    };
    AgencyAdminAccountComponent.prototype.getTransactionType = function () {
        if (this.transactionForm.controls.transcationtype.value === '1') {
            this.showBankdetails = true;
            this.transactionForm.controls['accountno'].setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required);
            this.transactionForm.controls['accholdername'].setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required);
            this.transactionForm.updateValueAndValidity();
        }
        else {
            this.showBankdetails = false;
            this.transactionForm.controls['accountno'].setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].nullValidator);
            this.transactionForm.controls['accholdername'].setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].nullValidator);
            this.transactionForm.updateValueAndValidity();
        }
    };
    AgencyAdminAccountComponent.prototype.getBankDetails = function () {
        var _this = this;
        this.loader = true;
        this.transMasterList = [];
        var req = {
            'AgencyID': this.commonService.getAgencyId()
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_9__["AgencyAPIURLs"].GetBankAccountDetails, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.bankAccountList = res.body.data;
                _this.loader = false;
                console.log('accou', _this.bankAccountList);
                _this.spinner.hide();
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminAccountComponent.prototype.markAsDefaultAccount = function (data) {
        if (data) {
            this.bankAccountList.forEach(function (res) {
                if (res.transactionTypeID === data.transactionTypeID) {
                    res.isDefaultAccount = true;
                }
                else {
                    res.isDefaultAccount = false;
                }
            });
        }
    };
    AgencyAdminAccountComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-agency-admin-account',
            template: __webpack_require__(/*! ./agency-admin-account.component.html */ "./src/app/layout/agency-admin/components/agency-admin-account/agency-admin-account.component.html"),
            styles: [__webpack_require__(/*! ./agency-admin-account.component.css */ "./src/app/layout/agency-admin/components/agency-admin-account/agency-admin-account.component.css")]
        }),
        __metadata("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_2__["ActivatedRoute"], _shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_3__["AgencyApiService"], src_app_shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_4__["ErrorHandlerService"],
            ngx_spinner__WEBPACK_IMPORTED_MODULE_5__["NgxSpinnerService"], src_app_shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_6__["NotificationService"],
            src_app_shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_7__["CommonService"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormBuilder"], _angular_router__WEBPACK_IMPORTED_MODULE_2__["ActivatedRoute"],
            primeng_api__WEBPACK_IMPORTED_MODULE_8__["ConfirmationService"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormBuilder"]])
    ], AgencyAdminAccountComponent);
    return AgencyAdminAccountComponent;
}());



/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-activitydetail/agency-admin-activitydetail.component.css":
/*!**********************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-activitydetail/agency-admin-activitydetail.component.css ***!
  \**********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".messaging {max-height: 650px;\r\n  min-height: 650px;padding: 15px;}\r\nimg{ max-width:100%;}\r\n.inbox_people {\r\n  background: #F6FBFF;\r\n  float: left;\r\n  overflow: hidden;\r\n  width: 30%; ;\r\n  max-height: 650px;\r\n\r\n}\r\n.inbox_msg {\r\n  border: 1px solid #c4c4c4;\r\n  clear: both;\r\n  overflow: hidden;\r\n}\r\n.top_spac{ margin: 20px 0 0;}\r\n/* .recent_heading h4 {\r\n  color: #707070;\r\n  font-size: 15px;\r\n  padding: 20px 10px;\r\nfont-weight: 400\r\n} */\r\n/* .chat_ib h5{ font-size:15px; color:#464646; margin:0 0 8px 0;}\r\n.chat_ib h5 span{ font-size:13px; float:right;}\r\n.chat_ib p{ font-size:14px; color:#989898; margin:auto} */\r\n.chat_img {\r\n  float: left;\r\n  width: 15%;\r\n  max-width: 100px;\r\n}\r\n.chat_people{ overflow:hidden; clear:both;}\r\n.chat_list {\r\n  border-bottom: 1px solid #E2F0FF;\r\n  margin: 0;\r\n  padding: 15px;\r\n}\r\n.inbox_chat { height: 550px; overflow-y: auto;}\r\n.active_chat{ background:#FF6C6C;color: #fff!important;}\r\n.active_chat .kidname,.active_chat .chat_ib h5,.active_chat .chat_ib .status{color: #fff}\r\n.incoming_msg_img {\r\n  display: inline-block;\r\n  width: 6%;\r\n}\r\n.received_msg {\r\n  display: inline-block;\r\n  padding: 0 0 0 10px;\r\n  vertical-align: top;\r\n  width: 92%;\r\n }\r\n.received_withd_msg p {\r\n  background: #ebebeb none repeat scroll 0 0;\r\n  border-radius: 3px;\r\n  color: #646464;\r\n  font-size: 14px;\r\n  margin: 0;\r\n  padding: 5px 10px 5px 12px;\r\n  width: 100%;\r\n}\r\n.time_date {\r\n  color: #747474;\r\n  display: block;\r\n  font-size: 12px;\r\n  margin: 8px 0 0;\r\n}\r\n.received_withd_msg { width: 57%;}\r\n.mesgs {\r\n    float: left;\r\n    padding:0 0 0 15px;\r\n    width: 70%;\r\n    max-height: 650px;\r\n}\r\n.sent_msg p {\r\n  background: #05728f none repeat scroll 0 0;\r\n  border-radius: 3px;\r\n  font-size: 14px;\r\n  margin: 0; color:#fff;\r\n  padding: 5px 10px 5px 12px;\r\n  width:100%;\r\n}\r\n.outgoing_msg{ overflow:hidden; margin:26px 0 26px;}\r\n.sent_msg {\r\n  float: right;\r\n  width: 46%;\r\n}\r\n.input_msg_write input {\r\n  background: rgba(0, 0, 0, 0) none repeat scroll 0 0;\r\n  border: medium none;\r\n  color: #4c4c4c;\r\n  font-size: 15px;\r\n  min-height: 48px;\r\n  width: 100%;\r\n}\r\n.type_msg {border-top: 1px solid #c4c4c4;position: relative;margin: 20px 0}\r\n.msg_send_btn {\r\n  background: #05728f none repeat scroll 0 0;\r\n  border: medium none;\r\n  border-radius: 50%;\r\n  color: #fff;\r\n  cursor: pointer;\r\n  font-size: 17px;\r\n  height: 33px;\r\n  position: absolute;\r\n  right: 0;\r\n  top: 11px;\r\n  width: 33px;\r\n}\r\n.msg_history {\r\n  height: 500px;\r\n  overflow: hidden;\r\n  overflow-y: auto;\r\n  margin: 10px 0\r\n}\r\n@media (max-width: 640px) {\r\n.inbox_people{width: 100%;min-height: 400px;max-height: 400px;margin-bottom: 30px;}\r\n.inbox_chat {height: 350px;}\r\n.mesgs{width: 100%;}\r\n.messaging{min-height: 100%;max-height: 100%}\r\n.mesgs{padding:  0 10px}\r\n}\r\n.techNotes h3{\r\n  margin: 15px 0 10px 0;\r\n  font-size: 15px;\r\n  color: #707070;\r\n  font-weight: 400;\r\n}\r\n.techNotes p{\r\n  font-size: 13px;\r\n  color: #707070;\r\n  font-weight: 300;\r\n}\r\nselect {\r\n  font-size: 12px;\r\n  color: #fff;\r\n  background: #58A7FE;\r\n  /* width: 140px; */\r\nheight: 30px;\r\n}\r\n.activity-post {\r\n  display: flex;\r\n}\r\n.activity-post .postmsg {width: 100%;}\r\n.mr15 {\r\n  margin-right: 15px;\r\n}\r\n.chat_people {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n/* Added By aniket 21 Feb 2019 */\r\n.postimg .cont img:first-child{ height: 150px;}\r\n.detailschildimg {\r\n  width: 100px !important;\r\n  height: 100px !important;\r\n}\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L2FnZW5jeS1hZG1pbi9jb21wb25lbnRzL2FnZW5jeS1hZG1pbi1hY3Rpdml0eWRldGFpbC9hZ2VuY3ktYWRtaW4tYWN0aXZpdHlkZXRhaWwuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxZQUFZLGlCQUFpQjtFQUMzQixpQkFBaUIsQ0FBQyxhQUFhLENBQUM7QUFDbEMsS0FBSyxjQUFjLENBQUM7QUFDcEI7RUFDRSxtQkFBbUI7RUFDbkIsV0FBVztFQUNYLGdCQUFnQjtFQUNoQixVQUFVO0VBQ1YsaUJBQWlCOztBQUVuQjtBQUNBO0VBQ0UseUJBQXlCO0VBQ3pCLFdBQVc7RUFDWCxnQkFBZ0I7QUFDbEI7QUFDQSxXQUFXLGdCQUFnQixDQUFDO0FBSTVCOzs7OztHQUtHO0FBR0g7O3lEQUV5RDtBQUN6RDtFQUNFLFdBQVc7RUFDWCxVQUFVO0VBQ1YsZ0JBQWdCO0FBQ2xCO0FBS0EsY0FBYyxlQUFlLEVBQUUsVUFBVSxDQUFDO0FBQzFDO0VBQ0UsZ0NBQWdDO0VBQ2hDLFNBQVM7RUFDVCxhQUFhO0FBQ2Y7QUFDQSxjQUFjLGFBQWEsRUFBRSxnQkFBZ0IsQ0FBQztBQUU5QyxjQUFjLGtCQUFrQixDQUFDLHFCQUFxQixDQUFDO0FBQ3ZELDZFQUE2RSxXQUFXO0FBRXhGO0VBQ0UscUJBQXFCO0VBQ3JCLFNBQVM7QUFDWDtBQUNBO0VBQ0UscUJBQXFCO0VBQ3JCLG1CQUFtQjtFQUNuQixtQkFBbUI7RUFDbkIsVUFBVTtDQUNYO0FBQ0E7RUFDQywwQ0FBMEM7RUFDMUMsa0JBQWtCO0VBQ2xCLGNBQWM7RUFDZCxlQUFlO0VBQ2YsU0FBUztFQUNULDBCQUEwQjtFQUMxQixXQUFXO0FBQ2I7QUFDQTtFQUNFLGNBQWM7RUFDZCxjQUFjO0VBQ2QsZUFBZTtFQUNmLGVBQWU7QUFDakI7QUFDQSxzQkFBc0IsVUFBVSxDQUFDO0FBQ2pDO0lBQ0ksV0FBVztJQUNYLGtCQUFrQjtJQUNsQixVQUFVO0lBQ1YsaUJBQWlCO0FBQ3JCO0FBRUM7RUFDQywwQ0FBMEM7RUFDMUMsa0JBQWtCO0VBQ2xCLGVBQWU7RUFDZixTQUFTLEVBQUUsVUFBVTtFQUNyQiwwQkFBMEI7RUFDMUIsVUFBVTtBQUNaO0FBQ0EsZUFBZSxlQUFlLEVBQUUsa0JBQWtCLENBQUM7QUFDbkQ7RUFDRSxZQUFZO0VBQ1osVUFBVTtBQUNaO0FBQ0E7RUFDRSxtREFBbUQ7RUFDbkQsbUJBQW1CO0VBQ25CLGNBQWM7RUFDZCxlQUFlO0VBQ2YsZ0JBQWdCO0VBQ2hCLFdBQVc7QUFDYjtBQUVBLFdBQVcsNkJBQTZCLENBQUMsa0JBQWtCLENBQUMsY0FBYztBQUMxRTtFQUNFLDBDQUEwQztFQUMxQyxtQkFBbUI7RUFDbkIsa0JBQWtCO0VBQ2xCLFdBQVc7RUFDWCxlQUFlO0VBQ2YsZUFBZTtFQUNmLFlBQVk7RUFDWixrQkFBa0I7RUFDbEIsUUFBUTtFQUNSLFNBQVM7RUFDVCxXQUFXO0FBQ2I7QUFFQTtFQUNFLGFBQWE7RUFDYixnQkFBZ0I7RUFDaEIsZ0JBQWdCO0VBQ2hCO0FBQ0Y7QUFFQTtBQUNBLGNBQWMsV0FBVyxDQUFDLGlCQUFpQixDQUFDLGlCQUFpQixDQUFDLG1CQUFtQixDQUFDO0FBQ2xGLGFBQWEsYUFBYSxDQUFDO0FBQzNCLE9BQU8sV0FBVyxDQUFDO0FBQ25CLFdBQVcsZ0JBQWdCLENBQUMsZ0JBQWdCO0FBQzVDLE9BQU8sZ0JBQWdCO0FBQ3ZCO0FBR0E7RUFDRSxxQkFBcUI7RUFDckIsZUFBZTtFQUNmLGNBQWM7RUFDZCxnQkFBZ0I7QUFDbEI7QUFDQTtFQUNFLGVBQWU7RUFDZixjQUFjO0VBQ2QsZ0JBQWdCO0FBQ2xCO0FBRUM7RUFDQyxlQUFlO0VBQ2YsV0FBVztFQUNYLG1CQUFtQjtFQUNuQixrQkFBa0I7QUFDcEIsWUFBWTtBQUNaO0FBRUE7RUFDRSxhQUFhO0FBQ2Y7QUFDQSx5QkFBeUIsV0FBVyxDQUFDO0FBQ3JDO0VBQ0Usa0JBQWtCO0FBQ3BCO0FBQ0E7RUFDRSxhQUFhO0VBQ2IsbUJBQW1CO0FBQ3JCO0FBRUEsZ0NBQWdDO0FBQ2hDLGdDQUFnQyxhQUFhLENBQUM7QUFHOUM7RUFDRSx1QkFBdUI7RUFDdkIsd0JBQXdCO0FBQzFCIiwiZmlsZSI6InNyYy9hcHAvbGF5b3V0L2FnZW5jeS1hZG1pbi9jb21wb25lbnRzL2FnZW5jeS1hZG1pbi1hY3Rpdml0eWRldGFpbC9hZ2VuY3ktYWRtaW4tYWN0aXZpdHlkZXRhaWwuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tZXNzYWdpbmcge21heC1oZWlnaHQ6IDY1MHB4O1xyXG4gIG1pbi1oZWlnaHQ6IDY1MHB4O3BhZGRpbmc6IDE1cHg7fVxyXG5pbWd7IG1heC13aWR0aDoxMDAlO31cclxuLmluYm94X3Blb3BsZSB7XHJcbiAgYmFja2dyb3VuZDogI0Y2RkJGRjtcclxuICBmbG9hdDogbGVmdDtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gIHdpZHRoOiAzMCU7IDtcclxuICBtYXgtaGVpZ2h0OiA2NTBweDtcclxuXHJcbn1cclxuLmluYm94X21zZyB7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgI2M0YzRjNDtcclxuICBjbGVhcjogYm90aDtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG59XHJcbi50b3Bfc3BhY3sgbWFyZ2luOiAyMHB4IDAgMDt9XHJcblxyXG5cclxuXHJcbi8qIC5yZWNlbnRfaGVhZGluZyBoNCB7XHJcbiAgY29sb3I6ICM3MDcwNzA7XHJcbiAgZm9udC1zaXplOiAxNXB4O1xyXG4gIHBhZGRpbmc6IDIwcHggMTBweDtcclxuZm9udC13ZWlnaHQ6IDQwMFxyXG59ICovXHJcblxyXG5cclxuLyogLmNoYXRfaWIgaDV7IGZvbnQtc2l6ZToxNXB4OyBjb2xvcjojNDY0NjQ2OyBtYXJnaW46MCAwIDhweCAwO31cclxuLmNoYXRfaWIgaDUgc3BhbnsgZm9udC1zaXplOjEzcHg7IGZsb2F0OnJpZ2h0O31cclxuLmNoYXRfaWIgcHsgZm9udC1zaXplOjE0cHg7IGNvbG9yOiM5ODk4OTg7IG1hcmdpbjphdXRvfSAqL1xyXG4uY2hhdF9pbWcge1xyXG4gIGZsb2F0OiBsZWZ0O1xyXG4gIHdpZHRoOiAxNSU7XHJcbiAgbWF4LXdpZHRoOiAxMDBweDtcclxufVxyXG5cclxuXHJcblxyXG5cclxuLmNoYXRfcGVvcGxleyBvdmVyZmxvdzpoaWRkZW47IGNsZWFyOmJvdGg7fVxyXG4uY2hhdF9saXN0IHtcclxuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI0UyRjBGRjtcclxuICBtYXJnaW46IDA7XHJcbiAgcGFkZGluZzogMTVweDtcclxufVxyXG4uaW5ib3hfY2hhdCB7IGhlaWdodDogNTUwcHg7IG92ZXJmbG93LXk6IGF1dG87fVxyXG5cclxuLmFjdGl2ZV9jaGF0eyBiYWNrZ3JvdW5kOiNGRjZDNkM7Y29sb3I6ICNmZmYhaW1wb3J0YW50O31cclxuLmFjdGl2ZV9jaGF0IC5raWRuYW1lLC5hY3RpdmVfY2hhdCAuY2hhdF9pYiBoNSwuYWN0aXZlX2NoYXQgLmNoYXRfaWIgLnN0YXR1c3tjb2xvcjogI2ZmZn1cclxuXHJcbi5pbmNvbWluZ19tc2dfaW1nIHtcclxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgd2lkdGg6IDYlO1xyXG59XHJcbi5yZWNlaXZlZF9tc2cge1xyXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICBwYWRkaW5nOiAwIDAgMCAxMHB4O1xyXG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7XHJcbiAgd2lkdGg6IDkyJTtcclxuIH1cclxuIC5yZWNlaXZlZF93aXRoZF9tc2cgcCB7XHJcbiAgYmFja2dyb3VuZDogI2ViZWJlYiBub25lIHJlcGVhdCBzY3JvbGwgMCAwO1xyXG4gIGJvcmRlci1yYWRpdXM6IDNweDtcclxuICBjb2xvcjogIzY0NjQ2NDtcclxuICBmb250LXNpemU6IDE0cHg7XHJcbiAgbWFyZ2luOiAwO1xyXG4gIHBhZGRpbmc6IDVweCAxMHB4IDVweCAxMnB4O1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcbi50aW1lX2RhdGUge1xyXG4gIGNvbG9yOiAjNzQ3NDc0O1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIGZvbnQtc2l6ZTogMTJweDtcclxuICBtYXJnaW46IDhweCAwIDA7XHJcbn1cclxuLnJlY2VpdmVkX3dpdGhkX21zZyB7IHdpZHRoOiA1NyU7fVxyXG4ubWVzZ3Mge1xyXG4gICAgZmxvYXQ6IGxlZnQ7XHJcbiAgICBwYWRkaW5nOjAgMCAwIDE1cHg7XHJcbiAgICB3aWR0aDogNzAlO1xyXG4gICAgbWF4LWhlaWdodDogNjUwcHg7XHJcbn1cclxuXHJcbiAuc2VudF9tc2cgcCB7XHJcbiAgYmFja2dyb3VuZDogIzA1NzI4ZiBub25lIHJlcGVhdCBzY3JvbGwgMCAwO1xyXG4gIGJvcmRlci1yYWRpdXM6IDNweDtcclxuICBmb250LXNpemU6IDE0cHg7XHJcbiAgbWFyZ2luOiAwOyBjb2xvcjojZmZmO1xyXG4gIHBhZGRpbmc6IDVweCAxMHB4IDVweCAxMnB4O1xyXG4gIHdpZHRoOjEwMCU7XHJcbn1cclxuLm91dGdvaW5nX21zZ3sgb3ZlcmZsb3c6aGlkZGVuOyBtYXJnaW46MjZweCAwIDI2cHg7fVxyXG4uc2VudF9tc2cge1xyXG4gIGZsb2F0OiByaWdodDtcclxuICB3aWR0aDogNDYlO1xyXG59XHJcbi5pbnB1dF9tc2dfd3JpdGUgaW5wdXQge1xyXG4gIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgMCkgbm9uZSByZXBlYXQgc2Nyb2xsIDAgMDtcclxuICBib3JkZXI6IG1lZGl1bSBub25lO1xyXG4gIGNvbG9yOiAjNGM0YzRjO1xyXG4gIGZvbnQtc2l6ZTogMTVweDtcclxuICBtaW4taGVpZ2h0OiA0OHB4O1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4udHlwZV9tc2cge2JvcmRlci10b3A6IDFweCBzb2xpZCAjYzRjNGM0O3Bvc2l0aW9uOiByZWxhdGl2ZTttYXJnaW46IDIwcHggMH1cclxuLm1zZ19zZW5kX2J0biB7XHJcbiAgYmFja2dyb3VuZDogIzA1NzI4ZiBub25lIHJlcGVhdCBzY3JvbGwgMCAwO1xyXG4gIGJvcmRlcjogbWVkaXVtIG5vbmU7XHJcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gIGNvbG9yOiAjZmZmO1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxuICBmb250LXNpemU6IDE3cHg7XHJcbiAgaGVpZ2h0OiAzM3B4O1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICByaWdodDogMDtcclxuICB0b3A6IDExcHg7XHJcbiAgd2lkdGg6IDMzcHg7XHJcbn1cclxuXHJcbi5tc2dfaGlzdG9yeSB7XHJcbiAgaGVpZ2h0OiA1MDBweDtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gIG92ZXJmbG93LXk6IGF1dG87XHJcbiAgbWFyZ2luOiAxMHB4IDBcclxufVxyXG5cclxuQG1lZGlhIChtYXgtd2lkdGg6IDY0MHB4KSB7XHJcbi5pbmJveF9wZW9wbGV7d2lkdGg6IDEwMCU7bWluLWhlaWdodDogNDAwcHg7bWF4LWhlaWdodDogNDAwcHg7bWFyZ2luLWJvdHRvbTogMzBweDt9XHJcbi5pbmJveF9jaGF0IHtoZWlnaHQ6IDM1MHB4O31cclxuLm1lc2dze3dpZHRoOiAxMDAlO31cclxuLm1lc3NhZ2luZ3ttaW4taGVpZ2h0OiAxMDAlO21heC1oZWlnaHQ6IDEwMCV9XHJcbi5tZXNnc3twYWRkaW5nOiAgMCAxMHB4fVxyXG59XHJcblxyXG5cclxuLnRlY2hOb3RlcyBoM3tcclxuICBtYXJnaW46IDE1cHggMCAxMHB4IDA7XHJcbiAgZm9udC1zaXplOiAxNXB4O1xyXG4gIGNvbG9yOiAjNzA3MDcwO1xyXG4gIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbn1cclxuLnRlY2hOb3RlcyBwe1xyXG4gIGZvbnQtc2l6ZTogMTNweDtcclxuICBjb2xvcjogIzcwNzA3MDtcclxuICBmb250LXdlaWdodDogMzAwO1xyXG59XHJcblxyXG4gc2VsZWN0IHtcclxuICBmb250LXNpemU6IDEycHg7XHJcbiAgY29sb3I6ICNmZmY7XHJcbiAgYmFja2dyb3VuZDogIzU4QTdGRTtcclxuICAvKiB3aWR0aDogMTQwcHg7ICovXHJcbmhlaWdodDogMzBweDtcclxufVxyXG5cclxuLmFjdGl2aXR5LXBvc3Qge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbn1cclxuLmFjdGl2aXR5LXBvc3QgLnBvc3Rtc2cge3dpZHRoOiAxMDAlO31cclxuLm1yMTUge1xyXG4gIG1hcmdpbi1yaWdodDogMTVweDtcclxufVxyXG4uY2hhdF9wZW9wbGUge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxufVxyXG5cclxuLyogQWRkZWQgQnkgYW5pa2V0IDIxIEZlYiAyMDE5ICovXHJcbi5wb3N0aW1nIC5jb250IGltZzpmaXJzdC1jaGlsZHsgaGVpZ2h0OiAxNTBweDt9XHJcblxyXG5cclxuLmRldGFpbHNjaGlsZGltZyB7XHJcbiAgd2lkdGg6IDEwMHB4ICFpbXBvcnRhbnQ7XHJcbiAgaGVpZ2h0OiAxMDBweCAhaW1wb3J0YW50O1xyXG59Il19 */"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-activitydetail/agency-admin-activitydetail.component.html":
/*!***********************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-activitydetail/agency-admin-activitydetail.component.html ***!
  \***********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"wrapper\">\r\n  <div class=\"container-fluid\">\r\n\r\n    <div class=\"pagetitle\">\r\n      <div>\r\n        <h2>Post Activity\r\n          <span>/ Activity Detail </span>\r\n        </h2>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"subhead d-flex justify-content-between mt-20\">\r\n      <div>\r\n        <h3>Activity Detail</h3>\r\n      </div>\r\n      <div>\r\n\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"mt-20\"></div>\r\n    <div class=\"card\">\r\n      <div class=\"messaging\">\r\n        <div class=\"mesgs\">\r\n          <div class=\"headind_srch\">\r\n            <div class=\"recent_heading\">\r\n              <h4>Recent Post Gallery</h4>\r\n            </div>\r\n          </div>\r\n          <div class=\"brdr\"></div>\r\n          <div class=\"msg_history\">\r\n            <div class=\"chat_people\">\r\n              <div class=\"chat_img\">\r\n                <img src=\"{{postdetails.imagePath}}\" alt=\"\" onError=\"this.src='assets/img/user.png'\"\r\n                  class=\"img-circle detailschildimg\">\r\n              </div>\r\n              <div class=\"chat_ib\">\r\n                <p class=\"kidname\">{{postdetails.studentName}}</p>\r\n                <p class=\"status\">{{postdetails.postedDate | date}}</p>\r\n              </div>\r\n            </div>\r\n            <div class=\"techNotes\">\r\n              <h3>{{postdetails.postTitle }}</h3>\r\n              <p>{{postdetails.postDescription}}</p>\r\n              <p><i class=\"fa fa-gittip\">{{postdetails.totalLikes}}</i>Like</p>\r\n            </div>\r\n            <div class=\"brdr\"></div>\r\n\r\n            <div class=\"postimges\">\r\n              <div class=\"row\" *ngIf=\"postdetails.postActivityImages\">\r\n\r\n                <div class=\"col-lg-3\" *ngFor=\"let img of postdetails.postActivityImages\">\r\n                  <div class=\"postimg\">\r\n                    <div class=\"cont\"> <img src=\"{{img.imageServerPath}}\" onError=\"this.src='assets/img/user.png'\"\r\n                        alt=\"\" class=\"img-fluiud\"></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\" *ngIf=\"postdetails.postActivityVideos\">\r\n\r\n\r\n\r\n                <div *ngIf=\"postdetails.postActivityVideos\">\r\n                  <div class=\"col-lg-3\" *ngFor=\"let img of postdetails.postActivityVideos\">\r\n                    <div class=\"\">\r\n                      <div class=\"cont\">\r\n                        <video controls width=\"420\" height=\"350\">\r\n                          <source src=\"{{img.vedioServerPath}}\" type=\"video/mp4\" />\r\n                          <source src=\"{{img.vedioServerPath}}\" type=\"video/ogg\">\r\n                          <source src=\"{{img.vedioServerPath}}\" type=\"video/webm\">\r\n                          Browser not supported\r\n                        </video>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</div>"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-activitydetail/agency-admin-activitydetail.component.ts":
/*!*********************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-activitydetail/agency-admin-activitydetail.component.ts ***!
  \*********************************************************************************************************************/
/*! exports provided: AgencyAdminActivitydetailComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AgencyAdminActivitydetailComponent", function() { return AgencyAdminActivitydetailComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _teacher_shared_constant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../teacher/shared/constant */ "./src/app/layout/teacher/shared/constant.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ngx-spinner */ "./node_modules/ngx-spinner/fesm5/ngx-spinner.js");
/* harmony import */ var _teacher_shared_services_teacher_api_service_teacher_api_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../teacher/shared/services/teacher-api-service/teacher-api.service */ "./src/app/layout/teacher/shared/services/teacher-api-service/teacher-api.service.ts");
/* harmony import */ var _shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../shared/services/error-handler/error-handler.service */ "./src/app/shared/services/error-handler/error-handler.service.ts");
/* harmony import */ var _shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../shared/services/notification-service/notification.service */ "./src/app/shared/services/notification-service/notification.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../shared/services/common/common.service */ "./src/app/shared/services/common/common.service.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









var AgencyAdminActivitydetailComponent = /** @class */ (function () {
    function AgencyAdminActivitydetailComponent(spinner, apiService, commonService, fb, error, notification, route) {
        this.spinner = spinner;
        this.apiService = apiService;
        this.commonService = commonService;
        this.fb = fb;
        this.error = error;
        this.notification = notification;
        this.route = route;
        this.postdetails = {};
        this.mediaList = [];
    }
    AgencyAdminActivitydetailComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.route.params.subscribe(function (params) {
            _this.id = params['id'];
            _this.classID = params['classid'];
            _this.getPostDetails();
        });
    };
    AgencyAdminActivitydetailComponent.prototype.getTeacherOperationalClasses = function () {
    };
    /**Get All class list */
    AgencyAdminActivitydetailComponent.prototype.getPostDetails = function () {
        var _this = this;
        this.spinner.show();
        var data = {
            'agencyID': this.commonService.getAgencyId(),
            'id': this.id,
            'classesID': this.classID
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_1__["TeacherAPIURLs"].GetPostActivityInfo, data, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.postdetails = res.body.data;
                _this.spinner.hide();
                console.log('details', _this.postdetails);
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminActivitydetailComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-agency-admin-activitydetail',
            template: __webpack_require__(/*! ./agency-admin-activitydetail.component.html */ "./src/app/layout/agency-admin/components/agency-admin-activitydetail/agency-admin-activitydetail.component.html"),
            styles: [__webpack_require__(/*! ./agency-admin-activitydetail.component.css */ "./src/app/layout/agency-admin/components/agency-admin-activitydetail/agency-admin-activitydetail.component.css")]
        }),
        __metadata("design:paramtypes", [ngx_spinner__WEBPACK_IMPORTED_MODULE_3__["NgxSpinnerService"], _teacher_shared_services_teacher_api_service_teacher_api_service__WEBPACK_IMPORTED_MODULE_4__["TeacherApiService"], _shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_8__["CommonService"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"], _shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_5__["ErrorHandlerService"],
            _shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_6__["NotificationService"], _angular_router__WEBPACK_IMPORTED_MODULE_7__["ActivatedRoute"]])
    ], AgencyAdminActivitydetailComponent);
    return AgencyAdminActivitydetailComponent;
}());



/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-add-fees/agency-admin-add-fees.component.css":
/*!**********************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-add-fees/agency-admin-add-fees.component.css ***!
  \**********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".wid26{ width: 26%;}\r\n.wid10{ width: 10%;}\r\n.verAligMiddle{  vertical-align: middle;}\r\n.plusIcon{ font-size: 28px; }\r\n.minusIcon{font-size: 28px; color: #FF6C6C;}\r\n.btn-default {\r\n    background: #58A7FE;\r\n    padding: 5px 15px;\r\n    color: #fff;\r\n    font-size: 13px;\r\n    border-radius: 30px;\r\n  }\r\n.mb-20 {\r\n    margin-bottom: 20px;\r\n  }\r\n.margt20 {\r\nmargin-top: 20px;\r\n  }\r\n.resizearea {\r\n    resize: vertical;\r\n  }\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L2FnZW5jeS1hZG1pbi9jb21wb25lbnRzL2FnZW5jeS1hZG1pbi1hZGQtZmVlcy9hZ2VuY3ktYWRtaW4tYWRkLWZlZXMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxRQUFRLFVBQVUsQ0FBQztBQUNuQixRQUFRLFVBQVUsQ0FBQztBQUNuQixpQkFBaUIsc0JBQXNCLENBQUM7QUFDeEMsV0FBVyxlQUFlLEVBQUU7QUFDNUIsV0FBVyxlQUFlLEVBQUUsY0FBYyxDQUFDO0FBRTNDO0lBQ0ksbUJBQW1CO0lBQ25CLGlCQUFpQjtJQUNqQixXQUFXO0lBQ1gsZUFBZTtJQUNmLG1CQUFtQjtFQUNyQjtBQUVBO0lBQ0UsbUJBQW1CO0VBQ3JCO0FBRUE7QUFDRixnQkFBZ0I7RUFDZDtBQUdBO0lBQ0UsZ0JBQWdCO0VBQ2xCIiwiZmlsZSI6InNyYy9hcHAvbGF5b3V0L2FnZW5jeS1hZG1pbi9jb21wb25lbnRzL2FnZW5jeS1hZG1pbi1hZGQtZmVlcy9hZ2VuY3ktYWRtaW4tYWRkLWZlZXMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi53aWQyNnsgd2lkdGg6IDI2JTt9XHJcbi53aWQxMHsgd2lkdGg6IDEwJTt9XHJcbi52ZXJBbGlnTWlkZGxleyAgdmVydGljYWwtYWxpZ246IG1pZGRsZTt9XHJcbi5wbHVzSWNvbnsgZm9udC1zaXplOiAyOHB4OyB9XHJcbi5taW51c0ljb257Zm9udC1zaXplOiAyOHB4OyBjb2xvcjogI0ZGNkM2Qzt9XHJcblxyXG4uYnRuLWRlZmF1bHQge1xyXG4gICAgYmFja2dyb3VuZDogIzU4QTdGRTtcclxuICAgIHBhZGRpbmc6IDVweCAxNXB4O1xyXG4gICAgY29sb3I6ICNmZmY7XHJcbiAgICBmb250LXNpemU6IDEzcHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiAzMHB4O1xyXG4gIH1cclxuXHJcbiAgLm1iLTIwIHtcclxuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbiAgfVxyXG5cclxuICAubWFyZ3QyMCB7XHJcbm1hcmdpbi10b3A6IDIwcHg7XHJcbiAgfVxyXG5cclxuXHJcbiAgLnJlc2l6ZWFyZWEge1xyXG4gICAgcmVzaXplOiB2ZXJ0aWNhbDtcclxuICB9Il19 */"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-add-fees/agency-admin-add-fees.component.html":
/*!***********************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-add-fees/agency-admin-add-fees.component.html ***!
  \***********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"wrapper\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"pagetitle\">\r\n      <div>\r\n        <h2>Payment\r\n          <span>/ Add Fees </span>\r\n        </h2>\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\" class=\"btn btn-red\" *ngIf=\"showNewEntry && activeSubscription\" data-toggle=\"modal\"\r\n          data-target=\".feescalculation\" (click)=\"clearAddFeesForm();getDetails()\">Add Fees </button>\r\n        <button type=\"submit\" class=\"btn btn-red\" *ngIf=\"!showNewEntry || !activeSubscription\"\r\n          title=\"Please generate invoice\" data-toggle=\"modal\" disabled>Add Fees </button>\r\n      </div>\r\n    </div>\r\n    <div class=\"subhead d-flex justify-content-between mt-20\">\r\n      <div>\r\n        <h3>{{studentName}}</h3>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"innertable\">\r\n      <div class=\"table-responsive\">\r\n        <table class=\"table\">\r\n          <thead class=\"thead-light\">\r\n            <tr>\r\n              <th scope=\"col\">Student Name</th>\r\n              <th scope=\"col\">Class</th>\r\n              <th scope=\"col\">Parent Name</th>\r\n              <th scope=\"col\">Calculated Amount</th>\r\n              <th scope=\"col\">From Date</th>\r\n              <th scope=\"col\">To Date</th>\r\n              <th scope=\"col\" class=\"text-center\">Details</th>\r\n              <th scope=\"col\" class=\"text-center\">Invoice</th>\r\n              <th scope=\"col\" class=\"text-center\">Action</th>\r\n\r\n\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr *ngFor=\"let payment of getAllCalcultedDetailsList\">\r\n              <td>{{payment.studentName}}</td>\r\n              <td>{{payment.className}}</td>\r\n              <td>{{payment.parentName}}</td>\r\n              <td>${{payment.totalCalculatedAmount}}</td>\r\n              <td>{{payment.fromDate| date}}</td>\r\n              <td>{{payment.toDate| date}}</td>\r\n              <td class=\"text-center\">\r\n                <a> <i class=\"fa fa-eye\" (click)=\"getCalculationDetails(payment)\"></i> </a>\r\n              </td>\r\n              <td class=\"text-center\">\r\n                <a *ngIf=\"!payment.isInvoiceGenrated\" (click)=\"confirmInvoice(payment)\" title=\"Generate Invoice\">\r\n                  <img class=\"flat_icon\" src=\"../../../../../assets/invoice.png\" alt=\"Generate Invoice\">\r\n                </a>\r\n              </td>\r\n              <td class=\"text-center\">\r\n                <a *ngIf=\"!payment.isInvoiceGenrated\" (click)=\"deleteCalulation(payment)\" title=\"Delete Calculation\">\r\n                  <i class=\"fa fa-trash\"></i>\r\n                </a>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <div class=\"text-center\">\r\n          <span *ngIf=\"getAllCalcultedDetailsList.length === 0 && !loader\">No record found</span>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Fees Calculation Form -->\r\n      <div class=\"modal fade feescalculation\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myLargeModalLabel\"\r\n        aria-hidden=\"true\">\r\n        <div class=\"modal-dialog modal-lg\">\r\n          <div class=\"modal-content  white_box_table\">\r\n            <div class=\"modal-header\">\r\n              <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Calculate Fees</h5>\r\n              <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n              <p-messages [(value)]=\"msgs\"></p-messages>\r\n              <form [formGroup]=\"editTransForm\">\r\n\r\n                <div class=\"row mb-20\">\r\n                  <div class=\"col-lg-4\">\r\n                    <div class=\"form-group \">\r\n                      <label for=\"\">From Date </label>\r\n                      <input type=\"text\" *ngIf=\"isAddMode\" placeholder=\"From Date\" (bsValueChange)=\"getFromDate($event)\"\r\n                        formControlName=\"fromdate\" showWeekNumbers=\"false\" class=\"form-control\" [bsConfig]=\"dpConfig\"\r\n                        bsDatepicker>\r\n                      <input type=\"text\" *ngIf=\"!isAddMode\" placeholder=\"From Date\" disabled formControlName=\"fromdate\"\r\n                        showWeekNumbers=\"false\" class=\"form-control\" [bsConfig]=\"dpConfig\" bsDatepicker>\r\n                      <div *ngIf=\"f.fromdate.invalid && (f.fromdate.dirty || f.fromdate.touched)\"\r\n                        class=\"text-left errormsg\">\r\n                        <span *ngIf=\"f.fromdate.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select date</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-4\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">To Date</label>\r\n                      <!-- (bsValueChange)=\"getPerDayCalculatedFees($event)\" -->\r\n                      <input type=\"text\" [maxDate]=\"today\" *ngIf=\"isAddMode\" placeholder=\"To Date\"\r\n                        (bsValueChange)=\"getTODate($event)\" formControlName=\"todate\" showWeekNumbers=\"false\"\r\n                        class=\"form-control\" [bsConfig]=\"dpConfig\" bsDatepicker>\r\n                      <input type=\"text\" *ngIf=\"!isAddMode\" placeholder=\"To Date\" disabled formControlName=\"todate\"\r\n                        showWeekNumbers=\"false\" class=\"form-control\" [bsConfig]=\"dpConfig\" bsDatepicker>\r\n                      <div *ngIf=\"f.todate.invalid && (f.todate.dirty || f.todate.touched)\" class=\"text-left errormsg\">\r\n                        <span *ngIf=\"f.todate.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select date</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-4\">\r\n                    <div class=\"form-group \">\r\n                      <label for=\"\">Generated Fees ($)</label>\r\n                      <input type=\"text\" disabled placeholder=\"Generated Fees\" formControlName=\"generatedfees\"\r\n                        class=\"form-control\">\r\n                      <div *ngIf=\"f.generatedfees.invalid && (f.generatedfees.dirty || f.generatedfees.touched)\"\r\n                        class=\"text-left errormsg\">\r\n                        <span *ngIf=\"f.generatedfees.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\">Fees Required</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"row mb-20\">\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Parent Name</label>\r\n                      <input type=\"text\" class=\"form-control\" disabled formControlName=\"parentname\"\r\n                        placeholder=\"Parent Name\">\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Student Name</label>\r\n                      <input type=\"text\" class=\"form-control\" disabled formControlName=\"childname\" disabled\r\n                        placeholder=\"Student Name\">\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"row mb-20 \">\r\n                  <div class=\"col-lg-6\">\r\n                    <button class=\"btn btn-info\" *ngIf=\"!showWxtraFeesForm\" (click)=\"shoHideExtrFees()\">Add Extra\r\n                      Fees</button>\r\n                    <button class=\"btn btn-info\" *ngIf=\"showWxtraFeesForm\" (click)=\"shoHideExtrFees()\">Remove Extra\r\n                      Fees</button>\r\n                  </div>\r\n                </div>\r\n                <div *ngIf=\"showWxtraFeesForm\" class=\" innertable mt-20\">\r\n                  <div class=\"table-responsive\">\r\n                    <table class=\"table\">\r\n                      <thead>\r\n                        <tr>\r\n                          <th scope=\"col\" class=\"wid26\">Fees type</th>\r\n                          <th scope=\"col\" class=\"wid26\">Amount</th>\r\n                          <th scope=\"col\" class=\"wid26\">Description</th>\r\n                          <th scope=\"col\" class=\"wid10\">Add</th>\r\n                          <th scope=\"col\" class=\"wid10\">Remove</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        <tr\r\n                          *ngFor=\"let disp of displayTransList;let item of editTransForm.get('transArraycollection').controls; let i = index;\"\r\n                          formArrayName=\"transArraycollection\">\r\n                          <td [formGroupName]=\"i\">\r\n                            <select class=\"form-control\" (change)=\"changeInAmount()\" formControlName=\"transactionTypeID\"\r\n                              placeholder=\"Fees Type\" id=\"exampleFormControlSelect1\">\r\n                              <option value=\"\">Select Fees Type</option>\r\n                              <option *ngFor=\"let transtype of getExtraFeesChargeList\" [value]=\"transtype.id\">\r\n                                {{transtype.extraChargeName}}</option>\r\n                            </select>\r\n                          </td>\r\n                          <td [formGroupName]=\"i\">\r\n                            <input type=\"text\" maxlength=\"5\"\r\n                              (keypress)=\"commonService.allowOnlyNumberWithDecimal($event)\" formControlName=\"amount\"\r\n                              (input)=\"calculateTotleAmount();changeInAmount()\" class=\"form-control\" id=\"\"\r\n                              aria-describedby=\"\" placeholder=\"Amount\">\r\n                          </td>\r\n                          <td [formGroupName]=\"i\">\r\n                            <textarea type=\"text\" rows=\"1\" (input)=\"changeInAmount();\" cols=\"20\" maxlength=\"100\"\r\n                              formControlName=\"description\" class=\"form-control resizearea\" id=\"\" aria-describedby=\"\"\r\n                              placeholder=\"Description\"> </textarea>\r\n                          </td>\r\n                          <td class=\"verAligMiddle\">\r\n                            <a href=\"javascript:void(0);\"\r\n                              *ngIf=\"( displayTransList.length < getExtraFeesChargeList.length )\">\r\n                              <i class=\"fa fa-plus-circle plusIcon\" (click)=\"addFees()\" aria-hidden=\"true\"></i></a>\r\n\r\n                          </td>\r\n                          <td class=\"verAligMiddle\">\r\n                            <a href=\"javascript:void(0);\" *ngIf=\"displayTransList.length > 1\">\r\n                              <i class=\"fa fa-minus-circle minusIcon\" (click)=\"removeExtraFees(disp)\"\r\n                                aria-hidden=\"true\"></i></a>\r\n                          </td>\r\n                        </tr>\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"row mb-20 mt-20\">\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Discount Amount ($)</label>\r\n                      <input type=\"text\" maxlength=\"5\" (keypress)=\"commonService.allowOnlyNumberWithDecimal($event)\"\r\n                        class=\"form-control\" (input)=\"changeInAmount();isDiscount()\" formControlName=\"discountamount\"\r\n                        placeholder=\"Discount Amount\">\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Description for Discount</label>\r\n                      <textarea name=\"\" (input)=\"changeInAmount();\" formControlName=\"discountdetails\"\r\n                        class=\"form-control resizearea\" cols=\"20\" rows=\"1\"></textarea>\r\n\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"row mb-20 mt-20\">\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Total Amount ($)</label>\r\n                      <p class=\"form-control\" style=\"background: #e9ecef\">{{FinalCalculatedFees}}</p>\r\n\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n              <div class=\"modal-footer\">\r\n                <button type=\"submit\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                <button type=\"button\" class=\"btn btn-default\" *ngIf=\"!isInvoiceGenrated\"\r\n                  (click)=\"verifyExtraFeesForm()\">Calculate Total Amount</button> &nbsp;\r\n                <div *ngIf=\"isAddMode\">\r\n                  <button type=\"submit\" class=\"btn btn-primary\" *ngIf=\"showNextBtn && !duplicateDuration\"\r\n                    (click)=\"confirmCalculation()\">Next</button>\r\n                </div>\r\n                <div *ngIf=\"!isAddMode\">\r\n                  <button type=\"submit\" class=\"btn btn-primary\" *ngIf=\"showNextBtn\"\r\n                    (click)=\"confirmCalculation()\">Next</button>\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n\r\n      <!-- Final Modal -->\r\n      <div class=\"modal fade finalmodal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myLargeModalLabel\"\r\n        aria-hidden=\"true\">\r\n        <div class=\"modal-dialog modal-lg\">\r\n          <div class=\"modal-content  white_box_table\">\r\n            <div class=\"modal-header\">\r\n              <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Calculate Fees</h5>\r\n              <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6\">\r\n                  <label>Total Amount: {{FinalCalculatedFees}}</label>\r\n                </div>\r\n\r\n              </div>\r\n\r\n              <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Back</button>\r\n                <button type=\"submit\" class=\"btn-cal\"> Calculate</button>\r\n                <button type=\"submit\" class=\"btn btn-primary\" (click)=\"verifyCalculateFees()\">Save</button> &nbsp;\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <app-confirm-box></app-confirm-box>\r\n    <ngx-spinner type=\"ball-atom\" size=\"medium\" color=\"#58A7FE\"></ngx-spinner>"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-add-fees/agency-admin-add-fees.component.ts":
/*!*********************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-add-fees/agency-admin-add-fees.component.ts ***!
  \*********************************************************************************************************/
/*! exports provided: AgencyAdminAddFeesComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AgencyAdminAddFeesComponent", function() { return AgencyAdminAddFeesComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../shared/services/agency-api-service/agency-api.service */ "./src/app/layout/agency-admin/components/shared/services/agency-api-service/agency-api.service.ts");
/* harmony import */ var src_app_shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/shared/services/error-handler/error-handler.service */ "./src/app/shared/services/error-handler/error-handler.service.ts");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ngx-spinner */ "./node_modules/ngx-spinner/fesm5/ngx-spinner.js");
/* harmony import */ var src_app_shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/shared/services/notification-service/notification.service */ "./src/app/shared/services/notification-service/notification.service.ts");
/* harmony import */ var src_app_shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/app/shared/services/common/common.service */ "./src/app/shared/services/common/common.service.ts");
/* harmony import */ var primeng_api__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! primeng/api */ "./node_modules/primeng/api.js");
/* harmony import */ var primeng_api__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(primeng_api__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var _shared_constatant__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../shared/constatant */ "./src/app/layout/agency-admin/components/shared/constatant.ts");
/* harmony import */ var ngx_bootstrap__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ngx-bootstrap */ "./node_modules/ngx-bootstrap/esm5/ngx-bootstrap.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};











var AgencyAdminAddFeesComponent = /** @class */ (function () {
    function AgencyAdminAddFeesComponent(apiService, error, spinner, notification, commonService, fb, routedata, confirmationService) {
        var _this = this;
        this.apiService = apiService;
        this.error = error;
        this.spinner = spinner;
        this.notification = notification;
        this.commonService = commonService;
        this.fb = fb;
        this.routedata = routedata;
        this.confirmationService = confirmationService;
        this.displayTransList = [];
        this.tempTransArry = [];
        this.transFieldCount = 0;
        this.getExtraFeesChargeList = [];
        this.calculatedFeesList = [];
        this.loader = true;
        this.pageNo = 0;
        this.limit = 10;
        this.totalRecord = 0;
        this.today = new Date;
        this.parentList = [];
        this.childList = [];
        this.totalExtraAmount = 0;
        this.discountAmount = 0;
        this.generatedAmount = 0;
        this.classFees = 0;
        this.FinalCalculatedFees = 0;
        this.extraFeesDetailsReqArray = [];
        this.showWxtraFeesForm = false;
        this.showNextBtn = false;
        this.calculationReqModal = {};
        this.getAllCalcultedDetailsList = [];
        this.classIdArray = [];
        this.addFeesVM = {};
        this.extraFeesDetails = [];
        this.isAddMode = true;
        this.reserveTotalCalFee = 0;
        this.showNewEntry = true;
        this.activeSubscription = false;
        this.isInvoiceGenrated = true;
        this.duplicateDuration = false;
        this.EnrollClassesId = [];
        this.msgs = [];
        this.dpConfig = new ngx_bootstrap__WEBPACK_IMPORTED_MODULE_10__["BsDatepickerConfig"]();
        this.clearFormArray = function (formArray) {
            while (formArray.length !== 0) {
                formArray.removeAt(0);
            }
        };
        this.routedata.queryParams.subscribe(function (params) {
            _this.studentName = params['studentName'];
            _this.parentId = params['parentId'];
            _this.studentId = params['studentId'];
            _this.parentName = params['parentName'];
            var str = params['clasessId'];
            _this.classIdArray = _this.convertClassArray(str);
            _this.CategoryId = params['categoryId'];
            _this.CategoryName = params['categoryname'];
            console.log('com', _this.classIdArray);
        });
    }
    AgencyAdminAddFeesComponent.prototype.ngOnInit = function () {
        this.activeSubscription = this.commonService.getSubscriptionStatus();
        this.agenyId = this.commonService.getAgencyId();
        this.newEditFormBuild();
        this.pushSingleArryForTransHead();
        this.getExtraFeesChargeMaster();
        this.getAllDetails();
        this.dpConfig = Object.assign({}, { containerClass: 'theme-dark-blue' }, { showWeekNumbers: false });
    };
    AgencyAdminAddFeesComponent.prototype.showInfoMsg = function (msg, title) {
        this.msgs = [];
        this.msgs.push({ severity: 'info', summary: title, detail: msg });
    };
    AgencyAdminAddFeesComponent.prototype.convertClassArray = function (str) {
        if (str) {
            var intArray = [];
            intArray = str.split(',');
            var temparr_1 = [];
            intArray.forEach(function (res) {
                temparr_1.push(parseInt(res, 10));
            });
            console.log('inmeth', temparr_1);
            return temparr_1;
        }
    };
    AgencyAdminAddFeesComponent.prototype.pushSingleArryForTransHead = function () {
        this.tempTransArry = [
            {
                'id': 1,
                'transactionTypeID': '',
                'studentID': '',
                'description': '',
                'amount': ''
            }
        ];
        this.displayTransList.push(this.tempTransArry);
    };
    AgencyAdminAddFeesComponent.prototype.newEditFormBuild = function () {
        this.editTransForm = this.fb.group({
            fromdate: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            todate: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            generatedfees: [0, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            childname: [''],
            parentname: [''],
            totalammount: [''],
            discountamount: [''],
            discountdetails: [''],
            transArraycollection: this.fb.array([this.createItem()]),
        });
    };
    /* method for Form array for transaction items */
    AgencyAdminAddFeesComponent.prototype.createItem = function () {
        return this.fb.group({
            transactionTypeID: [''],
            studentID: [''],
            description: [''],
            amount: ['']
        });
    };
    /**Form Update builder */
    AgencyAdminAddFeesComponent.prototype.newEditFormBuildUpdate = function () {
        this.editTransForm = this.fb.group({
            fromdate: [this.addFeesVM.fromDate, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            todate: [this.addFeesVM.toDate, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            generatedfees: [this.addFeesVM.generatedFees, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            childname: [this.studentName],
            parentname: [this.parentName],
            totalammount: [this.FinalCalculatedFees],
            discountamount: [this.addFeesVM.Discountamount],
            discountdetails: [this.addFeesVM.DiscountDetails],
            transArraycollection: this.fb.array([]),
        });
        this.updateItem();
    };
    /**Form Update builder */
    AgencyAdminAddFeesComponent.prototype.reIntializeFormWhileUpdate = function () {
        this.editTransForm = this.fb.group({
            transArraycollection: this.fb.array([]),
        });
    };
    AgencyAdminAddFeesComponent.prototype.updateItem = function () {
        var ctrl = this.editTransForm.get('transArraycollection');
        for (var i = 0; i < this.extraFeesDetails.length; i++) {
            ctrl.push(this.fb.group({
                transactionTypeID: [this.extraFeesDetails[i].extraFeeChargeMasterID],
                studentID: [''],
                description: [this.extraFeesDetails[i].discountDetails],
                amount: [this.extraFeesDetails[i].chargeAmount]
            }));
        }
    };
    AgencyAdminAddFeesComponent.prototype.getCalculationDetails = function (value) {
        var _this = this;
        this.msgs = [];
        this.spinner.show();
        this.isAddMode = false;
        this.addFeesVM = {};
        this.showNextBtn = false;
        this.reserveTotalCalFee = 0;
        this.totalExtraAmount = 0;
        this.FinalCalculatedFees = 0;
        this.discountAmount = 0;
        this.showWxtraFeesForm = false;
        this.displayTransList = [];
        this.tempTransArry = [];
        this.transFieldCount = 0;
        this.tempTransArry = [
            {
                'id': 1,
                'transactionTypeID': '',
                'studentID': '',
                'description': '',
                'amount': ''
            }
        ];
        var sendArr = [];
        this.items = this.fb.array([this.createItem()]);
        sendArr = this.convertClassArray(value.classIDs);
        this.extraFeesDetails = [];
        var fdate = new Date(value.fromDate);
        var tdate = new Date(value.toDate);
        this.PreviousFromDate = fdate.toDateString();
        this.PreviousToDate = tdate.toDateString();
        var req = {
            'FromDate': fdate.toDateString(),
            'ToDate': tdate.toDateString(),
            'StudentID': this.studentId,
            'ParentID': this.parentId,
            'ClassesId': sendArr,
            'AgencyID': this.agenyId
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_9__["AgencyAPIURLs"].GetAddFeesDetailsView, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                if (res.body.data.length > 0) {
                    _this.addFeesVM.fromDate = new Date(res.body.data[0].fromDate);
                    _this.addFeesVM.toDate = new Date(res.body.data[0].toDate);
                    _this.addFeesVM.generatedFees = res.body.data[0].totalPerDayFee;
                    _this.FinalCalculatedFees = res.body.data[0].totalCalculatedAmount;
                    _this.reserveTotalCalFee = res.body.data[0].totalCalculatedAmount;
                    _this.extraFeesDetails = res.body.data[0].extraFees;
                    _this.isInvoiceGenrated = res.body.data[0].isInvoiceGenrated;
                    _this.displayTransList = res.body.data[0].extraFees;
                    _this.addFeesVM.Discountamount = res.body.data[0].discountAmount;
                    _this.addFeesVM.DiscountDetails = res.body.data[0].discountDetails;
                    _this.items.removeAt(0);
                    _this.totalExtraAmount = 0;
                    if (res.body.data[0].extraFees.length !== 0) {
                        _this.showWxtraFeesForm = true;
                        res.body.data[0].extraFees.forEach(function (element) {
                            var amount = +element.chargeAmount;
                            _this.totalExtraAmount = _this.totalExtraAmount + amount;
                            _this.items.value.push({
                                'transactionTypeID': element.extraFeeChargeMasterID, 'studentID': '', 'description': element.discountDetails,
                                'amount': element.chargeAmount
                            });
                        });
                    }
                    _this.newEditFormBuildUpdate();
                    _this.spinner.hide();
                    $('.feescalculation').modal('show');
                }
                _this.spinner.hide();
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
        this.newEditFormBuildUpdate();
    };
    Object.defineProperty(AgencyAdminAddFeesComponent.prototype, "f", {
        get: function () { return this.editTransForm.controls; },
        enumerable: true,
        configurable: true
    });
    /** Method to add new transaction into form array while edit payment*/
    AgencyAdminAddFeesComponent.prototype.addFees = function () {
        this.showNextBtn = false;
        this.transFieldCount++;
        this.tempTransArry.push({ 'id': this.transFieldCount });
        this.items = this.editTransForm.get('transArraycollection');
        this.items.push(this.createItem());
        this.displayTransList = this.tempTransArry;
        this.calculateTotleAmount();
    };
    /**Remove trans heads on minus button */
    AgencyAdminAddFeesComponent.prototype.removeExtraFees = function (data) {
        this.showNextBtn = false;
        var index = this.displayTransList.findIndex(function (r) { return r.id === data.id; });
        this.items = this.editTransForm.get('transArraycollection');
        this.items.removeAt(index);
        this.displayTransList.splice(index, 1);
        this.calculateTotleAmount();
    };
    AgencyAdminAddFeesComponent.prototype.getExtraFeesChargeMaster = function () {
        var _this = this;
        this.getExtraFeesChargeList = [];
        var req = {
            'AgencyID': this.agenyId
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_9__["AgencyAPIURLs"].GetExtraFeeChargeMasterList, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.getExtraFeesChargeList = res.body.data;
                _this.spinner.hide();
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminAddFeesComponent.prototype.getDetails = function () {
        this.editTransForm.controls['childname'].setValue(this.studentName);
        this.editTransForm.controls['parentname'].setValue(this.parentName);
        this.editTransForm.controls['childname'].updateValueAndValidity();
        this.editTransForm.controls['parentname'].updateValueAndValidity();
    };
    AgencyAdminAddFeesComponent.prototype.verifyCalculateFees = function () {
        console.log(this.FinalCalculatedFees);
        if (this.editTransForm.valid) {
            if (this.editTransForm.value.fromdate.setHours(0, 0, 0) > this.editTransForm.value.todate.setHours(0, 0, 0)) {
                this.notification.warning({ message: 'To Date should be greater or equal than From date ', title: '' });
            }
            else {
                this.calculateFinalAmount();
                this.calculationReqModal = {};
                var req = {
                    'studentID': this.studentId,
                    'ParentID': this.parentId,
                    'fromDate': new Date(this.editTransForm.controls.fromdate.value).toDateString(),
                    'toDate': new Date(this.editTransForm.controls.todate.value).toDateString(),
                    'totalPerDayFee': this.generatedAmount,
                    'agencyID': this.agenyId,
                    'totalCalculatedAmount': this.FinalCalculatedFees,
                    'ClassesID': this.EnrollClassesId,
                    'ExtraFees': this.showWxtraFeesForm ? this.extraFeesDetailsReqArray : [],
                    'PreviousFromDate': this.isAddMode ? this.nullDate : new Date(this.PreviousFromDate).toDateString(),
                    'PreviousToDate': this.isAddMode ? this.nullDate : new Date(this.PreviousToDate).toDateString(),
                    'DiscountAmount': this.editTransForm.controls.discountamount.value ? this.editTransForm.controls.discountamount.value : 0,
                    'DiscountDetails': this.editTransForm.controls.discountdetails.value,
                    'CalculatedFeeDate': this.CalculatedFeesDate
                };
                this.calculationReqModal = req;
                console.log('arryFin', this.calculationReqModal);
            }
        }
        else {
            this.spinner.hide();
            this.commonService.validateAllFields(this.editTransForm);
        }
    };
    AgencyAdminAddFeesComponent.prototype.confirmCalculation = function () {
        var _this = this;
        if (isNaN(this.FinalCalculatedFees)) {
            this.showNextBtn = false;
            this.notification.warning({ message: 'Please enter valid amount', title: '' });
        }
        else {
            this.confirmationService.confirm({
                message: 'Do you want to proceed for Following calculation? TotalExtra Fees:' + ' ' + this.totalExtraAmount +
                    ' ' + 'Class Fees:' + ' ' +
                    +this.generatedAmount + ' ' + 'Discount Amount:' + ' ' + this.discountAmount + '  ' +
                    'Total Amount:' + ' ' + this.FinalCalculatedFees,
                accept: function () {
                    _this.successCalculation(_this.calculationReqModal);
                },
                reject: function () {
                    _this.showNextBtn = false;
                }
            });
        }
    };
    // method to open confirmation for invoice generation
    AgencyAdminAddFeesComponent.prototype.confirmInvoice = function (value) {
        var _this = this;
        this.confirmationService.confirm({
            message: 'Do you want to generate invoice?',
            accept: function () {
                _this.successInvoice(value);
            },
        });
    };
    AgencyAdminAddFeesComponent.prototype.successCalculation = function (req) {
        var _this = this;
        this.spinner.show();
        console.log('req', req);
        var url = this.isAddMode ? _shared_constatant__WEBPACK_IMPORTED_MODULE_9__["AgencyAPIURLs"].SaveCalculatedFees : _shared_constatant__WEBPACK_IMPORTED_MODULE_9__["AgencyAPIURLs"].UpdateCalculatedFees;
        this.apiService.postData(url, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                var msg = _this.isAddMode ? 'Calculation Saved sucessfully' : 'Calculation Updated sycessfully';
                _this.notification.success({ message: msg, title: '' });
                $('.feescalculation').modal('hide');
                _this.getAllDetails();
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminAddFeesComponent.prototype.successInvoice = function (value) {
        var _this = this;
        var sendArr = [];
        sendArr = this.convertClassArray(value.classIDs);
        var req = {
            'InvoiceFromDate': value.fromDate,
            'InvoiceToDate': value.toDate,
            'AgencyID': this.agenyId,
            'ParentID': this.parentId,
            'StudentID': this.studentId,
            'Totalamount': value.totalCalculatedAmount,
            'ClassesId': sendArr,
            'DiscountAmount': value.discountAmount
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_9__["AgencyAPIURLs"].SaveInvoiceDetails, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                $('.feescalculation').modal('hide');
                _this.getAllDetails();
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminAddFeesComponent.prototype.verifyExtraFeesForm = function () {
        var _this = this;
        console.log('this', this.editTransForm);
        for (var index = 0; index < this.editTransForm.controls.transArraycollection.value.length; index++) {
            this.items.value[index].transactionTypeID = this.editTransForm.controls.transArraycollection.value[index].transactionTypeID;
            this.items.value[index].amount = this.editTransForm.controls.transArraycollection.value[index].amount;
            this.items.value[index].description = this.editTransForm.controls.transArraycollection.value[index].description;
        }
        if (this.showWxtraFeesForm) {
            var status_1 = this.validateExtraFeesPaymentForm();
            if (status_1 > 0) {
                this.notification.warning({ message: 'Please enter valid details for extra fees', title: '' });
            }
            else {
                var duplicate = this.checkForDuplicateIdFessTypeID();
                if (duplicate > 0) {
                    this.notification.warning({ message: 'Please remove identical extra fee type', title: '' });
                }
                else {
                    this.extraFeesDetailsReqArray = [];
                    if (this.items.value.length !== 0 && this.items !== undefined && this.showWxtraFeesForm) {
                        this.items.value.forEach(function (element) {
                            _this.extraFeesDetailsReqArray.push({
                                'extraFeeChargeMasterID': element.transactionTypeID,
                                'amount': element.amount,
                                'discountDetails': element.description
                            });
                        });
                    }
                    this.verifyCalculateFees();
                }
            }
        }
        else {
            this.verifyCalculateFees();
        }
    };
    AgencyAdminAddFeesComponent.prototype.calculateFinalAmount = function () {
        this.calculateTotleAmount();
        this.generatedAmount = 0;
        this.generatedAmount = +this.editTransForm.controls.generatedfees.value;
        this.FinalCalculatedFees = 0;
        var fees = (this.totalExtraAmount + this.generatedAmount);
        this.discountAmount = +this.editTransForm.controls.discountamount.value;
        if (fees < this.discountAmount) {
            this.showNextBtn = false;
            this.notification.warning({ message: 'Discount Amount should be less than or equals to total amount', title: 'Total:' + fees });
        }
        else {
            this.FinalCalculatedFees = fees - this.discountAmount;
            this.showNextBtn = true;
        }
    };
    /* To calculate Extar amount */
    AgencyAdminAddFeesComponent.prototype.calculateTotleAmount = function () {
        var _this = this;
        if (this.showWxtraFeesForm) {
            for (var index = 0; index < this.editTransForm.controls.transArraycollection.value.length; index++) {
                this.items.value[index].transactionTypeID = this.editTransForm.controls.transArraycollection.value[index].transactionTypeID;
                this.items.value[index].amount = this.editTransForm.controls.transArraycollection.value[index].amount;
            }
            this.totalExtraAmount = 0;
            if (this.items.value.length !== 0 && this.items !== undefined) {
                this.items.value.forEach(function (element) {
                    var amount = +element.amount;
                    _this.totalExtraAmount = _this.totalExtraAmount + amount;
                });
            }
        }
        else {
            this.totalExtraAmount = 0;
        }
    };
    /**Clear Trans head form method */
    AgencyAdminAddFeesComponent.prototype.clearAddFeesForm = function () {
        this.msgs = [];
        this.isInvoiceGenrated = false;
        this.addFeesVM = {};
        this.isAddMode = true;
        this.showWxtraFeesForm = false;
        this.generatedAmount = 0;
        this.FinalCalculatedFees = 0;
        this.totalExtraAmount = 0;
        this.displayTransList = [];
        this.reserveTotalCalFee = 0;
        this.items = this.clearItems;
        this.newEditFormBuild();
        this.items = this.editTransForm.get('transArraycollection');
        this.pushSingleArryForTransHead();
    };
    /**Show-hide extra fees*/
    AgencyAdminAddFeesComponent.prototype.shoHideExtrFees = function () {
        var ctrl = this.editTransForm.get('transArraycollection');
        this.clearFormArray(ctrl);
        ctrl.push(this.fb.group({
            transactionTypeID: [''],
            studentID: [''],
            description: [''],
            amount: ['']
        }));
        console.log(this.editTransForm.controls.transArraycollection.value);
        this.showNextBtn = false;
        this.showWxtraFeesForm = !this.showWxtraFeesForm;
        this.totalExtraAmount = 0;
        this.displayTransList = [];
        this.items = this.clearItems;
        this.items = this.editTransForm.get('transArraycollection');
        this.pushSingleArryForTransHead();
    };
    /**Method to check validation for Extra Charges form */
    AgencyAdminAddFeesComponent.prototype.validateExtraFeesPaymentForm = function () {
        // Means valid data
        var count = 0;
        if (this.items.value.length !== 0 && this.items !== undefined) {
            this.items.value.forEach(function (element) {
                if (element.transactionTypeID === '' || element.amount === '') {
                    count = count + 1;
                }
            });
        }
        return count;
    };
    // Method to find duplicate extra fee type
    AgencyAdminAddFeesComponent.prototype.checkForDuplicateIdFessTypeID = function () {
        var count = 0;
        return count;
    };
    AgencyAdminAddFeesComponent.prototype.getFromDate = function (value) {
        this.fromDateTemp = value;
        this.getPerDayCalculatedFees();
    };
    AgencyAdminAddFeesComponent.prototype.getTODate = function (value) {
        this.todateTemp = value;
        this.getPerDayCalculatedFees();
    };
    AgencyAdminAddFeesComponent.prototype.getPerDayCalculatedFees = function () {
        var _this = this;
        this.msgs = [];
        this.CalculatedFeesDate = '';
        this.EnrollClassesId = [];
        this.showNextBtn = false;
        if (this.fromDateTemp && this.todateTemp) {
            if (this.fromDateTemp.setHours(0, 0, 0) > this.todateTemp.setHours(0, 0, 0)) {
                this.notification.warning({ message: 'To Date should be greater or equal than From date ', title: '' });
            }
            else {
                this.spinner.show();
                var modal = {
                    'studentID': this.studentId,
                    'parentID': this.parentId,
                    'agencyId': this.agenyId,
                    'fromDate': new Date(this.fromDateTemp).toDateString(),
                    'toDate': new Date(this.todateTemp).toDateString(),
                    'CategoryId': this.CategoryId,
                    'Categoryname': this.CategoryName
                };
                console.log('perday', modal);
                if (this.editTransForm.controls.fromdate.value !== '') {
                    this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_9__["AgencyAPIURLs"].PerDayFeeCalculation, modal, null).subscribe(function (res) {
                        if (res.body.statusCode === 200) {
                            if (res.body.paidFeeDate) {
                                _this.showInfoMsg('Invoice for some date has been already generated', '');
                            }
                            _this.duplicateDuration = false;
                            _this.editTransForm.controls['generatedfees'].setValue(res.body.data);
                            _this.editTransForm.controls['generatedfees'].updateValueAndValidity();
                            _this.editTransForm.controls['discountamount'].setValue(res.body.discountAmount);
                            _this.editTransForm.controls['discountamount'].updateValueAndValidity();
                            _this.generatedAmount = res.body.data;
                            _this.CalculatedFeesDate = res.body.calculatedFeeDate;
                            _this.EnrollClassesId = res.body.enrollClassesId[0];
                            _this.spinner.hide();
                        }
                        else if (res.body.statusCode === 10) {
                            _this.spinner.hide();
                            _this.duplicateDuration = true;
                            _this.notification.warning({ message: 'Invoice is already generated for this dates', title: 'Oops!' });
                        }
                        else if (res.body.statusCode === 13) {
                            _this.spinner.hide();
                            _this.duplicateDuration = true;
                            _this.notification.warning({ message: 'Student not enroll for this date', title: '' });
                        }
                        else if (res.body.statusCode === 12) {
                            _this.spinner.hide();
                            _this.duplicateDuration = true;
                            _this.notification.warning({ message: 'Student Not Present for this duration', title: '' });
                        }
                        else {
                            _this.spinner.hide();
                            _this.error.unknownError();
                        }
                    }, function (err) {
                        _this.spinner.hide();
                        _this.error.commonError(err);
                    });
                }
            }
        }
    };
    AgencyAdminAddFeesComponent.prototype.getAllDetails = function () {
        var _this = this;
        this.loader = true;
        this.spinner.show();
        this.getAllCalcultedDetailsList = [];
        var req = {
            'AgencyID': this.agenyId,
            'StudentID': this.studentId,
            'ParentID': this.parentId
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_9__["AgencyAPIURLs"].GetAddFeesDetails, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.totalRecord = res.body.totalRows;
                if (res.body.data.length > 0) {
                    _this.getAllCalcultedDetailsList = res.body.data;
                    _this.showNewEntry = _this.getAllCalcultedDetailsList[0].isInvoiceGenrated ? true : false;
                }
                else {
                    _this.showNewEntry = true;
                }
                _this.spinner.hide();
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
            _this.loader = false;
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminAddFeesComponent.prototype.changeInAmount = function () {
        this.showNextBtn = false;
    };
    AgencyAdminAddFeesComponent.prototype.isDiscount = function () {
        if (this.editTransForm.controls.value) {
        }
        else {
            this.FinalCalculatedFees = 0;
            this.FinalCalculatedFees = this.reserveTotalCalFee;
        }
    };
    // method to open confirmation for invoice generation
    AgencyAdminAddFeesComponent.prototype.deleteCalulation = function (value) {
        var _this = this;
        this.confirmationService.confirm({
            message: 'Do you want to delete this record?',
            accept: function () {
                _this.successdeleteCalulation(value);
            },
        });
    };
    AgencyAdminAddFeesComponent.prototype.successdeleteCalulation = function (value) {
        var _this = this;
        var req = {
            'FromDate': value.fromDate,
            'ToDate': value.toDate,
            'AgencyID': this.agenyId,
            'ParentID': this.parentId,
            'StudentID': this.studentId,
            'DeletedBy': this.commonService.getReleventUserId('userdetails')
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_9__["AgencyAPIURLs"].DeleteFeesCalculation, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                var index = _this.getAllCalcultedDetailsList.findIndex(function (r) { return (r.fromDate === value.fromDate && r.toDate === value.toDate); });
                _this.getAllCalcultedDetailsList.splice(index, 1);
                _this.showNewEntry = true;
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminAddFeesComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-agency-admin-add-fees',
            template: __webpack_require__(/*! ./agency-admin-add-fees.component.html */ "./src/app/layout/agency-admin/components/agency-admin-add-fees/agency-admin-add-fees.component.html"),
            styles: [__webpack_require__(/*! ./agency-admin-add-fees.component.css */ "./src/app/layout/agency-admin/components/agency-admin-add-fees/agency-admin-add-fees.component.css")]
        }),
        __metadata("design:paramtypes", [_shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_3__["AgencyApiService"], src_app_shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_4__["ErrorHandlerService"],
            ngx_spinner__WEBPACK_IMPORTED_MODULE_5__["NgxSpinnerService"], src_app_shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_6__["NotificationService"],
            src_app_shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_7__["CommonService"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormBuilder"],
            _angular_router__WEBPACK_IMPORTED_MODULE_2__["ActivatedRoute"], primeng_api__WEBPACK_IMPORTED_MODULE_8__["ConfirmationService"]])
    ], AgencyAdminAddFeesComponent);
    return AgencyAdminAddFeesComponent;
}());



/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-add-student/agency-admin-add-student.component.css":
/*!****************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-add-student/agency-admin-add-student.component.css ***!
  \****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".guardianinfo .checkboxcustom {color: #333;}\r\n.guardianinfo .checkboxcustom input{width: 17px;height: 17px}\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L2FnZW5jeS1hZG1pbi9jb21wb25lbnRzL2FnZW5jeS1hZG1pbi1hZGQtc3R1ZGVudC9hZ2VuY3ktYWRtaW4tYWRkLXN0dWRlbnQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSwrQkFBK0IsV0FBVyxDQUFDO0FBQzNDLG9DQUFvQyxXQUFXLENBQUMsWUFBWSIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9hZ2VuY3ktYWRtaW4vY29tcG9uZW50cy9hZ2VuY3ktYWRtaW4tYWRkLXN0dWRlbnQvYWdlbmN5LWFkbWluLWFkZC1zdHVkZW50LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZ3VhcmRpYW5pbmZvIC5jaGVja2JveGN1c3RvbSB7Y29sb3I6ICMzMzM7fVxyXG4uZ3VhcmRpYW5pbmZvIC5jaGVja2JveGN1c3RvbSBpbnB1dHt3aWR0aDogMTdweDtoZWlnaHQ6IDE3cHh9Il19 */"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-add-student/agency-admin-add-student.component.html":
/*!*****************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-add-student/agency-admin-add-student.component.html ***!
  \*****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"wrapper\">\r\n  <div class=\"container-fluid\">\r\n\r\n    <div class=\"pagetitle\">\r\n      <div>\r\n        <h2>StudentList\r\n          <span>/ Add Student </span>\r\n        </h2>\r\n      </div>\r\n      <div>        \r\n      </div>\r\n    </div>\r\n    <div class=\"subhead d-flex justify-content-between mt-20\"><div><h3>Add Student</h3></div> </div>    \r\n    \r\n<div class=\"mt-20\"></div>\r\n    <div class=\"row\">\r\n      <div class=\"col-lg-3\">\r\n        <div class=\"row mb-20\">\r\n          <div class=\"col-lg-12\">\r\n            <div class=\"upload-profile\">\r\n              <div>\r\n                <img src=\"assets/img/boy.svg\" alt=\"\" class=\"img-fluid img-circle\"> </div>\r\n\r\n              <div class=\"upload-btn-wrapper\">\r\n                <button class=\"btn btn-send\">Upload a file</button>\r\n                <input type=\"file\" name=\"myfile\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-lg-9\">\r\n\r\n        <ul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link active\" id=\"basicinfo-tab\" data-toggle=\"tab\" href=\"#basicinfo\" role=\"tab\" aria-controls=\"basicinfo\" aria-selected=\"true\">Basic Information</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" id=\"Gurardianinfo-tab\" data-toggle=\"tab\" href=\"#Gurardianinfo\" role=\"tab\" aria-controls=\"Gurardianinfo\"\r\n              aria-selected=\"false\">Gurardian Information</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" id=\"Allergies-tab\" data-toggle=\"tab\" href=\"#Allergies\" role=\"tab\" aria-controls=\"Allergies\" aria-selected=\"false\">Allergies and Immunization</a>\r\n          </li>\r\n        </ul>\r\n        <div class=\"tab-content\" id=\"myTabContent\">\r\n          <div class=\"tab-pane fade show active\" id=\"basicinfo\" role=\"tabpanel\" aria-labelledby=\"basicinfo-tab\">\r\n            <form>\r\n              <div class=\"row mb-20 mt-20\">\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">First name</label>\r\n                    <input type=\"text \" class=\"form-control\" id=\"\" aria-describedby=\"\" placeholder=\"Enter First Name\">\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Last name</label>\r\n                    <input type=\"text \" class=\"form-control\" id=\"\" aria-describedby=\"\" placeholder=\"Enter Last Name\">\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"row mb-20\">\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Student ID(auto generate)</label>\r\n                    <input type=\"text \" class=\"form-control\" id=\"\" aria-describedby=\"\" placeholder=\"ID\">\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">User Name</label>\r\n                    <input type=\"text \" class=\"form-control\" id=\"\" aria-describedby=\"\" placeholder=\"User Name\">\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n\r\n\r\n              <div class=\"row mb-20\">\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Email Address</label>\r\n                    <input type=\"email \" class=\"form-control\" id=\"\" aria-describedby=\"\" placeholder=\"Email address\">\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Password</label>\r\n                    <input type=\"password \" class=\"form-control\" id=\"\" aria-describedby=\"\" placeholder=\"Password\">\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"row mb-20\">\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Mobile No</label>\r\n                    <input type=\"number \" class=\"form-control\" id=\"\" aria-describedby=\"\" placeholder=\"Mobile\">\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Phone Number</label>\r\n                    <input type=\"number \" class=\"form-control\" id=\"\" aria-describedby=\"\" placeholder=\"Phone\">\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"row mb-20\">\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"exampleFormControlSelect1\">Gender</label>\r\n                    <select class=\"form-control\" id=\"exampleFormControlSelect1\">\r\n                      <option>Boy</option>\r\n                      <option>Girl</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Date of Birth</label>\r\n                    <input type=\"date \" class=\"form-control\" id=\"\" aria-describedby=\"\" placeholder=\"DOB\">\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n\r\n              <div class=\"row mb-20\">\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Address</label>\r\n                    <input type=\"text \" class=\"form-control\" id=\"\" aria-describedby=\"\" placeholder=\"Address\">\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"exampleInputEmail1\">Apt/Suite</label>\r\n                    <input type=\"text \" class=\"form-control\" id=\"\" aria-describedby=\"\" placeholder=\"Apt/Suite\">\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n\r\n              <div class=\"row mb-20\">\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">City</label>\r\n                    <input type=\"text \" class=\"form-control\" id=\"\" aria-describedby=\"\" placeholder=\"Enter City\">\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"exampleFormControlSelect1\">State</label>\r\n                    <select class=\"form-control\" id=\"exampleFormControlSelect1\">\r\n\r\n                      <option>Select State</option>\r\n                      <option>Alaska </option>\r\n                      <option>Arizona </option>\r\n                      <option>Arkansas </option>\r\n                      <option>California </option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n\r\n              <div class=\"row mb-20\">\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Zip Code</label>\r\n                    <input type=\"text \" maxlength=\"6\" class=\"form-control\" id=\"\" aria-describedby=\"\" placeholder=\"Enter Zip Code\">\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"exampleFormControlSelect1\">Country</label>\r\n                    <select class=\"form-control\" id=\"exampleFormControlSelect1\">\r\n\r\n                      <option>Select Country</option>\r\n                      <option>United State </option>\r\n\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"row mb-20\">\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Class</label>\r\n                    <!-- <input type=\"text \" class=\"form-control\" id=\"\" aria-describedby=\"\" placeholder=\"class\"> -->\r\n                    <select class=\"form-control\" id=\"exampleFormControlSelect1\">\r\n\r\n                      <option>Select Class</option>\r\n                      <option>Toddler </option>\r\n                      <option>Infant </option>\r\n                      <option>LKG </option>\r\n                      <option>UKG </option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Section Name</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"\" aria-describedby=\"\" placeholder=\"Section\">\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n\r\n              <div class=\"row mb-20\">\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Date Of Birth</label>\r\n                    <input type=\"date\" class=\"form-control\" id=\"\" aria-describedby=\"\" placeholder=\"DOB\">\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"exampleInputEmail1\">Date of Hiring</label>\r\n                    <input type=\"date \" class=\"form-control\" id=\"\" aria-describedby=\"\" placeholder=\"DOH\">\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"row mb-20\">\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Gross Pay</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"\" aria-describedby=\"\" placeholder=\"Gross pay\">\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Certification</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"\" aria-describedby=\"\" placeholder=\"Cartification\">\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"row mb-20\">\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"exampleFormControlSelect1\">Link Parent</label>\r\n                    <select class=\"form-control\" id=\"exampleFormControlSelect1\">\r\n                      <option>Mark</option>\r\n                      <option>Jacod</option>\r\n                      <option>Lary</option>\r\n                      <option>Sandra</option>\r\n                      <option>Gauthier</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n\r\n              <div class=\"text-center\">\r\n                <button type=\"submit\" class=\"btn btn-send\">Save</button>\r\n              </div>\r\n\r\n            </form>\r\n          </div>\r\n          <div class=\"tab-pane fade\" id=\"Gurardianinfo\" role=\"tabpanel\" aria-labelledby=\"Gurardianinfo-tab\">\r\n\r\n\r\n            <div class=\"d-flex justify-content-between mt-20 subhead\">\r\n              <div>\r\n                <h3>Guardian Information</h3>\r\n              </div>\r\n              <div>\r\n                <button type=\"submit\" class=\"btn btn-send\"  data-toggle=\"modal\" data-target=\".guardianinfo\">Add Guardian</button>\r\n              </div>\r\n            </div>\r\n            <div class=\"innertable\">\r\n              <div class=\"table-responsive\">\r\n                <table class=\"table\">\r\n                  <thead class=\"thead-light\">\r\n                    <tr>\r\n                      <th scope=\"col\">First Name</th>\r\n                      <th scope=\"col\">Last Name</th>\r\n                      <th scope=\"col\">Relation</th>\r\n                      <th scope=\"col\">Phone No</th>\r\n                      <th scope=\"col\">Allow Pickup</th>\r\n                      <th scope=\"col\">Actions</th>\r\n                    </tr>\r\n                   </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>Mark</td>\r\n                      <td> Adam</td>\r\n                      <td>Uncle</td>\r\n                      <td>(+1) 5465 522 256</td>\r\n                      <td>Yes</td>\r\n                      <td>\r\n                        <a [routerLink]=\"['/dashboard/actvitydetail']\">\r\n                          <i class=\"fa fa-eye\" aria-hidden=\"true\"></i>\r\n                        </a>\r\n                        <a href=\"\">\r\n                          <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\r\n                        </a>\r\n                        <a href=\"\">\r\n                          <i class=\"fa fa-trash\" aria-hidden=\"true\"></i>\r\n                        </a>\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td>Richard</td>\r\n                      <td> James</td>\r\n                      <td>Driver</td>\r\n                      <td>(+1) 5465 522 256</td>\r\n                      <td>No</td>\r\n                      <td>\r\n                        <a [routerLink]=\"['/dashboard/actvitydetail']\">\r\n                          <i class=\"fa fa-eye\" aria-hidden=\"true\"></i>\r\n                        </a>\r\n                        <a href=\"\">\r\n                          <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\r\n                        </a>\r\n                        <a href=\"\">\r\n                          <i class=\"fa fa-trash\" aria-hidden=\"true\"></i>\r\n                        </a>\r\n                      </td>\r\n                    </tr>\r\n\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div> \r\n          </div>\r\n          <div class=\"tab-pane fade\" id=\"Allergies\" role=\"tabpanel\" aria-labelledby=\"Allergies-tab\">\r\n\r\n            <div class=\"d-flex justify-content-between mt-20 subhead\">\r\n              <div>\r\n                <h3>Immunization</h3>\r\n              </div>\r\n              <div>\r\n                <button type=\"submit\" class=\"btn btn-send\"  data-toggle=\"modal\" data-target=\".immunization\">Add Immunization</button>\r\n              </div>\r\n            </div>\r\n            <div class=\"innertable\">\r\n              <div class=\"table-responsive\">\r\n                <table class=\"table\">\r\n                  <thead class=\"thead-light\">\r\n                    <tr>\r\n                      <th scope=\"col\">Immunization</th>\r\n                      <th scope=\"col\">Date Received</th>\r\n                      <th scope=\"col\">Other Immunization</th>\r\n                      <th scope=\"col\">Abbreviation</th>\r\n                      <th scope=\"col\">Actions</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>05 Nov 2018</td>\r\n                      <td>Max Adam</td>\r\n                      <td>Play ground </td>\r\n                      <td>Fall down</td>\r\n                      <td>\r\n                        <a [routerLink]=\"['/dashboard/actvitydetail']\">\r\n                          <i class=\"fa fa-eye\" aria-hidden=\"true\"></i>\r\n                        </a>\r\n                        <a href=\"\">\r\n                          <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\r\n                        </a>\r\n                        <a href=\"\">\r\n                          <i class=\"fa fa-trash\" aria-hidden=\"true\"></i>\r\n                        </a>\r\n                      </td>\r\n                    </tr>\r\n\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n\r\n\r\n\r\n            <div class=\"d-flex justify-content-between mt-20 subhead\">\r\n              <div>\r\n                <h3>Allergies</h3>\r\n              </div>\r\n              <div>\r\n                <button type=\"submit\" class=\"btn btn-send\"  data-toggle=\"modal\" data-target=\".allergies\">Add Allergies</button>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"innertable\">\r\n              <div class=\"table-responsive\">\r\n                <table class=\"table\">\r\n                  <thead class=\"thead-light\">\r\n                    <tr>\r\n                      <th scope=\"col\">Allergy</th>\r\n                      <th scope=\"col\">Allergy Name</th>\r\n                      <th scope=\"col\">Reaction</th>\r\n                      <th scope=\"col\">Treatement</th>\r\n                      <th scope=\"col\">Actions</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>05 Nov 2018</td>\r\n                      <td>Max Adam</td>\r\n                      <td>Play ground </td>\r\n                      <td>Fall down</td>\r\n                      <td>\r\n                        <a [routerLink]=\"['/dashboard/actvitydetail']\">\r\n                          <i class=\"fa fa-eye\" aria-hidden=\"true\"></i>\r\n                        </a>\r\n                        <a href=\"\">\r\n                          <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\r\n                        </a>\r\n                        <a href=\"\">\r\n                          <i class=\"fa fa-trash\" aria-hidden=\"true\"></i>\r\n                        </a>\r\n                      </td>\r\n                    </tr>\r\n\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n            <div class=\"d-flex justify-content-between mt-20 subhead\">\r\n              <div>\r\n                <h3>Medication</h3>\r\n              </div>\r\n              <div>\r\n                <button type=\"submit\" class=\"btn btn-send\"  data-toggle=\"modal\" data-target=\".medication\">Add Medication</button>\r\n              </div>\r\n            </div>\r\n        \r\n            \r\n            <div class=\"innertable\">\r\n              <div class=\"table-responsive\">\r\n                <table class=\"table\">\r\n                  <thead class=\"thead-light\">\r\n                    <tr>\r\n                      <th scope=\"col\">Medication</th>\r\n                      <th scope=\"col\">Strength</th>\r\n                      <th scope=\"col\">Units</th>\r\n                      <th scope=\"col\">Dose</th>\r\n                      <th scope=\"col\">How Taken?</th>\r\n                      <th scope=\"col\">Other Medication</th>\r\n                      <th scope=\"col\">Actions</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>Cephalexin- 50 mg/kg/day PO</td>\r\n                      <td>03</td>\r\n                      <td>2 </td>\r\n                      <td>TD</td>\r\n                      <td>Before Food</td>\r\n                      <td>No</td>\r\n                      <td>\r\n                        <a [routerLink]=\"['/dashboard/actvitydetail']\">\r\n                          <i class=\"fa fa-eye\" aria-hidden=\"true\"></i>\r\n                        </a>\r\n                        <a href=\"\">\r\n                          <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\r\n                        </a>\r\n                        <a href=\"\">\r\n                          <i class=\"fa fa-trash\" aria-hidden=\"true\"></i>\r\n                        </a>\r\n                      </td>\r\n                    </tr>\r\n\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n\r\n          \r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n<!-- imminization -->\r\n<div class=\"modal fade immunization\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myLargeModalLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog modal-lg\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Add Immunization</h5>\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <form>\r\n          <div class=\"row mb-20 mt-20\">\r\n            <div class=\"col-lg-6\">\r\n              <div class=\"form-group\">\r\n                <label for=\"\">Immunization</label>\r\n                <!-- <input type=\"text \" class=\"form-control\" id=\"\" aria-describedby=\"\" placeholder=\"Enter First Name\"> -->\r\n                <select class=\"form-control\" id=\"exampleFormControlSelect1\">\r\n                  <option value=\"\">-Select Immunization-</option>\r\n                  <option value=\"1\">Diphtheria, Tetanus, Pertussis </option>\r\n                  <option value=\"2\">Hepatitis A </option>\r\n                  <option value=\"3\">Hepatitis B </option>\r\n                  <option value=\"4\">Hib Meningitis </option>\r\n                  <option value=\"5\">Influenza </option>\r\n                  <option value=\"6\">Meningococcal Conjugate Vaccine </option>\r\n                  <option value=\"7\">Meningococcal Polysaccharide Vaccine </option>\r\n                  <option value=\"8\">Measles, Mumps, Rubella </option>\r\n                  <option value=\"9\">Pneumococcal </option>\r\n                  <option value=\"10\">Poliomyelitis </option>\r\n                  <option value=\"11\">Rotavirus </option>\r\n                  <option value=\"12\">Varicella </option>\r\n                  <option value=\"-1\">Other </option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-lg-6\">\r\n              <div class=\"form-group\">\r\n                <label for=\"\">Date Received</label>\r\n                <input type=\"date \" class=\"form-control\" id=\"\" aria-describedby=\"\" placeholder=\"Select Date\">\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <div class=\"row mb-20\">\r\n            <div class=\"col-lg-6\">\r\n              <div class=\"form-group\">\r\n                <label for=\"\">Other Immunization</label>\r\n                <input type=\"text \" class=\"form-control\" id=\"\" aria-describedby=\"\" placeholder=\"Other Immunization\" disabled>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-lg-6\">\r\n              <div class=\"form-group\">\r\n                <label for=\"\">Abbreviation </label>\r\n                <input type=\"text \" class=\"form-control\" id=\"\" aria-describedby=\"\" placeholder=\"Abbreviation\" disabled>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n        <button type=\"button\" class=\"btn btn-primary\">Add</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- allergies -->\r\n\r\n\r\n<div class=\"modal fade allergies\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myLargeModalLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog modal-lg\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Add Allergies</h5>\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <form>\r\n          <div class=\"row mb-20 mt-20\">\r\n            <div class=\"col-lg-6\">\r\n              <div class=\"form-group\">\r\n                <label for=\"\">Allergy</label>\r\n                <!-- <input type=\"text \" class=\"form-control\" id=\"\" aria-describedby=\"\" placeholder=\"Enter First Name\"> -->\r\n                <select class=\"form-control\" id=\"exampleFormControlSelect1\">\r\n                    <option value=\"\">-Select Allergy Type</option>\r\n                    <option  value=\"0\">Allergic conjunctivitis(Pink eye)</option>\r\n                    <option  value=\"1\">Allergic Rhinitis</option>\r\n                    <option  value=\"2\">Asthma</option>\r\n                    <option  value=\"3\">Chemical sensitivity</option>\r\n                    <option  value=\"4\">Drug</option>\r\n                    <option  value=\"5\">Food</option>\r\n                    <option  value=\"6\">Insect (e.g Bee) sting</option>\r\n                    <option  value=\"7\">Latex</option>\r\n                    <option  value=\"8\">Sinusitis</option>\r\n                    <option  value=\"9\">Skin</option>\r\n                    <option value=\"-1\">Other </option>\r\n                  </select>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-lg-6\">\r\n              <div class=\"form-group\">\r\n                <label for=\"\">Allergy Name</label>\r\n                <select class=\"form-control\" id=\"exampleFormControlSelect1\">\r\n                    <option value=\"\">-Select Allergy Type</option>\r\n                    <option  value=\"Allergic drug reactions\" >Allergic drug reactions</option>\r\n                    <option value=\"Dose-related\" >Dose-related</option>\r\n                    <option  value=\"Idiosyncratic adverse reactions\" >Idiosyncratic adverse reactions</option>\r\n                    <option value=\"-1\">Other </option>\r\n                  </select>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"row mb-20\">\r\n              <div class=\"col-lg-6\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"\">Reaction</label>\r\n                  <input type=\"text \" class=\"form-control\" id=\"\" aria-describedby=\"\" placeholder=\"Enter Reaction\" >\r\n                </div>\r\n              </div>\r\n              <div class=\"col-lg-6\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"\">Treatment </label>\r\n                  <input type=\"text \" class=\"form-control\" id=\"\" aria-describedby=\"\" placeholder=\"Enter Treatment\" >\r\n                </div>\r\n              </div>\r\n            </div>\r\n        </form>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n        <button type=\"button\" class=\"btn btn-primary\">Add</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- MEdication -->\r\n<div class=\"modal fade medication\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myLargeModalLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog modal-lg\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Add Medication</h5>\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <form>\r\n          <div class=\"row mb-20 mt-20\">\r\n            <div class=\"col-lg-6\">\r\n              <div class=\"form-group\">\r\n                <label for=\"\">Medication</label>\r\n                <!-- <input type=\"text \" class=\"form-control\" id=\"\" aria-describedby=\"\" placeholder=\"Enter First Name\"> -->\r\n                <select class=\"form-control\" id=\"exampleFormControlSelect1\">\r\n                    <option value=\"\">-Select Medication</option>\r\n                    <option value=\"1\">Cephalexin- 50 mg/kg/day PO</option>\r\n                    <option value=\"2\">Cefazolin- 50 mg/kg/day </option>\r\n                    <option value=\"3\">Doxycycline- 5 mg/kg/day  </option>\r\n                    <option value=\"-1\">Other </option>\r\n                  </select>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-lg-6\">\r\n              <div class=\"form-group\">\r\n                <label for=\"\">Strength</label>\r\n                <input type=\"text \" class=\"form-control\" id=\"\" aria-describedby=\"\" placeholder=\"Enter Strength\">\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <div class=\"row mb-20\">\r\n              <div class=\"col-lg-6\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"\">Units</label>\r\n                  <input type=\"text \" class=\"form-control\" id=\"\" aria-describedby=\"\" placeholder=\"Enter Unit\" >\r\n                </div>\r\n              </div>\r\n              <div class=\"col-lg-6\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"\">Dose </label>\r\n                  <input type=\"text \" class=\"form-control\" id=\"\" aria-describedby=\"\" placeholder=\"Enter Dose\" >\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"row mb-20\">\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">How Taken?</label>\r\n                    <input type=\"text \" class=\"form-control\" id=\"\" aria-describedby=\"\" placeholder=\"Enter How Taken?\" >\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Other Medication </label>\r\n                    <input type=\"text \" class=\"form-control\" id=\"\" aria-describedby=\"\" placeholder=\"Other Medication\" disabled >\r\n                  </div>\r\n                </div>\r\n              </div>\r\n        </form>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n        <button type=\"button\" class=\"btn btn-primary\">Add</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n<!-- Add Guardian info -->\r\n<div class=\"modal fade guardianinfo\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myLargeModalLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog modal-lg\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Add Guardian</h5>\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n       \r\n        <form>\r\n          <div class=\"row mb-20 mt-20\">\r\n            <div class=\"col-lg-6\">\r\n              <div class=\"form-group\">\r\n                <label for=\"\">First name</label>\r\n                <input type=\"text \" class=\"form-control\" id=\"\" aria-describedby=\"\" placeholder=\"Enter First Name\">\r\n              </div>\r\n            </div>\r\n            <div class=\"col-lg-6\">\r\n              <div class=\"form-group\">\r\n                <label for=\"\">Last name</label>\r\n                <input type=\"text \" class=\"form-control\" id=\"\" aria-describedby=\"\" placeholder=\"Enter Last Name\">\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"row mb-20\">\r\n            <div class=\"col-lg-6\">\r\n              <div class=\"form-group\">\r\n                <label for=\"\">Relation</label>\r\n                <input type=\"text \" class=\"form-control\" id=\"\" aria-describedby=\"\" placeholder=\"Enter Relation\">\r\n              </div>\r\n            </div>\r\n            <div class=\"col-lg-6\">\r\n              <div class=\"form-group\">\r\n                <label for=\"\">Phone number</label>\r\n                <input type=\"text \" class=\"form-control\" id=\"\" aria-describedby=\"\" placeholder=\"Enter Phone number\">\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <label class=\"checkboxcustom\">\r\n            <input type=\"checkbox\" checked=\"checked\">\r\n            <span class=\"checkmark\"></span>Make Responsible for Check-in & Check-out\r\n          </label>\r\n        </form>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n        <button type=\"button\" class=\"btn btn-primary\">Add</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n  <!-- <div class=\"d-flex justify-content-between mt-20 subhead\"><div><h3>Kids List</h3></div> </div> -->\r\n</div>\r\n</div>"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-add-student/agency-admin-add-student.component.ts":
/*!***************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-add-student/agency-admin-add-student.component.ts ***!
  \***************************************************************************************************************/
/*! exports provided: AgencyAdminAddStudentComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AgencyAdminAddStudentComponent", function() { return AgencyAdminAddStudentComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var AgencyAdminAddStudentComponent = /** @class */ (function () {
    function AgencyAdminAddStudentComponent() {
    }
    AgencyAdminAddStudentComponent.prototype.ngOnInit = function () {
    };
    AgencyAdminAddStudentComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-agency-admin-add-student',
            template: __webpack_require__(/*! ./agency-admin-add-student.component.html */ "./src/app/layout/agency-admin/components/agency-admin-add-student/agency-admin-add-student.component.html"),
            styles: [__webpack_require__(/*! ./agency-admin-add-student.component.css */ "./src/app/layout/agency-admin/components/agency-admin-add-student/agency-admin-add-student.component.css")]
        }),
        __metadata("design:paramtypes", [])
    ], AgencyAdminAddStudentComponent);
    return AgencyAdminAddStudentComponent;
}());



/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-allergy-report/agency-admin-allergy-report.component.css":
/*!**********************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-allergy-report/agency-admin-allergy-report.component.css ***!
  \**********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9hZ2VuY3ktYWRtaW4vY29tcG9uZW50cy9hZ2VuY3ktYWRtaW4tYWxsZXJneS1yZXBvcnQvYWdlbmN5LWFkbWluLWFsbGVyZ3ktcmVwb3J0LmNvbXBvbmVudC5jc3MifQ== */"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-allergy-report/agency-admin-allergy-report.component.html":
/*!***********************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-allergy-report/agency-admin-allergy-report.component.html ***!
  \***********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"wrapper\">\r\n  <div class=\"container-fluid\">\r\n\r\n    <div class=\"pagetitle\">\r\n      <div>\r\n        <h2>Report\r\n          <span>/ Allergy Report </span>\r\n        </h2>\r\n      </div>\r\n    </div>\r\n    <div class=\"subhead d-flex justify-content-between mt-20\">\r\n      <div>\r\n        <h3>Student Allergy Report</h3>\r\n      </div>\r\n      <div style=\"cursor:pointer\" title=\"Download report\" (click)=\"pdfReportForAllergy()\"><i class=\"fa fa-download\" aria-hidden=\"true\"></i>\r\n      </div>\r\n    </div>\r\n    <div class=\"card cardfilter\">     \r\n         <div class=\"leftfilter\">\r\n        <div class=\"row algcenter\">\r\n          <div class=\"search-date\">\r\n            <div class=\"pr15 label-text\">Search Name : </div>\r\n            <input type=\"text\" placeholder=\"Search student name\" [(ngModel)]=\"searchByStudentName\" class=\"form-control mr15\" id=\"\">\r\n          </div>\r\n          <div class=\"filter-buttons\">\r\n            <button type=\"submit\" class=\"btn btn-send\"  (click)=\"search()\">Search</button>            \r\n          </div>\r\n      </div> \r\n    </div>\r\n\r\n    <div class=\"studentlist\">\r\n      <div class=\"tab-content\" id=\"pills-tabContent\">\r\n        <div class=\"tab-pane fade show active\" id=\"pills-appstudent\" role=\"tabpanel\" aria-labelledby=\"appStudent\">\r\n\r\n          <div class=\"innertable studentListSearch\">\r\n            <div class=\"table-responsive\">\r\n              <table class=\"table \">\r\n                <thead class=\"thead-light\">\r\n                  <tr>\r\n                    <th scope=\"col\">Student Name</th>\r\n                    <th scope=\"col\">Allergy Name</th>\r\n                    <th scope=\"col\">Allergy Type</th>\r\n                    <th scope=\"col\">Allergy Reaction</th>\r\n                    <th scope=\"col\">Treatment</th>\r\n                    <th class=\"text-center\" scope=\"col\">First Observed Date</th>\r\n                    <th class=\"text-center\" scope=\"col\">Last Observed Date</th>\r\n                    <th scope=\"col\">Comment</th>\r\n                      \r\n                  </tr>\r\n                </thead>\r\n                <tbody >\r\n               <tr *ngFor=\"let report of reportList\">\r\n                <td>{{report.studentName}}</td>\r\n                <td>{{report.allergyName}}</td>\r\n                <td>{{report.allergy}}</td>\r\n                <td>{{report.allergyReaction}}</td>\r\n                <td>{{report.allergyTreatment}}</td>\r\n                <td class=\"text-center\">\r\n                <p *ngIf=\"report.allergyFirstObservedDate\">{{report.allergyFirstObservedDate| date}} </p>  \r\n                <p *ngIf=\"!report.allergyFirstObservedDate\"> --- </p>   \r\n              </td>\r\n                <td class=\"text-center\">\r\n                  <p *ngIf=\"report.allergyLastObservedDate\">{{report.allergyLastObservedDate| date}} </p>  \r\n                  <p *ngIf=\"!report.allergyLastObservedDate\"> --- </p> \r\n                </td>\r\n                <td>{{report.allergyComment}}</td>\r\n               </tr>\r\n                </tbody>             \r\n              </table>\r\n              <div class=\"text-center\">\r\n                  <span  *ngIf=\"reportList.length == 0 && !loader\" class=\"text-center\">No result found</span>\r\n                </div> \r\n            </div>\r\n            <p-paginator [alwaysShow]=\"false\" [rows]=\"limit\" [totalRecords]=\"totalRecord\" (onPageChange)=\"paginate($event)\"></p-paginator>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<ngx-spinner type=\"ball-atom\" size=\"medium\" color=\"#58A7FE\"></ngx-spinner>\r\n"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-allergy-report/agency-admin-allergy-report.component.ts":
/*!*********************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-allergy-report/agency-admin-allergy-report.component.ts ***!
  \*********************************************************************************************************************/
/*! exports provided: AgencyAdminAllergyReportComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AgencyAdminAllergyReportComponent", function() { return AgencyAdminAllergyReportComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../shared/services/agency-api-service/agency-api.service */ "./src/app/layout/agency-admin/components/shared/services/agency-api-service/agency-api.service.ts");
/* harmony import */ var _shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../shared/services/error-handler/error-handler.service */ "./src/app/shared/services/error-handler/error-handler.service.ts");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ngx-spinner */ "./node_modules/ngx-spinner/fesm5/ngx-spinner.js");
/* harmony import */ var _shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../shared/services/notification-service/notification.service */ "./src/app/shared/services/notification-service/notification.service.ts");
/* harmony import */ var _shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../shared/services/common/common.service */ "./src/app/shared/services/common/common.service.ts");
/* harmony import */ var _shared_constatant__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../shared/constatant */ "./src/app/layout/agency-admin/components/shared/constatant.ts");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../../environments/environment */ "./src/environments/environment.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








var AgencyAdminAllergyReportComponent = /** @class */ (function () {
    function AgencyAdminAllergyReportComponent(apiService, error, spinner, notification, commonService) {
        this.apiService = apiService;
        this.error = error;
        this.spinner = spinner;
        this.notification = notification;
        this.commonService = commonService;
        this.reportList = [];
        this.pageNo = 0;
        this.limit = 10;
        this.totalRecord = 0;
        this.searchByStudentName = '';
        this.loader = true;
        this.showClearBtn = false;
    }
    AgencyAdminAllergyReportComponent.prototype.ngOnInit = function () {
        this.getAllergyReport();
    };
    AgencyAdminAllergyReportComponent.prototype.getAllergyReport = function () {
        var _this = this;
        this.loader = true;
        this.reportList = [];
        this.spinner.show();
        var data = {
            'agencyID': this.commonService.getAgencyId(),
            'studentName': this.searchByStudentName,
            'page': this.pageNo,
            'limit': this.limit
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_6__["AgencyAPIURLs"].GetAllergyReport, data, null).subscribe(function (res) {
            _this.totalRecord = res.body.totalRows;
            if (res.body.statusCode === 200) {
                _this.spinner.hide();
                _this.reportList = res.body.data;
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
            _this.loader = false;
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminAllergyReportComponent.prototype.paginate = function (event) {
        this.pageNo = event.page;
        this.getAllergyReport();
    };
    AgencyAdminAllergyReportComponent.prototype.pdfReportForAllergy = function () {
        var _this = this;
        this.loader = true;
        this.spinner.show();
        var req = {
            'StudentName': this.searchByStudentName,
            'agencyID': this.commonService.getAgencyId()
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_6__["AgencyAPIURLs"].PdfAllergyReport, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                var filename = _environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].baseUrl + res.body.fileName;
                var name_1 = res.body.fileName;
                window.open(filename);
                setTimeout(function () {
                    _this.deletePdFFromServer(name_1);
                }, 10000);
            }
            else {
                _this.error.unknownError();
            }
            _this.loader = false;
            _this.spinner.hide();
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    // Delete pdf after use from server
    AgencyAdminAllergyReportComponent.prototype.deletePdFFromServer = function (filename) {
        var req = {
            'fileName': filename,
            'agencyID': this.commonService.getAgencyId()
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_6__["AgencyAPIURLs"].DeleteExistingFile, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
            }
            else {
            }
        }, function (err) {
            console.log(err);
        });
    };
    AgencyAdminAllergyReportComponent.prototype.search = function () {
        this.pageNo = 0;
        this.showClearBtn = true;
        this.getAllergyReport();
    };
    AgencyAdminAllergyReportComponent.prototype.clearSearch = function () {
        this.searchByStudentName = '';
        this.showClearBtn = false;
        this.getAllergyReport();
    };
    AgencyAdminAllergyReportComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-agency-admin-allergy-report',
            template: __webpack_require__(/*! ./agency-admin-allergy-report.component.html */ "./src/app/layout/agency-admin/components/agency-admin-allergy-report/agency-admin-allergy-report.component.html"),
            styles: [__webpack_require__(/*! ./agency-admin-allergy-report.component.css */ "./src/app/layout/agency-admin/components/agency-admin-allergy-report/agency-admin-allergy-report.component.css")]
        }),
        __metadata("design:paramtypes", [_shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_1__["AgencyApiService"], _shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_2__["ErrorHandlerService"],
            ngx_spinner__WEBPACK_IMPORTED_MODULE_3__["NgxSpinnerService"], _shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_4__["NotificationService"],
            _shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_5__["CommonService"]])
    ], AgencyAdminAllergyReportComponent);
    return AgencyAdminAllergyReportComponent;
}());



/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-attendance-report/agency-admin-attendance-report.component.css":
/*!****************************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-attendance-report/agency-admin-attendance-report.component.css ***!
  \****************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9hZ2VuY3ktYWRtaW4vY29tcG9uZW50cy9hZ2VuY3ktYWRtaW4tYXR0ZW5kYW5jZS1yZXBvcnQvYWdlbmN5LWFkbWluLWF0dGVuZGFuY2UtcmVwb3J0LmNvbXBvbmVudC5jc3MifQ== */"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-attendance-report/agency-admin-attendance-report.component.html":
/*!*****************************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-attendance-report/agency-admin-attendance-report.component.html ***!
  \*****************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"wrapper\">\r\n    <div class=\"container-fluid\">\r\n  \r\n      <div class=\"pagetitle\">\r\n        <div>\r\n          <h2>Report\r\n            <span>/ Attendance Report </span>\r\n          </h2>\r\n        </div>\r\n      </div>\r\n      <div class=\"subhead d-flex justify-content-between mt-20\">\r\n        <div>\r\n          <h3>Student Attendance Report</h3>\r\n        </div>\r\n        <div style=\"cursor:pointer\" title=\"Download report\" (click)=\"pdfReportForClassAttendence()\"><i class=\"fa fa-download\" aria-hidden=\"true\"></i>\r\n        </div>\r\n      </div>\r\n      <div class=\"card cardfilter\">      \r\n           <div class=\"leftfilter\">\r\n          <div class=\"row algcenter\">\r\n            <div class=\"search-date\">\r\n              <div class=\"pr15 label-text\">Search Name : </div>\r\n              <input type=\"text\" placeholder=\"Search student name\" [(ngModel)]=\"searchByStudentName\" class=\"form-control mr15\" id=\"\">\r\n            </div>\r\n            <div class=\"search-date\">\r\n              <div class=\"pr15 label-text\">From Date : </div>\r\n              <input type=\"text\" placeholder=\"Search by date\" [(ngModel)]=\"fromDate\"  showWeekNumbers=\"false\"\r\n                class=\"form-control mr15\" [bsConfig]=\"dpConfig\" bsDatepicker>\r\n                </div>\r\n                <div class=\"search-date\">\r\n                  <div class=\"pr15 label-text\">To Date : </div>\r\n                  <input type=\"text\" placeholder=\"Search by date\" [(ngModel)]=\"toDate\"  showWeekNumbers=\"false\"\r\n                    class=\"form-control mr15\" [bsConfig]=\"dpConfig\" bsDatepicker>\r\n                    </div>\r\n            <div class=\"filter-buttons\">\r\n              <button type=\"submit\" class=\"btn btn-send\" *ngIf=\"!showClearBtn\" (click)=\"search()\">Search</button>\r\n              <button type=\"submit\" class=\"btn btn-secondary\" *ngIf=\"showClearBtn\" (click)=\"clearSearch()\">Clear</button>\r\n            </div>\r\n        </div> \r\n      </div>\r\n  \r\n      <div class=\"studentlist\">\r\n        <div class=\"tab-content\" id=\"pills-tabContent\">\r\n          <div class=\"tab-pane fade show active\" id=\"pills-appstudent\" role=\"tabpanel\" aria-labelledby=\"appStudent\">\r\n  \r\n            <div class=\"innertable studentListSearch\">\r\n              <div class=\"table-responsive\">\r\n                <table class=\"table \">\r\n                  <thead class=\"thead-light\">\r\n                    <tr>\r\n                      <th scope=\"col\" >Student Name</th>\r\n                      <th scope=\"col\" >Class Name</th>\r\n                      <th scope=\"col\" >Date</th>\r\n                      <th scope=\"col\" class=\"text-center\">Check-In Time</th>\r\n                      <th scope=\"col\" class=\"text-center\">Check-Out Time</th>\r\n                      <th scope=\"col\" class=\"text-center\" >Attendance Status</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody >\r\n                 <tr *ngFor=\"let report of reportList\">\r\n                  <td >{{report.studentName}}</td>\r\n                  <td >{{report.classesName}}</td>\r\n                  <td >{{report.attendanceDate | date}}</td>\r\n                  <td class=\"text-center\">\r\n                      <p *ngIf=\"report.checkInTime != '0001-01-01T00:00:00'\">{{report.checkInTime| date: 'hh:mm a'}}</p>  \r\n                      <p *ngIf=\"report.checkInTime == '0001-01-01T00:00:00'\">---</p>\r\n                  </td>\r\n                  <td class=\"text-center\">\r\n                      <p *ngIf=\"report.checkOutTime != '0001-01-01T00:00:00'\">{{report.checkOutTime| date: 'hh:mm a'}}</p>  \r\n                      <p *ngIf=\"report.checkOutTime == '0001-01-01T00:00:00'\">---</p>  \r\n                    </td>\r\n                    <td class=\"text-center\">\r\n                        <p *ngIf=\"report.attendenceStatus == true\">Absent</p>\r\n                        <p *ngIf=\"report.attendenceStatus == false\">Present</p>\r\n                    </td>\r\n                 </tr>\r\n                  </tbody>                \r\n                </table>\r\n                <div class=\"text-center\">\r\n                    <span  *ngIf=\"reportList.length == 0 && !loader\" class=\"text-center\">No result found</span>\r\n                  </div> \r\n              </div>\r\n              <p-paginator [alwaysShow]=\"false\" [rows]=\"limit\" [totalRecords]=\"totalRecord\" (onPageChange)=\"paginate($event)\"></p-paginator>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  \r\n  <ngx-spinner type=\"ball-atom\" size=\"medium\" color=\"#58A7FE\"></ngx-spinner>\r\n  "

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-attendance-report/agency-admin-attendance-report.component.ts":
/*!***************************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-attendance-report/agency-admin-attendance-report.component.ts ***!
  \***************************************************************************************************************************/
/*! exports provided: AgencyAdminAttendanceReportComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AgencyAdminAttendanceReportComponent", function() { return AgencyAdminAttendanceReportComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../shared/services/agency-api-service/agency-api.service */ "./src/app/layout/agency-admin/components/shared/services/agency-api-service/agency-api.service.ts");
/* harmony import */ var _shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../shared/services/error-handler/error-handler.service */ "./src/app/shared/services/error-handler/error-handler.service.ts");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ngx-spinner */ "./node_modules/ngx-spinner/fesm5/ngx-spinner.js");
/* harmony import */ var _shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../shared/services/notification-service/notification.service */ "./src/app/shared/services/notification-service/notification.service.ts");
/* harmony import */ var _shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../shared/services/common/common.service */ "./src/app/shared/services/common/common.service.ts");
/* harmony import */ var _shared_constatant__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../shared/constatant */ "./src/app/layout/agency-admin/components/shared/constatant.ts");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../../environments/environment */ "./src/environments/environment.ts");
/* harmony import */ var ngx_bootstrap__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ngx-bootstrap */ "./node_modules/ngx-bootstrap/esm5/ngx-bootstrap.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









var AgencyAdminAttendanceReportComponent = /** @class */ (function () {
    function AgencyAdminAttendanceReportComponent(apiService, error, spinner, notification, commonService) {
        this.apiService = apiService;
        this.error = error;
        this.spinner = spinner;
        this.notification = notification;
        this.commonService = commonService;
        this.reportList = [];
        this.pageNo = 0;
        this.limit = 10;
        this.totalRecord = 0;
        this.searchByStudentName = '';
        this.loader = true;
        this.showClearBtn = false;
        this.dpConfig = new ngx_bootstrap__WEBPACK_IMPORTED_MODULE_8__["BsDatepickerConfig"]();
    }
    AgencyAdminAttendanceReportComponent.prototype.ngOnInit = function () {
        this.dpConfig = Object.assign({}, { containerClass: 'theme-dark-blue' }, { showWeekNumbers: false });
        this.getClassAttendenceReport();
    };
    AgencyAdminAttendanceReportComponent.prototype.getClassAttendenceReport = function () {
        var _this = this;
        this.loader = true;
        this.reportList = [];
        this.spinner.show();
        var data = {
            'agencyID': this.commonService.getAgencyId(),
            'studentName': this.searchByStudentName,
            'page': this.pageNo,
            'limit': this.limit,
            'fromDate': this.fromDate ? this.fromDate : this.blankDate,
            'toDate': this.toDate ? this.toDate : this.blankDate
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_6__["AgencyAPIURLs"].GetClassAttendenceReport, data, null).subscribe(function (res) {
            _this.totalRecord = res.body.totalRows;
            if (res.body.statusCode === 200) {
                _this.spinner.hide();
                _this.reportList = res.body.data;
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
            _this.loader = false;
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminAttendanceReportComponent.prototype.paginate = function (event) {
        this.pageNo = event.page;
        this.getClassAttendenceReport();
    };
    AgencyAdminAttendanceReportComponent.prototype.pdfReportForClassAttendence = function () {
        var _this = this;
        this.loader = true;
        this.spinner.show();
        var req = {
            'StudentName': this.searchByStudentName,
            'agencyID': this.commonService.getAgencyId()
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_6__["AgencyAPIURLs"].PdfReportForClassAttendence, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                var filename = _environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].baseUrl + res.body.fileName;
                var name_1 = res.body.fileName;
                window.open(filename);
                setTimeout(function () {
                    _this.deletePdFFromServer(name_1);
                }, 10000);
            }
            else {
                _this.error.unknownError();
            }
            _this.loader = false;
            _this.spinner.hide();
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    // Delete pdf after use from server
    AgencyAdminAttendanceReportComponent.prototype.deletePdFFromServer = function (filename) {
        var req = {
            'fileName': filename,
            'agencyID': this.commonService.getAgencyId()
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_6__["AgencyAPIURLs"].DeleteExistingFile, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
            }
            else {
            }
        }, function (err) {
            console.log(err);
        });
    };
    AgencyAdminAttendanceReportComponent.prototype.search = function () {
        this.pageNo = 0;
        this.showClearBtn = true;
        this.getClassAttendenceReport();
    };
    AgencyAdminAttendanceReportComponent.prototype.clearSearch = function () {
        this.searchByStudentName = '';
        this.fromDate = null;
        this.toDate = null;
        this.showClearBtn = false;
        this.getClassAttendenceReport();
    };
    AgencyAdminAttendanceReportComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-agency-admin-attendance-report',
            template: __webpack_require__(/*! ./agency-admin-attendance-report.component.html */ "./src/app/layout/agency-admin/components/agency-admin-attendance-report/agency-admin-attendance-report.component.html"),
            styles: [__webpack_require__(/*! ./agency-admin-attendance-report.component.css */ "./src/app/layout/agency-admin/components/agency-admin-attendance-report/agency-admin-attendance-report.component.css")]
        }),
        __metadata("design:paramtypes", [_shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_1__["AgencyApiService"], _shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_2__["ErrorHandlerService"],
            ngx_spinner__WEBPACK_IMPORTED_MODULE_3__["NgxSpinnerService"], _shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_4__["NotificationService"],
            _shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_5__["CommonService"]])
    ], AgencyAdminAttendanceReportComponent);
    return AgencyAdminAttendanceReportComponent;
}());



/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-attendence/agency-admin-attendence.component.css":
/*!**************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-attendence/agency-admin-attendence.component.css ***!
  \**************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".tgl-flip + .tgl-btn {\r\n  /* padding: 2px; */\r\n  transition: all .2s ease;\r\n  font-family: sans-serif;\r\n  -webkit-perspective: 100px;\r\n          perspective: 100px;\r\n  width: 100px;\r\n  padding: 10px;   \r\n  height: 28px;\r\n  line-height: 28px;\r\n  margin-bottom: 0;\r\n   \r\n}\r\n.tgl-flip + .tgl-btn:after, .tgl-flip + .tgl-btn:before {\r\n  display: inline-block;\r\n  transition: all .4s ease;\r\n  width: 100%;\r\n  text-align: center;\r\n  position: absolute;\r\n  /* line-height: 2em; */\r\n  font-weight: bold;\r\n  color: #fff;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  -webkit-backface-visibility: hidden;\r\n          backface-visibility: hidden;\r\n  border-radius: 4px;\r\n}\r\n.tgl-flip + .tgl-btn:after {\r\n  content: attr(data-tg-on);\r\n  background: #02C66F;\r\n  -webkit-transform: rotateY(-180deg);\r\n          transform: rotateY(-180deg);\r\n}\r\n.tgl-flip + .tgl-btn:before {\r\n  background: #FF3A19;\r\n  content: attr(data-tg-off);\r\n}\r\n.tgl-flip + .tgl-btn:active:before {\r\n  -webkit-transform: rotateY(-20deg);\r\n          transform: rotateY(-20deg);\r\n          height: 28px;\r\n          line-height: 28px;\r\n      \r\n}\r\n.tgl-flip:checked + .tgl-btn:before {\r\n  -webkit-transform: rotateY(180deg);\r\n          transform: rotateY(180deg);\r\n}\r\n.tgl-flip:checked + .tgl-btn:after {\r\n  -webkit-transform: rotateY(0);\r\n          transform: rotateY(0);\r\n  left: 0;\r\n  background: #7FC6A6;\r\n}\r\n.tgl-flip:checked + .tgl-btn:active:after {\r\n  -webkit-transform: rotateY(20deg);\r\n          transform: rotateY(20deg);\r\n}\r\ninput#cb5 {\r\n  display: none;\r\n}\r\ntextarea {border: 1px solid #efefef; width: 100%}\r\ninput[type=\"radio\"]:checked + span {\r\n  color: #fff;\r\n  background-color: #58A7FE;\r\n  border-radius: 5px;\r\n  height: 28px;\r\n\r\n  line-height: 28px;\r\n}\r\ninput[type=\"radio\"] + span{\r\n  color: #333;\r\nfont-size: 14px;\r\nfont-weight: 400;\r\n  border-radius: 5px;\r\n  height: 28px;\r\n\r\n  line-height: 28px;\r\n\r\n}\r\n.info-icon{\r\n  margin-left: 243px;\r\n  font-size: 20px; \r\n  color: #383333;\r\n}\r\n\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L2FnZW5jeS1hZG1pbi9jb21wb25lbnRzL2FnZW5jeS1hZG1pbi1hdHRlbmRlbmNlL2FnZW5jeS1hZG1pbi1hdHRlbmRlbmNlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxrQkFBa0I7RUFDbEIsd0JBQXdCO0VBQ3hCLHVCQUF1QjtFQUN2QiwwQkFBMEI7VUFDbEIsa0JBQWtCO0VBQzFCLFlBQVk7RUFDWixhQUFhO0VBQ2IsWUFBWTtFQUNaLGlCQUFpQjtFQUNqQixnQkFBZ0I7O0FBRWxCO0FBQ0E7RUFDRSxxQkFBcUI7RUFDckIsd0JBQXdCO0VBQ3hCLFdBQVc7RUFDWCxrQkFBa0I7RUFDbEIsa0JBQWtCO0VBQ2xCLHNCQUFzQjtFQUN0QixpQkFBaUI7RUFDakIsV0FBVztFQUNYLGtCQUFrQjtFQUNsQixNQUFNO0VBQ04sT0FBTztFQUNQLG1DQUFtQztVQUMzQiwyQkFBMkI7RUFDbkMsa0JBQWtCO0FBQ3BCO0FBQ0E7RUFDRSx5QkFBeUI7RUFDekIsbUJBQW1CO0VBQ25CLG1DQUFtQztVQUMzQiwyQkFBMkI7QUFDckM7QUFDQTtFQUNFLG1CQUFtQjtFQUNuQiwwQkFBMEI7QUFDNUI7QUFDQTtFQUNFLGtDQUFrQztVQUMxQiwwQkFBMEI7VUFDMUIsWUFBWTtVQUNaLGlCQUFpQjs7QUFFM0I7QUFDQTtFQUNFLGtDQUFrQztVQUMxQiwwQkFBMEI7QUFDcEM7QUFDQTtFQUNFLDZCQUE2QjtVQUNyQixxQkFBcUI7RUFDN0IsT0FBTztFQUNQLG1CQUFtQjtBQUNyQjtBQUNBO0VBQ0UsaUNBQWlDO1VBQ3pCLHlCQUF5QjtBQUNuQztBQUNBO0VBQ0UsYUFBYTtBQUNmO0FBRUEsVUFBVSx5QkFBeUIsRUFBRSxXQUFXO0FBRWhEO0VBQ0UsV0FBVztFQUNYLHlCQUF5QjtFQUN6QixrQkFBa0I7RUFDbEIsWUFBWTs7RUFFWixpQkFBaUI7QUFDbkI7QUFFQTtFQUNFLFdBQVc7QUFDYixlQUFlO0FBQ2YsZ0JBQWdCO0VBQ2Qsa0JBQWtCO0VBQ2xCLFlBQVk7O0VBRVosaUJBQWlCOztBQUVuQjtBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLGVBQWU7RUFDZixjQUFjO0FBQ2hCIiwiZmlsZSI6InNyYy9hcHAvbGF5b3V0L2FnZW5jeS1hZG1pbi9jb21wb25lbnRzL2FnZW5jeS1hZG1pbi1hdHRlbmRlbmNlL2FnZW5jeS1hZG1pbi1hdHRlbmRlbmNlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudGdsLWZsaXAgKyAudGdsLWJ0biB7XHJcbiAgLyogcGFkZGluZzogMnB4OyAqL1xyXG4gIHRyYW5zaXRpb246IGFsbCAuMnMgZWFzZTtcclxuICBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcclxuICAtd2Via2l0LXBlcnNwZWN0aXZlOiAxMDBweDtcclxuICAgICAgICAgIHBlcnNwZWN0aXZlOiAxMDBweDtcclxuICB3aWR0aDogMTAwcHg7XHJcbiAgcGFkZGluZzogMTBweDsgICBcclxuICBoZWlnaHQ6IDI4cHg7XHJcbiAgbGluZS1oZWlnaHQ6IDI4cHg7XHJcbiAgbWFyZ2luLWJvdHRvbTogMDtcclxuICAgXHJcbn1cclxuLnRnbC1mbGlwICsgLnRnbC1idG46YWZ0ZXIsIC50Z2wtZmxpcCArIC50Z2wtYnRuOmJlZm9yZSB7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gIHRyYW5zaXRpb246IGFsbCAuNHMgZWFzZTtcclxuICB3aWR0aDogMTAwJTtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIC8qIGxpbmUtaGVpZ2h0OiAyZW07ICovXHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgY29sb3I6ICNmZmY7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHRvcDogMDtcclxuICBsZWZ0OiAwO1xyXG4gIC13ZWJraXQtYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xyXG4gICAgICAgICAgYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xyXG4gIGJvcmRlci1yYWRpdXM6IDRweDtcclxufVxyXG4udGdsLWZsaXAgKyAudGdsLWJ0bjphZnRlciB7XHJcbiAgY29udGVudDogYXR0cihkYXRhLXRnLW9uKTtcclxuICBiYWNrZ3JvdW5kOiAjMDJDNjZGO1xyXG4gIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGVZKC0xODBkZWcpO1xyXG4gICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGVZKC0xODBkZWcpO1xyXG59XHJcbi50Z2wtZmxpcCArIC50Z2wtYnRuOmJlZm9yZSB7XHJcbiAgYmFja2dyb3VuZDogI0ZGM0ExOTtcclxuICBjb250ZW50OiBhdHRyKGRhdGEtdGctb2ZmKTtcclxufVxyXG4udGdsLWZsaXAgKyAudGdsLWJ0bjphY3RpdmU6YmVmb3JlIHtcclxuICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlWSgtMjBkZWcpO1xyXG4gICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGVZKC0yMGRlZyk7XHJcbiAgICAgICAgICBoZWlnaHQ6IDI4cHg7XHJcbiAgICAgICAgICBsaW5lLWhlaWdodDogMjhweDtcclxuICAgICAgXHJcbn1cclxuLnRnbC1mbGlwOmNoZWNrZWQgKyAudGdsLWJ0bjpiZWZvcmUge1xyXG4gIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGVZKDE4MGRlZyk7XHJcbiAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZVkoMTgwZGVnKTtcclxufVxyXG4udGdsLWZsaXA6Y2hlY2tlZCArIC50Z2wtYnRuOmFmdGVyIHtcclxuICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlWSgwKTtcclxuICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlWSgwKTtcclxuICBsZWZ0OiAwO1xyXG4gIGJhY2tncm91bmQ6ICM3RkM2QTY7XHJcbn1cclxuLnRnbC1mbGlwOmNoZWNrZWQgKyAudGdsLWJ0bjphY3RpdmU6YWZ0ZXIge1xyXG4gIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGVZKDIwZGVnKTtcclxuICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlWSgyMGRlZyk7XHJcbn1cclxuaW5wdXQjY2I1IHtcclxuICBkaXNwbGF5OiBub25lO1xyXG59XHJcblxyXG50ZXh0YXJlYSB7Ym9yZGVyOiAxcHggc29saWQgI2VmZWZlZjsgd2lkdGg6IDEwMCV9XHJcblxyXG5pbnB1dFt0eXBlPVwicmFkaW9cIl06Y2hlY2tlZCArIHNwYW4ge1xyXG4gIGNvbG9yOiAjZmZmO1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICM1OEE3RkU7XHJcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gIGhlaWdodDogMjhweDtcclxuXHJcbiAgbGluZS1oZWlnaHQ6IDI4cHg7XHJcbn1cclxuXHJcbmlucHV0W3R5cGU9XCJyYWRpb1wiXSArIHNwYW57XHJcbiAgY29sb3I6ICMzMzM7XHJcbmZvbnQtc2l6ZTogMTRweDtcclxuZm9udC13ZWlnaHQ6IDQwMDtcclxuICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgaGVpZ2h0OiAyOHB4O1xyXG5cclxuICBsaW5lLWhlaWdodDogMjhweDtcclxuXHJcbn1cclxuXHJcbi5pbmZvLWljb257XHJcbiAgbWFyZ2luLWxlZnQ6IDI0M3B4O1xyXG4gIGZvbnQtc2l6ZTogMjBweDsgXHJcbiAgY29sb3I6ICMzODMzMzM7XHJcbn1cclxuIl19 */"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-attendence/agency-admin-attendence.component.html":
/*!***************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-attendence/agency-admin-attendence.component.html ***!
  \***************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"wrapper\">\r\n  <div class=\"container-fluid\">\r\n\r\n    <div class=\"pagetitle\">\r\n      <div>\r\n        <h2> Attendance         \r\n        </h2>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"subhead d-flex justify-content-between mt-20\">\r\n      <div>\r\n        <h3>{{className}}</h3>\r\n      </div>\r\n      <div class=\"info-icon\">\r\n        <i class=\"fa fa-info-circle\" (click)=\"OpenInfoVideo()\" data-toggle=\"modal\"\r\n           aria-hidden=\"true\" title=\"Information Video\"></i>\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n    <div class=\"card cardfilter\">    \r\n      <div class=\"row algcenter\">\r\n          <div class=\"leftfilter\">\r\n                <div class=\"search-date\">\r\n                  <div class=\"pr15 label-text\">Search Date : </div>\r\n                  <input type=\"text\" placeholder=\"Search by date\" [(ngModel)]=\"searchDate\" (bsValueChange)=\"getSerchDate($event)\" showWeekNumbers=\"false\"\r\n                     class=\"form-control mr15\" [bsConfig]=\"dpConfig\" bsDatepicker>\r\n                    </div>\r\n              <div class=\"search-class\">\r\n                <div class=\"pr15 label-text\"> Search Class : </div>\r\n                <div class=\"pr15\">\r\n                  <div class=\"form-group\">\r\n                    <select class=\"form-control\" placeholder=\"Serch\" (change)=\"getAttendenceList()\" [(ngModel)]=\"serchByClass\"  id=\"exampleFormControlSelect1\">\r\n                      <option value=\"\">Select class</option>\r\n                      <option *ngFor=\"let classes of classList\" [value]=\"classes.classesID\">{{classes.className}}</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n             \r\n              <div class=\"filter-buttons\">\r\n                <button type=\"submit\" class=\"btn btn-send\" (click)=\"getAttendenceList()\">Search</button>\r\n              </div>\r\n            </div>\r\n            \r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n\r\n\r\n    <div class=\"innertable studentListSearch\">\r\n      <div class=\"table-responsive\">\r\n        <table class=\"table\">\r\n          <thead class=\"thead-light\">\r\n            <tr>              \r\n              <th>Image</th>             \r\n              <th scope=\"col\">Student Name</th>\r\n              <th scope=\"col\">Status</th>\r\n              <th scope=\"col\">Attendance</th>\r\n              <th class=\"text-ceneter\">Edit Time</th>\r\n              <th>Absent Reason </th>\r\n              <th>Transfer</th>\r\n              <th class=\"text-center\">Break Status</th>\r\n              <th>Break Log</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody *ngIf=\"studentList.length != 0\">\r\n            <tr *ngFor=\"let students of studentList\">\r\n              <td *ngIf=\"students.imagePath != ''\">\r\n                <img src=\"{{students.imagePath}}\" alt=\"\" class=\"img-circle childimg\">\r\n              </td>\r\n              <td *ngIf=\"students.imagePath == ''\">\r\n                <img src=\"assets/img/user.png\" alt=\"\" class=\"img-circle childimg\">\r\n              </td>             \r\n              <td style=\"cursor:pointer\">{{students.studentName}}</td>\r\n              <td> <span *ngIf=\"students.attendenceStatusID == 2\">Attendance Not Done Yet</span>\r\n                <span *ngIf=\"students.attendenceStatusID == 3\">Checked In</span>\r\n                <span *ngIf=\"students.attendenceStatusID == 4\">Checked Out</span>\r\n                <span *ngIf=\"students.attendenceStatusID == 5\">Absent</span>\r\n              <td>\r\n                <div *ngIf=\"students.attendenceStatusID != 4\">\r\n                  <input class=\"tgl tgl-flip\" id=\"cb5\" type=\"checkbox\"/>                 \r\n                  <button class=\"btn btn-info\" *ngIf=\"students.attendenceStatusID == 2\" data-toggle=\"modal\" data-target=\"#checkin\"\r\n                    (click)=\"getStudentDetails(students)\">Check In</button>\r\n                    <button class=\"btn btn-success attbtn\" *ngIf=\"students.attendenceStatusID == 3 && students.breakStatusId != 1\" data-toggle=\"modal\"\r\n                    data-target=\"#checkout\" (click)=\"getStudentDetails(students)\">Check\r\n                    Out</button>\r\n\r\n                    <button class=\"btn btn-success attbtn\" title=\"Student is on break\" *ngIf=\"students.attendenceStatusID == 3 && students.breakStatusId == 1\" disabled style=\"cursor: not-allowed\"\r\n                     >Check\r\n                    Out</button>\r\n                </div>\r\n                <div *ngIf=\"(students.attendenceStatusID == 4 || students.attendenceStatusID == 5)\">\r\n                  <button class=\"btn btn-warning\" [disabled]=\"true\" style=\"cursor:not-allowed\">Submitted</button>\r\n                </div>\r\n              </td>\r\n              <td class=\"text-ceneter\">\r\n                <div>\r\n                  <a data-toggle=\"modal\" data-target=\"#edittimecheckout\" class=\"attedit\" title=\"Edit checked out time \"\r\n                    *ngIf=\"students.attendenceStatusID == 4\" (click)=\"getEditCheckOutDetails(students)\"><i class=\"fa fa-pencil attend1\"></i></a>\r\n                  <a data-toggle=\"modal\" data-target=\"#edittimecheckin\" class=\"attedit\" title=\"Edit checked in time \"\r\n                    *ngIf=\"students.attendenceStatusID == 3\" (click)=\"getEditCheckinDetails(students)\"><i class=\"fa fa-pencil attend1\"></i></a>\r\n                </div>\r\n              </td>\r\n              <td>\r\n                <div class=\"button-wrap\" *ngIf=\"students.attendenceStatusID == 2 || students.attendenceStatusID == 5\">\r\n                 \r\n                  <button class=\"btn btn-success\" data-toggle=\"modal\" data-target=\"#excuse\" (click)=\"getAbsentStudentDetails(students)\">Absent\r\n                  </button>\r\n                </div>\r\n              </td>\r\n              <td>\r\n                <div *ngIf=\"(students.attendenceStatusID == 2 || students.attendenceStatusID == 3)\">\r\n                      <button class=\"btn btn-info attbtn\" *ngIf=\"showTransferButton\" (click)=\"getStudentDetailsForTranfer(students)\"  >Transfer</button>\r\n                    <button class=\"btn btn-info attbtn\" *ngIf=\"!showTransferButton\" disabled >Transfer</button>\r\n                  </div>\r\n              </td>\r\n\r\n\r\n              <td class=\"text-center\">\r\n                <label for=\"\" *ngIf=\"students.breakStatusId == 1\" style=\"color: #d61313; cursor: pointer\" >On Break</label>\r\n              </td>\r\n              <td>\r\n                  <a  style=\"color: #58A7FE; cursor: pointer\"   (click)=\"goToBreak(students)\">View break </a> \r\n                  \r\n              </td>\r\n\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <div class=\"text-center\">\r\n          <span *ngIf=\"studentList.length == 0 && !loader\">No result found</span>\r\n        </div>\r\n      </div>      \r\n\r\n      <p-paginator [alwaysShow]=\"false\" [rows]=\"limit\" [totalRecords]=\"totalRecord\" (onPageChange)=\"paginate($event)\"\r\n      ></p-paginator>\r\n    </div>\r\n\r\n\r\n    <!-- Absent Modal -->\r\n    <div class=\"modal fade\" id=\"excuse\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"excuseLabel\" aria-hidden=\"true\">\r\n      <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"excuseLabel\">Add Absent Reason</h5>\r\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <form [formGroup]=\"absentForm\">             \r\n              <div class=\"d-flex\">\r\n              </div>\r\n\r\n              <div class=\"row mb-20\">\r\n                <div class=\"col-lg-12\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Absent Due To</label>                    \r\n                    <select class=\"form-control\" formControlName=\"absentreason\" (change)=\"getAbsentReasonId($event)\" id=\"exampleFormControlSelect1\">\r\n                      <option value=\"\">Select Reason</option>\r\n                      <option *ngFor=\"let reason of absentReasonList\" [value]=\"reason.leaveReasonTypeID\">{{reason.leaveReasonTypeName}}</option>\r\n                    </select>\r\n                    <div *ngIf=\"absentreason.invalid && (absentreason.dirty || absentreason.touched)\" class=\"text-left errormsg\">\r\n                      <span *ngIf=\"absentreason.errors.required\">\r\n                        <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select reason</span>\r\n                      </span>\r\n                    </div>\r\n                    <div class=\"form-group mt-20\" *ngIf=\"showUndoAbsent\">\r\n                      <label class=\"checkboxcustom \"><input type=\"checkbox\" (click)=\"UndoAbsent($event)\">\r\n                        <span class=\"checkmark\"></span> &nbsp;&nbsp;&nbsp; Undo Absent\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div>\r\n              </div>\r\n\r\n              <div *ngIf=\"showOtherAbsentReason\">\r\n                <textarea name=\"\" formControlName=\"other\" id=\"\" cols=\"5\" rows=\"10\" placeholder=\"Absent due to\"></textarea>\r\n              </div>\r\n            </form>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n            <button type=\"button\" *ngIf=\"isSubscriptionActive\" class=\"btn btn-primary\" data-dismiss=\"modal\" [disabled]=\"!absentForm.valid\" (click)=\"saveAbsentData()\">Save\r\n              changes</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- CheckIn Model -->\r\n    <div class=\"modal fade\" id=\"checkin\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"checkinLabel\" aria-hidden=\"true\">\r\n      <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"checkinLabel\">Update Attendance </h5>\r\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n\r\n            <form [formGroup]=\"checkInForm\">\r\n              <div class=\"row mb-20 mt-20\">\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Date</label>\r\n                    <input type=\"text\" placeholder=\"Date\" formControlName=\"indate\" showWeekNumbers=\"false\" \r\n                      class=\"form-control\" [bsConfig]=\"dpConfig\" bsDatepicker [attr.disabled]=\"true\">\r\n                    <div class=\"form-group\">\r\n\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Class </label>\r\n                    <input type=\"text \" formControlName=\"inclass\" class=\"form-control\" id=\"\" aria-describedby=\"\"\r\n                      [readonly]=\"true\">\r\n                    <div *ngIf=\"inclass.invalid && (inclass.dirty || inclass.touched)\" class=\"text-left errormsg\">\r\n                      <span *ngIf=\"inclass.errors.required\">\r\n                        <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please enter class name</span>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"row mb-20 mt-20\">\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Drop-off By</label>                  \r\n                    <div class=\"form-group\">\r\n                      <select class=\"form-control\" formControlName=\"dropby\" (change)=\"getDropOfDropDownValue($event.target.value)\"\r\n                        id=\"exampleFormControlSelect1\">\r\n                        <option value=\"\">Select option</option>\r\n                        <option *ngFor=\"let guardians of guardiansList\" [value]=\"guardians.guardianId\">{{guardians.guardianName}}</option>\r\n                      </select>\r\n                      <div *ngIf=\"dropby.invalid && (dropby.dirty || dropby.touched)\" class=\"text-left errormsg\">\r\n                        <span *ngIf=\"dropby.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select option from list</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Checked-in time</label>                    \r\n                    <p-calendar class=\"custom-textbox-checkedin\" styleClass=\"form-control\" formControlName=\"intime\" hourFormat=\"12\" [timeOnly]=\"true\" icon=\"pi pi-clock\"\r\n                      [showIcon]=\"true\"></p-calendar>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n            <button type=\"button\" *ngIf=\"isSubscriptionActive\" class=\"btn btn-primary\" data-dismiss=\"modal\" [disabled]=\"!checkInForm.valid\" (click)=\"saveCheckInDetails()\">Save\r\n              changes</button>           \r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- CheckOut Model -->\r\n    <div class=\"modal fade\" id=\"checkout\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"checkOutLabel\" aria-hidden=\"true\">\r\n      <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"checkoutLabel\">Update Attendance </h5>\r\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n\r\n            <form [formGroup]=\"checkOutForm\">\r\n              <div class=\"row mb-20 mt-20\">\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Date</label>\r\n\r\n                    <input type=\"text\" placeholder=\"Date\" formControlName=\"outdate\" showWeekNumbers=\"false\" \r\n                      class=\"form-control\" [bsConfig]=\"dpConfig\" bsDatepicker [attr.disabled]=\"true\">\r\n                    <div class=\"form-group\">\r\n\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Class </label>\r\n                    <input type=\"text \" formControlName=\"outclass\" class=\"form-control\" id=\"\" aria-describedby=\"\"\r\n                      [readOnly]=\"true\">\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n\r\n              <!-- Save checked out form  -->\r\n              <div class=\"row mb-20 mt-20\">\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Picked Up By</label>\r\n                    <select class=\"form-control\" formControlName=\"pickupby\" (change)=\"getPickUpDropDownValue($event.target.value)\"\r\n                      id=\"exampleFormControlSelect1\">\r\n                      <option value=\"\">Select option</option>\r\n                      <option *ngFor=\"let guardians of guardiansList\" [value]=\"guardians.guardianId\">{{guardians.guardianName}}</option>\r\n                    </select>\r\n                    <div *ngIf=\"pickupby.invalid && (pickupby.dirty || pickupby.touched)\" class=\"text-left errormsg\">\r\n                      <span *ngIf=\"pickupby.errors.required\">\r\n                        <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select option from list</span>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Checked-out time</label>                   \r\n                    <p-calendar styleClass=\"form-control\" class=\"custom-textbox-checkedin\" formControlName=\"outtime\" hourFormat=\"12\" [timeOnly]=\"true\" icon=\"pi pi-clock\"\r\n                      [showIcon]=\"true\"></p-calendar>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n            <button type=\"button\" *ngIf=\"isSubscriptionActive\" class=\"btn btn-primary\" data-dismiss=\"modal\" [disabled]=\"!checkOutForm.valid\" (click)=\"saveCheckOutDetails()\">Save\r\n              changes</button>          \r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- Edit Time modal  -->\r\n    <div class=\"modal fade\" id=\"edittime\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"checkinLabel\" aria-hidden=\"true\">\r\n      <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"checkinLabel\">Excuse</h5>\r\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n\r\n            <form [formGroup]=\"excuseForm\">\r\n              <div class=\"row\">\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Student ID</label>\r\n                    <input type=\"text \" class=\"form-control\" formControlName=\"studentid\" id=\"\" aria-describedby=\"\"\r\n                      placeholder=\"#123456\" [attr.disabled]=\"true\">\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Student Name</label>\r\n                    <input type=\"text \" class=\"form-control\" formControlName=\"studentname\" id=\"\" aria-describedby=\"\"\r\n                      placeholder=\"Student Name\">\r\n                    <div *ngIf=\"studentname.invalid && (studentname.dirty || studentname.touched)\" class=\"text-left errormsg\">\r\n                      <span *ngIf=\"studentname.errors.required\">\r\n                        <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please enter student name</span>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"row\">\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Start Time</label>                   \r\n                    <p-calendar [timeOnly]=\"true\" hourFormat=\"12\" class=\"custom-textbox-checkedin\" styleClass=\"form-control\" formControlName=\"starttime\" placeholder=\"Select start time\"></p-calendar>\r\n                    <div *ngIf=\"starttime.invalid && (starttime.dirty || starttime.touched)\" class=\"text-left errormsg\">\r\n                      <span *ngIf=\"starttime.errors.required\">\r\n                        <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please enter start time</span>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Until</label>                   \r\n                    <p-calendar [timeOnly]=\"true\" hourFormat=\"12\" class=\"custom-textbox-checkedin\" styleClass=\"form-control\" formControlName=\"endtime\" placeholder=\"Select end time\"></p-calendar>\r\n                    <div *ngIf=\"endtime.invalid && (endtime.dirty || endtime.touched)\" class=\"text-left errormsg\">\r\n                      <span *ngIf=\"endtime.errors.required\">\r\n                        <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please enter end time</span>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </form>\r\n\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n            <button type=\"submit\" *ngIf=\"isSubscriptionActive\" class=\"btn btn-primary\" data-dismiss=\"modal\" disabled=\"!excuseForm.valid\" (click)=\"saveExuseData($event)\">Update</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Edit Time Checked In -->\r\n    <div class=\"modal fade\" id=\"edittimecheckin\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"checkinLabel\" aria-hidden=\"true\">\r\n      <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"checkinLabel\">Update Attendance </h5>\r\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <form [formGroup]=\"checkInForm\">\r\n              <div class=\"row mb-20 mt-20\">\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Date</label>\r\n                    <input type=\"text\" placeholder=\"Date\" formControlName=\"indate\" showWeekNumbers=\"false\" \r\n                      class=\"form-control\" [bsConfig]=\"dpConfig\" bsDatepicker [attr.disabled]=\"true\">\r\n                    <div class=\"form-group\">\r\n\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Class </label>\r\n                    <input type=\"text \" formControlName=\"inclass\" class=\"form-control\" id=\"\" aria-describedby=\"\"\r\n                      [readonly]=\"true\">\r\n                    <div *ngIf=\"inclass.invalid && (inclass.dirty || inclass.touched)\" class=\"text-left errormsg\">\r\n                      <span *ngIf=\"inclass.errors.required\">\r\n                        <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please enter class name</span>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"row mb-20 mt-20\">\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Drop-off By</label>\r\n                    <div class=\"form-group\">\r\n                      <select class=\"form-control\" formControlName=\"dropby\" (change)=\"getDropOfDropDownValue($event.target.value)\"\r\n                        id=\"exampleFormControlSelect1\">\r\n                        <option value=\"\">Select option</option>\r\n                        <option *ngFor=\"let guardians of guardiansList\" [value]=\"guardians.guardianId\">{{guardians.guardianName}}</option>\r\n                      </select>\r\n                      <div *ngIf=\"dropby.invalid && (dropby.dirty || dropby.touched)\" class=\"text-left errormsg\">\r\n                        <span *ngIf=\"dropby.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select option from list</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Checked-in time </label>\r\n                    <p-calendar class=\"custom-textbox-checkedin\" styleClass=\"form-control\" hourFormat=\"12\" formControlName=\"intime\" hourFormat=\"12\" [timeOnly]=\"true\" icon=\"pi pi-clock\"\r\n                      [showIcon]=\"true\"></p-calendar>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n            <button type=\"button\" *ngIf=\"isSubscriptionActive\" class=\"btn btn-primary\" data-dismiss=\"modal\" [disabled]=\"!checkInForm.valid\" (click)=\"updateCheckInDetails()\">Save\r\n              changes</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>  \r\n  \r\n<!-- last added model for in and out -->\r\n<div class=\"modal fade\" id=\"edittimecheckout\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"checkoutLabel  \" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\" id=\"checkoutLabel\">Update Attendance </h5>\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <ul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\r\n          <li class=\"nav-item\" >\r\n            <a class=\"nav-link active\" id=\"checkout-tab\" (click)=\"getCheckOutTabDetails('checkouttab')\" data-toggle=\"tab\" href=\"#chekoutedit\" role=\"tab\"\r\n              aria-controls=\"editcheckout1\" aria-selected=\"false\">\r\n             Checked out\r\n            </a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" id=\"checkin-tab\"  (click)=\"getCheckInTabDetails('checkintab')\"  data-toggle=\"tab\" href=\"#chekinedit\" role=\"tab\" aria-controls=\"meal\"\r\n              aria-selected=\"false\">\r\n              Checked In\r\n            </a>\r\n          </li>\r\n        </ul>\r\n        <div class=\"tab-content\" id=\"myTabContent\">\r\n          <div class=\"tab-pane fade show active\" id=\"chekoutedit\" role=\"tabpanel\" aria-labelledby=\"checkout-tab\">\r\n            <form [formGroup]=\"checkOutForm\">\r\n              <div class=\"row mb-20 mt-20\">\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Date</label>\r\n                    <input type=\"text\" placeholder=\"Date\" formControlName=\"outdate\" showWeekNumbers=\"false\" \r\n                      class=\"form-control\" [bsConfig]=\"dpConfig\" bsDatepicker [attr.disabled]=\"true\">\r\n                    <div class=\"form-group\">\r\n\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Class </label>\r\n                    <input type=\"text \" formControlName=\"outclass\" class=\"form-control\" id=\"\" aria-describedby=\"\"\r\n                      [readOnly]=\"true\">\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n\r\n              <!-- Checked out update -->\r\n              <div class=\"row mb-20 mt-20\">\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Picked Up By</label>\r\n                    <select class=\"form-control\" formControlName=\"pickupby\" (change)=\"getPickUpDropDownValue($event.target.value)\"\r\n                      id=\"exampleFormControlSelect1\">\r\n                      <option value=\"\">Select option</option>\r\n                      <option *ngFor=\"let guardians of guardiansList\" [value]=\"guardians.guardianId\">{{guardians.guardianName}}</option>\r\n                    </select>\r\n                    <div *ngIf=\"pickupby.invalid && (pickupby.dirty || pickupby.touched)\" class=\"text-left errormsg\">\r\n                      <span *ngIf=\"pickupby.errors.required\">\r\n                        <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select option from list</span>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Checked-out time</label>\r\n                    <p-calendar class=\"custom-textbox-checkedin\" styleClass=\"form-control\" formControlName=\"outtime\" hourFormat=\"12\" [timeOnly]=\"true\" icon=\"pi pi-clock\"\r\n                      [showIcon]=\"true\"></p-calendar>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n\r\n          <div class=\"tab-pane\" id=\"chekinedit\" role=\"tabpanel\" aria-labelledby=\"checkin-tab\">\r\n            <form [formGroup]=\"checkInForm\">\r\n              <div class=\"row mb-20 mt-20\">\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Date</label>\r\n                    <input type=\"text\" placeholder=\"Date\" formControlName=\"indate\" showWeekNumbers=\"false\" \r\n                      class=\"form-control\" [bsConfig]=\"dpConfig\" bsDatepicker [attr.disabled]=\"true\">\r\n                    <div class=\"form-group\">\r\n\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Class </label>\r\n                    <input type=\"text \" formControlName=\"inclass\" class=\"form-control\" id=\"\" aria-describedby=\"\"\r\n                      [readonly]=\"true\">\r\n                    <div *ngIf=\"inclass.invalid && (inclass.dirty || inclass.touched)\" class=\"text-left errormsg\">\r\n                      <span *ngIf=\"inclass.errors.required\">\r\n                        <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please enter class name</span>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"row mb-20 mt-20\">\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Drop-off By</label>\r\n                    <div class=\"form-group\">\r\n                      <select class=\"form-control\" formControlName=\"dropby\" (change)=\"getDropOfDropDownValue($event.target.value)\"\r\n                        id=\"exampleFormControlSelect1\">\r\n                        <option value=\"\">Select option</option>\r\n                        <option *ngFor=\"let guardians of guardiansList\" [value]=\"guardians.guardianId\">{{guardians.guardianName}}</option>\r\n                      </select>\r\n                      <div *ngIf=\"dropby.invalid && (dropby.dirty || dropby.touched)\" class=\"text-left errormsg\">\r\n                        <span *ngIf=\"dropby.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select option from list</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Checked-in time </label>\r\n                    <p-calendar class=\"custom-textbox-checkedin\" styleClass=\"form-control\" formControlName=\"intime\" [timeOnly]=\"true\" hourFormat=\"12\" icon=\"pi pi-clock\"\r\n                      [showIcon]=\"true\"></p-calendar>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n        <button type=\"button\" *ngIf=\"isSubscriptionActive\" class=\"btn btn-primary\" data-dismiss=\"modal\" [disabled]=\"!checkOutForm.valid\" (click)=\"updateCheckInAndOutModal()\">Save\r\n          changes</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- For Information Video -->\r\n<div class=\"modal fade\" id=\"infovideo\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"checkoutLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\" id=\"checkoutLabel\">Information Video</h5>\r\n        <button type=\"button\" *ngIf=\"videoPath\" class=\"close\" (click)= \"PauseInfoVideo()\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n        <button type=\"button\" *ngIf=\"!videoPath\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <div class=\"cont video_section_pop\" *ngIf=\"videoPath\">\r\n          <video controls id=\"pausevideo\">\r\n            <source *ngIf=\"videoPath\" [src] = \"videoPath\" type=\"video/mp4\" />\r\n            <source *ngIf=\"videoPath\" [src] = \"videoPath\" type=\"video/ogg\" />\r\n            <source *ngIf=\"videoPath\" [src] = \"videoPath\" type=\"video/webm\" />\r\n            Browser not supported\r\n          </video>\r\n        </div>\r\n\r\n        <div class=\"cont video_section_pop\" *ngIf=\"!videoPath\">\r\n            Video Not Found\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n   <!-- Modal for class transfer of student -->\r\n   <div class=\"modal fade\" id=\"transfer\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"checkoutLabel  \"\r\n   aria-hidden=\"true\">\r\n   <div class=\"modal-dialog\" role=\"document\">\r\n     <div class=\"modal-content\">\r\n       <div class=\"modal-header\">\r\n         <h5 class=\"modal-title\" id=\"checkoutLabel\">Transfer Student</h5>\r\n         <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n           <span aria-hidden=\"true\">&times;</span>\r\n         </button>\r\n       </div>\r\n       <div class=\"modal-body\">        \r\n           <div class=\"d-flex\">\r\n           </div>\r\n           <div class=\"row mb-20\">\r\n             <div class=\"col-lg-12\">\r\n               <div>\r\n                 <label for=\"\">Select Class*</label>\r\n                 <select class=\"form-control\" placeholder=\"Search\" [(ngModel)]=\"selectClass\" id=\"exampleFormControlSelect1\">\r\n                     <option value=\"\">Select class</option>\r\n                     <option *ngFor=\"let classes of transferclasses\" [value]=\"classes.classesID\">{{classes.className}}</option>\r\n                   </select>\r\n               </div>\r\n             </div>\r\n           </div>\r\n           <div>\r\n           </div>\r\n       </div>\r\n       <div class=\"modal-footer\">\r\n         <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n         <button type=\"button\" class=\"btn btn-primary\"  (click)=\"getStudentClassTransferReport()\">Save\r\n           changes</button>\r\n       </div>\r\n     </div>\r\n   </div>\r\n </div>\r\n\r\n<ngx-spinner type=\"ball-atom\" size=\"medium\" color=\"#58A7FE\"></ngx-spinner>\r\n<app-confirm-box></app-confirm-box>\r\n"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-attendence/agency-admin-attendence.component.ts":
/*!*************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-attendence/agency-admin-attendence.component.ts ***!
  \*************************************************************************************************************/
/*! exports provided: AgencyAdminAttendenceComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AgencyAdminAttendenceComponent", function() { return AgencyAdminAttendenceComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var ngx_bootstrap__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ngx-bootstrap */ "./node_modules/ngx-bootstrap/esm5/ngx-bootstrap.js");
/* harmony import */ var _shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../shared/services/agency-api-service/agency-api.service */ "./src/app/layout/agency-admin/components/shared/services/agency-api-service/agency-api.service.ts");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ngx-spinner */ "./node_modules/ngx-spinner/fesm5/ngx-spinner.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../shared/services/error-handler/error-handler.service */ "./src/app/shared/services/error-handler/error-handler.service.ts");
/* harmony import */ var _shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../shared/services/notification-service/notification.service */ "./src/app/shared/services/notification-service/notification.service.ts");
/* harmony import */ var _shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../shared/services/common/common.service */ "./src/app/shared/services/common/common.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _teacher_shared_constant__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../teacher/shared/constant */ "./src/app/layout/teacher/shared/constant.ts");
/* harmony import */ var primeng_api__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! primeng/api */ "./node_modules/primeng/api.js");
/* harmony import */ var primeng_api__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(primeng_api__WEBPACK_IMPORTED_MODULE_10__);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};











var AgencyAdminAttendenceComponent = /** @class */ (function () {
    function AgencyAdminAttendenceComponent(apiService, fb, error, spinner, confirmationService, notification, commonService, router) {
        this.apiService = apiService;
        this.fb = fb;
        this.error = error;
        this.spinner = spinner;
        this.confirmationService = confirmationService;
        this.notification = notification;
        this.commonService = commonService;
        this.router = router;
        this.cars = [];
        this.selectClass = '';
        this.studentList = [];
        this.transferList = [];
        this.transferclasses = [];
        this.checkInOutDetails = [];
        this.markedStudentsList = [];
        this.guardiansList = [];
        this.today = new Date();
        this.classList = [];
        this.absentReasonList = [];
        this.mytime = new Date();
        this.showUndoAbsent = false;
        this.tabType = 'checkouttab';
        this.count = 0;
        this.pageNo = 0;
        this.limit = 10;
        this.totalRecord = 0;
        this.loader = true;
        this.showTransferButton = true;
        this.videoPath = '';
        this.dpConfig = new ngx_bootstrap__WEBPACK_IMPORTED_MODULE_1__["BsDatepickerConfig"]();
        this.isSubscriptionActive = this.commonService.getSubscriptionStatus();
    }
    AgencyAdminAttendenceComponent.prototype.ngOnInit = function () {
        this.searchDate = new Date();
        this.searchByDateString = this.commonService.getStringLocalDateTimeFromUTC(this.searchDate);
        this.className = '';
        this.showEditCheckInOutButton = true;
        this.showAbsentButton = false;
        this.showOtherAbsentReason = false;
        // this.dpConfig.showWeekNumbers = false;
        this.dpConfig = Object.assign({}, { containerClass: 'theme-dark-blue' }, { showWeekNumbers: false });
        this.showCheckInn = true;
        this.showStatus = true;
        this.createexcuseForm();
        this.creatCheckInForm();
        this.creatCheckOutForm();
        this.createabsentForm();
        this.getAllClassess();
        this.getAbsentReasonList();
        this.getAllClassessForTransfer();
        this.getSectionVideo();
        // this.getAttendenceList();
        // this.getTeacherOperationalClasses();
    };
    AgencyAdminAttendenceComponent.prototype.OpenInfoVideo = function (data) {
        $('#infovideo').modal('show');
    };
    AgencyAdminAttendenceComponent.prototype.getSectionVideo = function () {
        var _this = this;
        var req = {
            'SectionID': 11
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_9__["TeacherAPIURLs"].GetVideoForSection, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.videoPath = res.body.filePath;
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminAttendenceComponent.prototype.PauseInfoVideo = function () {
        var myVideo = document.getElementById('pausevideo');
        myVideo.pause();
        myVideo.currentTime = 0;
    };
    AgencyAdminAttendenceComponent.prototype.getSerchDate = function (event) {
        this.count++;
        if (this.count > 2) {
            this.searchDate = event;
            this.searchByDateString = this.searchByDateString = this.commonService.getStringLocalDateTimeFromUTC(this.searchDate);
            this.classList = [];
            // this.getTeacherOperationalClasses();
            this.getAllClassess();
        }
    };
    AgencyAdminAttendenceComponent.prototype.createexcuseForm = function () {
        // this.spinner.hide();
        this.excuseForm = this.fb.group({
            studentid: ['#12333', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            studentname: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            starttime: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            endtime: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required]
        });
    };
    AgencyAdminAttendenceComponent.prototype.createabsentForm = function () {
        this.absentForm = this.fb.group({
            absentreason: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            other: ['']
        });
    };
    AgencyAdminAttendenceComponent.prototype.creatCheckInForm = function () {
        this.checkInForm = this.fb.group({
            indate: [this.searchDate, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            inclass: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            dropby: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            intime: [this.mytime, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
        });
    };
    AgencyAdminAttendenceComponent.prototype.creatCheckOutForm = function () {
        this.checkOutForm = this.fb.group({
            outdate: [this.searchDate, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            outclass: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            pickupby: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            outtime: [this.mytime, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
        });
    };
    Object.defineProperty(AgencyAdminAttendenceComponent.prototype, "studentname", {
        // getters for components
        // Excuse form
        get: function () { return this.excuseForm.get('studentname'); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AgencyAdminAttendenceComponent.prototype, "starttime", {
        get: function () { return this.excuseForm.get('starttime'); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AgencyAdminAttendenceComponent.prototype, "endtime", {
        get: function () { return this.excuseForm.get('endtime'); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AgencyAdminAttendenceComponent.prototype, "absentreason", {
        // Absent Form
        get: function () { return this.absentForm.get('absentreason'); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AgencyAdminAttendenceComponent.prototype, "other", {
        get: function () { return this.absentForm.get('other'); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AgencyAdminAttendenceComponent.prototype, "outdate", {
        // Check In Form
        get: function () { return this.checkInForm.get('outdate'); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AgencyAdminAttendenceComponent.prototype, "inclass", {
        get: function () { return this.checkInForm.get('inclass'); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AgencyAdminAttendenceComponent.prototype, "dropby", {
        get: function () { return this.checkInForm.get('dropby'); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AgencyAdminAttendenceComponent.prototype, "indate", {
        // Check Out Form
        get: function () { return this.checkOutForm.get('indate'); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AgencyAdminAttendenceComponent.prototype, "outclass", {
        get: function () { return this.checkOutForm.get('outclass'); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AgencyAdminAttendenceComponent.prototype, "pickupby", {
        get: function () { return this.checkOutForm.get('pickupby'); },
        enumerable: true,
        configurable: true
    });
    AgencyAdminAttendenceComponent.prototype.getAttendenceList = function () {
        var _this = this;
        this.loader = true;
        this.spinner.show();
        this.showHideAbsentButton();
        this.hideTransferButton();
        this.getAllClassessForTransfer();
        var data = {
            'agencyId': this.commonService.getAgencyId(),
            'classId': this.serchByClass,
            'askedDate': this.searchDate,
            'askedDateString': this.searchByDateString,
            'limit': this.limit,
            'page': this.pageNo
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_9__["TeacherAPIURLs"].GetClassAttendence, data, null).subscribe(function (res) {
            _this.spinner.hide();
            if (res.body.statusCode === 200) {
                _this.studentList = res.body.data;
                _this.totalRecord = res.body.totalRows;
                if (res.body.data.length > 0) {
                    _this.className = res.body.data[0].className;
                    _this.totalRows = res.body.data.totalRows;
                    _this.totalPages = res.body.data.totalPages;
                }
                _this.loader = false;
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminAttendenceComponent.prototype.getTeacherOperationalClasses = function () {
        var _this = this;
        this.classList = [];
        this.spinner.show();
        var data = {
            'agencyID': this.commonService.getAgencyId(),
            'askingDate': this.searchDate,
            'teacherID': this.commonService.getReleventUserId('userdetails'),
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_9__["TeacherAPIURLs"].GetTeacherOperationalClasses, data, null).subscribe(function (res) {
            _this.spinner.hide();
            if (res.body.statusCode === 200) {
                _this.classList = res.body.data;
                if (_this.classList.length !== 0) {
                    _this.serchByClass = _this.classList[0].value;
                }
                else {
                    _this.serchByClass = '';
                    //   this.notification.info({message: 'It seems like you have not checked-in into the class yet', title: '' });
                }
                _this.getAttendenceList();
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminAttendenceComponent.prototype.getAllClassess = function () {
        var _this = this;
        this.spinner.show();
        var data = {
            'agencyID': this.commonService.getAgencyId()
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_9__["TeacherAPIURLs"].GetAllClasses, data, null).subscribe(function (res) {
            _this.spinner.hide();
            if (res.body.statusCode === 200) {
                _this.totalRecord = res.body.totalRows;
                _this.classList = res.body.data;
                if (_this.classList.length !== 0) {
                    _this.serchByClass = _this.classList[0].classesID;
                }
                _this.getAttendenceList();
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminAttendenceComponent.prototype.getAbsentReasonList = function () {
        var _this = this;
        var data = {
            'agencyID': this.commonService.getAgencyId()
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_9__["TeacherAPIURLs"].GetAllLeaveReasonType, data, null).subscribe(function (res) {
            _this.absentReasonList = res.body.data;
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminAttendenceComponent.prototype.getAbsentReasonId = function (event) {
        if (this.absentForm.value.absentreason === '6') {
            this.showOtherAbsentReason = true;
        }
        else {
            this.showOtherAbsentReason = false;
        }
    };
    AgencyAdminAttendenceComponent.prototype.getCheckInOutDetails = function (data) {
    };
    // Save check in status
    AgencyAdminAttendenceComponent.prototype.saveCheckInDetails = function () {
        // this.showCheckInn = false;
        //  this.showStatus = true;
        var _this = this;
        var data = {
            'AgencyID': this.commonService.getAgencyId(),
            'StudentID': this.studentId,
            'ClassName': this.checkInForm.value.inclass,
            'Date': this.searchDate,
            'IsEditModeOn': false,
            'DropedById': this.checkInForm.value.dropby,
            'AttendenceStatusID': 3,
            'ClassesID': this.serchByClass,
            'AttendanceDate': this.searchDate,
            'Id': 0,
            'checkInTime': this.checkInForm.value.intime
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_9__["TeacherAPIURLs"].CheckInAttendenceStudent, data, null).subscribe(function (res) {
            if (res.body.isSuccess === true) {
                _this.getAttendenceList();
                _this.notification.success({ message: 'Checked in succsessfully', title: '' });
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    // Edit check in status
    AgencyAdminAttendenceComponent.prototype.updateCheckInDetails = function () {
        var _this = this;
        var data = {
            'AgencyID': this.commonService.getAgencyId(),
            'StudentID': this.studentId,
            'ClassName': this.checkInForm.value.inclass,
            'Date': this.checkInForm.value.indate,
            'IsEditModeOn': true,
            'DropedById': this.checkInForm.value.dropby,
            'AttendenceStatusID': 3,
            'ClassesID': this.serchByClass,
            'AttendanceDate': this.searchDate,
            'Id': this.consideredAttendenceId,
            'checkInTime': this.checkInForm.value.intime
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_9__["TeacherAPIURLs"].CheckInAttendenceStudent, data, null).subscribe(function (res) {
            if (res.body.isSuccess === true) {
                _this.getAttendenceList();
                _this.notification.success({ message: 'Checked in details updated succsessfully', title: '' });
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    // Save check out status
    AgencyAdminAttendenceComponent.prototype.saveCheckOutDetails = function () {
        //  this.showCheckInn = false;
        //  this.showStatus = false;
        var _this = this;
        var data = {
            'AgencyID': this.commonService.getAgencyId(),
            'StudentID': this.studentId,
            'ClassName': this.checkOutForm.value.outclass,
            'Date': this.checkOutForm.value.outdate,
            'IsEditModeOn': true,
            'PickupById': this.checkOutForm.value.pickupby,
            'AttendenceStatusID': 4,
            'ClassesID': this.serchByClass,
            'AttendanceDate': this.searchDate,
            'Id': this.consideredAttendenceId,
            'CheckOutTime': this.checkOutForm.value.outtime
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_9__["TeacherAPIURLs"].CheckOutAttendenceStudent, data, null).subscribe(function (res) {
            if (res.body.isSuccess === true) {
                _this.notification.success({ message: 'Checked out succsessfully', title: '' });
                _this.sendDailySheetReport();
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    // Save check out status
    AgencyAdminAttendenceComponent.prototype.UpdateCheckOutDetails = function () {
        var _this = this;
        //  this.showCheckInn = false;
        //  this.showStatus = false;
        var data = {
            'AgencyID': this.commonService.getAgencyId(),
            'StudentID': this.studentId,
            'ClassName': this.checkOutForm.value.outclass,
            'Date': this.checkOutForm.value.outdate,
            'IsEditModeOn': true,
            'PickupById': this.checkOutForm.value.pickupby,
            'AttendenceStatusID': 4,
            'ClassesID': this.serchByClass,
            'AttendanceDate': this.searchDate,
            'Id': this.consideredAttendenceId,
            'CheckOutTime': this.checkOutForm.value.outtime
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_9__["TeacherAPIURLs"].CheckOutAttendenceStudent, data, null).subscribe(function (res) {
            if (res.body.isSuccess === true) {
                _this.getAttendenceList();
                _this.notification.success({ message: 'Checked out details updated succsessfully', title: '' });
            }
            else {
                _this.error.unknownError();
            }
        }, function (err) { return _this.error.commonError(err); });
    };
    AgencyAdminAttendenceComponent.prototype.saveExuseData = function (event) {
        alert('excuse');
    };
    AgencyAdminAttendenceComponent.prototype.saveAbsentData = function () {
        var _this = this;
        var data = {
            'Id': ((this.consideredAttendenceId === undefined || this.consideredAttendenceId === null) ? 0 : this.consideredAttendenceId),
            'agencyID': this.commonService.getAgencyId(),
            'studentID': this.studentId,
            'reasonId': this.undoAbsentBtn ? 0 : this.absentForm.value.absentreason,
            'onLeave': this.undoAbsentBtn ? false : true,
            'onLeaveComment': this.absentForm.value.other,
            'attendenceStatusID': this.undoAbsentBtn ? 2 : 5,
            'AttendanceDate': this.searchDate,
            'ClassesID': this.serchByClass,
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_9__["TeacherAPIURLs"].AbsentAttendenceStudent, data, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.notification.success({
                    message: _this.undoAbsentBtn ? 'Unmarked student as absent succsessfully' :
                        'Marked student as absent succsessfully', title: ''
                });
                _this.getAttendenceList();
            }
            else {
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    // Get check in Out Details
    AgencyAdminAttendenceComponent.prototype.getStudentDetails = function (data) {
        var _this = this;
        this.clearCheckinForm();
        this.clearCheckOutForm();
        this.checkInOutDetails = data;
        this.studentId = data.studentID;
        this.consideredAttendenceId = data.id;
        var req = {
            'studentID': this.studentId,
            'agencyID': this.commonService.getAgencyId(),
            'classID': this.serchByClass,
            'isAuthorized': true
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_9__["TeacherAPIURLs"].GetAllGuardiansForStudents, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.guardiansList = res.body.data;
            }
            else {
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
        // this.guardiansList = data.associatedGuardians;
        // const date = this.commonService.GetFormattedDate(data.date);
        this.checkInForm.controls['indate'].setValue(this.searchDate);
        this.checkInForm.controls['inclass'].setValue(data.className);
        this.checkOutForm.controls['outdate'].setValue(this.searchDate);
        this.checkOutForm.controls['outclass'].setValue(data.className);
    };
    AgencyAdminAttendenceComponent.prototype.getEditCheckinDetails = function (data) {
        var _this = this;
        $('.modal').on('hidden.bs.modal', function () {
            $('.modal-body1').html('');
        });
        var studentArray;
        this.clearCheckinForm();
        this.checkInOutDetails = data;
        this.studentId = data.studentID;
        this.consideredAttendenceId = data.id;
        this.studentList.forEach(function (res) {
            if (res.studentID === data.studentID) {
                studentArray = res;
            }
        });
        // const date = this.commonService.GetFormattedDate(data.date);
        var req = {
            'studentID': this.studentId,
            'agencyID': this.commonService.getAgencyId(),
            'classID': this.serchByClass,
            'isAuthorized': true
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_9__["TeacherAPIURLs"].GetAllGuardiansForStudents, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.guardiansList = res.body.data;
            }
            else {
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
        this.guardiansList = data.associatedGuardians;
        this.checkInForm.controls['dropby'].setValue(studentArray.dropedById);
        this.checkInForm.controls['indate'].setValue(this.searchDate);
        this.checkInForm.controls['inclass'].setValue(studentArray.className);
        this.checkInForm.controls['intime'].setValue(this.commonService.getLocalDateTimeFromUTC(studentArray.checkInTime));
    };
    AgencyAdminAttendenceComponent.prototype.getEditCheckOutDetails = function (data) {
        var _this = this;
        $('#checkout-tab').tab('show');
        this.clearCheckOutForm();
        var studentArray;
        this.studentId = data.studentID;
        this.consideredAttendenceId = data.id;
        this.studentList.forEach(function (res) {
            if (res.studentID === data.studentID) {
                studentArray = res;
            }
        });
        var req = {
            'studentID': this.studentId,
            'agencyID': this.commonService.getAgencyId(),
            'classID': this.serchByClass,
            'isAuthorized': true
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_9__["TeacherAPIURLs"].GetAllGuardiansForStudents, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.guardiansList = res.body.data;
            }
            else {
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
        this.guardiansList = data.associatedGuardians;
        // const date = this.commonService.GetFormattedDate(data.date);
        this.checkOutForm.controls['pickupby'].setValue(studentArray.pickupById);
        this.checkOutForm.controls['outdate'].setValue(this.searchDate);
        this.checkOutForm.controls['outclass'].setValue(studentArray.className);
        this.checkOutForm.controls['outtime'].setValue(this.commonService.getLocalDateTimeFromUTC(studentArray.checkOutTime));
    };
    // Mark multiple students as present
    AgencyAdminAttendenceComponent.prototype.markAsPresentMultipleStudents = function (data, event) {
        if (event.target.checked) {
            data.marked = true;
            this.markedStudentsList.push(data);
        }
        else if (event.target.checked === false) {
            var index = this.markedStudentsList.findIndex(function (r) { return r.studentId === data.studentId; });
            this.markedStudentsList.splice(index, 1);
        }
    };
    // Select or unselect all students
    AgencyAdminAttendenceComponent.prototype.MarkUnmarkAll = function (event) {
        var _this = this;
        if (event.target.checked) {
            this.studentList.forEach(function (element) {
                element.marked = true;
                _this.markedStudentsList.push(element);
            });
        }
        else if (event.target.checked === false) {
            this.studentList.forEach(function (element) {
                element.marked = false;
            });
            this.markedStudentsList = [];
        }
    };
    // Method to save multiple student status at a time
    AgencyAdminAttendenceComponent.prototype.saveMarkedAsPresentStudents = function () {
        var sendMarkedStudentList = [];
        this.markedStudentsList.forEach(function (element) {
            if (element.marked === true) {
                sendMarkedStudentList.push(element);
            }
        });
        if (sendMarkedStudentList.length > 0) {
        }
        else {
            this.notification.info({ message: 'Please select students', title: '' });
        }
    };
    AgencyAdminAttendenceComponent.prototype.getPegination = function () {
        var totalPages = Math.ceil(this.studentList.length / this.pageSize);
    };
    // get Selected guardian id
    AgencyAdminAttendenceComponent.prototype.getDropOfDropDownValue = function (value) {
        this.checkInForm.controls['dropby'].setValue(value);
    };
    AgencyAdminAttendenceComponent.prototype.getPickUpDropDownValue = function (value) {
        this.checkOutForm.controls['pickupby'].setValue(value);
    };
    // Method to get only date
    AgencyAdminAttendenceComponent.prototype.getOnlyDate = function (date) {
        var todayDate = new Date(date);
        todayDate.setHours(0, 0, 0, 0);
        return todayDate;
    };
    AgencyAdminAttendenceComponent.prototype.showHideAbsentButton = function () {
        if (this.searchDate !== '' && this.searchDate !== undefined && this.searchDate !== null) {
            if (this.getOnlyDate(this.searchDate) < this.getOnlyDate(this.today)) {
                this.showAbsentButton = true;
                this.showEditCheckInOutButton = false;
            }
            else {
                this.showAbsentButton = false;
                this.showEditCheckInOutButton = true;
            }
        }
        else {
            this.showAbsentButton = false;
            this.showEditCheckInOutButton = true;
        }
    };
    AgencyAdminAttendenceComponent.prototype.getAbsentStudentDetails = function (data) {
        this.undoAbsentBtn = false;
        this.clearAbsentReasonForm();
        this.studentId = data.studentID;
        this.consideredAttendenceId = data.id;
        this.guardiansList = data.associatedGuardians;
        this.absentForm.controls['absentreason'].setValue(data.reasonId ? data.reasonId : '');
        this.absentForm.controls['other'].setValue(data.onLeaveComment);
        if (data.attendenceStatusID === 5) {
            this.showUndoAbsent = true;
        }
        else {
            this.showUndoAbsent = false;
        }
        var date = this.commonService.GetFormattedDate(data.date);
    };
    AgencyAdminAttendenceComponent.prototype.getAllClassessForTransfer = function () {
        var _this = this;
        this.spinner.show();
        var data = {
            'agencyID': this.commonService.getAgencyId(),
            'ClassID': this.serchByClass
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_9__["TeacherAPIURLs"].GetAllClassesForStudentAttendenceTransfer, data, null).subscribe(function (res) {
            _this.spinner.hide();
            if (res.body.statusCode === 200) {
                _this.transferclasses = res.body.data;
                // if (this.transferclasses.length !== 0) {
                //   this.selectClass = this.transferclasses[0].classesID;
                // }
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminAttendenceComponent.prototype.getStudentClassTransferReport = function () {
        var _this = this;
        this.loader = true;
        this.transferList = [];
        if (this.selectClass === null || this.selectClass === '' || this.selectClass === undefined) {
            this.notification.warning({ message: 'Please select valid class', title: '' });
        }
        else {
            this.spinner.show();
            var data = {
                'agencyID': this.commonService.getAgencyId(),
                'studentID': this.studentId,
                'fromClassID': this.serchByClass,
                'toClassID': this.selectClass,
                'teacherID': this.commonService.getReleventUserId('userdetails')
            };
            this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_9__["TeacherAPIURLs"].StudentClassTransferAttendence, data, null).subscribe(function (res) {
                if (res.body.statusCode === 200 && !res.body.transferwithcheckout) {
                    _this.spinner.hide();
                    _this.transferList = res.body.data;
                    _this.getAttendenceList();
                    _this.notification.success({ message: 'Student has been transferred', title: '' });
                    $('#transfer').modal('hide');
                    //  this.createTransferForm();
                }
                else if (res.body.statusCode === 987) {
                    _this.spinner.hide();
                    _this.notification.warning({ message: 'Student already exist in selected class', title: '' });
                }
                else if (res.body.statusCode === 200 && res.body.transferwithcheckout) {
                    _this.spinner.hide();
                    _this.transferList = res.body.data;
                    //  this.getAttendenceList();
                    _this.notification.success({ message: 'Student has been transferred', title: '' });
                    $('#transfer').modal('hide');
                    _this.sendDailySheetReport();
                    //  this.createTransferForm();
                }
                else {
                    _this.spinner.hide();
                    _this.error.unknownError();
                }
                _this.loader = false;
            }, function (err) {
                _this.spinner.hide();
                _this.error.commonError(err);
            });
        }
    };
    // Check for unmarked student as absent
    AgencyAdminAttendenceComponent.prototype.UndoAbsent = function (event) {
        if (event.target.checked === true) {
            this.undoAbsentBtn = true;
        }
        else {
            this.undoAbsentBtn = false;
        }
    };
    AgencyAdminAttendenceComponent.prototype.clearCheckinForm = function () {
        this.creatCheckInForm();
    };
    AgencyAdminAttendenceComponent.prototype.clearCheckOutForm = function () {
        this.creatCheckOutForm();
    };
    AgencyAdminAttendenceComponent.prototype.getCheckInTabDetails = function (value) {
        var _this = this;
        this.tabType = value;
        var studentArray;
        if (value === 'checkintab') {
            this.studentList.forEach(function (res) {
                if (res.studentID === _this.studentId) {
                    studentArray = res;
                }
            });
            // const date = this.commonService.GetFormattedDate(data.date);
            var req = {
                'studentID': this.studentId,
                'agencyID': this.commonService.getAgencyId(),
                'classID': this.serchByClass,
                'isAuthorized': true
            };
            this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_9__["TeacherAPIURLs"].GetAllGuardiansForStudents, req, null).subscribe(function (res) {
                if (res.body.statusCode === 200) {
                    _this.guardiansList = res.body.data;
                }
                else {
                    _this.error.unknownError();
                }
            }, function (err) {
                _this.spinner.hide();
                _this.error.commonError(err);
            });
            //   this.guardiansList = data.associatedGuardians;
            this.checkInForm.controls['dropby'].setValue(studentArray.dropedById);
            this.checkInForm.controls['indate'].setValue(this.searchDate);
            this.checkInForm.controls['inclass'].setValue(studentArray.className);
            this.checkInForm.controls['intime'].setValue(this.commonService.getLocalDateTimeFromUTC(studentArray.checkInTime));
        }
    };
    AgencyAdminAttendenceComponent.prototype.getCheckOutTabDetails = function (type) {
        this.tabType = type;
    };
    AgencyAdminAttendenceComponent.prototype.updateCheckInAndOutModal = function () {
        if (this.tabType === 'checkintab') {
            this.updateCheckInDetails();
        }
        else if (this.tabType === 'checkouttab') {
            this.UpdateCheckOutDetails();
        }
        else {
        }
    };
    AgencyAdminAttendenceComponent.prototype.goToBreak = function (values) {
        var allowedit = false;
        if (values.attendenceStatusID > 2) {
            if (this.searchDate < this.today) {
                allowedit = false;
            }
            else {
                allowedit = true;
            }
            var navigationExtras = {
                queryParams: {
                    'Name': values.studentName,
                    'ImagePath': values.imagePath,
                    'Date': this.searchDate,
                    'attendenceStatusID': values.attendenceStatusID
                }
            };
            this.router.navigate(['./home/agencydashboard/studentbreaks', values.studentID, values.id, allowedit], navigationExtras);
        }
    };
    AgencyAdminAttendenceComponent.prototype.paginate = function (event) {
        this.pageNo = event.page;
        // this.limit = event.page;
        this.getAttendenceList();
    };
    AgencyAdminAttendenceComponent.prototype.clearAbsentReasonForm = function () {
        this.showOtherAbsentReason = false;
        this.createabsentForm();
    };
    AgencyAdminAttendenceComponent.prototype.hideTransferButton = function () {
        if (new Date(this.searchDate).toDateString() !== (this.today).toDateString()) {
            this.showTransferButton = false;
        }
        else {
            this.showTransferButton = true;
        }
    };
    AgencyAdminAttendenceComponent.prototype.getStudentDetailsForTranfer = function (data) {
        this.selectClass = '';
        this.studentId = data.studentID;
        $('#transfer').modal('show');
    };
    AgencyAdminAttendenceComponent.prototype.sendDailySheetReport = function () {
        var _this = this;
        this.confirmationService.confirm({
            message: 'Do you want to send the daily activity report?',
            accept: function () {
                _this.sendDailySheetReportSuccess();
            },
            reject: function () {
                _this.getAttendenceList();
            }
        });
    };
    AgencyAdminAttendenceComponent.prototype.sendDailySheetReportSuccess = function () {
        var _this = this;
        this.spinner.show();
        // const date = this.commonService.GetFormattedDate(data.date);
        var req = {
            'studentID': this.studentId,
            'agencyID': this.commonService.getAgencyId(),
            'classID': this.serchByClass,
            'askedDate': this.searchDate,
            'askedDateString': this.searchByDateString
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_9__["TeacherAPIURLs"].GetDailySheetActivityReportByEmail, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.spinner.hide();
                _this.getAttendenceList();
                _this.notification.success({ message: 'Student Daily sheet details send successfully ', title: '' });
            }
            else if (res.body.statusCode === 987) {
                _this.getAttendenceList();
                _this.notification.warning({ message: 'No activity found ', title: '' });
            }
            else {
                _this.notification.warning({ message: 'Report sending faild! ', title: '' });
                _this.getAttendenceList();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminAttendenceComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-agency-admin-attendence',
            template: __webpack_require__(/*! ./agency-admin-attendence.component.html */ "./src/app/layout/agency-admin/components/agency-admin-attendence/agency-admin-attendence.component.html"),
            styles: [__webpack_require__(/*! ./agency-admin-attendence.component.css */ "./src/app/layout/agency-admin/components/agency-admin-attendence/agency-admin-attendence.component.css")]
        }),
        __metadata("design:paramtypes", [_shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_2__["AgencyApiService"], _angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormBuilder"], _shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_5__["ErrorHandlerService"],
            ngx_spinner__WEBPACK_IMPORTED_MODULE_3__["NgxSpinnerService"], primeng_api__WEBPACK_IMPORTED_MODULE_10__["ConfirmationService"],
            _shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_6__["NotificationService"], _shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_7__["CommonService"],
            _angular_router__WEBPACK_IMPORTED_MODULE_8__["Router"]])
    ], AgencyAdminAttendenceComponent);
    return AgencyAdminAttendenceComponent;
}());



/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-bank-deposit-report/agency-admin-bank-deposit-report.component.css":
/*!********************************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-bank-deposit-report/agency-admin-bank-deposit-report.component.css ***!
  \********************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9hZ2VuY3ktYWRtaW4vY29tcG9uZW50cy9hZ2VuY3ktYWRtaW4tYmFuay1kZXBvc2l0LXJlcG9ydC9hZ2VuY3ktYWRtaW4tYmFuay1kZXBvc2l0LXJlcG9ydC5jb21wb25lbnQuY3NzIn0= */"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-bank-deposit-report/agency-admin-bank-deposit-report.component.html":
/*!*********************************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-bank-deposit-report/agency-admin-bank-deposit-report.component.html ***!
  \*********************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"wrapper\">\n  <div class=\"container-fluid\">\n\n    <div class=\"pagetitle\">\n      <div>\n        <h2>Report\n          <span>/ Bank Deposit Report </span>\n        </h2>\n      </div>\n    </div>\n    <div class=\"subhead d-flex justify-content-between mt-20\">\n      <div>\n        <h3>Deposit Payment List</h3>\n      </div>\n      <div style=\"cursor:pointer\" title=\"Download report\" (click)=\"pdfReportForBankDeposit()\"><i class=\"fa fa-download\"\n          aria-hidden=\"true\"></i>\n      </div>\n    </div>\n    <div class=\"card cardfilter\">\n      <!-- <div class=\"col-lg-10\"> -->\n      <div class=\"leftfilter\">\n        <div class=\"row algcenter\">\n          <div class=\"search-date\">\n            <div class=\"pr15 label-text\">Search Date : </div>\n            <input type=\"text\" placeholder=\"Search by Date\" [(ngModel)]=\"searchByDate\" showWeekNumbers=\"false\"\n              [maxDate]=\"today\" class=\"form-control mr15\" [bsConfig]=\"dpConfig\" (bsValueChange)=\"getSerchDate($event)\"\n              bsDatepicker>\n          </div>\n          <div class=\"filter-buttons\">\n            <button type=\"submit\" class=\"btn btn-send\" *ngIf=\"!showClearBtn\"\n              (click)=\"getBankDepositReport()\">Search</button>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"studentlist\">\n        <div class=\"tab-content\" id=\"pills-tabContent\">\n          <div class=\"tab-pane fade show active\" id=\"pills-appstudent\" role=\"tabpanel\" aria-labelledby=\"appStudent\">\n\n            <div class=\"innertable studentListSearch\">\n              <div class=\"table-responsive\">\n                <table class=\"table \">\n                  <thead class=\"thead-light\">\n                    <tr>\n                      <th scope=\"col\">Family Name</th>\n                      <th scope=\"col\">Parent Name</th>\n                      <th scope=\"col\">Payment Type (Cash/Check)</th>\n                      <th scope=\"col\">Amount</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr *ngFor=\"let report of reportList\">\n                      <td>{{report.parentLastName}}</td>\n                      <td>{{report.parentName}}</td>\n                      <td>{{report.paymentType}}</td>\n                      <td>{{report.amount}}</td>\n                    </tr>\n                    <tr *ngIf=\"reportList.length != 0 && !loader\">\n                      <td><b>Total</b></td>\n                      <td><b>Checks</b></td>\n                      <td><b>Cash</b></td>\n                      <td><b>Deposit Amount</b></td>\n                    </tr>\n                    <tr *ngIf=\"reportList.length != 0 && !loader\">\n                      <td></td>\n                      <td><b>({{totalCheck}}) $ {{checkAmount}}</b></td>\n                      <td><b>$ {{cashAmount}}</b></td>\n                      <td><b>$ {{totalAmount}}</b></td>\n                    </tr>\n                  </tbody>\n                  <!-- </tbody> -->\n                </table>\n                <div class=\"text-center\">\n                  <span *ngIf=\"reportList.length == 0 && !loader\" class=\"text-center\">No result found</span>\n                </div>\n              </div>\n              <p-paginator [alwaysShow]=\"false\" [rows]=\"limit\" [totalRecords]=\"totalRecord\"\n                (onPageChange)=\"paginate($event)\"></p-paginator>\n\n            </div>\n\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <ngx-spinner type=\"ball-atom\" size=\"medium\" color=\"#58A7FE\"></ngx-spinner>"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-bank-deposit-report/agency-admin-bank-deposit-report.component.ts":
/*!*******************************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-bank-deposit-report/agency-admin-bank-deposit-report.component.ts ***!
  \*******************************************************************************************************************************/
/*! exports provided: AgencyAdminBankDepositReportComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AgencyAdminBankDepositReportComponent", function() { return AgencyAdminBankDepositReportComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../shared/services/agency-api-service/agency-api.service */ "./src/app/layout/agency-admin/components/shared/services/agency-api-service/agency-api.service.ts");
/* harmony import */ var _shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../shared/services/error-handler/error-handler.service */ "./src/app/shared/services/error-handler/error-handler.service.ts");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ngx-spinner */ "./node_modules/ngx-spinner/fesm5/ngx-spinner.js");
/* harmony import */ var _shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../shared/services/notification-service/notification.service */ "./src/app/shared/services/notification-service/notification.service.ts");
/* harmony import */ var _shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../shared/services/common/common.service */ "./src/app/shared/services/common/common.service.ts");
/* harmony import */ var _shared_constatant__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../shared/constatant */ "./src/app/layout/agency-admin/components/shared/constatant.ts");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../../environments/environment */ "./src/environments/environment.ts");
/* harmony import */ var ngx_bootstrap__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ngx-bootstrap */ "./node_modules/ngx-bootstrap/esm5/ngx-bootstrap.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









var AgencyAdminBankDepositReportComponent = /** @class */ (function () {
    function AgencyAdminBankDepositReportComponent(apiService, error, spinner, notification, commonService) {
        this.apiService = apiService;
        this.error = error;
        this.spinner = spinner;
        this.notification = notification;
        this.commonService = commonService;
        this.reportList = [];
        this.pageNo = 0;
        this.limit = 10;
        this.totalRecord = 0;
        this.checkAmount = 0;
        this.cashAmount = 0;
        this.totalCheck = 0;
        this.totalAmount = 0;
        this.today = new Date;
        this.searchByStudentName = '';
        this.loader = true;
        this.count = 0;
        this.dpConfig = new ngx_bootstrap__WEBPACK_IMPORTED_MODULE_8__["BsDatepickerConfig"]();
    }
    AgencyAdminBankDepositReportComponent.prototype.ngOnInit = function () {
        this.searchByDate = new Date();
        this.searchByDateString = this.commonService.getStringLocalDateTimeFromUTC(this.searchByDate);
        this.dpConfig = Object.assign({}, { containerClass: 'theme-dark-blue' }, { showWeekNumbers: false });
        this.getBankDepositReport();
    };
    AgencyAdminBankDepositReportComponent.prototype.getBankDepositReport = function () {
        var _this = this;
        this.loader = true;
        this.reportList = [];
        this.spinner.show();
        var data = {
            'agencyID': this.commonService.getAgencyId(),
            'page': this.pageNo,
            'limit': this.limit,
            'askedDate': this.searchByDate,
            'askedDateString': this.searchByDateString,
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_6__["AgencyAPIURLs"].GetBankDepositReport, data, null).subscribe(function (res) {
            _this.totalRecord = res.body.totalRows;
            if (res.body.statusCode === 200) {
                _this.spinner.hide();
                _this.reportList = res.body.data;
                _this.totalCheck = res.body.count;
                _this.cashAmount = res.body.paidAmountCash;
                _this.checkAmount = res.body.paidAmountCheck;
                _this.totalAmount = res.body.totalPaidAmount;
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
            _this.loader = false;
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminBankDepositReportComponent.prototype.paginate = function (event) {
        this.pageNo = event.page;
        this.getBankDepositReport();
    };
    AgencyAdminBankDepositReportComponent.prototype.pdfReportForBankDeposit = function () {
        var _this = this;
        this.loader = true;
        this.spinner.show();
        var req = {
            'agencyID': this.commonService.getAgencyId(),
            'askedDate': this.searchByDate,
            'askedDateString': this.searchByDateString,
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_6__["AgencyAPIURLs"].PdfReportForBankDeposit, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                var filename = _environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].baseUrl + res.body.fileName;
                var name_1 = res.body.fileName;
                window.open(filename);
                setTimeout(function () {
                    _this.deletePdFFromServer(name_1);
                }, 5000);
            }
            else {
                _this.error.unknownError();
            }
            _this.loader = false;
            _this.spinner.hide();
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    // Delete pdf after use from server
    AgencyAdminBankDepositReportComponent.prototype.deletePdFFromServer = function (filename) {
        var req = {
            'fileName': filename,
            'agencyID': this.commonService.getAgencyId()
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_6__["AgencyAPIURLs"].DeleteExistingFile, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
            }
            else {
            }
        }, function (err) {
            console.log(err);
        });
    };
    AgencyAdminBankDepositReportComponent.prototype.getSerchDate = function (event) {
        this.count++;
        if (this.count > 2) {
            this.searchByDate = event;
            this.searchByDateString = this.commonService.getStringLocalDateTimeFromUTC(this.searchByDate);
        }
    };
    AgencyAdminBankDepositReportComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-agency-admin-bank-deposit-report',
            template: __webpack_require__(/*! ./agency-admin-bank-deposit-report.component.html */ "./src/app/layout/agency-admin/components/agency-admin-bank-deposit-report/agency-admin-bank-deposit-report.component.html"),
            styles: [__webpack_require__(/*! ./agency-admin-bank-deposit-report.component.css */ "./src/app/layout/agency-admin/components/agency-admin-bank-deposit-report/agency-admin-bank-deposit-report.component.css")]
        }),
        __metadata("design:paramtypes", [_shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_1__["AgencyApiService"], _shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_2__["ErrorHandlerService"],
            ngx_spinner__WEBPACK_IMPORTED_MODULE_3__["NgxSpinnerService"], _shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_4__["NotificationService"],
            _shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_5__["CommonService"]])
    ], AgencyAdminBankDepositReportComponent);
    return AgencyAdminBankDepositReportComponent;
}());



/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-birth-reports/agency-admin-reports.component.css":
/*!**************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-birth-reports/agency-admin-reports.component.css ***!
  \**************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9hZ2VuY3ktYWRtaW4vY29tcG9uZW50cy9hZ2VuY3ktYWRtaW4tYmlydGgtcmVwb3J0cy9hZ2VuY3ktYWRtaW4tcmVwb3J0cy5jb21wb25lbnQuY3NzIn0= */"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-birth-reports/agency-admin-reports.component.html":
/*!***************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-birth-reports/agency-admin-reports.component.html ***!
  \***************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"wrapper\">\r\n  <div class=\"container-fluid\">\r\n\r\n    <div class=\"pagetitle\">\r\n      <div>\r\n        <h2>Reports         \r\n        </h2>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"subhead d-flex justify-content-between mt-20 mb-20\">\r\n      <div>\r\n        <h3>Birth Report</h3>\r\n      </div>\r\n      <div style=\"cursor:pointer\" (click)=\"pdfReportForBirthday()\" title=\"Download report\"><i class=\"fa fa-download\" aria-hidden=\"true\"></i>\r\n      </div>\r\n    </div>\r\n    <div class=\"card cardfilter\">     \r\n         <div class=\"leftfilter\">\r\n        <div class=\"row algcenter\">\r\n          <div class=\"search-date\">           \r\n            <input type=\"text\" placeholder=\"Search name\" [(ngModel)]=\"searchName\" class=\"form-control mr15\" id=\"\">\r\n          </div>\r\n          <div class=\"search-class\">\r\n            <div class=\"pr15\">\r\n              <div class=\"form-group\">\r\n                <select class=\"form-control\" placeholder=\"Serch\" [(ngModel)]=\"searchByClass\"\r\n                   id=\"exampleFormControlSelect1\">\r\n                  <option value=\"\">All classes</option>\r\n                  <option *ngFor=\"let classes of classList\" [value]=\"classes.classesID\">{{classes.className}}\r\n                  </option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"search-date\">             \r\n              <select name=\"\" id=\"\" [(ngModel)]=\"searchMonth\" class=\"form-control mr15\">\r\n                  <option value=\"0\">Search By Month</option>\r\n                <option value=\"1\">January</option>\r\n                <option value=\"2\">February</option>\r\n                <option value=\"3\">March</option>\r\n                <option value=\"4\">April</option>\r\n                <option value=\"5\">May</option>\r\n                <option value=\"6\">June</option>\r\n                <option value=\"7\">July</option>\r\n                <option value=\"8\">August</option>\r\n                <option value=\"9\">September</option>\r\n                <option value=\"10\">October</option>\r\n                <option value=\"11\">November</option>\r\n                <option value=\"12\">December</option>\r\n              </select>\r\n            </div>\r\n          <div class=\"search-date\" style=\"width: 150px\">           \r\n            <input type=\"text\" placeholder=\"From Date\" [(ngModel)]=\"fromDate\"  showWeekNumbers=\"false\"\r\n              class=\"form-control mr15\" [bsConfig]=\"dpConfig\" bsDatepicker>\r\n              </div>\r\n              <div class=\"search-date\" style=\"width: 150px\">               \r\n                <input type=\"text\" placeholder=\"To Date\" [(ngModel)]=\"toDate\"  showWeekNumbers=\"false\"\r\n                   class=\"form-control mr15\" [bsConfig]=\"dpConfig\" bsDatepicker>\r\n                  </div>\r\n          <div class=\"filter-buttons\">\r\n            <button type=\"submit\" class=\"btn btn-send\" *ngIf=\"!showClearBtn\" (click)=\"search()\">Search</button>\r\n            <button type=\"submit\" class=\"btn btn-secondary\" *ngIf=\"showClearBtn\" (click)=\"clearSearch()\">Clear</button>\r\n          </div>\r\n      </div> \r\n    </div>\r\n\r\n        \r\n        <div class=\"innertable\">\r\n          <div class=\"table-responsive\">\r\n            <table class=\"table\">\r\n              <thead class=\"thead-light\">\r\n                <tr>\r\n                  <th scope=\"col\">Student Name</th>\r\n                  <th scope=\"col\">Date of Birth</th>\r\n                  <th scope=\"col\">Age</th>\r\n                  <th scope=\"col\">Class</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr *ngFor=\"let student of studentList\">\r\n                  <td>{{student.studentName}}</td>\r\n                  <td>{{student.dateofBirth | date: 'longDate'}}</td>\r\n                  <td>{{student.age}}</td>\r\n                  <td>\r\n                    <p *ngIf=\"student.classesName\">{{student.classesName}}</p>\r\n                    <p *ngIf=\"!student.classesName\" title=\"Not enrolled currently\">--</p>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n            <div class=\"text-center\" *ngIf=\"studentList.length == 0 && !loader\">\r\n              <span>No record found!</span>\r\n            </div>\r\n          </div>\r\n          <p-paginator [alwaysShow]=\"false\" [rows]=\"limit\" [totalRecords]=\"totalRecord\"\r\n            (onPageChange)=\"paginate($event)\"></p-paginator>\r\n        </div>\r\n      </div>\r\n    \r\n    </div>\r\n  </div>\r\n  <ngx-spinner type=\"ball-atom\" size=\"medium\" color=\"#58A7FE\"></ngx-spinner>"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-birth-reports/agency-admin-reports.component.ts":
/*!*************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-birth-reports/agency-admin-reports.component.ts ***!
  \*************************************************************************************************************/
/*! exports provided: AgencyAdminReportsComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AgencyAdminReportsComponent", function() { return AgencyAdminReportsComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../shared/services/agency-api-service/agency-api.service */ "./src/app/layout/agency-admin/components/shared/services/agency-api-service/agency-api.service.ts");
/* harmony import */ var _shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../shared/services/error-handler/error-handler.service */ "./src/app/shared/services/error-handler/error-handler.service.ts");
/* harmony import */ var _shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../shared/services/notification-service/notification.service */ "./src/app/shared/services/notification-service/notification.service.ts");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ngx-spinner */ "./node_modules/ngx-spinner/fesm5/ngx-spinner.js");
/* harmony import */ var _shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../shared/services/common/common.service */ "./src/app/shared/services/common/common.service.ts");
/* harmony import */ var _shared_constatant__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./../shared/constatant */ "./src/app/layout/agency-admin/components/shared/constatant.ts");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../../environments/environment */ "./src/environments/environment.ts");
/* harmony import */ var ngx_bootstrap__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ngx-bootstrap */ "./node_modules/ngx-bootstrap/esm5/ngx-bootstrap.js");
/* harmony import */ var src_app_layout_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/app/layout/teacher/shared/constant */ "./src/app/layout/teacher/shared/constant.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};










var AgencyAdminReportsComponent = /** @class */ (function () {
    function AgencyAdminReportsComponent(apiService, error, spinner, notification, commonService) {
        this.apiService = apiService;
        this.error = error;
        this.spinner = spinner;
        this.notification = notification;
        this.commonService = commonService;
        this.searchName = '';
        this.studentList = [];
        this.loader = true;
        this.pageNo = 0;
        this.limit = 10;
        this.totalRecord = 0;
        this.showClearBtn = false;
        this.searchMonth = 0;
        this.searchByClass = '';
        this.classList = [];
        this.dpConfig = new ngx_bootstrap__WEBPACK_IMPORTED_MODULE_8__["BsDatepickerConfig"]();
    }
    AgencyAdminReportsComponent.prototype.ngOnInit = function () {
        this.dpConfig = Object.assign({}, { containerClass: 'theme-dark-blue' }, { showWeekNumbers: false });
        this.getBirthdayReport();
        this.getAllClassess();
    };
    AgencyAdminReportsComponent.prototype.getBirthdayReport = function () {
        var _this = this;
        this.loader = true;
        this.studentList = [];
        this.spinner.show();
        var req = {
            'StudentName': this.searchName,
            'agencyID': this.commonService.getAgencyId(),
            'page': this.pageNo,
            'limit': this.limit,
            'fromDate': this.fromDate ? this.fromDate : this.blankDate,
            'toDate': this.toDate ? this.toDate : this.blankDate,
            'month': this.searchMonth,
            'ClassesIDReq': this.searchByClass
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_6__["AgencyAPIURLs"].GetBirthDateReport, req, null).subscribe(function (res) {
            _this.totalRecord = res.body.totalRows;
            if (res.body.statusCode === 200) {
                _this.studentList = res.body.data;
            }
            else {
                _this.error.unknownError();
            }
            _this.loader = false;
            _this.spinner.hide();
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminReportsComponent.prototype.pdfReportForBirthday = function () {
        var _this = this;
        this.loader = true;
        this.spinner.show();
        var req = {
            'StudentName': this.searchName,
            'agencyID': this.commonService.getAgencyId(),
            'fromDate': this.fromDate ? this.fromDate : this.blankDate,
            'toDate': this.toDate ? this.toDate : this.blankDate,
            'month': this.searchMonth,
            'ClassesIDReq': this.searchByClass
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_6__["AgencyAPIURLs"].PdfReportForBirthday, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                var filename = _environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].baseUrl + res.body.fileName;
                var name_1 = res.body.fileName;
                window.open(filename);
                setTimeout(function () {
                    _this.deletePdFFromServer(name_1);
                }, 5000);
            }
            else {
                _this.error.unknownError();
            }
            _this.loader = false;
            _this.spinner.hide();
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminReportsComponent.prototype.getRecords = function () {
        console.log('data', this.studentList);
    };
    // Delete pdf after use from server
    AgencyAdminReportsComponent.prototype.deletePdFFromServer = function (filename) {
        var req = {
            'fileName': filename,
            'agencyID': this.commonService.getAgencyId()
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_6__["AgencyAPIURLs"].DeleteExistingFile, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
            }
            else {
            }
        }, function (err) {
            console.log(err);
        });
    };
    AgencyAdminReportsComponent.prototype.paginate = function (event) {
        this.pageNo = event.page;
        this.getBirthdayReport();
    };
    AgencyAdminReportsComponent.prototype.search = function () {
        this.showClearBtn = true;
        this.getBirthdayReport();
    };
    AgencyAdminReportsComponent.prototype.clearSearch = function () {
        this.searchByClass = '';
        this.searchName = '';
        this.searchMonth = 0;
        this.fromDate = null;
        this.toDate = null;
        this.showClearBtn = false;
        this.getBirthdayReport();
    };
    AgencyAdminReportsComponent.prototype.getAllClassess = function () {
        var _this = this;
        this.classList = [];
        this.spinner.show();
        var data = {
            'agencyID': this.commonService.getAgencyId()
        };
        this.apiService.postData(src_app_layout_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_9__["TeacherAPIURLs"].GetAllClasses, data, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.spinner.hide();
                _this.classList = res.body.data;
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminReportsComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-agency-admin-reports',
            template: __webpack_require__(/*! ./agency-admin-reports.component.html */ "./src/app/layout/agency-admin/components/agency-admin-birth-reports/agency-admin-reports.component.html"),
            styles: [__webpack_require__(/*! ./agency-admin-reports.component.css */ "./src/app/layout/agency-admin/components/agency-admin-birth-reports/agency-admin-reports.component.css")]
        }),
        __metadata("design:paramtypes", [_shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_1__["AgencyApiService"], _shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_2__["ErrorHandlerService"],
            ngx_spinner__WEBPACK_IMPORTED_MODULE_4__["NgxSpinnerService"], _shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_3__["NotificationService"],
            _shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_5__["CommonService"]])
    ], AgencyAdminReportsComponent);
    return AgencyAdminReportsComponent;
}());



/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-bus-report/agency-admin-bus-report.component.css":
/*!**************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-bus-report/agency-admin-bus-report.component.css ***!
  \**************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9hZ2VuY3ktYWRtaW4vY29tcG9uZW50cy9hZ2VuY3ktYWRtaW4tYnVzLXJlcG9ydC9hZ2VuY3ktYWRtaW4tYnVzLXJlcG9ydC5jb21wb25lbnQuY3NzIn0= */"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-bus-report/agency-admin-bus-report.component.html":
/*!***************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-bus-report/agency-admin-bus-report.component.html ***!
  \***************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"wrapper\">\n  <div class=\"container-fluid\">\n\n    <div class=\"pagetitle\">\n      <div>\n        <h2>Reports\n        </h2>\n      </div>\n    </div>\n\n    <div class=\"subhead d-flex justify-content-between mt-20 mb-20\">\n      <div>\n        <h3>Student Bus Report</h3>\n      </div>\n      <div style=\"cursor:pointer\" (click)=\"pdfReportForBus()\" title=\"Download report\"><i class=\"fa fa-download\"\n          aria-hidden=\"true\"></i>\n      </div>\n    </div>\n    <div class=\"card cardfilter\">\n      <div class=\"leftfilter\">\n        <div class=\"row algcenter\">\n          <div class=\"search-class\">\n            <div class=\"pr15\">\n              <div class=\"form-group\">\n                <select class=\"form-control\" placeholder=\"Serch\" [(ngModel)]=\"searchByBus\"\n                  id=\"exampleFormControlSelect1\">\n                  <option value=\"0\">All Buses</option>\n                  <option *ngFor=\"let bus of busList\" [value]=\"bus.id\">{{bus.busName}}</option>\n                </select>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"filter-buttons\">\n            <button type=\"submit\" class=\"btn btn-send\" *ngIf=\"!showClearBtn\" (click)=\"search()\">Search</button>\n            <button type=\"submit\" class=\"btn btn-secondary\" *ngIf=\"showClearBtn\" (click)=\"clearSearch()\">Clear</button>\n          </div>\n        </div>\n      </div>\n\n\n      <div class=\"innertable\">\n        <div class=\"table-responsive\">\n          <table class=\"table\">\n            <thead class=\"thead-light\">\n              <tr>\n                <th scope=\"col\">Student Name</th>\n                <th scope=\"col\">Parent Name</th>\n                <th scope=\"col\">Bus</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let student of studentList\">\n                <td>{{student.studentName}}</td>\n                <td>{{student.parentName}}</td>\n                <td>{{student.busName}}</td>\n              </tr>\n            </tbody>\n          </table>\n          <div class=\"text-center\" *ngIf=\"studentList.length == 0 && !loader\">\n            <span>No record found!</span>\n          </div>\n        </div>\n        <p-paginator [alwaysShow]=\"false\" [rows]=\"limit\" [totalRecords]=\"totalRecord\" (onPageChange)=\"paginate($event)\">\n        </p-paginator>\n      </div>\n    </div>\n\n  </div>\n</div>\n<ngx-spinner type=\"ball-atom\" size=\"medium\" color=\"#58A7FE\"></ngx-spinner>"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-bus-report/agency-admin-bus-report.component.ts":
/*!*************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-bus-report/agency-admin-bus-report.component.ts ***!
  \*************************************************************************************************************/
/*! exports provided: AgencyAdminBusReportComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AgencyAdminBusReportComponent", function() { return AgencyAdminBusReportComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../shared/services/agency-api-service/agency-api.service */ "./src/app/layout/agency-admin/components/shared/services/agency-api-service/agency-api.service.ts");
/* harmony import */ var _shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../shared/services/error-handler/error-handler.service */ "./src/app/shared/services/error-handler/error-handler.service.ts");
/* harmony import */ var _shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../shared/services/notification-service/notification.service */ "./src/app/shared/services/notification-service/notification.service.ts");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ngx-spinner */ "./node_modules/ngx-spinner/fesm5/ngx-spinner.js");
/* harmony import */ var _shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../shared/services/common/common.service */ "./src/app/shared/services/common/common.service.ts");
/* harmony import */ var _shared_constatant__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./../shared/constatant */ "./src/app/layout/agency-admin/components/shared/constatant.ts");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../../environments/environment */ "./src/environments/environment.ts");
/* harmony import */ var ngx_bootstrap__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ngx-bootstrap */ "./node_modules/ngx-bootstrap/esm5/ngx-bootstrap.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









var AgencyAdminBusReportComponent = /** @class */ (function () {
    function AgencyAdminBusReportComponent(apiService, error, spinner, notification, commonService) {
        this.apiService = apiService;
        this.error = error;
        this.spinner = spinner;
        this.notification = notification;
        this.commonService = commonService;
        this.studentList = [];
        this.loader = true;
        this.pageNo = 0;
        this.limit = 10;
        this.totalRecord = 0;
        this.showClearBtn = false;
        this.searchByBus = 0;
        this.busList = [];
        this.dpConfig = new ngx_bootstrap__WEBPACK_IMPORTED_MODULE_8__["BsDatepickerConfig"]();
    }
    AgencyAdminBusReportComponent.prototype.ngOnInit = function () {
        this.dpConfig = Object.assign({}, { containerClass: 'theme-dark-blue' }, { showWeekNumbers: false });
        this.getBusReport();
        this.getAllBusList();
    };
    AgencyAdminBusReportComponent.prototype.getBusReport = function () {
        var _this = this;
        this.loader = true;
        this.studentList = [];
        this.spinner.show();
        var req = {
            'agencyID': this.commonService.getAgencyId(),
            'page': this.pageNo,
            'limit': this.limit,
            'BusIDReq': this.searchByBus
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_6__["AgencyAPIURLs"].GetBusReport, req, null).subscribe(function (res) {
            _this.totalRecord = res.body.totalRows;
            if (res.body.statusCode === 200) {
                _this.studentList = res.body.data;
            }
            else {
                _this.error.unknownError();
            }
            _this.loader = false;
            _this.spinner.hide();
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminBusReportComponent.prototype.pdfReportForBus = function () {
        var _this = this;
        this.loader = true;
        this.spinner.show();
        var req = {
            'agencyID': this.commonService.getAgencyId(),
            'BusIDReq': this.searchByBus
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_6__["AgencyAPIURLs"].PdfReportForBus, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                var filename = _environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].baseUrl + res.body.fileName;
                var name_1 = res.body.fileName;
                window.open(filename);
                setTimeout(function () {
                    _this.deletePdFFromServer(name_1);
                }, 5000);
            }
            else {
                _this.error.unknownError();
            }
            _this.loader = false;
            _this.spinner.hide();
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    // Delete pdf after use from server
    AgencyAdminBusReportComponent.prototype.deletePdFFromServer = function (filename) {
        var req = {
            'fileName': filename,
            'agencyID': this.commonService.getAgencyId()
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_6__["AgencyAPIURLs"].DeleteExistingFile, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
            }
            else {
            }
        }, function (err) {
            console.log(err);
        });
    };
    AgencyAdminBusReportComponent.prototype.paginate = function (event) {
        this.pageNo = event.page;
        this.getBusReport();
    };
    AgencyAdminBusReportComponent.prototype.search = function () {
        this.showClearBtn = true;
        this.getBusReport();
    };
    AgencyAdminBusReportComponent.prototype.clearSearch = function () {
        this.searchByBus = 0;
        this.showClearBtn = false;
        this.getBusReport();
    };
    // For Get School Bus
    AgencyAdminBusReportComponent.prototype.getAllBusList = function () {
        var _this = this;
        this.busList = [];
        var data = {
            'agencyID': this.commonService.getAgencyId()
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_6__["AgencyAPIURLs"].GetAllBus, data, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.busList = res.body.data;
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminBusReportComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-agency-admin-bus-report',
            template: __webpack_require__(/*! ./agency-admin-bus-report.component.html */ "./src/app/layout/agency-admin/components/agency-admin-bus-report/agency-admin-bus-report.component.html"),
            styles: [__webpack_require__(/*! ./agency-admin-bus-report.component.css */ "./src/app/layout/agency-admin/components/agency-admin-bus-report/agency-admin-bus-report.component.css")]
        }),
        __metadata("design:paramtypes", [_shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_1__["AgencyApiService"], _shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_2__["ErrorHandlerService"],
            ngx_spinner__WEBPACK_IMPORTED_MODULE_4__["NgxSpinnerService"], _shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_3__["NotificationService"],
            _shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_5__["CommonService"]])
    ], AgencyAdminBusReportComponent);
    return AgencyAdminBusReportComponent;
}());



/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-bus/agency-admin-bus.component.css":
/*!************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-bus/agency-admin-bus.component.css ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".form-control{height: 30px}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L2FnZW5jeS1hZG1pbi9jb21wb25lbnRzL2FnZW5jeS1hZG1pbi1idXMvYWdlbmN5LWFkbWluLWJ1cy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGNBQWMsWUFBWSIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9hZ2VuY3ktYWRtaW4vY29tcG9uZW50cy9hZ2VuY3ktYWRtaW4tYnVzL2FnZW5jeS1hZG1pbi1idXMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mb3JtLWNvbnRyb2x7aGVpZ2h0OiAzMHB4fSJdfQ== */"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-bus/agency-admin-bus.component.html":
/*!*************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-bus/agency-admin-bus.component.html ***!
  \*************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"wrapper\">\n  <div class=\"container-fluid\">\n\n    <div class=\"pagetitle\">\n      <div>\n        <h2>Bus List\n        </h2>\n      </div>\n      <div>\n        <button type=\"submit\" class=\"btn btn-red\" data-toggle=\"modal\" data-target=\".addallergytype\"\n          (click)=\"clearBusForm()\">Add Bus</button>\n      </div>\n    </div>\n\n    <div class=\"d-flex justify-content-between align-items-center mt-20 subhead\">\n      <div>\n        <h3>Bus List</h3>\n      </div>\n    </div>\n\n    <div class=\"tab-content\" id=\"pills-tabContent\">\n      <div class=\"tab-pane fade show active\" id=\"pills-allergyType\" role=\"tabpanel\" aria-labelledby=\"allergyType\">\n        <div class=\"innertable\">\n          <div class=\"table-responsive\">\n            <table class=\"table\">\n              <thead class=\"thead-light\">\n                <tr>\n                  <th scope=\"col\">Bus Name</th>\n                  <th class=\"text-center\" scope=\"col\">Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr *ngFor=\"let bus of busList\">\n                  <td>{{bus.busName}}</td>\n                  <td class=\"text-center\">\n                    <a>\n                      <i class=\"fa fa-trash\" aria-hidden=\"true\" (click)=\"deleteBus(bus)\"></i>\n                    </a>\n                  </td>\n                </tr>   \n              </tbody>\n            </table>\n            <div class=\"text-center\">\n              <span class=\"text-center\" *ngIf=\"(busList.length == 0 && !loader)\">No record found</span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n    </div>\n\n  </div>\n</div>\n\n\n<div class=\"modal fade addallergytype \" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myLargeModalLabel\"\n  aria-hidden=\"true\">\n  <div class=\"modal-dialog modal-lg\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Add Bus</h5>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <form [formGroup]=\"busForm\">\n          <div class=\"row mb-20 mt-20\">\n            <div class=\"col-lg-12\">\n              <div class=\"form-group\">\n                <label for=\"\">Bus Name*</label>\n                <input type=\"text \" class=\"form-control\" id=\"\" aria-describedby=\"\" formControlName=\"busname\"\n                  placeholder=\"Bus Name\">\n                <div *ngIf=\"t.busname.invalid && (t.busname.dirty || t.busname.touched)\" class=\"text-left errormsg\">\n                  <span *ngIf=\"t.busname.errors.required\">\n                    <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please enter bus name</span>\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"saveBusName()\">Add</button>\n      </div>\n    </div>\n  </div>\n</div>\n\n\n<app-confirm-box></app-confirm-box>\n<ngx-spinner type=\"ball-atom\" size=\"medium\" color=\"#58A7FE\"></ngx-spinner>"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-bus/agency-admin-bus.component.ts":
/*!***********************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-bus/agency-admin-bus.component.ts ***!
  \***********************************************************************************************/
/*! exports provided: AgencyAdminBusComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AgencyAdminBusComponent", function() { return AgencyAdminBusComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _agency_admin_components_shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../agency-admin/components/shared/services/agency-api-service/agency-api.service */ "./src/app/layout/agency-admin/components/shared/services/agency-api-service/agency-api.service.ts");
/* harmony import */ var _shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../shared/services/error-handler/error-handler.service */ "./src/app/shared/services/error-handler/error-handler.service.ts");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ngx-spinner */ "./node_modules/ngx-spinner/fesm5/ngx-spinner.js");
/* harmony import */ var _shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../shared/services/notification-service/notification.service */ "./src/app/shared/services/notification-service/notification.service.ts");
/* harmony import */ var _shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../shared/services/common/common.service */ "./src/app/shared/services/common/common.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var primeng_api__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! primeng/api */ "./node_modules/primeng/api.js");
/* harmony import */ var primeng_api__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(primeng_api__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var _shared_constatant__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../shared/constatant */ "./src/app/layout/agency-admin/components/shared/constatant.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};










var AgencyAdminBusComponent = /** @class */ (function () {
    function AgencyAdminBusComponent(error, apiService, spinner, notification, commonService, fb, route, confirmationService) {
        this.error = error;
        this.apiService = apiService;
        this.spinner = spinner;
        this.notification = notification;
        this.commonService = commonService;
        this.fb = fb;
        this.route = route;
        this.confirmationService = confirmationService;
        this.busList = [];
    }
    AgencyAdminBusComponent.prototype.ngOnInit = function () {
        this.createBusForm();
        this.getAllBusList();
    };
    AgencyAdminBusComponent.prototype.createBusForm = function () {
        this.busForm = this.fb.group({
            busname: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required]
        });
    };
    Object.defineProperty(AgencyAdminBusComponent.prototype, "t", {
        get: function () { return this.busForm.controls; },
        enumerable: true,
        configurable: true
    });
    AgencyAdminBusComponent.prototype.getAllBusList = function () {
        var _this = this;
        this.busList = [];
        var data = {
            'agencyID': this.commonService.getAgencyId()
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_9__["AgencyAPIURLs"].GetAllBus, data, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.busList = res.body.data;
                _this.spinner.hide();
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    // Save Bus Name
    AgencyAdminBusComponent.prototype.saveBusName = function () {
        var _this = this;
        if (this.busForm.valid) {
            var data = {
                'id': 0,
                'agencyID': this.commonService.getAgencyId(),
                'BusName': this.busForm.value.busname,
                'createdBy': this.commonService.getAgencyId()
            };
            this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_9__["AgencyAPIURLs"].SaveAllBus, data, null).subscribe(function (res) {
                if (res.body.statusCode === 200) {
                    $('.addallergytype').modal('hide');
                    _this.spinner.hide();
                    _this.notification.success({ message: 'Bus Added successfully', title: '' });
                    _this.getAllBusList();
                }
                else if (res.body.statusCode === 206) {
                    _this.spinner.hide();
                    _this.notification.warning({ message: 'Bus already exists with same name.', title: '' });
                }
                else {
                    _this.spinner.hide();
                    _this.error.unknownError();
                }
            }, function (err) {
                _this.spinner.hide();
                _this.error.commonError(err);
            });
        }
        else {
            this.spinner.hide();
            this.commonService.validateAllFields(this.busForm);
        }
    };
    // Delete Bus Name
    AgencyAdminBusComponent.prototype.deleteBus = function (value) {
        var _this = this;
        this.confirmationService.confirm({
            message: 'Do you want to delete this Bus?',
            accept: function () {
                _this.spinner.show();
                value.IsDeleted = true;
                value.DeletedDate = new Date();
                value.DeletedBy = _this.commonService.getReleventUserId('userdetails');
                _this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_9__["AgencyAPIURLs"].SaveAllBus, value, null).subscribe(function (res) {
                    if (res.body.statusCode === 200) {
                        _this.notification.success({ message: 'This Bus has been deleted', title: '' });
                        _this.getAllBusList();
                    }
                    else if (res.body.statusCode === 986) {
                        _this.spinner.hide();
                        _this.notification.warning({ message: res.body.message, title: '' });
                    }
                    else {
                        _this.spinner.hide();
                        _this.notification.warning({ message: res.body.message, title: '' });
                    }
                }, function (err) {
                    _this.spinner.hide();
                    _this.error.commonError(err);
                });
            }
        });
    };
    AgencyAdminBusComponent.prototype.clearBusForm = function () {
        this.createBusForm();
    };
    AgencyAdminBusComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-agency-admin-bus',
            template: __webpack_require__(/*! ./agency-admin-bus.component.html */ "./src/app/layout/agency-admin/components/agency-admin-bus/agency-admin-bus.component.html"),
            styles: [__webpack_require__(/*! ./agency-admin-bus.component.css */ "./src/app/layout/agency-admin/components/agency-admin-bus/agency-admin-bus.component.css")]
        }),
        __metadata("design:paramtypes", [_shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_3__["ErrorHandlerService"], _agency_admin_components_shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_2__["AgencyApiService"],
            ngx_spinner__WEBPACK_IMPORTED_MODULE_4__["NgxSpinnerService"], _shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_5__["NotificationService"],
            _shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_6__["CommonService"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormBuilder"], _angular_router__WEBPACK_IMPORTED_MODULE_7__["ActivatedRoute"],
            primeng_api__WEBPACK_IMPORTED_MODULE_8__["ConfirmationService"]])
    ], AgencyAdminBusComponent);
    return AgencyAdminBusComponent;
}());



/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-class-transfer-report/agency-admin-classtransferreport.component.css":
/*!**********************************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-class-transfer-report/agency-admin-classtransferreport.component.css ***!
  \**********************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9hZ2VuY3ktYWRtaW4vY29tcG9uZW50cy9hZ2VuY3ktYWRtaW4tY2xhc3MtdHJhbnNmZXItcmVwb3J0L2FnZW5jeS1hZG1pbi1jbGFzc3RyYW5zZmVycmVwb3J0LmNvbXBvbmVudC5jc3MifQ== */"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-class-transfer-report/agency-admin-classtransferreport.component.html":
/*!***********************************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-class-transfer-report/agency-admin-classtransferreport.component.html ***!
  \***********************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"wrapper\">\r\n  <div class=\"container-fluid\">\r\n\r\n    <div class=\"pagetitle\">\r\n      <div>\r\n        <h2>Report\r\n          <span>/ Student Class Transfer </span>\r\n        </h2>\r\n      </div>\r\n    </div>\r\n    <div class=\"subhead d-flex justify-content-between mt-20\">\r\n      <div>\r\n        <h3>Student Class Transfer Report</h3>\r\n      </div>\r\n      <div style=\"cursor:pointer\" title=\"Download report\" (click)=\"pdfStudentTransferAttendanceReport()\"><i class=\"fa fa-download\" aria-hidden=\"true\"></i>\r\n      </div>\r\n    </div>\r\n    <div class=\"card cardfilter\">\r\n      <div class=\"leftfilter\">\r\n        <div class=\"row algcenter\">\r\n          <div class=\"search-date\">\r\n            <div class=\"pr15 label-text\">Search Name : </div>\r\n            <input type=\"text\" placeholder=\"Search student name\" class=\"form-control mr15\" [(ngModel)]=\"searchByStudentName\" id=\"\">\r\n          </div>\r\n          <div class=\"search-date\">\r\n            <div class=\"pr15 label-text\">From Date : </div>\r\n            <input type=\"text\" placeholder=\"Search by date\" [(ngModel)]=\"fromDate\" showWeekNumbers=\"false\" class=\"form-control mr15\"\r\n              [bsConfig]=\"dpConfig\" bsDatepicker>\r\n          </div>\r\n          <div class=\"search-date\">\r\n            <div class=\"pr15 label-text\">To Date : </div>\r\n            <input type=\"text\" placeholder=\"Search by date\" [(ngModel)]=\"toDate\" showWeekNumbers=\"false\" class=\"form-control mr15\"\r\n              [bsConfig]=\"dpConfig\" bsDatepicker>\r\n          </div>\r\n          <div class=\"filter-buttons\">\r\n            <button type=\"submit\" class=\"btn btn-send\" *ngIf=\"!showClearBtn\" (click)=\"search()\">Search</button>\r\n            <button type=\"submit\" class=\"btn btn-secondary\" *ngIf=\"showClearBtn\" (click)=\"clearSearch()\">Clear</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"studentlist\">\r\n        <div class=\"tab-content\" id=\"pills-tabContent\">\r\n          <div class=\"tab-pane fade show active\" id=\"pills-appstudent\" role=\"tabpanel\" aria-labelledby=\"appStudent\">\r\n\r\n            <div class=\"innertable studentListSearch\">\r\n              <div class=\"table-responsive\">\r\n                <table class=\"table \">\r\n                  <thead class=\"thead-light\">\r\n                    <tr>\r\n                      <th scope=\"col\">Student Name</th>\r\n                      <th scope=\"col\">Teacher Name</th>\r\n                      <th scope=\"col\">Transfer Date</th>\r\n                      <th scope=\"col\">From Class</th>\r\n                      <th scope=\"col\">To Class</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr *ngFor=\"let student of transferList\" >\r\n                      <td>{{student.studentName}}</td>\r\n                      <td>{{student.teacherName}}</td>\r\n                      <td>{{student.transferDate | date}}</td>\r\n                      <td>{{student.fromClassName}}</td>\r\n                      <td>{{student.toClassName}}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n                <div class=\"text-center\">\r\n                  <span *ngIf=\"transferList.length == 0 && !loader\" class=\"text-center\">No result found</span>\r\n                </div>\r\n              </div>\r\n              <p-paginator [alwaysShow]=\"false\" [rows]=\"limit\" [totalRecords]=\"totalRecord\" (onPageChange)=\"paginate($event)\"></p-paginator>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <ngx-spinner type=\"ball-atom\" size=\"medium\" color=\"#58A7FE\"></ngx-spinner>"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-class-transfer-report/agency-admin-classtransferreport.component.ts":
/*!*********************************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-class-transfer-report/agency-admin-classtransferreport.component.ts ***!
  \*********************************************************************************************************************************/
/*! exports provided: AgencyAdminClasstransferreportComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AgencyAdminClasstransferreportComponent", function() { return AgencyAdminClasstransferreportComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var ngx_bootstrap__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ngx-bootstrap */ "./node_modules/ngx-bootstrap/esm5/ngx-bootstrap.js");
/* harmony import */ var src_app_shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/shared/services/error-handler/error-handler.service */ "./src/app/shared/services/error-handler/error-handler.service.ts");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ngx-spinner */ "./node_modules/ngx-spinner/fesm5/ngx-spinner.js");
/* harmony import */ var src_app_shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/shared/services/notification-service/notification.service */ "./src/app/shared/services/notification-service/notification.service.ts");
/* harmony import */ var src_app_shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/shared/services/common/common.service */ "./src/app/shared/services/common/common.service.ts");
/* harmony import */ var _shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../shared/services/agency-api-service/agency-api.service */ "./src/app/layout/agency-admin/components/shared/services/agency-api-service/agency-api.service.ts");
/* harmony import */ var _shared_constatant__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../shared/constatant */ "./src/app/layout/agency-admin/components/shared/constatant.ts");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../../environments/environment */ "./src/environments/environment.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









var AgencyAdminClasstransferreportComponent = /** @class */ (function () {
    function AgencyAdminClasstransferreportComponent(apiService, error, spinner, notification, commonService) {
        this.apiService = apiService;
        this.error = error;
        this.spinner = spinner;
        this.notification = notification;
        this.commonService = commonService;
        this.searchByStudentName = '';
        this.pageNo = 0;
        this.loader = true;
        this.limit = 10;
        this.totalRecord = 0;
        this.showClearBtn = false;
        this.transferList = [];
        this.dpConfig = new ngx_bootstrap__WEBPACK_IMPORTED_MODULE_1__["BsDatepickerConfig"]();
    }
    AgencyAdminClasstransferreportComponent.prototype.ngOnInit = function () {
        this.dpConfig = Object.assign({}, { containerClass: 'theme-dark-blue' }, { showWeekNumbers: false });
        this.getClassTransferReport();
    };
    AgencyAdminClasstransferreportComponent.prototype.getClassTransferReport = function () {
        var _this = this;
        this.loader = true;
        this.transferList = [];
        this.spinner.show();
        var data = {
            'agencyID': this.commonService.getAgencyId(),
            'studentName': this.searchByStudentName,
            'fromDate': this.fromDate ? this.fromDate : this.blankDate,
            'toDate': this.toDate ? this.toDate : this.blankDate,
            'page': this.pageNo,
            'limit': this.limit,
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_7__["AgencyAPIURLs"].StudentTransferAttendanceReport, data, null).subscribe(function (res) {
            _this.totalRecord = res.body.totalRows;
            if (res.body.statusCode === 200) {
                _this.spinner.hide();
                _this.transferList = res.body.data;
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
            _this.loader = false;
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminClasstransferreportComponent.prototype.paginate = function (event) {
        this.pageNo = event.page;
        this.getClassTransferReport();
    };
    AgencyAdminClasstransferreportComponent.prototype.search = function () {
        this.showClearBtn = true;
        this.getClassTransferReport();
    };
    AgencyAdminClasstransferreportComponent.prototype.pdfStudentTransferAttendanceReport = function () {
        var _this = this;
        this.loader = true;
        this.spinner.show();
        var req = {
            'StudentName': this.searchByStudentName,
            'agencyID': this.commonService.getAgencyId()
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_7__["AgencyAPIURLs"].PDFStudentTransferAttendanceReport, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                var filename = _environments_environment__WEBPACK_IMPORTED_MODULE_8__["environment"].baseUrl + res.body.fileName;
                var name_1 = res.body.fileName;
                window.open(filename);
                setTimeout(function () {
                    _this.deletePdFFromServer(name_1);
                }, 5000);
            }
            else {
                _this.error.unknownError();
            }
            _this.loader = false;
            _this.spinner.hide();
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    // Delete pdf after use from server
    AgencyAdminClasstransferreportComponent.prototype.deletePdFFromServer = function (filename) {
        var req = {
            'fileName': filename,
            'agencyID': this.commonService.getAgencyId()
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_7__["AgencyAPIURLs"].DeleteExistingFile, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
            }
            else {
            }
        }, function (err) {
            console.log(err);
        });
    };
    AgencyAdminClasstransferreportComponent.prototype.clearSearch = function () {
        this.searchByStudentName = '';
        this.fromDate = null;
        this.toDate = null;
        this.showClearBtn = false;
        this.getClassTransferReport();
    };
    AgencyAdminClasstransferreportComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-agency-admin-classtransferreport',
            template: __webpack_require__(/*! ./agency-admin-classtransferreport.component.html */ "./src/app/layout/agency-admin/components/agency-admin-class-transfer-report/agency-admin-classtransferreport.component.html"),
            styles: [__webpack_require__(/*! ./agency-admin-classtransferreport.component.css */ "./src/app/layout/agency-admin/components/agency-admin-class-transfer-report/agency-admin-classtransferreport.component.css")]
        }),
        __metadata("design:paramtypes", [_shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_6__["AgencyApiService"], src_app_shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_2__["ErrorHandlerService"],
            ngx_spinner__WEBPACK_IMPORTED_MODULE_3__["NgxSpinnerService"], src_app_shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_4__["NotificationService"],
            src_app_shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_5__["CommonService"]])
    ], AgencyAdminClasstransferreportComponent);
    return AgencyAdminClasstransferreportComponent;
}());



/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-classassignment/agency-admin-classassignment.component.css":
/*!************************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-classassignment/agency-admin-classassignment.component.css ***!
  \************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".checkbox_date\r\n{\r\n    height: 34px;\r\n    width: 25px;\r\n    margin-left: 18px;\r\n    margin-top: 4px;\r\n}\r\n\r\n.closepos{  position: absolute;  right: 170px;}\r\n\r\n.btn-send {\r\n    background: #58A7FE;\r\n    padding: 5px 20px;\r\n    color: #fff;\r\n    font-size: 15px !important;\r\n    border-radius: 30px;\r\n}\r\n\r\n@media (max-width:767px){\r\n    .closepos {\r\n        position: absolute;\r\n        right: 40px;\r\n    }\r\n}\r\n\r\n.info-icon{\r\n    margin-left: 243px;\r\n    font-size: 20px; \r\n    color: #383333;\r\n}\r\n\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L2FnZW5jeS1hZG1pbi9jb21wb25lbnRzL2FnZW5jeS1hZG1pbi1jbGFzc2Fzc2lnbm1lbnQvYWdlbmN5LWFkbWluLWNsYXNzYXNzaWdubWVudC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztJQUVJLFlBQVk7SUFDWixXQUFXO0lBQ1gsaUJBQWlCO0lBQ2pCLGVBQWU7QUFDbkI7O0FBRUEsWUFBWSxrQkFBa0IsR0FBRyxZQUFZLENBQUM7O0FBRTlDO0lBQ0ksbUJBQW1CO0lBQ25CLGlCQUFpQjtJQUNqQixXQUFXO0lBQ1gsMEJBQTBCO0lBQzFCLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJO1FBQ0ksa0JBQWtCO1FBQ2xCLFdBQVc7SUFDZjtBQUNKOztBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLGVBQWU7SUFDZixjQUFjO0FBQ2xCIiwiZmlsZSI6InNyYy9hcHAvbGF5b3V0L2FnZW5jeS1hZG1pbi9jb21wb25lbnRzL2FnZW5jeS1hZG1pbi1jbGFzc2Fzc2lnbm1lbnQvYWdlbmN5LWFkbWluLWNsYXNzYXNzaWdubWVudC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNoZWNrYm94X2RhdGVcclxue1xyXG4gICAgaGVpZ2h0OiAzNHB4O1xyXG4gICAgd2lkdGg6IDI1cHg7XHJcbiAgICBtYXJnaW4tbGVmdDogMThweDtcclxuICAgIG1hcmdpbi10b3A6IDRweDtcclxufVxyXG5cclxuLmNsb3NlcG9zeyAgcG9zaXRpb246IGFic29sdXRlOyAgcmlnaHQ6IDE3MHB4O31cclxuXHJcbi5idG4tc2VuZCB7XHJcbiAgICBiYWNrZ3JvdW5kOiAjNThBN0ZFO1xyXG4gICAgcGFkZGluZzogNXB4IDIwcHg7XHJcbiAgICBjb2xvcjogI2ZmZjtcclxuICAgIGZvbnQtc2l6ZTogMTVweCAhaW1wb3J0YW50O1xyXG4gICAgYm9yZGVyLXJhZGl1czogMzBweDtcclxufVxyXG5cclxuQG1lZGlhIChtYXgtd2lkdGg6NzY3cHgpe1xyXG4gICAgLmNsb3NlcG9zIHtcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgcmlnaHQ6IDQwcHg7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5pbmZvLWljb257XHJcbiAgICBtYXJnaW4tbGVmdDogMjQzcHg7XHJcbiAgICBmb250LXNpemU6IDIwcHg7IFxyXG4gICAgY29sb3I6ICMzODMzMzM7XHJcbn1cclxuIl19 */"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-classassignment/agency-admin-classassignment.component.html":
/*!*************************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-classassignment/agency-admin-classassignment.component.html ***!
  \*************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"wrapper\">\r\n  <div class=\"container-fluid\">\r\n\r\n    <div class=\"pagetitle\">\r\n      <div>\r\n        <h2>Classes\r\n          <!-- <span>/ Classes </span> -->\r\n        </h2>\r\n      </div>\r\n      <div class=\"closepos\">\r\n        <button type=\"submit\" *ngIf=\"isSubscriptionActive\" class=\"btn btn-red\" data-toggle=\"modal\" data-target=\".addclass\" (click)=\"cleareForm()\">Assign Class</button>\r\n      </div>\r\n      <div *ngIf=\"isSubscriptionActive\" class=\"upload-btn-wrapper\">\r\n        <button class=\"btn btn-send\">Upload CSV</button>\r\n        <input type=\"file\" #input (change)=\"processCSVFile($event)\">\r\n        <!-- <input type=\"file\" name=\"myfile\" formControlName=\"photo\" /> -->\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"subhead d-flex justify-content-between mt-20\">\r\n      <div><h3>Classes</h3>\r\n      </div> \r\n      <div class=\"info-icon\">\r\n        <i class=\"fa fa-info-circle\" (click)=\"OpenInfoVideo()\" data-toggle=\"modal\"\r\n           aria-hidden=\"true\" title=\"Information Video\"></i>\r\n      </div>\r\n    </div>    \r\n    <div class=\"innertable\">\r\n      <div class=\"table-responsive\">\r\n        <table class=\"table\">\r\n          <thead class=\"thead-light\">\r\n            <tr>\r\n              <th scope=\"col\">Class Name</th>\r\n              <th scope=\"col\">Teacher Name</th>\r\n              <th scope=\"col\">Start date</th>\r\n              <th scope=\"col\">End date</th>\r\n              <th scope=\"col\">Start Time</th>\r\n              <th scope=\"col\">End Time</th>\r\n              <th scope=\"col\">Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr *ngFor=\"let class of classList\">\r\n              <td>{{class.className}}</td>\r\n              <td>{{class.teacherName}}</td>\r\n              <td>{{class.classEnrollStartDate | date}}</td>\r\n              <td *ngIf=\"class.classEnrollEndDate != '2080-01-01T00:00:00'\">{{class.classEnrollEndDate| date}}</td>\r\n              <td *ngIf=\"class.classEnrollEndDate == '2080-01-01T00:00:00'\">On Going</td>\r\n              <td>{{class.classStartTime| date: 'h:mm a'}}</td>\r\n              <td>{{class.classEndTime| date: 'h:mm a'}}</td>\r\n              <td>\r\n                <a data-toggle=\"modal\" data-target=\".addclass\" title=\"Edit/View Class Details\" (click)=\"getClassDetails(class)\">\r\n                  <i class=\"fa fa-eye\" aria-hidden=\"true\" (click)=\"getClassDetails(class)\"></i>\r\n                </a>\r\n                <a *ngIf=\"isSubscriptionActive\">\r\n                  <i class=\"fa fa-trash\" aria-hidden=\"true\" (click)=\"deleteClassAssignment(class)\"></i>\r\n                </a>\r\n              </td>\r\n            </tr>\r\n\r\n\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n \r\n      <p-paginator [alwaysShow]=\"false\" [rows]=\"limit\" [totalRecords]=\"totalRecord\" (onPageChange)=\"paginate($event)\"></p-paginator>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- For Information Video -->\r\n  <div class=\"modal fade\" id=\"infovideo\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"checkoutLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <h5 class=\"modal-title\" id=\"checkoutLabel\">Information Video</h5>\r\n          <button type=\"button\" class=\"close\" (click)= \"PauseInfoVideo()\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <div class=\"cont video_section_pop\" *ngIf=\"videoPath\">\r\n            <video controls id=\"pausevideo\">\r\n              <source *ngIf=\"videoPath\" [src] = \"videoPath\" type=\"video/mp4\" />\r\n              <source *ngIf=\"videoPath\" [src] = \"videoPath\" type=\"video/ogg\" />\r\n              <source *ngIf=\"videoPath\" [src] = \"videoPath\" type=\"video/webm\" />\r\n              Browser not supported\r\n            </video>\r\n          </div>\r\n\r\n          <div class=\"cont video_section_pop\" *ngIf=\"!videoPath\">\r\n              Video Not Found\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n<!-- Asign Class modal  -->\r\n  <div class=\"modal fade addclass\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myLargeModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-lg\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Class Assignment</h5>\r\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n\r\n        <div class=\"row\">\r\n          <div class=\"col-lg-4\">\r\n            <img src=\"assets/img/addclass.png\" alt=\"\" width=\"250px\">\r\n          </div>\r\n          <div class=\"col-lg-8\">\r\n              <form  [formGroup]=\"classForm\">\r\n                  <div class=\"row mb-20\">\r\n                    <div class=\"col-lg-6\">\r\n                      <div class=\"form-group\">\r\n                        <label for=\"\">Select Class*</label>\r\n                        <select class=\"form-control\" placeholder=\"Serch\" formControlName=\"classId\" (change)=\"getClassTime()\" id=\"exampleFormControlSelect1\">\r\n                            <option value=\"\">Select class</option>\r\n                            <option *ngFor=\"let classes of allClassList\" [value]=\"classes.classesID\">{{classes.className}}</option>\r\n                          </select>\r\n                        <div *ngIf=\"f.classId.invalid && (f.classId.dirty || f.classId.touched)\" class=\"text-left errormsg\">\r\n                          <span *ngIf=\"f.classId.errors.required\">\r\n                            <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please Select Classname</span>\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"col-lg-6\">\r\n                      <div class=\"form-group\">\r\n                        <label for=\"exampleFormControlSelect1\">Select Teacher* </label>    \r\n                        <select class=\"form-control\" placeholder=\"Serch\" formControlName=\"teacherId\" (change)=\"getClassTime()\" id=\"exampleFormControlSelect1\">\r\n                            <option value=\"\">Select Teacher</option>\r\n                            <option *ngFor=\"let teacher of teacherList\" [value]=\"teacher.id\">{{teacher.teacherName}}</option>\r\n                          </select>\r\n                          <div *ngIf=\"f.teacherId.invalid && (f.teacherId.dirty || f.teacherId.touched)\" class=\"text-left errormsg\">\r\n                            <span *ngIf=\"f.teacherId.errors.required\">\r\n                              <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please Select Teacher</span>\r\n                            </span>\r\n                          </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n    \r\n                  <div class=\"row mb-20\">\r\n                    <div class=\"col-lg-6\">\r\n                      <div class=\"form-group\">\r\n                        <label for=\"exampleFormControlSelect1\">From Date*</label>\r\n                        <!-- <input type=\"date\" name=\"sessionFrom\" id=\"\" class=\"form-control\" formControlName=\"sessionFrom\"> -->\r\n                        <input type=\"text\"  [maxDate]=\"classEndDate\" placeholder=\"Select date\" formControlName=\"enrollstartdate\"\r\n                        showWeekNumbers=\"false\"   class=\"form-control\" [bsConfig]=\"dpConfig\" bsDatepicker>\r\n                        <div *ngIf=\"f.enrollstartdate.invalid && (f.enrollstartdate.dirty || f.enrollstartdate.touched)\" class=\"text-left errormsg\">\r\n                          <span *ngIf=\"f.enrollstartdate.errors.required\">\r\n                            <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please Select Date</span>\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-lg-2\">\r\n                      <div class=\"form-group\">\r\n                        <label for=\"\">On Going</label>\r\n                         <input type=\"checkbox\" id=\"checkbox-in\" class=\"checkbox_date\" \r\n                         (change)=\"onGoing()\" formControlName=\"ongoing\"> \r\n                      </div>\r\n                    </div>\r\n                        \r\n                    <div class=\"col-lg-4\">\r\n                      <div class=\"form-group\">\r\n                        <label for=\"exampleFormControlSelect1\">To Date*</label>\r\n                        <input *ngIf=\"!isOngoing\" type=\"text\" [maxDate]=\"classEndDate\" placeholder=\"Select date\" formControlName=\"enrollendtdate\"\r\n                        showWeekNumbers=\"false\"  class=\"form-control\" [bsConfig]=\"dpConfig\" bsDatepicker>\r\n                        <p *ngIf=\"isOngoing\" class=\"form-control\">On Going</p>\r\n                        <!-- <input type=\"date\" name=\"sessionTo\" id=\"\" class=\"form-control\" formControlName=\"sessionTo\"> -->\r\n                        <div *ngIf=\"f.enrollendtdate.invalid && (f.enrollendtdate.dirty || f.enrollendtdate.touched)\" class=\"text-left errormsg\">\r\n                          <span *ngIf=\"f.enrollendtdate.errors.required\">\r\n                            <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please Select Date</span>\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"row mb-20\">\r\n                    <div class=\"col-lg-6\">\r\n                      <div class=\"form-group\">\r\n                        <label for=\"exampleFormControlSelect1\">Class Start Time*</label>\r\n                        <p-calendar class=\"custom-textbox-checkedin\" styleClass=\"form-control\" formControlName=\"starttime\" hourFormat=\"12\" [timeOnly]=\"true\" icon=\"pi pi-clock\"\r\n                        [showIcon]=\"true\"></p-calendar>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"col-lg-6\">\r\n                      <div class=\"form-group\">\r\n                        <label for=\"exampleFormControlSelect1\">Class End Time*</label>\r\n                        <p-calendar class=\"custom-textbox-checkedin\" styleClass=\"form-control\" formControlName=\"endtime\" hourFormat=\"12\" [timeOnly]=\"true\" icon=\"pi pi-clock\"\r\n                        [showIcon]=\"true\"></p-calendar>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n          </div>\r\n        </div>  \r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n          <button type=\"button\" class=\"btn btn-primary\" *ngIf=\"isSubscriptionActive\"  (click)=\"saveClassAssignment()\">Assign Class</button>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n <!-- Rejected User List -->\r\n <div class=\"modal fade rejectedUsr\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myLargeModalLabel\"\r\n aria-hidden=\"true\">\r\n <div class=\"modal-dialog modal-lg\">\r\n   <div class=\"modal-content\">\r\n     <div class=\"modal-header\">\r\n       <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Rejected Assignment List</h5>\r\n       <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n         <span aria-hidden=\"true\">&times;</span>\r\n       </button>\r\n     </div>\r\n     <div class=\"modal-body\">\r\n       <div class=\"innertable\">\r\n         <div class=\"table-responsive\">\r\n\r\n           <table class=\"table\">\r\n             <thead class=\"thead-light\">\r\n               <tr>\r\n                 <th scope=\"col\">Teacher Email</th>\r\n                 <th scope=\"col\">Class Name</th>\r\n                 <th scope=\"col\">Reason</th>\r\n               </tr>\r\n             </thead>\r\n             <tbody>\r\n               <tr *ngFor=\"let student of rejectedUserList\">\r\n                 <td>{{student.email}}</td>\r\n                 <td>{{student.className}}</td>\r\n                 <td>{{student.message}}</td>\r\n               </tr>\r\n             </tbody>\r\n           </table>\r\n\r\n         </div>\r\n       </div>\r\n     </div>\r\n     <div class=\"modal-footer\">\r\n       <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n     </div>\r\n   </div>\r\n </div>\r\n</div>\r\n\r\n<ngx-spinner type=\"ball-atom\" size=\"medium\" color=\"#58A7FE\"></ngx-spinner>\r\n\r\n<app-confirm-box></app-confirm-box>\r\n"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-classassignment/agency-admin-classassignment.component.ts":
/*!***********************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-classassignment/agency-admin-classassignment.component.ts ***!
  \***********************************************************************************************************************/
/*! exports provided: AgencyAdminClassassignmentComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AgencyAdminClassassignmentComponent", function() { return AgencyAdminClassassignmentComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../shared/services/agency-api-service/agency-api.service */ "./src/app/layout/agency-admin/components/shared/services/agency-api-service/agency-api.service.ts");
/* harmony import */ var _shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../shared/services/error-handler/error-handler.service */ "./src/app/shared/services/error-handler/error-handler.service.ts");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ngx-spinner */ "./node_modules/ngx-spinner/fesm5/ngx-spinner.js");
/* harmony import */ var _shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../shared/services/notification-service/notification.service */ "./src/app/shared/services/notification-service/notification.service.ts");
/* harmony import */ var _shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../shared/services/common/common.service */ "./src/app/shared/services/common/common.service.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var primeng_api__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! primeng/api */ "./node_modules/primeng/api.js");
/* harmony import */ var primeng_api__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(primeng_api__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var _shared_constatant__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../shared/constatant */ "./src/app/layout/agency-admin/components/shared/constatant.ts");
/* harmony import */ var ngx_bootstrap__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ngx-bootstrap */ "./node_modules/ngx-bootstrap/esm5/ngx-bootstrap.js");
/* harmony import */ var _teacher_shared_constant__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../teacher/shared/constant */ "./src/app/layout/teacher/shared/constant.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};












var AgencyAdminClassassignmentComponent = /** @class */ (function () {
    function AgencyAdminClassassignmentComponent(apiService, error, spinner, notification, commonService, fb, route, confirmationService) {
        this.apiService = apiService;
        this.error = error;
        this.spinner = spinner;
        this.notification = notification;
        this.commonService = commonService;
        this.fb = fb;
        this.route = route;
        this.confirmationService = confirmationService;
        this.classList = [];
        this.allClassList = [];
        this.classVM = {};
        this.today = new Date();
        this.teacherList = [];
        this.agencyId = 0;
        this.id = 0;
        this.pageNo = 0;
        this.limit = 10;
        this.totalRecord = 0;
        this.rejectedUserList = [];
        this.videoPath = '';
        this.dpConfig = new ngx_bootstrap__WEBPACK_IMPORTED_MODULE_10__["BsDatepickerConfig"]();
        this.isSubscriptionActive = this.commonService.getSubscriptionStatus();
    }
    AgencyAdminClassassignmentComponent.prototype.ngOnInit = function () {
        this.agencyId = this.commonService.getAgencyId(),
            this.dpConfig = Object.assign({}, { containerClass: 'theme-dark-blue' }, { showWeekNumbers: false });
        this.spinner.show();
        this.getAllClassAssignmentLog();
        this.createClassForm();
        this.getAllClassess();
        this.getAllTeachers();
        this.getSectionVideo();
    };
    AgencyAdminClassassignmentComponent.prototype.OpenInfoVideo = function (data) {
        $('#infovideo').modal('show');
    };
    AgencyAdminClassassignmentComponent.prototype.getSectionVideo = function () {
        var _this = this;
        var req = {
            'SectionID': 8
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_11__["TeacherAPIURLs"].GetVideoForSection, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.videoPath = res.body.filePath;
                console.log(_this.videoPath, 'bbbbbbbbbbbbbbb');
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminClassassignmentComponent.prototype.PauseInfoVideo = function () {
        var myVideo = document.getElementById('pausevideo');
        myVideo.pause();
        myVideo.currentTime = 0;
    };
    AgencyAdminClassassignmentComponent.prototype.onGoing = function () {
        debugger;
        if (this.classForm.value.ongoing === true) {
            this.isOngoing = true;
            var d = new Date('Jan 1, 2080 12:00:00');
            this.classForm.controls.enrollendtdate.setValue(this.classEndDate);
            this.classForm.controls.enrollendtdate.updateValueAndValidity();
        }
        else {
            if (this.classVM.ClassEnrollEndDate !== undefined) {
                this.classForm.controls.enrollendtdate.setValue(this.classVM.ClassEnrollEndDate);
                this.classForm.controls.enrollendtdate.updateValueAndValidity();
                this.isOngoing = false;
            }
            else {
                this.classForm.controls.enrollendtdate.setValue(this.emptyDate);
                this.classForm.controls.enrollendtdate.updateValueAndValidity();
                this.isOngoing = false;
            }
        }
    };
    AgencyAdminClassassignmentComponent.prototype.createClassForm = function () {
        this.classForm = this.fb.group({
            classId: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].required],
            teacherId: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].required],
            enrollstartdate: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].required],
            enrollendtdate: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].required],
            starttime: [{ value: '', disabled: true }],
            endtime: [{ value: '', disabled: true }],
            ongoing: [false]
        });
    };
    AgencyAdminClassassignmentComponent.prototype.editClassForm = function () {
        this.classForm = this.fb.group({
            classId: [this.classVM.ClassesID, _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].required],
            teacherId: [this.classVM.TeacherID, _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].required],
            enrollstartdate: [this.classVM.ClassEnrollStartDate, _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].required],
            enrollendtdate: [this.classVM.ClassEnrollEndDate, _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].required],
            starttime: [{ value: this.classVM.ClassStartTime, disabled: true }],
            endtime: [{ value: this.classVM.ClassEndTime, disabled: true }],
            ongoing: [this.classVM.onGoing]
        });
    };
    AgencyAdminClassassignmentComponent.prototype.processCSVFile = function (event) {
        var _this = this;
        this.spinner.show();
        this.formData = new FormData();
        this.agencyId = this.agencyId;
        if (event.target.files && event.target.files[0] && event.target.files[0].name.includes('.csv')) {
            this.formData.append('FileName', event.target.files[0], event.target.files[0].name);
            this.formData.append('AgencyId', this.agencyId.toString());
            this.formData.append('CreatedBy', this.commonService.getLoggedInUserId().toString());
            this.apiService.uploadImage(_shared_constatant__WEBPACK_IMPORTED_MODULE_9__["AgencyAPIURLs"].ClassAssignmentUsingFile, this.formData, null).subscribe(function (res) {
                if (res.body.statusCode === 200) {
                    _this.spinner.hide();
                    event.target.value = '';
                    _this.getAllClassAssignmentLog();
                    _this.notification.success({ message: 'File uploaded successfully', title: 'Success' });
                }
                else if (res.body.statusCode === 987) {
                    _this.spinner.hide();
                    _this.getAllClassAssignmentLog();
                    _this.rejectedUserList = res.body.data;
                    $('.rejectedUsr').modal('show');
                }
                else {
                    _this.spinner.hide();
                    _this.error.unknownError();
                }
            }, function (err) {
                _this.spinner.hide();
                _this.error.commonError(err);
                _this.notification.error({ message: 'Something went wrong', title: 'Error' });
            });
        }
        else {
            this.spinner.hide();
            this.notification.warning({ message: 'Unsupported file type', title: 'Warning' });
        }
    };
    Object.defineProperty(AgencyAdminClassassignmentComponent.prototype, "f", {
        get: function () { return this.classForm.controls; },
        enumerable: true,
        configurable: true
    });
    AgencyAdminClassassignmentComponent.prototype.getAllClassAssignmentLog = function () {
        var _this = this;
        this.classList = [];
        var req = {
            'AgencyID': this.agencyId,
            'Page': this.pageNo,
            'limit': this.limit
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_9__["AgencyAPIURLs"].GetAllClassAssignmentLog, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.totalRecord = res.body.totalRows;
                res.body.data.forEach(function (x) {
                    x.classStartTime = _this.commonService.getLocalDateTimeFromUTC(x.classStartTime);
                    x.classEndTime = _this.commonService.getLocalDateTimeFromUTC(x.classEndTime);
                });
                _this.classList = res.body.data;
                _this.spinner.hide();
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminClassassignmentComponent.prototype.getAllTeachers = function () {
        var _this = this;
        this.teacherList = [];
        var req = {
            'agencyID': this.agencyId,
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_11__["TeacherAPIURLs"].GetAllTeachers, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.teacherList = res.body.data;
            }
            else {
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminClassassignmentComponent.prototype.getAllClassess = function () {
        var _this = this;
        this.allClassList = [];
        var req = {
            'AgencyID': this.agencyId,
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_9__["AgencyAPIURLs"].GetAllClasses, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.allClassList = res.body.data;
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminClassassignmentComponent.prototype.getClassTime = function () {
        var _this = this;
        this.allClassList.forEach(function (element) {
            if (_this.classForm.value.classId === element.classesID.toString()) {
                _this.classEndDate = new Date(element.classEndDate);
                _this.classStartTime = _this.commonService.getLocalDateTimeFromUTC(element.startTime);
                _this.classEndTime = _this.commonService.getLocalDateTimeFromUTC(element.endTime);
                _this.classForm.controls['starttime'].setValue(_this.classStartTime);
                _this.classForm.controls['endtime'].setValue(_this.classEndTime);
                _this.classForm.controls['starttime'].updateValueAndValidity();
                _this.classForm.controls['endtime'].updateValueAndValidity();
            }
        });
    };
    AgencyAdminClassassignmentComponent.prototype.saveClassAssignment = function () {
        var _this = this;
        this.spinner.show();
        var startdate = this.commonService.getOnlyDate(this.classForm.value.enrollstartdate);
        var enddate = this.commonService.getOnlyDate(this.classForm.value.enrollendtdate);
        if (startdate >= enddate) {
            this.notification.warning({ message: 'start date must be greater than end date ', title: '' });
            this.spinner.hide();
        }
        else if (this.classForm.valid) {
            this.classVM.agencyID = this.commonService.getAgencyId();
            this.classVM.ClassesID = this.classForm.value.classId;
            this.classVM.TeacherID = this.classForm.value.teacherId;
            this.classVM.ClassEnrollStartDate = this.classForm.value.enrollstartdate;
            this.classVM.ClassEnrollEndDate = this.classForm.value.enrollendtdate;
            this.classVM.ClassStartTime = this.classStartTime;
            this.classVM.ClassEndTime = this.classEndTime;
            this.classVM.id = this.id;
            this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_9__["AgencyAPIURLs"].SaveClassAssignmentInformation, this.classVM, null).subscribe(function (res) {
                if (res.body.statusCode === 200) {
                    $('.addclass').modal('hide');
                    _this.getAllClassAssignmentLog();
                    _this.notification.success({ message: 'Class Assign successfully! ', title: '' });
                }
                else if (res.body.statusCode === 700) {
                    _this.spinner.hide();
                    _this.notification.warning({ message: 'Teacher is already assigned to this class. ', title: '' });
                }
                else {
                    _this.spinner.hide();
                    _this.error.unknownError();
                }
            }, function (err) {
                _this.spinner.hide();
                _this.error.commonError(err);
            });
        }
        else {
            this.spinner.hide();
            this.commonService.validateAllFields(this.classForm);
        }
    };
    AgencyAdminClassassignmentComponent.prototype.cleareForm = function () {
        this.id = 0;
        this.createClassForm();
    };
    AgencyAdminClassassignmentComponent.prototype.getClassDetails = function (value) {
        debugger;
        this.classEndDate = new Date(value.classEndDate);
        this.classVM.ClassesID = value.classesID;
        this.classVM.TeacherID = value.teacherID;
        this.classVM.ClassEnrollStartDate = new Date(value.classEnrollStartDate);
        this.classVM.ClassEnrollEndDate = new Date(value.classEnrollEndDate);
        this.classVM.ClassStartTime = value.classStartTime;
        this.classVM.ClassEndTime = value.classEndDate;
        this.classEndDate = new Date(value.classEndDate);
        this.classStartTime = this.commonService.getLocalDateTimeFromUTC(value.classStartTime);
        this.classEndTime = this.commonService.getLocalDateTimeFromUTC(value.classEndTime);
        this.classVM.ClassStartTime = new Date(value.classStartTime);
        this.classVM.ClassEndTime = new Date(value.classEndTime);
        this.id = value.id;
        if (value.classEnrollEndDate == '2080-01-01T00:00:00') {
            this.isOngoing = true;
            this.classVM.onGoing = true;
        }
        else {
            this.isOngoing = false;
            this.classVM.onGoing = false;
        }
        this.editClassForm();
    };
    // Method to delete/deactivate Teacher
    AgencyAdminClassassignmentComponent.prototype.deleteClassAssignment = function (value) {
        var _this = this;
        this.confirmationService.confirm({
            message: 'Do you want to delete this record?',
            accept: function () {
                _this.spinner.show();
                var req = {
                    'AgencyID': _this.agencyId,
                    'id': value.id,
                    'IsDeleted': true,
                    'DeletedDate': new Date(),
                    'DeletedBy': _this.commonService.getReleventUserId('userdetails')
                };
                _this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_9__["AgencyAPIURLs"].SaveClassAssignmentInformation, req, null).subscribe(function (res) {
                    if (res.body.statusCode === 200) {
                        _this.deleteClassAssignmentSuccess(value);
                    }
                    else {
                        _this.spinner.hide();
                        _this.error.unknownError();
                    }
                }, function (err) {
                    _this.spinner.hide();
                    _this.error.commonError(err);
                });
            }
        });
    };
    AgencyAdminClassassignmentComponent.prototype.deleteClassAssignmentSuccess = function (data) {
        var index = this.classList.findIndex(function (r) { return r.id === data.id; });
        this.classList.splice(index, 1);
        this.spinner.hide();
        this.notification.success({ message: 'This record has been deleted', title: '' });
    };
    AgencyAdminClassassignmentComponent.prototype.paginate = function (event) {
        this.pageNo = event.page;
        this.getAllClassAssignmentLog();
    };
    AgencyAdminClassassignmentComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-agency-admin-classassignment',
            template: __webpack_require__(/*! ./agency-admin-classassignment.component.html */ "./src/app/layout/agency-admin/components/agency-admin-classassignment/agency-admin-classassignment.component.html"),
            styles: [__webpack_require__(/*! ./agency-admin-classassignment.component.css */ "./src/app/layout/agency-admin/components/agency-admin-classassignment/agency-admin-classassignment.component.css")]
        }),
        __metadata("design:paramtypes", [_shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_1__["AgencyApiService"], _shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_2__["ErrorHandlerService"],
            ngx_spinner__WEBPACK_IMPORTED_MODULE_3__["NgxSpinnerService"], _shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_4__["NotificationService"],
            _shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_5__["CommonService"], _angular_forms__WEBPACK_IMPORTED_MODULE_6__["FormBuilder"], _angular_router__WEBPACK_IMPORTED_MODULE_7__["ActivatedRoute"],
            primeng_api__WEBPACK_IMPORTED_MODULE_8__["ConfirmationService"]])
    ], AgencyAdminClassassignmentComponent);
    return AgencyAdminClassassignmentComponent;
}());



/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-classes/agency-admin-classes.component.css":
/*!********************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-classes/agency-admin-classes.component.css ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".checkbox_date\r\n{\r\n    height: 34px;\r\n    width: 25px;\r\n    margin-left: 18px;\r\n    margin-top: 4px;\r\n}\r\n\r\n.overcapacity {\r\ncolor: red !important;\r\nfont-weight: bold !important;\r\n}\r\n\r\n.parenttype li {\r\n    float: left;\r\n    }\r\n\r\n.closepos{  position: absolute;  right: 170px;}\r\n\r\n.btn-send {\r\n    background: #58A7FE;\r\n    padding: 5px 20px;\r\n    color: #fff;\r\n    font-size: 15px !important;\r\n    border-radius: 30px;\r\n}\r\n\r\n@media (max-width:767px){\r\n    .closepos {\r\n        position: absolute;\r\n        right: 40px;\r\n    }\r\n}\r\n\r\n.info-icon{\r\n    margin-left: 243px;\r\n    font-size: 20px; \r\n    color: #383333;\r\n}\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L2FnZW5jeS1hZG1pbi9jb21wb25lbnRzL2FnZW5jeS1hZG1pbi1jbGFzc2VzL2FnZW5jeS1hZG1pbi1jbGFzc2VzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0lBRUksWUFBWTtJQUNaLFdBQVc7SUFDWCxpQkFBaUI7SUFDakIsZUFBZTtBQUNuQjs7QUFFQTtBQUNBLHFCQUFxQjtBQUNyQiw0QkFBNEI7QUFDNUI7O0FBRUE7SUFDSSxXQUFXO0lBQ1g7O0FBQ0osWUFBWSxrQkFBa0IsR0FBRyxZQUFZLENBQUM7O0FBRTlDO0lBQ0ksbUJBQW1CO0lBQ25CLGlCQUFpQjtJQUNqQixXQUFXO0lBQ1gsMEJBQTBCO0lBQzFCLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJO1FBQ0ksa0JBQWtCO1FBQ2xCLFdBQVc7SUFDZjtBQUNKOztBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLGVBQWU7SUFDZixjQUFjO0FBQ2xCIiwiZmlsZSI6InNyYy9hcHAvbGF5b3V0L2FnZW5jeS1hZG1pbi9jb21wb25lbnRzL2FnZW5jeS1hZG1pbi1jbGFzc2VzL2FnZW5jeS1hZG1pbi1jbGFzc2VzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2hlY2tib3hfZGF0ZVxyXG57XHJcbiAgICBoZWlnaHQ6IDM0cHg7XHJcbiAgICB3aWR0aDogMjVweDtcclxuICAgIG1hcmdpbi1sZWZ0OiAxOHB4O1xyXG4gICAgbWFyZ2luLXRvcDogNHB4O1xyXG59XHJcblxyXG4ub3ZlcmNhcGFjaXR5IHtcclxuY29sb3I6IHJlZCAhaW1wb3J0YW50O1xyXG5mb250LXdlaWdodDogYm9sZCAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4ucGFyZW50dHlwZSBsaSB7XHJcbiAgICBmbG9hdDogbGVmdDtcclxuICAgIH1cclxuLmNsb3NlcG9zeyAgcG9zaXRpb246IGFic29sdXRlOyAgcmlnaHQ6IDE3MHB4O31cclxuXHJcbi5idG4tc2VuZCB7XHJcbiAgICBiYWNrZ3JvdW5kOiAjNThBN0ZFO1xyXG4gICAgcGFkZGluZzogNXB4IDIwcHg7XHJcbiAgICBjb2xvcjogI2ZmZjtcclxuICAgIGZvbnQtc2l6ZTogMTVweCAhaW1wb3J0YW50O1xyXG4gICAgYm9yZGVyLXJhZGl1czogMzBweDtcclxufVxyXG5cclxuQG1lZGlhIChtYXgtd2lkdGg6NzY3cHgpe1xyXG4gICAgLmNsb3NlcG9zIHtcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgcmlnaHQ6IDQwcHg7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5pbmZvLWljb257XHJcbiAgICBtYXJnaW4tbGVmdDogMjQzcHg7XHJcbiAgICBmb250LXNpemU6IDIwcHg7IFxyXG4gICAgY29sb3I6ICMzODMzMzM7XHJcbn0iXX0= */"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-classes/agency-admin-classes.component.html":
/*!*********************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-classes/agency-admin-classes.component.html ***!
  \*********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"wrapper\">\r\n  <div class=\"container-fluid\">\r\n\r\n    <div class=\"pagetitle\">\r\n      <div>\r\n        <h2>Classes\r\n        </h2>\r\n      </div>\r\n      <div class=\"closepos\">\r\n        <button type=\"submit\" *ngIf=\"isSubscriptionActive\" class=\"btn btn-red\" data-toggle=\"modal\"\r\n          data-target=\".addclass\" (click)=\"cleareForm()\">Add Class</button>\r\n        <button type=\"submit\" class=\"btn btn-red\" [routerLink]=\"['../studentlist']\">View Enrolled students</button>\r\n      </div>\r\n      <div *ngIf=\"isSubscriptionActive\" class=\"upload-btn-wrapper\">\r\n        <button class=\"btn btn-send\">Upload CSV</button>\r\n        <input type=\"file\" #input (change)=\"processCSVFile($event)\">\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"subhead d-flex justify-content-between mt-20\">\r\n      <div>\r\n        <h3>Classes</h3>\r\n      </div>\r\n\r\n      <div class=\"info-icon\">\r\n        <i class=\"fa fa-info-circle\" (click)=\"OpenInfoVideo()\" data-toggle=\"modal\" aria-hidden=\"true\"\r\n          title=\"Information Video\"></i>\r\n      </div>\r\n    </div>\r\n    <div class=\"innertable\">\r\n      <div class=\"table-responsive\">\r\n        <table class=\"table\">\r\n          <thead class=\"thead-light\">\r\n            <tr>\r\n              <th scope=\"col\">Class Name</th>\r\n              <th scope=\"col\">Age Category</th>\r\n              <th scope=\"col\" class=\"text-center\">Enrollment Capacity</th>\r\n              <th scope=\"col\" class=\"text-center\">Signed In</th>\r\n              <th scope=\"col\">Fees($)</th>\r\n              <th scope=\"col\">Enrollment</th>\r\n              <th scope=\"col\">Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr *ngFor=\"let class of classList\">\r\n              <td>{{class.className}}</td>\r\n              <td>{{class.categoryName}}</td>\r\n              <td class=\"text-center\" [ngClass]=\"{'overcapacity': class.enrolledStudentCount >= class.enrollCapacity}\"\r\n                [title]=\"class.enrolledStudentCount >= class.enrollCapacity? 'Class reached to enrollment capacity limit': ''\">\r\n                {{class.enrolledStudentCount}} of {{class.enrollCapacity}}</td>\r\n\r\n              <td class=\"text-center\">\r\n                {{class.enrolledStudentCount}}</td>\r\n\r\n              <td>${{class.fees}} ({{class.categoryId == 6 ? 'Hourly' : class.feeTypeName}})</td>\r\n              <td>\r\n                <button *ngIf=\"isSubscriptionActive\"\r\n                  [title]=\"class.enrolledStudentCount >= class.enrollCapacity? 'Class reached to enrollment capacity limit': ''\"\r\n                  class=\"btn btn-info\" data-toggle=\"modal\" data-target=\".immunization\"\r\n                  (click)=\"getClassId(class)\">Enroll Strudent</button>\r\n              </td>\r\n\r\n              <td>\r\n                <a data-toggle=\"modal\" data-target=\".addclass\" title=\"Edit/View Class Details\"\r\n                  (click)=\"getClassDetails(class)\">\r\n                  <i class=\"fa fa-eye\" aria-hidden=\"true\"></i>\r\n                </a>\r\n                <a *ngIf=\"isSubscriptionActive\">\r\n                  <i class=\"fa fa-trash\" aria-hidden=\"true\" (click)=\"deleteClass(class)\"></i>\r\n                </a>\r\n              </td>\r\n            </tr>\r\n\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <p-paginator [alwaysShow]=\"false\" [rows]=\"limit\" [totalRecords]=\"totalRecord\" (onPageChange)=\"paginate($event)\">\r\n      </p-paginator>\r\n    </div>\r\n\r\n    <div class=\"modal fade addclass\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myLargeModalLabel\" aria-hidden=\"true\">\r\n      <div class=\"modal-dialog modal-lg\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">{{addMode ? 'Add Class' : 'Update Class details'}}</h5>\r\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n\r\n            <div class=\"row\">\r\n              <div class=\"col-lg-4\">\r\n                <img src=\"assets/img/addclass.png\" alt=\"\" width=\"250px\">\r\n              </div>\r\n              <div class=\"col-lg-8\">\r\n                <form [formGroup]=\"classForm\">\r\n                  <div class=\"row mb-20\">\r\n                    <div class=\"col-lg-6\">\r\n                      <div class=\"form-group\">\r\n                        <label for=\"\">Class name</label>\r\n                        <input type=\"text \" class=\"form-control\" id=\"className\" formControlName=\"className\"\r\n                          aria-describedby=\"\" placeholder=\"Class Name\">\r\n                        <div *ngIf=\"f.className.invalid && (f.className.dirty || f.className.touched)\"\r\n                          class=\"text-left errormsg\">\r\n                          <span *ngIf=\"f.className.errors.required\">\r\n                            <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please Enter Classname</span>\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"col-lg-6\">\r\n                      <div class=\"form-group\">\r\n                        <label for=\"\">Age Category</label>\r\n                        <select class=\"form-control\" [attr.disabled]=\"classVM.id? '': null\" placeholder=\"State\"\r\n                          formControlName=\"categoryId\" id=\"exampleFormControlSelect1\" (change)=\"checkCategory()\">\r\n                          <option value=\"\">Select Category</option>\r\n                          <option *ngFor=\"let category of classcategoryList\" [value]=\"category.id\">\r\n                            {{category.categoryName}}</option>\r\n                        </select>\r\n                        <div *ngIf=\"f.categoryId.invalid && (f.categoryId.dirty || f.categoryId.touched)\"\r\n                          class=\"text-left errormsg\">\r\n                          <span *ngIf=\"f.categoryId.errors.required\">\r\n                            <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select category </span>\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                  </div>\r\n\r\n                  <div class=\"row mb-20\">\r\n                    <div class=\"col-lg-6\">\r\n                      <div class=\"form-group\">\r\n                        <label for=\"exampleFormControlSelect1\">Fees($)</label>\r\n                        <input type=\"text\" maxlength=\"5\" name=\"\"\r\n                          (keypress)=\"commonService.allowOnlyNumberWithDecimal($event)\" id=\"\" class=\"form-control\"\r\n                          formControlName=\"fees\">\r\n                        <div *ngIf=\"f.fees.invalid && (f.fees.dirty || f.fees.touched)\" class=\"text-left errormsg\">\r\n                          <span *ngIf=\"f.fees.errors.required\">\r\n                            <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please Enter Fees </span>\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"col-lg-6\">\r\n                      <div class=\"form-group\">\r\n                        <label for=\"exampleFormControlSelect1\">Per(Fees)</label>\r\n                        <select formControlName=\"paymenttype\" class=\"form-control\" placeholder=\"Payment Type\">\r\n                          <option value=\"\">Select</option>\r\n                          <option *ngFor=\"let payment of paymentTypeList\" [value]=\"payment.value\">{{payment.label}}\r\n                          </option>\r\n                        </select>\r\n                        <div *ngIf=\"f.paymenttype.invalid && (f.paymenttype.dirty || f.paymenttype.touched)\"\r\n                          class=\"text-left errormsg\">\r\n                          <span *ngIf=\"f.paymenttype.errors.required\">\r\n                            <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select payment type </span>\r\n                          </span>\r\n                        </div>\r\n                        <p *ngIf=\"isDriopInSelected && !classVM.id\"><b>Note:</b>For drop in care fees will be calculted\r\n                          by student daily hour</p>\r\n                        <p *ngIf=\"isDriopInSelected && classVM.id && classVM.categoryId == 6\"><b>Note: </b>For drop in\r\n                          care fees will be calculted by student daily hour</p>\r\n                      </div>\r\n                    </div>\r\n\r\n                  </div>\r\n\r\n                  <div class=\"row mb-20\">\r\n                    <div class=\"col-lg-3\">\r\n                      <div class=\"form-group\">\r\n                        <label for=\"exampleFormControlSelect1\">Start Time</label>\r\n                        <p-calendar class=\"custom-textbox-checkedin\" (keypress)=\"commonService.allowOnlyNumber($event)\"\r\n                          styleClass=\"form-control\" formControlName=\"starttime\" hourFormat=\"12\" [timeOnly]=\"true\" icon=\"pi pi-clock\"\r\n                          [showIcon]=\"true\"></p-calendar>\r\n                        <div *ngIf=\"f.starttime.invalid && (f.starttime.dirty || f.starttime.touched)\"\r\n                          class=\"text-left errormsg\">\r\n                          <span *ngIf=\"f.starttime.errors.required\">\r\n                            <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select start time </span>\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"col-lg-3\">\r\n                      <div class=\"form-group\">\r\n                        <label for=\"exampleFormControlSelect1\">End Time</label>\r\n                        <p-calendar class=\"custom-textbox-checkedin\" (keypress)=\"commonService.allowOnlyNumber($event)\"\r\n                          styleClass=\"form-control\" formControlName=\"endtime\" hourFormat=\"12\" [timeOnly]=\"true\" icon=\"pi pi-clock\"\r\n                          [showIcon]=\"true\"></p-calendar>\r\n                        <div *ngIf=\"f.endtime.invalid && (f.endtime.dirty || f.endtime.touched)\"\r\n                          class=\"text-left errormsg\">\r\n                          <span *ngIf=\"f.endtime.errors.required\">\r\n                            <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select end time </span>\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-lg-6\">\r\n                      <div class=\"form-group\">\r\n                        <label for=\"exampleFormControlSelect1\">Enrollment Capacity</label>\r\n                        <input type=\"text\" name=\"enrollementCapacity\" maxlength=\"5\"\r\n                          (keypress)=\"commonService.allowOnlyNumber($event)\" id=\"\" class=\"form-control\"\r\n                          formControlName=\"enrollementCapacity\">\r\n                        <div\r\n                          *ngIf=\"f.enrollementCapacity.invalid && (f.enrollementCapacity.dirty || f.enrollementCapacity.touched)\"\r\n                          class=\"text-left errormsg\">\r\n                          <span *ngIf=\"f.enrollementCapacity.errors.required\">\r\n                            <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please enter enrollement capacity\r\n                            </span>\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"row mb-20\">\r\n                    <div class=\"col-lg-6\">\r\n                      <div class=\"form-group\">\r\n                        <label for=\"exampleFormControlSelect1\">Start Date</label>\r\n                        <input type=\"text\" placeholder=\"Select date\" (keypress)=\"commonService.allowOnlyNumber($event)\"\r\n                          formControlName=\"sessionFrom\" showWeekNumbers=\"false\" class=\"form-control\"\r\n                          [bsConfig]=\"dpConfig\" bsDatepicker>\r\n                        <div *ngIf=\"f.sessionFrom.invalid && (f.sessionFrom.dirty || f.sessionFrom.touched)\"\r\n                          class=\"text-left errormsg\">\r\n                          <span *ngIf=\"f.sessionFrom.errors.required\">\r\n                            <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select Start Date </span>\r\n                          </span>\r\n                        </div>\r\n\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"col-lg-2\">\r\n                      <div class=\"form-group\">\r\n                        <label for=\"\">On Going</label>\r\n                        <input type=\"checkbox\" id=\"checkbox-in\" class=\"checkbox_date\" (change)=\"onGoing()\"\r\n                          formControlName=\"ongoing\">\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"col-lg-4\">\r\n                      <div class=\"form-group\">\r\n                        <label for=\"exampleFormControlSelect1\">End Date</label>\r\n                        <input *ngIf=\"!isDriopInSelectedandOngoing\" type=\"text\"\r\n                          (keypress)=\"commonService.allowOnlyNumber($event)\" placeholder=\"Select date\" container=\"\"\r\n                          formControlName=\"sessionTo\" showWeekNumbers=\"false\" class=\"form-control\" [bsConfig]=\"dpConfig\"\r\n                          bsDatepicker>\r\n                        <p *ngIf=\"isDriopInSelectedandOngoing\" class=\"form-control\">On Going</p>\r\n                        <div *ngIf=\"f.sessionTo.invalid && (f.sessionTo.dirty || f.sessionTo.touched)\"\r\n                          class=\"text-left errormsg\">\r\n                          <span *ngIf=\"f.sessionTo.errors.required\">\r\n                            <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select End Date </span>\r\n                          </span>\r\n                        </div>\r\n\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n\r\n                  <div class=\"row mb-20\">\r\n\r\n                    <div class=\"col-lg-12\">\r\n                      <div class=\"form-group\">\r\n                        <label for=\"exampleFormControlSelect1\">Description</label>\r\n                        <textarea name=\"\" id=\"description\" cols=\"30\" rows=\"3\" class=\"form-control\"\r\n                          formControlName=\"description\"></textarea>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n            <button type=\"button\" *ngIf=\"isSubscriptionActive\" class=\"btn btn-primary\"\r\n              (click)=\"saveClassInfo()\">{{addMode ? 'Add Class' : 'Save Changes'}}</button>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n\r\n    <!-- For Information Video -->\r\n    <div class=\"modal fade\" id=\"infovideo\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"checkoutLabel\"\r\n      aria-hidden=\"true\">\r\n      <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"checkoutLabel\">Information Video</h5>\r\n            <button type=\"button\" class=\"close\" (click)=\"PauseInfoVideo()\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <div class=\"cont video_section_pop\" *ngIf=\"videoPath\">\r\n              <video controls id=\"pausevideo\">\r\n                <source *ngIf=\"videoPath\" [src]=\"videoPath\" type=\"video/mp4\" />\r\n                <source *ngIf=\"videoPath\" [src]=\"videoPath\" type=\"video/ogg\" />\r\n                <source *ngIf=\"videoPath\" [src]=\"videoPath\" type=\"video/webm\" />\r\n                Browser not supported\r\n              </video>\r\n            </div>\r\n\r\n            <div class=\"cont video_section_pop\" *ngIf=\"!videoPath\">\r\n              Video Not Found\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Enroll modal -->\r\n    <div class=\"modal fade immunization\" id=\"enroll\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myLargeModalLabel\"\r\n      aria-hidden=\"true\">\r\n      <div class=\"modal-dialog modal-lg\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Enrol Student</h5>\r\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <form [formGroup]=\"enrolForm\">\r\n              <div class=\"row  mt-20\">\r\n                <!-- <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Select Parent*</label>\r\n                    <select class=\"form-control\" formControlName=\"parentname\" (change)=\"getAllChildrenList()\"\r\n                      id=\"exampleFormControlSelect1\">\r\n                      <option value=\"\">Select</option>\r\n                      <option *ngFor=\"let parent of parentList\" [value]=\"parent.id\">{{parent.parentName}} </option>\r\n                    </select>\r\n                    <div *ngIf=\"i.parentname.invalid && (i.parentname.dirty || i.parentname.touched)\"\r\n                      class=\"text-left errormsg\">\r\n                      <span *ngIf=\"i.parentname.errors.required\">\r\n                        <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select parent</span>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div> -->\r\n\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">For Class*</label>\r\n                    <input type=\"text\" class=\"form-control\" placeholder=\"Class\" formControlName=\"classname\">\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Select Child*</label>\r\n                    <select class=\"form-control\" formControlName=\"childname\" id=\"exampleFormControlSelect1\">\r\n                      <option value=\"\">Select</option>\r\n                      <option *ngFor=\"let child of childList\" [value]=\"child.studentId\">{{child.studentName}} </option>\r\n                    </select>\r\n                    <div *ngIf=\"i.childname.invalid && (i.childname.dirty || i.childname.touched)\"\r\n                      class=\"text-left errormsg\">\r\n                      <span *ngIf=\"i.childname.errors.required\">\r\n                        <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select child</span>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n              </div>\r\n\r\n              <div class=\"row mb-20\">\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Start Date*</label>\r\n                    <input type=\"text\" placeholder=\"Search by date\" formControlName=\"startdate\" showWeekNumbers=\"false\"\r\n                      [minDate]=\"today\" [maxDate]=\"maxEnrolEndtDate\" class=\"form-control mr15\" [bsConfig]=\"dpConfig\"\r\n                      bsDatepicker>\r\n                    <div *ngIf=\"i.startdate.invalid && (i.startdate.dirty || i.startdate.touched)\"\r\n                      class=\"text-left errormsg\">\r\n                      <span *ngIf=\"i.startdate.errors.required\">\r\n                        <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select start date</span>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">End Date </label>\r\n                    <input type=\"text\" container=\"\" placeholder=\"End Date\" formControlName=\"enddate\"\r\n                      showWeekNumbers=\"false\" class=\"form-control mr15\" [bsConfig]=\"dpConfig\" bsDatepicker>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <!-- <div class=\"row mb-20\">\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">For Class*</label>\r\n                    <input type=\"text\" class=\"form-control\" placeholder=\"Class\" formControlName=\"classname\">\r\n                  </div>\r\n                </div>\r\n              </div> -->\r\n            </form>\r\n          </div>\r\n\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n            <button type=\"button\" *ngIf=\"isSubscriptionActive\" class=\"btn btn-primary\"\r\n              (click)=\"verifyEnrollment()\">Enroll Student</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- Rejected User List -->\r\n<div class=\"modal fade rejectedUsr\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myLargeModalLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog modal-lg\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Rejected Class List</h5>\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <div class=\"innertable\">\r\n          <div class=\"table-responsive\">\r\n\r\n            <table class=\"table\">\r\n              <thead class=\"thead-light\">\r\n                <tr>\r\n                  <th scope=\"col\">Class Name</th>\r\n                  <th scope=\"col\">Reason</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr *ngFor=\"let student of rejectedUserList\">\r\n                  <td>{{student.className}}</td>\r\n                  <td>{{student.msg}}</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<ngx-spinner type=\"ball-atom\" size=\"medium\" color=\"#58A7FE\"></ngx-spinner>\r\n\r\n<app-confirm-box></app-confirm-box>"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-classes/agency-admin-classes.component.ts":
/*!*******************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-classes/agency-admin-classes.component.ts ***!
  \*******************************************************************************************************/
/*! exports provided: AgencyAdminClassesComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AgencyAdminClassesComponent", function() { return AgencyAdminClassesComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var src_app_shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/shared/services/error-handler/error-handler.service */ "./src/app/shared/services/error-handler/error-handler.service.ts");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ngx-spinner */ "./node_modules/ngx-spinner/fesm5/ngx-spinner.js");
/* harmony import */ var src_app_shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/shared/services/notification-service/notification.service */ "./src/app/shared/services/notification-service/notification.service.ts");
/* harmony import */ var src_app_shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/shared/services/common/common.service */ "./src/app/shared/services/common/common.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../shared/services/agency-api-service/agency-api.service */ "./src/app/layout/agency-admin/components/shared/services/agency-api-service/agency-api.service.ts");
/* harmony import */ var _shared_constatant__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../shared/constatant */ "./src/app/layout/agency-admin/components/shared/constatant.ts");
/* harmony import */ var ngx_bootstrap__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ngx-bootstrap */ "./node_modules/ngx-bootstrap/esm5/ngx-bootstrap.js");
/* harmony import */ var primeng_api__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! primeng/api */ "./node_modules/primeng/api.js");
/* harmony import */ var primeng_api__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(primeng_api__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var _parent_shared_constant__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../parent/shared/constant */ "./src/app/layout/parent/shared/constant.ts");
/* harmony import */ var src_app_layout_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! src/app/layout/teacher/shared/constant */ "./src/app/layout/teacher/shared/constant.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};













var AgencyAdminClassesComponent = /** @class */ (function () {
    function AgencyAdminClassesComponent(apiService, error, spinner, notification, commonService, fb, route, confirmationService) {
        this.apiService = apiService;
        this.error = error;
        this.spinner = spinner;
        this.notification = notification;
        this.commonService = commonService;
        this.fb = fb;
        this.route = route;
        this.confirmationService = confirmationService;
        this.childList = [];
        this.classVM = {};
        this.today = new Date();
        this.markAllCheckBox = false;
        this.parentList = [];
        this.paymentTypeList = [];
        this.addMode = true;
        this.pageNo = 0;
        this.limit = 10;
        this.totalRecord = 0;
        this.agencyId = 0;
        this.rejectedUserList = [];
        this.videoPath = '';
        this.dpConfig = new ngx_bootstrap__WEBPACK_IMPORTED_MODULE_9__["BsDatepickerConfig"]();
        this.agencyId = this.commonService.getAgencyId();
        this.isSubscriptionActive = this.commonService.getSubscriptionStatus();
    }
    AgencyAdminClassesComponent.prototype.ngOnInit = function () {
        this.spinner.show();
        this.createClassForm();
        this.getAllClassList();
        this.getAllClassCategoryList();
        //this.getAllParentList();
        this.createEnrolForm();
        this.getFessPaymentType();
        this.getAllChildrenList();
        this.getSectionVideo();
        this.dpConfig = Object.assign({}, { containerClass: 'theme-dark-blue' }, { showWeekNumbers: false });
    };
    AgencyAdminClassesComponent.prototype.OpenInfoVideo = function (data) {
        $('#infovideo').modal('show');
    };
    AgencyAdminClassesComponent.prototype.getSectionVideo = function () {
        var _this = this;
        var req = {
            'SectionID': 7
        };
        this.apiService.postData(src_app_layout_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_12__["TeacherAPIURLs"].GetVideoForSection, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.videoPath = res.body.filePath;
                console.log(_this.videoPath, 'bbbbbbbbbbbbbbb');
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminClassesComponent.prototype.PauseInfoVideo = function () {
        var myVideo = document.getElementById('pausevideo');
        myVideo.pause();
        myVideo.currentTime = 0;
    };
    AgencyAdminClassesComponent.prototype.processCSVFile = function (event) {
        var _this = this;
        this.spinner.show();
        this.formData = new FormData();
        this.agencyId = this.agencyId;
        if (event.target.files && event.target.files[0] && event.target.files[0].name.includes('.csv')) {
            this.formData.append('FileName', event.target.files[0], event.target.files[0].name);
            this.formData.append('AgencyId', this.agencyId.toString());
            this.formData.append('CreatedBy', this.commonService.getLoggedInUserId().toString());
            this.apiService.uploadImage(_shared_constatant__WEBPACK_IMPORTED_MODULE_8__["AgencyAPIURLs"].UploadClassesWithFile, this.formData, null).subscribe(function (res) {
                if (res.body.statusCode === 200) {
                    _this.spinner.hide();
                    event.target.value = '';
                    _this.getAllClassList();
                    _this.notification.success({ message: 'File uploaded successfully', title: 'Success' });
                }
                else if (res.body.statusCode === 987) {
                    _this.spinner.hide();
                    _this.getAllClassList();
                    _this.rejectedUserList = res.body.data;
                    $('.rejectedUsr').modal('show');
                }
                else {
                    _this.spinner.hide();
                    _this.error.unknownError();
                }
            }, function (err) {
                _this.spinner.hide();
                _this.error.commonError(err);
                _this.notification.error({ message: 'Something went wrong', title: 'Error' });
            });
        }
        else {
            this.spinner.hide();
            this.notification.warning({ message: 'Unsupported file type', title: 'Warning' });
        }
    };
    AgencyAdminClassesComponent.prototype.createClassForm = function () {
        this.classForm = this.fb.group({
            className: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            id: [''],
            loactionId: [''],
            categoryId: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            classCategory: [''],
            roomId: [''],
            sessionFrom: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            sessionTo: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            enrollementCapacity: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            description: [''],
            days: [''],
            minAgeFrom: [''],
            minAgeTo: [''],
            starttime: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            endtime: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            paymenttype: ['2', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            fees: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            sun: [false],
            mon: [false],
            tue: [false],
            wed: [false],
            thu: [false],
            fri: [false],
            sat: [false],
            ongoing: [false]
        });
    };
    AgencyAdminClassesComponent.prototype.onGoing = function () {
        if (this.classForm.value.ongoing === true) {
            this.isDriopInSelectedandOngoing = true;
            var d = new Date('Jan 1, 2080 12:00:00');
            this.classForm.controls.sessionTo.setValue(d);
            this.classForm.controls.sessionTo.updateValueAndValidity();
        }
        else {
            if (this.classVM.classStartDate !== undefined) {
                this.classForm.controls.sessionTo.setValue(this.classVM.classStartDate);
                this.classForm.controls.sessionTo.updateValueAndValidity();
                this.isDriopInSelectedandOngoing = false;
            }
            else {
                this.classForm.controls.sessionTo.setValue(this.emptyDate);
                this.classForm.controls.sessionTo.updateValueAndValidity();
                this.isDriopInSelectedandOngoing = false;
            }
        }
    };
    AgencyAdminClassesComponent.prototype.editClassForm = function () {
        this.classForm = this.fb.group({
            className: [this.classVM.className, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            loactionId: [this.classVM.loactionId],
            classCategory: [this.classVM.categoryName],
            roomId: [this.classVM.roomId],
            categoryId: [this.classVM.categoryId, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            sessionFrom: [this.classVM.classStartDate, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            sessionTo: [this.classVM.classEndDate, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            enrollementCapacity: [this.classVM.enrollCapacity, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            description: [this.classVM.description],
            starttime: [this.classVM.startTime, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            endtime: [this.classVM.endTime, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            paymenttype: [this.classVM.feeTypeId, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            fees: [this.classVM.fees, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            days: [this.classVM.days],
            sun: [this.classVM.sun],
            mon: [this.classVM.mon],
            tue: [this.classVM.tue],
            wed: [this.classVM.wed],
            thu: [this.classVM.thu],
            fri: [this.classVM.fri],
            sat: [this.classVM.sat],
            ongoing: [this.classVM.onGoing]
        });
    };
    AgencyAdminClassesComponent.prototype.createEnrolForm = function () {
        this.enrolForm = this.fb.group({
            childname: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            //parentname: ['', Validators.required],
            classname: [{ value: '', disabled: true }],
            startdate: [new Date(), _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            enddate: [null]
        });
    };
    Object.defineProperty(AgencyAdminClassesComponent.prototype, "i", {
        get: function () { return this.enrolForm.controls; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AgencyAdminClassesComponent.prototype, "f", {
        get: function () { return this.classForm.controls; },
        enumerable: true,
        configurable: true
    });
    AgencyAdminClassesComponent.prototype.isAnswerProvided = function (event, check) {
    };
    AgencyAdminClassesComponent.prototype.getAllParentList = function () {
        var _this = this;
        this.parentList = [];
        var req = {
            'AgencyID': this.agencyId,
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_8__["AgencyAPIURLs"].GetAllParentWithoutGuardian, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.parentList = res.body.data;
                _this.spinner.hide();
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminClassesComponent.prototype.markAllDays = function (e) {
        if (e.target.checked === true || e.target.checked === undefined) {
            this.markAllCheckBox = true;
            this.classForm.controls['sun'].setValue(true);
            this.classForm.controls['mon'].setValue(true);
            this.classForm.controls['tue'].setValue(true);
            this.classForm.controls['wed'].setValue(true);
            this.classForm.controls['thu'].setValue(true);
            this.classForm.controls['fri'].setValue(true);
            this.classForm.controls['sat'].setValue(true);
        }
        else {
            this.markAllCheckBox = false;
            this.classForm.controls['sun'].setValue(false);
            this.classForm.controls['mon'].setValue(false);
            this.classForm.controls['tue'].setValue(false);
            this.classForm.controls['wed'].setValue(false);
            this.classForm.controls['thu'].setValue(false);
            this.classForm.controls['fri'].setValue(false);
            this.classForm.controls['sat'].setValue(false);
        }
    };
    AgencyAdminClassesComponent.prototype.selectedDay = function (event) {
        this.markAllCheckBox = false;
    };
    AgencyAdminClassesComponent.prototype.saveClassInfo = function () {
        var _this = this;
        var startdate = this.commonService.getOnlyDate(this.classForm.value.sessionFrom);
        var enddate = this.commonService.getOnlyDate(this.classForm.value.sessionTo);
        if (startdate >= enddate) {
            this.notification.warning({ message: 'end date must be greater than or equal to start date ', title: '' });
        }
        else if (this.classForm.value.starttime >= this.classForm.value.endtime) {
            this.notification.warning({ message: 'start time must be less than end time ', title: '' });
        }
        else if (enddate <= this.commonService.getOnlyDate(this.today)) {
            this.notification.warning({ message: 'End date must be greater than today`s date ', title: '' });
        }
        else if (this.classForm.valid) {
            this.spinner.show();
            this.classVM.className = this.classForm.value.className.trim();
            this.classVM.loactionId = 1;
            this.classVM.categoryName = this.classForm.value.classCategory;
            this.classVM.categoryId = this.classForm.value.categoryId;
            this.classVM.roomId = 0;
            this.classVM.classStartDate = this.classForm.value.sessionFrom;
            this.classVM.classEndDate = this.classForm.value.sessionTo;
            this.classVM.minAgeFrom = this.minAge;
            this.classVM.minAgeTo = this.maxAge;
            this.classVM.enrollCapacity = this.classForm.value.enrollementCapacity;
            this.classVM.description = this.classForm.value.description,
                this.classVM.startTime = this.classForm.value.starttime,
                this.classVM.endTime = this.classForm.value.endtime,
                this.classVM.days = this.classForm.value.days,
                this.classVM.sun = this.classForm.value.sun,
                this.classVM.mon = this.classForm.value.mon,
                this.classVM.tue = this.classForm.value.tue,
                this.classVM.wed = this.classForm.value.wed,
                this.classVM.thu = this.classForm.value.thu,
                this.classVM.fri = this.classForm.value.fri,
                this.classVM.sat = this.classForm.value.sat,
                this.classVM.id = this.classVM.id === undefined ? 0 : this.classVM.id;
            this.classVM.fees = this.classForm.value.fees;
            this.classVM.feeTypeId = this.classForm.value.paymenttype;
            this.classVM.createdBy = this.commonService.getReleventUserId('userdetails');
            this.classVM.AgencyID = this.agencyId;
            this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_8__["AgencyAPIURLs"].SaveClassInformation, this.classVM, null).subscribe(function (res) {
                if (res.body.statusCode === 200) {
                    // tslint:disable-next-line:max-line-length
                    _this.notification.success({ message: _this.classVM.id ? 'Class information updated successfully!' : 'New Class created successfully!', title: '' });
                    _this.spinner.hide();
                    $('.addclass').modal('hide');
                    _this.getAllClassList();
                }
                else if (res.body.statusCode === 900) {
                    _this.spinner.hide();
                    _this.notification.warning({ message: 'Class name already exists!', title: '' });
                }
                else {
                    _this.spinner.hide();
                    _this.error.unknownError();
                }
            }, function (err) {
                _this.spinner.hide();
                _this.error.commonError(err);
            });
        }
        else {
            this.spinner.hide();
            this.commonService.validateAllFields(this.classForm);
        }
    };
    AgencyAdminClassesComponent.prototype.getAllClassList = function () {
        var _this = this;
        this.classList = [];
        var req = {
            'AgencyID': this.agencyId,
            'limit': this.limit,
            'page': this.pageNo
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_8__["AgencyAPIURLs"].GetAllClasses, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.totalRecord = res.body.totalRows;
                _this.classList = res.body.data;
                // this.spinner.hide();
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminClassesComponent.prototype.getAllClassCategoryList = function () {
        var _this = this;
        var data = {
            'agencyID': this.agencyId
        };
        this.classcategoryList = [];
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_8__["AgencyAPIURLs"].GetAllClassCategories, data, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.classcategoryList = res.body.data;
                _this.classcategoryList.forEach(function (element) {
                    _this.minAge = element.fromAge;
                    _this.maxAge = element.toAge;
                    _this.cateId = element.id;
                });
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminClassesComponent.prototype.getClassDetails = function (data) {
        var _this = this;
        this.addMode = false;
        this.classVM = {};
        this.spinner.show();
        var req = {
            'agencyID': this.agencyId,
            'classID': data.classesID,
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_8__["AgencyAPIURLs"].GetParticularClassDetails, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                console.log(res.body.data, 'dddddddddddddd');
                if (res.body.data[0].categoryId === 6) {
                    _this.isDriopInSelected = true;
                    _this.isDriopInSelectedandOngoing = true;
                }
                else {
                    _this.isDriopInSelected = false;
                    _this.isDriopInSelectedandOngoing = false;
                }
                if (res.body.data[0].classEndDate == '2080-01-01T00:00:00') {
                    _this.isDriopInSelectedandOngoing = true;
                    _this.classVM.onGoing = true;
                }
                else {
                    _this.isDriopInSelectedandOngoing = false;
                    _this.classVM.onGoing = false;
                }
                _this.classVM.AgencyID = _this.agencyId;
                _this.classVM.id = res.body.data[0].id;
                _this.classVM.className = res.body.data[0].className;
                _this.classVM.enrollCapacity = res.body.data[0].enrollCapacity;
                _this.classVM.categoryId = res.body.data[0].categoryId;
                _this.cateId = res.body.data[0].categoryId;
                _this.classVM.categoryName = res.body.data[0].categoryName;
                _this.classVM.classStartDate = new Date(res.body.data[0].classStartDate);
                _this.classVM.classEndDate = new Date(res.body.data[0].classEndDate);
                _this.classVM.description = res.body.data[0].description;
                _this.classVM.fees = res.body.data[0].fees;
                _this.classVM.feeTypeId = res.body.data[0].feeTypeId;
                _this.classVM.startTime = _this.commonService.getLocalDateTimeFromUTC(res.body.data[0].startTime);
                _this.classVM.endTime = _this.commonService.getLocalDateTimeFromUTC(res.body.data[0].endTime);
                _this.classVM.days = res.body.data[0].days;
                _this.classVM.sun = res.body.data[0].sun;
                _this.classVM.mon = res.body.data[0].mon;
                _this.classVM.tue = res.body.data[0].tue;
                _this.classVM.wed = res.body.data[0].wed;
                _this.classVM.thu = res.body.data[0].thu;
                _this.classVM.fri = res.body.data[0].fri;
                _this.classVM.sat = res.body.data[0].sat;
                _this.minAge = res.body.data[0].fromAge;
                _this.maxAge = res.body.data[0].toAge;
                _this.editClassForm();
                _this.spinner.hide();
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminClassesComponent.prototype.cleareForm = function () {
        this.isDriopInSelected = false;
        this.isDriopInSelectedandOngoing = false;
        this.addMode = true;
        this.classVM = {};
        this.createClassForm();
    };
    // Method to delete/deactivate class
    AgencyAdminClassesComponent.prototype.deleteClass = function (value) {
        var _this = this;
        this.confirmationService.confirm({
            message: 'Do you want to delete this class?',
            accept: function () {
                _this.spinner.show();
                value.IsDeleted = true;
                value.DeletedDate = new Date();
                value.DeletedBy = _this.commonService.getReleventUserId('userdetails');
                _this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_8__["AgencyAPIURLs"].SaveClassInformation, value, null).subscribe(function (res) {
                    if (res.body.statusCode === 200) {
                        _this.deleteClassSuccess(value);
                    }
                    else if (res.body.statusCode === 988) {
                        _this.spinner.hide();
                        _this.notification.warning({ message: res.body.message, title: '' });
                    }
                    else if (res.body.statusCode === 903) {
                        _this.spinner.hide();
                        _this.notification.warning({ message: res.body.message, title: '' });
                    }
                    else {
                        _this.spinner.hide();
                        _this.notification.warning({ message: res.body.message, title: '' });
                    }
                }, function (err) {
                    _this.spinner.hide();
                    _this.error.commonError(err);
                });
            }
        });
    };
    AgencyAdminClassesComponent.prototype.deleteClassSuccess = function (data) {
        var index = this.classList.findIndex(function (r) { return r.classesID === data.classesID; });
        this.classList.splice(index, 1);
        this.spinner.hide();
        this.notification.success({ message: 'This class has been deleted', title: '' });
    };
    AgencyAdminClassesComponent.prototype.getClassId = function (value) {
        //this.childList = [];
        this.classDetails = value;
        this.createEnrolForm();
        this.maxEnrolEndtDate = new Date(value.classEndDate);
        var endDate = new Date(value.classEndDate);
        this.maxEnrolEtartDate = new Date(value.classStartDate);
        this.enrolForm.controls['classname'].setValue(value.className);
        this.enrolForm.controls['enddate'].setValue(endDate);
        this.enrolForm.controls['classname'].updateValueAndValidity();
        this.enrolForm.controls['enddate'].updateValueAndValidity();
        this.classId = value.classesID;
    };
    // Child list of parents
    AgencyAdminClassesComponent.prototype.getAllChildrenList = function () {
        var _this = this;
        //this.spinner.show();
        this.childList = [];
        var req = {
            'AgencyID': this.agencyId,
            'classID': 0,
            'studentID': 0,
            'parentID': 0,
            'studentName': '',
        };
        this.apiService.postData(_parent_shared_constant__WEBPACK_IMPORTED_MODULE_11__["ParentAPIURLs"].GetAllStudentsForEnroll, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                if (res.body.data.length > 0 && res.body.data !== []) {
                    _this.childList = res.body.data;
                    console.log(_this.childList);
                    _this.spinner.hide();
                }
                else {
                    _this.spinner.hide();
                }
            }
            else {
                _this.spinner.hide();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminClassesComponent.prototype.verifyEnrollment = function () {
        this.spinner.show();
        var startdate = this.commonService.getOnlyDate(this.enrolForm.value.startdate);
        var enddate = this.commonService.getOnlyDate(this.enrolForm.value.enddate);
        if (startdate >= enddate && this.enrolForm.value.enddate !== null) {
            this.spinner.hide();
            this.notification.warning({ message: 'start date must be greater than end date ', title: '' });
        }
        else if (this.maxEnrolEndtDate.setHours(0, 0, 0) < enddate.setHours(0, 0, 0)) {
            this.spinner.hide();
            this.notification.warning({
                message: 'End date must be smaller than class end date (i.e.' + this.maxEnrolEndtDate.toDateString() +
                    ') ', title: ''
            });
        }
        else if (this.enrolForm.valid) {
            var req = {
                'agencyID': this.agencyId,
                'classesID': this.classId,
                'studentID': this.enrolForm.value.childname,
                'classEnrollStartDate': this.enrolForm.value.startdate,
                'classEnrollEndDate': this.enrolForm.value.enddate,
                'enrollmentStatus': 2,
                'feeTypeId': this.classDetails.feeTypeId,
                'fees': this.classDetails.fees
            };
            var msg = 'Child has been enrolled for this class Successfully!';
            this.spinner.hide();
            this.saveEnrollment(req, msg, 0);
        }
        else {
            this.spinner.hide();
            this.commonService.validateAllFields(this.enrolForm);
        }
    };
    // enrollment satus id's as follow
    //  0: Not Enrolled
    //  1:Requested
    //   2: Enrolled
    //   3: Cancelled by Parent
    //   4 : Denied by Agency
    //   5: Completed
    AgencyAdminClassesComponent.prototype.saveEnrollment = function (req, msg, type) {
        var _this = this;
        this.apiService.postData(_parent_shared_constant__WEBPACK_IMPORTED_MODULE_11__["ParentAPIURLs"].SaveStudentEnrollment, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                $('.immunization').modal('hide');
                _this.notification.success({ message: msg, title: '' });
                _this.getAllClassList();
            }
            else if (res.body.statusCode === 205) {
                _this.spinner.hide();
                _this.notification.warning({ message: 'Already enrolled for this class', title: '' });
            }
            else if (res.body.statusCode === 206) {
                _this.spinner.hide();
                _this.notification.warning({ message: res.body.message, title: '' });
            }
            else if (res.body.statusCode === 207) {
                _this.spinner.hide();
                _this.notification.warning({ message: 'This student is part of regular class , you cant enroll for drop in class', title: '' });
            }
            else if (res.body.statusCode === 208) {
                _this.spinner.hide();
                _this.notification.warning({ message: 'This student is part of drop in class , you cant enroll for regular class', title: '' });
            }
            else if (res.body.statusCode === 209) {
                _this.notification.warning({
                    message: 'This Student is already a part of dropin care you cant enroll for another class!',
                    title: ''
                });
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
            _this.spinner.hide();
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminClassesComponent.prototype.getFessPaymentType = function () {
        var _this = this;
        var value = {
            'agencyID': this.agencyId
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_8__["AgencyAPIURLs"].GetFessPaymentTypeDropdown, value, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.paymentTypeList = res.body.data;
            }
            else {
                _this.spinner.hide();
            }
        }, function (err) {
            _this.spinner.hide();
        });
    };
    AgencyAdminClassesComponent.prototype.paginate = function (event) {
        this.pageNo = event.page;
        this.getAllClassList();
    };
    AgencyAdminClassesComponent.prototype.getFeesDetails = function () {
    };
    AgencyAdminClassesComponent.prototype.removeModalPosition = function (event) {
        document.getElementsByTagName('body')[0].style.overflow = 'visible';
    };
    AgencyAdminClassesComponent.prototype.removeVisibility = function () {
        document.getElementsByTagName('body')[0].removeAttribute('style');
    };
    /**Check for dropp in categories */
    AgencyAdminClassesComponent.prototype.checkCategory = function () {
        if (this.classForm.controls.categoryId.value === '6') {
            this.isDriopInSelected = true;
            this.isDriopInSelectedandOngoing = true;
            var d = new Date();
            var year = d.getFullYear();
            var month = d.getMonth();
            var day = d.getDate();
            var c = new Date(year + 60, month, day);
            this.classForm.controls.sessionTo.setValue(c);
            this.classForm.controls.sessionTo.updateValueAndValidity();
            this.classForm.controls['ongoing'].disable();
        }
        else {
            this.classForm.controls.sessionTo.setValue(this.emptyDate);
            this.classForm.controls.sessionTo.updateValueAndValidity();
            this.classForm.controls['ongoing'].enable();
            this.isDriopInSelected = false;
            this.isDriopInSelectedandOngoing = false;
        }
    };
    AgencyAdminClassesComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-agency-admin-classes',
            template: __webpack_require__(/*! ./agency-admin-classes.component.html */ "./src/app/layout/agency-admin/components/agency-admin-classes/agency-admin-classes.component.html"),
            styles: [__webpack_require__(/*! ./agency-admin-classes.component.css */ "./src/app/layout/agency-admin/components/agency-admin-classes/agency-admin-classes.component.css")]
        }),
        __metadata("design:paramtypes", [_shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_7__["AgencyApiService"], src_app_shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_2__["ErrorHandlerService"],
            ngx_spinner__WEBPACK_IMPORTED_MODULE_3__["NgxSpinnerService"], src_app_shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_4__["NotificationService"],
            src_app_shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_5__["CommonService"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormBuilder"], _angular_router__WEBPACK_IMPORTED_MODULE_6__["ActivatedRoute"],
            primeng_api__WEBPACK_IMPORTED_MODULE_10__["ConfirmationService"]])
    ], AgencyAdminClassesComponent);
    return AgencyAdminClassesComponent;
}());



/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-daily-activity/agency-admin-daily-activity.component.css":
/*!**********************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-daily-activity/agency-admin-daily-activity.component.css ***!
  \**********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "/* .p-act .nav-link img{width:30px }\r\n.p-act .nav-item{text-align: center}\r\n.p-act.nav-pills .nav-link{background: transparent}\r\n.p-act.nav-pills .nav-link.active, .p-act.nav-pills .show > .nav-link {\r\n    color: #fff;\r\n    background-color: #007bff;\r\n}\r\n\r\n.p-cont input[type=\"radio\"] + span{\r\n    height: 50px;width: 50px;border-radius: 5px;line-height: 50px;\r\n}\r\n\r\n.p-cont #radios label{text-align: center} */\r\n\r\n\r\n#editactivity .nav-link {padding: 5px 20px;}\r\n\r\n\r\n#editactivity .modal-body{padding: 20px}\r\n\r\n\r\n#editactivity ul li{text-align: center}\r\n\r\n\r\n#editactivity .tab-content{min-height: 200px;padding: 15px 0}\r\n\r\n\r\n#editactivity .Moods{ margin: 0}\r\n\r\n\r\n#editactivity .nav-tabs .nav-link.active, .nav-tabs .nav-item.show .nav-link{box-shadow:  0px 4px 8px 0px #dedede;border: none; color: #fff;background-color: #FF6C6C;}\r\n\r\n\r\n#editactivity .nav-link p{margin: 0}\r\n\r\n\r\n#editactivity .nav-link img,#editmeal .nav-link img, #edithealth .nav-link img,#editpost .nav-link img { height:  30px}\r\n\r\n\r\n/* switchcss */\r\n\r\n\r\n.middle {\r\n  width: 100%;\r\n}\r\n\r\n\r\n.middle input[type=\"radio\"] {\r\n  display: none;\r\n}\r\n\r\n\r\n.middle input[type=\"radio\"]:checked + .box {\r\n  background-color: #A8D4FE;\r\n  border-radius: 5px;\r\n}\r\n\r\n\r\n.middle input[type=\"radio\"]:checked + .box span {\r\n  color: white;\r\n  -webkit-transform: translateY(70px);\r\n          transform: translateY(70px);\r\n}\r\n\r\n\r\n.middle input[type=\"radio\"]:checked + .box span:before {\r\n  -webkit-transform: translateY(0px);\r\n          transform: translateY(0px);\r\n  opacity: 1;\r\n}\r\n\r\n\r\n.middle .box {\r\n  width: 80px;\r\n  height: 70px;\r\n  background-color: #fff;\r\n  transition: all 250ms ease;\r\n  will-change: transition;\r\n  text-align: center;\r\n  cursor: pointer;\r\n  line-height: 35px;\r\n}\r\n\r\n\r\n.middle .box:active {\r\n  -webkit-transform: translateY(10px);\r\n          transform: translateY(10px);\r\n}\r\n\r\n\r\n.middle .box span {\r\n  -webkit-transform: translate(0, 60px);\r\n          transform: translate(0, 60px);\r\n  transition: all 300ms ease;\r\n  font-size: 12px;\r\n  -webkit-user-select: none;\r\n     -moz-user-select: none;\r\n      -ms-user-select: none;\r\n          user-select: none;\r\n  color: #007e90;\r\n}\r\n\r\n\r\n.middle .box span:before {\r\n  font-size: 12px;\r\n  font-family: FontAwesome;\r\n  display: block;\r\n  -webkit-transform: translateY(-80px);\r\n          transform: translateY(-80px);\r\n  opacity: 0;\r\n  transition: all 300ms ease-in-out;\r\n  font-weight: normal;\r\n  color: white;\r\n}\r\n\r\n\r\n.middle .box span img{width: 25px;}\r\n\r\n\r\n@media (max-width:1024px) and (min-width:768px) {\r\n   .margt15 {\r\n     margin-top:15px;\r\n   }\r\n   .btn-red {\r\n    padding: 8px 20px;\r\n    font-size: 12px;\r\n    margin-left: 0;\r\n    margin-right: 10px;\r\n}\r\n}\r\n\r\n\r\n.modal-content {\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 112%;\r\n  pointer-events: auto;\r\n  background-clip: padding-box;\r\n  border-radius: 0.3rem;\r\n  outline: 0;\r\n}\r\n\r\n\r\n.napimg {\r\n  width: 40px;\r\n}\r\n\r\n\r\n.scrolldiv {\r\n  /* height:80px;\r\n  overflow-y: scroll; */\r\n  height: auto;\r\n  overflow-y: auto;\r\n  overflow-x: auto;\r\n}\r\n\r\n\r\n.list5Item{ list-style-type: none; margin: 0; padding: 0;}\r\n\r\n\r\n.list5Item li{ display: inline-block; margin: 5px;}\r\n\r\n\r\n.othernotebtn {\r\n  background: #FF6C6C;padding: 5px 12px;color: #fff;font-size: 14px;border-radius: 30px;\r\n}\r\n\r\n\r\n.editshadow{\r\n  /* display: block; */\r\n  z-index: 1051;\r\n  /* padding-left: 17px; */\r\n  background: rgba(0,0,0,0.5);\r\n}\r\n\r\n\r\n.studchatimg {\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 19px;\r\n}\r\n\r\n\r\nul.activityhis li a{\r\n  cursor: pointer;\r\n}\r\n\r\n\r\n@media(max-width: 991px){\r\n  .modal-content{\r\n    width: 100%;\r\n  }\r\n  .scrolldiv .btn.othernotebtn{\r\n    margin: 7px;\r\n  }\r\n}\r\n\r\n\r\n.scrolldiv{\r\n  padding: 10px 30px 10px 0px;\r\n}\r\n\r\n\r\n.cardfilter button.btn-send{\r\n  margin-top: 0px;\r\n}\r\n\r\n\r\n/**Comented By Aniket at 12 FEB 2018  */\r\n\r\n\r\n/* \r\nbody .ui-inputswitch.ui-inputswitch-checked .ui-inputswitch-slider:before {\r\n  -webkit-transform: translateX(37px);\r\n  transform: translateX(37px);\r\n}\r\nbody .ui-inputswitch .ui-inputswitch-slider:before {\r\n  height: 37px;\r\n  width: 37px;\r\n}\r\n.ui-inputswitch {\r\n  width: 80px !important;\r\n  height: 45px !important;\r\n}\r\n.modal-body .first {\r\n  display: block !important;\r\n} */\r\n\r\n\r\n.plusIcon{ font-size: 18px;color: #FF6C6C; }\r\n\r\n\r\n.info-icon{\r\n  margin-left: 180px;\r\n  font-size: 20px; \r\n  color: #383333;\r\n}\r\n/*# sourceMappingURL=data:application/json;base64, */"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-daily-activity/agency-admin-daily-activity.component.html":
/*!***********************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-daily-activity/agency-admin-daily-activity.component.html ***!
  \***********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "` <div class=\"wrapper\">\r\n  <div class=\"container-fluid\">\r\n\r\n    <div class=\"pagetitle\">\r\n      <div>\r\n        <h2>Daily Sheets\r\n        </h2>\r\n      </div>\r\n      <div *ngIf=\"showNeweEntryButton && isSubscriptionActive\">\r\n        <button type=\"submit\" class=\"btn btn-red btn_current\" (click)=\"clearAllForm();checkIsStudentSelected()\">New\r\n          Entry</button>\r\n      </div>\r\n    </div>\r\n    <div class=\"subhead d-flex justify-content-between \">\r\n      <div>\r\n        <h3>Daily Activity</h3>\r\n      </div>\r\n      <div class=\"info-icon\">\r\n        <i class=\"fa fa-info-circle\" (click)=\"OpenInfoVideo()\" data-toggle=\"modal\" aria-hidden=\"true\"\r\n          title=\"Information Video\"></i>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <div class=\"card cardfilter\">\r\n      <div class=\"row algcenter\">\r\n\r\n        <div class=\"leftfilter\">\r\n          <div class=\"count\">Student</div>\r\n\r\n          <div class=\"search-date\">\r\n            <div class=\"label-text\">Search Date:</div>\r\n            <div class=\"pr15\">\r\n              <div class=\"form-group\">\r\n                <input type=\"text\" placeholder=\"Search by Date\" [(ngModel)]=\"searchByDate\" showWeekNumbers=\"false\"\r\n                  [maxDate]=\"today\" class=\"form-control mr15\" [bsConfig]=\"dpConfig\"\r\n                  (bsValueChange)=\"getSerchDate($event)\" bsDatepicker>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"search-class\">\r\n            <div class=\"label-text\">Search class:</div>\r\n            <div class=\"pr15\">\r\n              <div class=\"form-group\">\r\n                <select class=\"form-control\" placeholder=\"Search\" (change)=\"getDailySheet()\" [(ngModel)]=\"serchByClass\"\r\n                  id=\"exampleFormControlSelect1\">\r\n                  <option value=\"\">Select class</option>\r\n                  <option *ngFor=\"let classes of classList\" [value]=\"classes.classesID\">{{classes.className}}</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"filter-buttons\">\r\n            <button type=\"submit\" class=\"btn btn-send\" (click)=\"getDailySheet()\">Search</button>\r\n          </div>\r\n\r\n        </div>\r\n\r\n\r\n\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"innertable studentListSearch\">\r\n      <div class=\"table-responsive\">\r\n        <table class=\"table\">\r\n          <thead class=\"thead-light\">\r\n            <tr>\r\n              <th class=\"text-center\">\r\n                <label class=\"checkboxcustom\" title=\"Mark/Unmark all \">\r\n                  <input type=\"checkbox\" [(ngModel)]=\"markAllStudents\" (click)=\"getAllMarkedStudent($event)\">\r\n                  <span class=\"checkmark\"></span>\r\n                </label>\r\n              </th>\r\n              <th class=\"text-center\">Photo</th>\r\n              <th scope=\"col\" class=\"text-center\">Student Name</th>\r\n              <th scope=\"col\">Activity</th>\r\n              <th scope=\"col\" class=\"text-center\">Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr *ngFor=\"let dailysheet of listOfStudents \">\r\n              <td>\r\n                <label class=\"checkboxcustom\">\r\n                  <input type=\"checkbox\" [checked]=\"dailysheet.isMarked\"\r\n                    (click)=\"getSingleMarkedStudent(dailysheet,$event)\">\r\n                  <span class=\"checkmark\"></span>\r\n                </label>\r\n              </td>\r\n              <td class=\"text-center\">\r\n                <img src=\"{{dailysheet.imagePath}}\" onError=\"this.src='assets/img/user.png'\" alt=\"\"\r\n                  class=\"img-circle childimg\">\r\n              </td>\r\n              <td class=\"text-center\">{{dailysheet.studentName}}</td>\r\n              <td class=\"text-center\">\r\n                <ul class=\"activityhis\">\r\n                  <li *ngFor=\"let actobj of dailysheet.myActivity | slice:0:6\">\r\n                    <a data-toggle=\"popover\" *ngIf=\"actobj.activityTypeID == 1\"\r\n                      (click)=\"getActivityDetails(actobj,'health', dailysheet.studentID)\" data-toggle=\"modal\"\r\n                      data-target=\"#edithealth\" data-placement=\"bottom\"\r\n                      data-content=\"Vivamussagittis lacus vel augue laoreet rutrum faucibus.\">\r\n                      <img src=\"assets/img/stethoscope.svg\" alt=\"\">\r\n                    </a>\r\n                    <a data-toggle=\"popover\" *ngIf=\"actobj.activityTypeID == 2\"\r\n                      (click)=\"getActivityDetails(actobj,'notes',dailysheet.studentID)\" data-toggle=\"modal\"\r\n                      data-target=\"#editpost\" data-placement=\"bottom\"\r\n                      data-content=\"Vivamussagittis lacus vel augue laoreet rutrum faucibus.\">\r\n                      <img src=\"assets/img/post-it.svg\" alt=\"\"> </a>\r\n                    <a data-toggle=\"popover\" *ngIf=\"actobj.activityTypeID == 4\"\r\n                      (click)=\"getActivityDetails(actobj,'mood',dailysheet.studentID)\" data-toggle=\"modal\"\r\n                      data-target=\"#editmood\" data-placement=\"bottom\"\r\n                      data-content=\"Vivamus sagittis lacus vel augue laoreet rutrum faucibus.\">\r\n                      <img src=\"assets/img/satisfaction.svg\" alt=\"\">\r\n                    </a>\r\n                    <a data-toggle=\"popover\" *ngIf=\"actobj.activityTypeID == 5\"\r\n                      (click)=\"getActivityDetails(actobj,'activity',dailysheet.studentID)\" data-toggle=\"modal\"\r\n                      data-target=\"#editactivity\" data-placement=\"bottom\"\r\n                      data-content=\"Vivamussagittis lacus vel augue laoreet rutrum faucibus.\">\r\n                      <img src=\"assets/img/circular-clock.svg\" alt=\"\"> </a>\r\n                    <a data-toggle=\"popover\" *ngIf=\"actobj.activityTypeID == 3\"\r\n                      (click)=\"getMealActivityByAPI(actobj,'meal',dailysheet.studentID)\" data-toggle=\"modal\"\r\n                      data-target=\"#editmeal\" data-placement=\"bottom\"\r\n                      data-content=\"Vivamus sagittis lacus vel augue laoreet rutrum faucibus.\">\r\n                      <img src=\"assets/img/restaurant.svg\" alt=\"\">\r\n                    </a>\r\n                    <a data-toggle=\"popover\" *ngIf=\"actobj.activityTypeID == 6\"\r\n                      (click)=\"getActivityDetails(actobj,'nap',dailysheet.studentID)\" data-toggle=\"modal\"\r\n                      data-target=\"#editnap\" data-placement=\"bottom\"\r\n                      data-content=\"Vivamus sagittis lacus vel augue laoreet rutrum faucibus.\">\r\n                      <img src=\"assets/img/napsm.svg\" alt=\"\">\r\n                    </a>\r\n                    <a data-toggle=\"popover\" *ngIf=\"actobj.activityTypeID == 7\"\r\n                      (click)=\"getActivityDetails(actobj,'diper',dailysheet.studentID)\" data-toggle=\"modal\"\r\n                      data-target=\"#editdiper\" data-placement=\"bottom\"\r\n                      data-content=\"Vivamus sagittis lacus vel augue laoreet rutrum faucibus.\">\r\n                      <img src=\"assets/img/toiletsm.svg\" alt=\"\" style=\"height:25px\">\r\n                    </a>\r\n                  </li>\r\n                  <a *ngIf=\"dailysheet.myActivity.length > 6\" data-toggle=\"modal\" data-target=\"#viewactivity\"\r\n                    (click)=\"viewAllActivityList(dailysheet)\" title=\"View All\"\r\n                    style=\"cursor: pointer; margin-left: 10px\">\r\n                    <i class=\"fa fa-chevron-circle-right plusIcon\" aria-hidden=\"true\"></i>\r\n                  </a>\r\n                </ul>\r\n              </td>\r\n              <td class=\"text-center\">\r\n                <a data-toggle=\"modal\" data-target=\"#viewactivity\" title=\"Veiw All\"\r\n                  (click)=\"viewAllActivityList(dailysheet)\">\r\n                  <i class=\"fa fa-eye\" aria-hidden=\"true\"></i>\r\n                </a>\r\n              </td>\r\n          </tbody>\r\n        </table>\r\n        <div class=\"text-center\">\r\n          <span *ngIf=\"listOfStudents.length == 0 && !loader\" class=\"text-center\">No result found</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <!-- Model for edit Other Activity -->\r\n    <div class=\"modal fade editshadow\" id=\"editactivity\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"editactivityLabel\"\r\n      aria-hidden=\"true\">\r\n      <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"editactivityLabel\">Update Daily Activity</h5>\r\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <ul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link active\" id=\"activity-tab\" data-toggle=\"tab\" href=\"#activity\" role=\"tab\"\r\n                  aria-controls=\"activity\" aria-selected=\"true\">\r\n                  <!-- <i class=\"fa fa-child\" aria-hidden=\"true\"></i> -->\r\n                  <img src=\"assets/img/circular-clock.svg\" alt=\"\">\r\n                  <p>Activity</p>\r\n                </a>\r\n              </li>\r\n            </ul>\r\n            <div class=\"tab-content\" id=\"myTabContent\">\r\n              <div class=\"tab-pane fade show active\" id=\"activity\" role=\"tabpanel\" aria-labelledby=\"activity-tab\">\r\n                <form [formGroup]=\"activityForm\">\r\n                  <div class=\"row mt-20\">\r\n                    <div class=\"col-lg-6\">\r\n                      <div class=\"form-group\">\r\n                        <label for=\"\">Start Time </label>\r\n                        <!-- <input type=\"text \" class=\"form-control\" id=\"\" aria-describedby=\"\" placeholder=\"Select Start Time\"> -->\r\n                        <p-calendar class=\"cutom-text-box-dailyactivity-one\" styleClass=\"form-control\"\r\n                          formControlName=\"starttime\" hourFormat=\"12\" [timeOnly]=\"true\" icon=\"pi pi-clock\" [showIcon]=\"true\">\r\n                        </p-calendar>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"col-lg-6\">\r\n                      <div class=\"form-group\">\r\n                        <label for=\"\">End Time</label>\r\n                        <!-- <input type=\"text \" class=\"form-control\" id=\"\" aria-describedby=\"\" placeholder=\"Select End Time\"> -->\r\n                        <p-calendar class=\"cutom-text-box-dailyactivity-one\" styleClass=\"form-control\"\r\n                          formControlName=\"endtime\" hourFormat=\"12\" [timeOnly]=\"true\" icon=\"pi pi-clock\" [showIcon]=\"true\"></p-calendar>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"row\">\r\n                    <div class=\"col-lg-12\">\r\n                      <div class=\"form-group\">\r\n                        <label for=\"\"></label>\r\n                        <textarea aria-describedby=\"\" row=\"10\" formControlName=\"activity\" class=\"form-control\" id=\"\"\r\n                          placeholder=\"Enter student activity\"></textarea>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"row\">\r\n                    <div class=\"col-lg-12\">\r\n                      <div class=\"form-group\">\r\n                        <label for=\"\">Auto Key </label>\r\n                        <div class=\"\">\r\n                          <div class=\"row\">\r\n                            <div class=\"col-md-12\">\r\n                              <ul class=\"list5Item\">\r\n                                <li *ngFor=\"let sbact of subActivityList\"> <button type=\"button\"\r\n                                    class=\"btn othernotebtn\"\r\n                                    (click)=\"updateSuggestion(sbact)\">{{sbact.subActivityLabel}}</button></li>\r\n                              </ul>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n            <button type=\"button\" *ngIf=\"isSubscriptionActive && showNeweEntryButton\" class=\"btn btn-primary\"\r\n              (click)=\"addNewEntry(2,'activity')\">Update changes</button>\r\n            <button type=\"button\" *ngIf=\"!showNeweEntryButton && isSubscriptionActive\" class=\"btn btn-primary\"\r\n              disabled>Update changes</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <!-- Model for edit meal -->\r\n\r\n    <div class=\"modal fade editshadow\" id=\"editmeal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"editactivityLabel\"\r\n      aria-hidden=\"true\">\r\n      <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"editactivityLabel\">Update Daily Activity</h5>\r\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <ul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link active\" id=\"meal-tab\" data-toggle=\"tab\" href=\"#meal\" role=\"tab\" aria-controls=\"meal\"\r\n                  aria-selected=\"false\">\r\n                  <img src=\"assets/img/restaurant.svg\" alt=\"\">\r\n                  <p>Meal</p>\r\n                </a>\r\n              </li>\r\n            </ul>\r\n\r\n            <form [formGroup]=\"mealForm\">\r\n\r\n\r\n              <div class=\"row mb-20 mt-20\">\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"exampleFormControlSelect1\">Meal Plan*</label>\r\n                    <input type=\"text\" class=\"form-control\" formControlName=\"plantype\" disabled placeholder=\"Meal plan\">\r\n\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <!-- <div class=\"row mb-20 mt-20\"> -->\r\n              <div class=\"table-responsive white_box_table\" *ngIf=\"foodList.length != 0\">\r\n                <table class=\"table\">\r\n                  <thead class=\"thead-light\">\r\n                    <tr>\r\n                      <th scope=\"col\">Food Item</th>\r\n                      <th scope=\"col\">Amount</th>\r\n                      <th scope=\"col\">Unit</th>\r\n                      <th>consumed Amount*</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr\r\n                      *ngFor=\"let food of foodList ; let item of mealForm.get('foodconsumption').controls; let i = index;\"\r\n                      formArrayName=\"foodconsumption\">\r\n                      <td>{{food.foodTypeName}}</td>\r\n                      <td>{{food.amount}}</td>\r\n                      <td>{{food.measureUnitTypeName}}</td>\r\n                      <td [formGroupName]=\"i\">\r\n                        <input type=\"text \" *ngIf=\"(food.measureUnitTypeID == 8 )\" class=\"form-control\"\r\n                          (blur)=\"getConsumedAmount(food)\" formControlName=\"milkconsumptionquantity\" id=\"\"\r\n                          aria-describedby=\"\" placeholder=\"consumed amount\">\r\n\r\n                        <select class=\"form-control\" *ngIf=\"food.measureUnitTypeID != 8 \" placeholder=\"Select\"\r\n                          (change)=\"getConsumedAmount(food)\" formControlName=\"foodconsumtionid\"\r\n                          id=\"exampleFormControlSelect1\">\r\n                          <option value=\"\">Select </option>\r\n                          <option *ngFor=\"let obj of foodConsumptionType\" [value]=\"obj.id\">{{obj.foodConsumtionName}}\r\n                          </option>\r\n                        </select>\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n\r\n              </div>\r\n\r\n              <div class=\"row mb-20 mt-20\">\r\n                <div class=\"col-lg-12\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Other than plan meal </label>\r\n                    <textarea name=\"\" id=\"\" cols=\"30\" rows=\"6\" placeholder=\"Other than plan meal\" class=\"form-control\"\r\n                      formControlName=\"othermealplan\"></textarea>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"row mb-20 mt-20\">\r\n\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Other plan meal comment</label>\r\n                    <input type=\"text \" class=\"form-control\" formControlName=\"othermealcmnt\" id=\"\" aria-describedby=\"\"\r\n                      placeholder=\"Enter Comment\">\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Comment</label>\r\n                    <input type=\"text \" class=\"form-control\" formControlName=\"mealcmnt\" id=\"\" aria-describedby=\"\"\r\n                      placeholder=\"Enter Comment\">\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n            <button type=\"button\" *ngIf=\"isSubscriptionActive && showNeweEntryButton\" class=\"btn btn-primary\"\r\n              (click)=\"addNewEntry(2,'meal')\">Update changes</button>\r\n            <button type=\"button\" *ngIf=\"!showNeweEntryButton && isSubscriptionActive\" class=\"btn btn-primary\"\r\n              disabled>Update changes</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Model for edit Mood -->\r\n    <div class=\"modal fade editshadow\" id=\"editmood\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"editactivityLabel\"\r\n      aria-hidden=\"true\">\r\n      <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"editactivityLabel\">Update Daily Activity</h5>\r\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <ul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link active\" id=\"mood-tab\" data-toggle=\"tab\" href=\"#mood\" role=\"tab\" aria-controls=\"mood\"\r\n                  aria-selected=\"false\">\r\n                  <img src=\"assets/img/satisfaction.svg\" alt=\"\">\r\n                  <p>Mood</p>\r\n                </a>\r\n              </li>\r\n\r\n            </ul>\r\n            <form [formGroup]=\"moodForm\">\r\n              <div class=\"Moods\">\r\n\r\n                <h3> My Mood was... </h3>\r\n                <div class=\"middle\">\r\n                  <label>\r\n                    <input type=\"radio\" name=\"radio\" id=\"hp\" [checked]=\"showHappy\" (click)=\"getMarkedMood(1)\" />\r\n                    <div class=\"front-end box\">\r\n                      <span>\r\n                        <img src=\"assets/img/happymob.svg\" alt=\"\">\r\n                      </span>\r\n                      <p>Happy</p>\r\n                    </div>\r\n                  </label>\r\n                  <label>\r\n                    <input type=\"radio\" name=\"radio\" id=\"sd\" [checked]=\"showSad\" (click)=\"getMarkedMood(2)\" />\r\n                    <div class=\"front-end box\">\r\n                      <span>\r\n                        <img src=\"assets/img/cryingmob.svg\" alt=\"\">\r\n                      </span>\r\n                      <p>Sad</p>\r\n                    </div>\r\n                  </label>\r\n\r\n                  <label>\r\n                    <input type=\"radio\" name=\"radio\" id=\"sl\" [checked]=\"showSleepy\" (click)=\"getMarkedMood(3)\" />\r\n                    <div class=\"back-end box\">\r\n                      <span>\r\n                        <img src=\"assets/img/playfull.png\" alt=\"\">\r\n                      </span>\r\n                      <p> Playful</p>\r\n                    </div>\r\n                  </label>\r\n                  <label>\r\n                    <input type=\"radio\" name=\"radio\" id=\"fs\" [checked]=\"showFussy\" (click)=\"getMarkedMood(4)\" />\r\n                    <div class=\"back-end box\">\r\n                      <span>\r\n                        <img src=\"assets/img/tired.png\" alt=\"\">\r\n                      </span>\r\n                      <p> Fussy</p>\r\n                    </div>\r\n                  </label>\r\n                  <label>\r\n                    <input type=\"radio\" name=\"radio\" id=\"gr\" [checked]=\"showGrumpy\" (click)=\"getMarkedMood(5)\" />\r\n                    <div class=\"back-end box\">\r\n                      <span>\r\n                        <img src=\"assets/img/Grumpy.png\" alt=\"\">\r\n                      </span>\r\n                      <p> Grumpy</p>\r\n                    </div>\r\n                  </label>\r\n\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\"></label>\r\n                    <textarea aria-describedby=\"\" formControlName=\"moodcomment\" row=\"10\" class=\"form-control\" id=\"\"\r\n                      placeholder=\"Enter Comment\"></textarea>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </form>\r\n\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n            <button type=\"button\" *ngIf=\"isSubscriptionActive && showNeweEntryButton\" class=\"btn btn-primary\"\r\n              (click)=\"addNewEntry(2,'mood')\">Save changes</button>\r\n            <button type=\"button\" *ngIf=\"!showNeweEntryButton && isSubscriptionActive\" class=\"btn btn-primary\"\r\n              disabled>Update changes</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Model for edit Notes -->\r\n    <div class=\"modal fade editshadow\" id=\"editpost\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"editactivityLabel\"\r\n      aria-hidden=\"true\">\r\n      <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"editactivityLabel\">Update Daily Activity</h5>\r\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <ul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link active\" id=\"notes-tab\" data-toggle=\"tab\" href=\"#notes\" role=\"tab\"\r\n                  aria-controls=\"notes\" aria-selected=\"false\">\r\n                  <img src=\"assets/img/post-it.svg\" alt=\"\">\r\n                  <p>Notes</p>\r\n                </a>\r\n              </li>\r\n\r\n            </ul>\r\n            <form [formGroup]=\"notesForm\">\r\n              <div class=\"form-group\">\r\n                <label for=\"\">Notes if any *</label>\r\n                <textarea aria-describedby=\"\" formControlName=\"notes\" row=\"10\" class=\"form-control\" id=\"\"\r\n                  placeholder=\"Notes if any\"></textarea>\r\n              </div>\r\n            </form>\r\n\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n            <button type=\"button\" *ngIf=\"showNeweEntryButton && isSubscriptionActive\" class=\"btn btn-primary\"\r\n              (click)=\"addNewEntry(2,'notes')\">Update changes</button>\r\n            <button type=\"button\" *ngIf=\"!showNeweEntryButton && isSubscriptionActive\" class=\"btn btn-primary\"\r\n              disabled>Update changes</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Model for edit Health -->\r\n    <div class=\"modal fade editshadow\" id=\"edithealth\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"editactivityLabel\"\r\n      aria-hidden=\"true\">\r\n      <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"editactivityLabel\">Update Daily Activity</h5>\r\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <ul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link active\" id=\"health-tab\" data-toggle=\"tab\" href=\"#health\" role=\"tab\"\r\n                  aria-controls=\"health\" aria-selected=\"false\">\r\n                  <img src=\"assets/img/stethoscope.svg\" alt=\"\">\r\n                  <p>Health</p>\r\n                </a>\r\n              </li>\r\n            </ul>\r\n            <form [formGroup]=\"healthForm\">\r\n              <div class=\"row mt-20\">\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Add Temperature (°F)</label>\r\n                    <input aria-describedby=\"\" formControlName=\"temperature\" class=\"form-control\" id=\"\" placeholder=\"\"\r\n                      type=\"text\">\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-6\"></div>\r\n                <div class=\"col-lg-12\">\r\n                  <div class=\"form-group\">\r\n                    <label>Health Note*</label>\r\n                    <textarea aria-describedby=\"\" formControlName=\"tempcmnt\" row=\"10\" class=\"form-control\" id=\"\"\r\n                      placeholder=\"Health Note\"></textarea>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\" *ngIf=\"(this.HealthVM.studentMedicationID != 0 )\">\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Medicine Name</label>\r\n                    <input aria-describedby=\"\" disabled formControlName=\"medicationName\" class=\"form-control\" id=\"\"\r\n                      placeholder=\"\" type=\"text\">\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">How to take</label>\r\n                    <input aria-describedby=\"\" disabled formControlName=\"howtotake\" class=\"form-control\" id=\"\"\r\n                      placeholder=\"\" type=\"text \">\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\" *ngIf=\"(this.HealthVM.studentMedicationID != 0 )\">\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Dosage</label>\r\n                    <input aria-describedby=\"\" disabled formControlName=\"repeatdose\" class=\"form-control\" id=\"\"\r\n                      placeholder=\"\" type=\"text \">\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Unit</label>\r\n                    <input aria-describedby=\"\" disabled formControlName=\"unit\" class=\"form-control\" id=\"\" placeholder=\"\"\r\n                      type=\"text \">\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"row mb-20\" *ngIf=\"HealthVM.studentMedicationID\">\r\n                <div *ngIf=\"HealthVM.isTeacherAcknowledge\" class=\"col-lg-6\">\r\n                  <p> Acknowledge by - <b>{{HealthVM.acknowledgeTeacherName}}</b> </p>\r\n                </div>\r\n                <div *ngIf=\"HealthVM.isParentAcknowledge\" class=\"col-lg-6\">\r\n                  <p> Acknowledge by parent - <b>{{HealthVM.acknowledgeParentName}}</b> </p>\r\n                </div>\r\n              </div>\r\n            </form>\r\n\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n            <button type=\"button\" *ngIf=\"isSubscriptionActive && showNeweEntryButton\" class=\"btn btn-primary\"\r\n              (click)=\"addNewEntry(2,'health')\">Update changes</button>\r\n            <button type=\"button\" *ngIf=\"!showNeweEntryButton && isSubscriptionActive\" class=\"btn btn-primary\"\r\n              disabled>Update changes</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Edit Nap -->\r\n    <div class=\"modal fade editshadow \" id=\"editnap\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"editactivityLabel\"\r\n      aria-hidden=\"true\">\r\n      <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"editactivityLabel\">Update Daily Activity</h5>\r\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <ul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link active\" id=\"activity-tab\" data-toggle=\"tab\" href=\"#activity\" role=\"tab\"\r\n                  aria-controls=\"activity\" aria-selected=\"true\">\r\n                  <img src=\"assets/img/napsm.svg\" class=\"napimg\" alt=\"\">\r\n                  <p>Nap</p>\r\n                </a>\r\n              </li>\r\n            </ul>\r\n            <div class=\"tab-content\" id=\"myTabContent\">\r\n              <div class=\"tab-pane fade show active\" id=\"activity\" role=\"tabpanel\" aria-labelledby=\"activity-tab\">\r\n                <form [formGroup]=\"napForm\">\r\n                  <div class=\"row mt-20\">\r\n                    <div class=\"col-lg-6\">\r\n                      <div class=\"form-group\">\r\n                        <label for=\"\">Sleep-At Time*</label>\r\n                        <p-calendar class=\"cutom-text-box-dailyactivity\" styleClass=\"form-control\"\r\n                          formControlName=\"napstart\" hourFormat=\"12\" [timeOnly]=\"true\" icon=\"pi pi-clock\" [showIcon]=\"true\">\r\n                        </p-calendar>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"col-lg-6\">\r\n                      <div class=\"form-group\">\r\n                        <label for=\"\">Woke-Up Time*</label>\r\n                        <p-calendar class=\"cutom-text-box-dailyactivity\" styleClass=\"form-control\"\r\n                          formControlName=\"napend\" hourFormat=\"12\" [timeOnly]=\"true\" icon=\"pi pi-clock\" [showIcon]=\"true\"></p-calendar>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"row\">\r\n                    <div class=\"col-lg-12\">\r\n                      <div class=\"form-group\">\r\n                        <label for=\"\">Description</label>\r\n                        <textarea aria-describedby=\"\" formControlName=\"napdiscription\" row=\"10\" class=\"form-control\"\r\n                          id=\"\" placeholder=\"Description\"></textarea>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n            <button type=\"button\" *ngIf=\"isSubscriptionActive && showNeweEntryButton\" class=\"btn btn-primary\"\r\n              (click)=\"addNewEntry(2,'nap')\">Update changes</button>\r\n            <button type=\"button\" *ngIf=\"!showNeweEntryButton && isSubscriptionActive\" class=\"btn btn-primary\"\r\n              disabled>Update changes</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <!-- Edit Diper -->\r\n    <div class=\"modal fade editshadow \" id=\"editdiper\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"editactivityLabel\"\r\n      aria-hidden=\"true\">\r\n      <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"editactivityLabel\">Update Daily Activity</h5>\r\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <ul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link active\" id=\"activity-tab\" data-toggle=\"tab\" href=\"#activity\" role=\"tab\"\r\n                  aria-controls=\"activity\" aria-selected=\"true\">\r\n                  <img src=\"assets/img/toiletsm.svg\" class=\"napimg\" style=\"height:25px\" alt=\"\">\r\n                  <p>Toileting</p>\r\n                </a>\r\n              </li>\r\n            </ul>\r\n            <div class=\"tab-content\" id=\"myTabContent\">\r\n              <div class=\"tab-pane fade show active\" id=\"activity\" role=\"tabpanel\" aria-labelledby=\"activity-tab\">\r\n                <form [formGroup]=\"diperForm\">\r\n                  <div class=\"row mt-20\">\r\n                    <div class=\"col-lg-6\">\r\n                      <div class=\"form-group\">\r\n                        <label for=\"\">Time*</label>\r\n                        <p-calendar class=\"cutom-text-box-dailyactivity\" styleClass=\"form-control\"\r\n                          formControlName=\"diperchangetime\" hourFormat=\"12\" [timeOnly]=\"true\" icon=\"pi pi-clock\" [showIcon]=\"true\">\r\n                        </p-calendar>\r\n                      </div>\r\n                    </div>\r\n\r\n                  </div>\r\n                  <div class=\"row\">\r\n                    <div class=\"col-lg-12\">\r\n                      <div class=\"form-group\">\r\n                        <label for=\"\">Description</label>\r\n                        <textarea aria-describedby=\"\" formControlName=\"description\" row=\"10\" class=\"form-control\" id=\"\"\r\n                          placeholder=\"Description\"></textarea>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"row\">\r\n                    <div class=\"col-lg-12\">\r\n                      <div class=\"form-group\">\r\n                        <label for=\"\">Auto Key </label>\r\n                        <div class=\"scrolldiv\">\r\n                          <div class=\"row\">\r\n\r\n                            <div class=\"col-md-2\">\r\n                              <button type=\"button\" class=\"btn othernotebtn\"\r\n                                (click)=\"addDiaperSuggestion('Toilet Training / Toilet Used ')\">Dry</button>\r\n                            </div>\r\n                            <div class=\"col-md-2\">\r\n                              <button type=\"button\" class=\"btn othernotebtn\"\r\n                                (click)=\"addDiaperSuggestion('Wet ')\">Wet</button>\r\n                            </div>\r\n                            <div class=\"col-md-2\">\r\n                              <button type=\"button\" class=\"btn othernotebtn\"\r\n                                (click)=\"addDiaperSuggestion('B/M')\">B/M</button>\r\n                            </div>\r\n                            <div class=\"col-md-2\">\r\n                              <button type=\"button\" class=\"btn othernotebtn\"\r\n                                (click)=\"addDiaperSuggestion('Diaper Change')\">Diaper</button>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n            <button type=\"button\" *ngIf=\"isSubscriptionActive && showNeweEntryButton\" class=\"btn btn-primary\"\r\n              (click)=\"addNewEntry(2,'diper')\">Update changes</button>\r\n            <button type=\"button\" *ngIf=\"!showNeweEntryButton && isSubscriptionActive\" class=\"btn btn-primary\"\r\n              disabled>Update changes</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n    <!-- (VIEW ACTIVITY) -->\r\n    <!-- Modal for update activity of individual as well as group -->\r\n    <div class=\"modal fade\" id=\"viewactivity\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"viewactivityLabel\"\r\n      aria-hidden=\"true\">\r\n      <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"viewactivityLabel\">Activity Summary</h5>\r\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n\r\n\r\n            <div class=\"kiddetail d-flex justify-content-between mb-20 align-items-center\">\r\n              <div class=\"d-flex\">\r\n                <div class=\"chatimg\" *ngIf=\"studImage== ''\">\r\n                  <img src=\"assets/img/user.png\" alt=\"image\" class=\"img-fluid studchatimg\">\r\n                </div>\r\n                <div class=\"chatimg\" *ngIf=\"studImage!= ''\">\r\n                  <img src=\"{{studImage}}\" alt=\"image\" class=\"img-fluid studchatimg\">\r\n                </div>\r\n                <div>\r\n\r\n                </div>\r\n                <div class=\"chatdet\">\r\n                  <h5>{{studentName}}</h5>\r\n                  <p>{{className}}</p>\r\n\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"leftdetail\">\r\n                <ul>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-lg-12\">\r\n                <ul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\r\n                  <li class=\"nav-item\">\r\n                    <a class=\"nav-link active\" id=\"Health-tab\" data-toggle=\"tab\" href=\"#HealthList\" role=\"tab\"\r\n                      aria-controls=\"Health\" aria-selected=\"true\">Health</a>\r\n                  </li>\r\n                  <li class=\"nav-item\">\r\n                    <a class=\"nav-link\" id=\"Notes-tab\" data-toggle=\"tab\" href=\"#NotesList\" role=\"tab\"\r\n                      aria-controls=\"Notes\" aria-selected=\"false\">Notes</a>\r\n                  </li>\r\n                  <li class=\"nav-item\">\r\n                    <a class=\"nav-link\" id=\"Meal-tab\" data-toggle=\"tab\" href=\"#MealList\" role=\"tab\" aria-controls=\"Meal\"\r\n                      aria-selected=\"false\">Meal</a>\r\n                  </li>\r\n                  <li class=\"nav-item\">\r\n                    <a class=\"nav-link\" id=\"Mood-tab\" data-toggle=\"tab\" href=\"#MoodList\" role=\"tab\" aria-controls=\"Mood\"\r\n                      aria-selected=\"false\">Mood</a>\r\n                  </li>\r\n                  <li class=\"nav-item\">\r\n                    <a class=\"nav-link\" id=\"Activity-tab\" data-toggle=\"tab\" href=\"#ActivityList\" role=\"tab\"\r\n                      aria-controls=\"Activity\" aria-selected=\"false\">Activity</a>\r\n                  </li>\r\n                  <li class=\"nav-item\">\r\n                    <a class=\"nav-link\" id=\"Nap-tab\" data-toggle=\"tab\" href=\"#NapList\" role=\"tab\" aria-controls=\"Nap\"\r\n                      aria-selected=\"false\">Nap</a>\r\n                  </li>\r\n                  <li class=\"nav-item\">\r\n                    <a class=\"nav-link\" id=\"Diper-tab\" data-toggle=\"tab\" href=\"#DiperList\" role=\"tab\"\r\n                      aria-controls=\"Diper\" aria-selected=\"false\">Toileting</a>\r\n                  </li>\r\n                </ul>\r\n                <div class=\"tab-content\" id=\"myTabContent\">\r\n                  <div class=\"tab-pane fade show active\" id=\"HealthList\" role=\"tabpanel\" aria-labelledby=\"Health-tab\">\r\n                    <div class=\"innertable white_box_table\">\r\n                      <div class=\"table-responsive \">\r\n                        <table class=\"table\">\r\n                          <thead class=\"thead-light\">\r\n                            <th scope=\"col\">Temperature(°F)</th>\r\n                            <th scope=\"col\">Health Note</th>\r\n                            <th scope=\"col\">Action</th>\r\n                          </thead>\r\n                          <tbody *ngFor=\"let myact of myactivityList\">\r\n                            <tr *ngIf=\"myact.activityTypeID == 1\">\r\n                              <td>{{myact.recordedTemparture}}</td>\r\n                              <td>{{myact.studentHealthDescription}}</td>\r\n                              <td>\r\n                                <a data-toggle=\"modal\" data-target=\"#edithealth\"\r\n                                  (click)=\"getActivityDetails(myact,'health',myact.studentID)\">\r\n                                  <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\r\n                                </a>\r\n                                <a *ngIf=\"isSubscriptionActive && showNeweEntryButton\" (click)=\"deleteActivity(myact)\">\r\n                                  <i class=\"fa fa-trash\" aria-hidden=\"true\"></i>\r\n                                </a>\r\n                              </td>\r\n                            </tr>\r\n                          </tbody>\r\n                          <div class=\"text-center\">\r\n                            <span *ngIf=\"classList.length == 0\">No record found</span>\r\n                          </div>\r\n                        </table>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"tab-pane fade\" id=\"MealList\" role=\"tabpanel\" aria-labelledby=\"Meal-tab\">\r\n                    <div class=\"innertable white_box_table\">\r\n                      <div class=\"table-responsive\">\r\n                        <table class=\"table\">\r\n                          <thead class=\"thead-light\">\r\n                            <th>Meal plan</th>\r\n                            <th>Comments</th>\r\n                            <th>Other Meal plan</th>\r\n                            <th>Other Comments</th>\r\n                            <th>Action</th>\r\n                          </thead>\r\n                          <tbody *ngFor=\"let myact of myactivityList\">\r\n                            <tr *ngIf=\"myact.activityTypeID == 3\">\r\n                              <td>{{myact.mealPlanTitle}}</td>\r\n                              <td>{{myact.otherThanPlanMeal}}</td>\r\n                              <td>{{myact.mealComment}}</td>\r\n                              <td>{{myact.otherThanPlanMealComment}}</td>\r\n                              <td>\r\n                                <a href=\"\" data-toggle=\"modal\" data-target=\"#editmeal\"\r\n                                  (click)=\"getActivityDetails(myact,'meal',myact.studentID)\">\r\n                                  <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\r\n                                </a>\r\n                                <a *ngIf=\"isSubscriptionActive && showNeweEntryButton\" (click)=\"deleteActivity(myact)\">\r\n                                  <i class=\"fa fa-trash\" aria-hidden=\"true\"></i>\r\n                                </a>\r\n                              </td>\r\n                            </tr>\r\n                          </tbody>\r\n                          <div class=\"text-center\">\r\n                            <span *ngIf=\"classList.length == 0\">No record found</span>\r\n                          </div>\r\n                        </table>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"tab-pane fade\" id=\"MoodList\" role=\"tabpanel\" aria-labelledby=\"Mood-tab\">\r\n                    <div class=\"innertable white_box_table\">\r\n                      <div class=\"table-responsive\">\r\n                        <table class=\"table\">\r\n                          <thead class=\"thead-light\">\r\n                            <th>My Mood was</th>\r\n                            <th>Comments</th>\r\n                            <th>Action</th>\r\n                          </thead>\r\n                          <tbody *ngFor=\"let myact of myactivityList\">\r\n                            <tr *ngIf=\"myact.activityTypeID == 4\">\r\n                              <td>{{myact.moodTypeName}}</td>\r\n                              <td>{{myact.studentMoodDescription}}</td>\r\n                              <td>\r\n                                <a href=\"\" data-toggle=\"modal\" data-target=\"#editmood\"\r\n                                  (click)=\"getActivityDetails(myact,'mood',myact.studentID)\">\r\n                                  <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\r\n                                </a>\r\n                                <a *ngIf=\"isSubscriptionActive && showNeweEntryButton\" (click)=\"deleteActivity(myact)\">\r\n                                  <i class=\"fa fa-trash\" aria-hidden=\"true\"></i>\r\n                                </a>\r\n                              </td>\r\n                            </tr>\r\n                          </tbody>\r\n                          <div class=\"text-center\">\r\n                            <span *ngIf=\"classList.length == 0\">No record found</span>\r\n                          </div>\r\n                        </table>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"tab-pane fade\" id=\"ActivityList\" role=\"tabpanel\" aria-labelledby=\"Activity-tab\">\r\n                    <div class=\"innertable white_box_table\">\r\n                      <div class=\"table-responsive\">\r\n                        <table class=\"table \">\r\n                          <thead class=\"thead-light\">\r\n                            <th scope=\"col\">Start Time</th>\r\n                            <th scope=\"col\">End Time</th>\r\n                            <th scope=\"col\">Activity Note</th>\r\n                            <th scope=\"col\">Action</th>\r\n                          </thead>\r\n                          <tbody *ngFor=\"let myact of myactivityList\">\r\n                            <tr *ngIf=\"myact.activityTypeID == 5\">\r\n                              <td>{{myact.startTime |date: 'h:mm a'}}</td>\r\n                              <td>{{myact.endTime| date: 'h:mm a'}}</td>\r\n                              <td>{{myact.otherActivityNote}}</td>\r\n                              <td>\r\n                                <a href=\"\" data-toggle=\"modal\" data-target=\"#editactivity\"\r\n                                  (click)=\"getActivityDetails(myact,'activity',myact.studentID)\">\r\n                                  <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\r\n                                </a>\r\n                                <a *ngIf=\"isSubscriptionActive && showNeweEntryButton\" (click)=\"deleteActivity(myact)\">\r\n                                  <i class=\"fa fa-trash\" aria-hidden=\"true\"></i>\r\n                                </a>\r\n                              </td>\r\n                            </tr>\r\n                          </tbody>\r\n                          <div class=\"text-center\">\r\n                            <span *ngIf=\"classList.length == 0\">No record found</span>\r\n                          </div>\r\n                        </table>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"tab-pane fade\" id=\"NapList\" role=\"tabpanel\" aria-labelledby=\"Nap-tab\">\r\n                    <div class=\"innertable white_box_table\">\r\n                      <div class=\"table-responsive\">\r\n                        <table class=\"table\">\r\n                          <thead class=\"thead-light\">\r\n                            <th scope=\"col\">Sleep-At Time</th>\r\n                            <th scope=\"col\">Woke-Up Time</th>\r\n                            <th scope=\"col\">Description</th>\r\n                            <th scope=\"col\">Action</th>\r\n                          </thead>\r\n                          <tbody *ngFor=\"let myact of myactivityList\">\r\n                            <tr *ngIf=\"myact.activityTypeID == 6\">\r\n                              <td>{{myact.sleptAtTime | date: 'h:mm a'}}</td>\r\n                              <td>{{myact.workUpTime| date: 'h:mm a'}}</td>\r\n                              <td>{{myact.napNote}}</td>\r\n                              <td>\r\n                                <a href=\"\" data-toggle=\"modal\" data-target=\"#editnap\"\r\n                                  (click)=\"getActivityDetails(myact,'nap',myact.studentID)\">\r\n                                  <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\r\n                                </a>\r\n                                <a *ngIf=\"isSubscriptionActive && showNeweEntryButton\" (click)=\"deleteActivity(myact)\">\r\n                                  <i class=\"fa fa-trash\" aria-hidden=\"true\"></i>\r\n                                </a>\r\n                              </td>\r\n                            </tr>\r\n\r\n                          </tbody>\r\n                          <div class=\"text-center\">\r\n                            <span *ngIf=\"classList.length == 0\">No record found</span>\r\n                          </div>\r\n                        </table>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"tab-pane fade\" id=\"NotesList\" role=\"tabpanel\" aria-labelledby=\"Note-tab\">\r\n                    <div class=\"innertable white_box_table\">\r\n                      <div class=\"table-responsive\">\r\n                        <table class=\"table\">\r\n                          <thead class=\"thead-light\">\r\n                            <th scope=\"col\">Note If Any</th>\r\n                            <th scope=\"col\">Action</th>\r\n                          </thead>\r\n                          <tbody *ngFor=\"let myact of myactivityList\">\r\n                            <tr *ngIf=\"myact.activityTypeID == 2\">\r\n                              <td>{{myact.noteDescription}}</td>\r\n                              <td>\r\n                                <a href=\"\" data-toggle=\"modal\" data-target=\"#editpost\"\r\n                                  (click)=\"getActivityDetails(myact,'notes',myact.studentID)\">\r\n                                  <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\r\n                                </a>\r\n                                <a *ngIf=\"isSubscriptionActive && showNeweEntryButton\" (click)=\"deleteActivity(myact)\">\r\n                                  <i class=\"fa fa-trash\" aria-hidden=\"true\"></i>\r\n                                </a>\r\n                              </td>\r\n                            </tr>\r\n                          </tbody>\r\n                          <div class=\"text-center\">\r\n                            <span *ngIf=\"classList.length == 0\">No record found</span>\r\n                          </div>\r\n                        </table>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n\r\n                  <div class=\"tab-pane fade\" id=\"DiperList\" role=\"tabpanel\" aria-labelledby=\"Diper-tab\">\r\n                    <div class=\"innertable white_box_table\">\r\n                      <div class=\"table-responsive\">\r\n                        <table class=\"table\">\r\n                          <thead class=\"thead-light\">\r\n                            <th scope=\"col\">Time</th>\r\n                            <th scope=\"col\">Description</th>\r\n                            <th scope=\"col\">Action</th>\r\n                          </thead>\r\n                          <tbody *ngFor=\"let myact of myactivityList\">\r\n\r\n                            <tr *ngIf=\"myact.activityTypeID == 7\">\r\n                              <td>{{myact.diaperChangeTime |  date: 'h:mm a'}}</td>\r\n                              <td>{{myact.studentActivityDiaperNote}}</td>\r\n                              <td>\r\n                                <a href=\"\" data-toggle=\"modal\" data-target=\"#editdiper\"\r\n                                  (click)=\"getActivityDetails(myact,'diper',myact.studentID)\">\r\n                                  <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\r\n                                </a>\r\n                                <a *ngIf=\"isSubscriptionActive && showNeweEntryButton\" (click)=\"deleteActivity(myact)\">\r\n                                  <i class=\"fa fa-trash\" aria-hidden=\"true\"></i>\r\n                                </a>\r\n                              </td>\r\n                            </tr>\r\n\r\n                          </tbody>\r\n                          <div class=\"text-center\">\r\n                            <span *ngIf=\"classList.length == 0\">No record found</span>\r\n                          </div>\r\n                        </table>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- For Information Video -->\r\n<div class=\"modal fade\" id=\"infovideo\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"checkoutLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\" id=\"checkoutLabel\">Information Video</h5>\r\n        <button type=\"button\" class=\"close\" (click)=\"PauseInfoVideo()\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <div class=\"cont video_section_pop1\" *ngIf=\"videoPath\">\r\n          <video controls id=\"pausevideo\">\r\n            <source *ngIf=\"videoPath\" [src]=\"videoPath\" type=\"video/mp4\" />\r\n            <source *ngIf=\"videoPath\" [src]=\"videoPath\" type=\"video/ogg\" />\r\n            <source *ngIf=\"videoPath\" [src]=\"videoPath\" type=\"video/webm\" />\r\n            Browser not supported\r\n          </video>\r\n        </div>\r\n\r\n        <div class=\"cont video_section_pop\" *ngIf=\"!videoPath\">\r\n          Video Not Found\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n<!-- Modal for update activity of individual as well as group  Group12-->\r\n<div class=\"modal fade\" id=\"editactivity12\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"editactivityLabel\"\r\n  aria-hidden=\"true\">\r\n  <div class=\"modal-dialog\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\" id=\"editactivityLabel\">Update Daily Activity</h5>\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <ul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\r\n          <li class=\"nav-item\" (click)=\"getFormType('activity')\">\r\n            <a class=\"nav-link active\" id=\"activity-tab\" data-toggle=\"tab\" href=\"#activity1\" role=\"tab\"\r\n              aria-controls=\"activity\" aria-selected=\"false\">\r\n              <img src=\"assets/img/circular-clock.svg\" alt=\"\">\r\n              <p>Activity</p>\r\n            </a>\r\n          </li>\r\n          <li class=\"nav-item\" (click)=\"getFormType('meal')\">\r\n            <a class=\"nav-link\" id=\"meal-tab\" data-toggle=\"tab\" href=\"#meal\" role=\"tab\" aria-controls=\"meal\"\r\n              aria-selected=\"false\">\r\n              <img src=\"assets/img/restaurant.svg\" alt=\"\">\r\n              <p>Meal</p>\r\n            </a>\r\n          </li>\r\n          <li class=\"nav-item\" (click)=\"getFormType('health')\">\r\n            <a class=\"nav-link\" id=\"health-tab\" data-toggle=\"tab\" href=\"#health\" role=\"tab\" aria-controls=\"health\"\r\n              aria-selected=\"false\">\r\n              <img src=\"assets/img/stethoscope.svg\" alt=\"\" width=\"25px\">\r\n              <p>Health</p>\r\n            </a>\r\n          </li>\r\n          <li class=\"nav-item\" (click)=\"getFormType('mood')\">\r\n            <a class=\"nav-link\" id=\"mood-tab\" data-toggle=\"tab\" href=\"#mood\" role=\"tab\" aria-controls=\"mood\"\r\n              aria-selected=\"false\">\r\n              <img src=\"assets/img/satisfaction.svg\" alt=\"\">\r\n              <p>Mood</p>\r\n            </a>\r\n          </li>\r\n          <li class=\"nav-item\" (click)=\"getFormType('notes')\">\r\n            <a class=\"nav-link\" id=\"notes-tab\" data-toggle=\"tab\" href=\"#notes\" role=\"tab\" aria-controls=\"notes\"\r\n              aria-selected=\"false\">\r\n              <img src=\"assets/img/post-it.svg\" alt=\"\" width=\"25px\">\r\n              <p>Notes</p>\r\n            </a>\r\n          </li>\r\n          <li class=\"nav-item\" (click)=\"getFormType('nap')\">\r\n            <a class=\"nav-link\" id=\"nap-tab\" data-toggle=\"tab\" href=\"#nap1\" role=\"tab\" aria-controls=\"nap\"\r\n              aria-selected=\"false\">\r\n              <img src=\"assets/img/napsm.svg\" alt=\"\" width=\"25px\">\r\n              <p>Nap</p>\r\n            </a>\r\n          </li>\r\n\r\n          <li class=\"nav-item\" (click)=\"getFormType('diper')\">\r\n            <a class=\"nav-link\" id=\"nap-tab\" data-toggle=\"tab\" href=\"#diper1\" role=\"tab\" aria-controls=\"diper\"\r\n              aria-selected=\"false\">\r\n              <img src=\"assets/img/toiletsm.svg\" alt=\"\" style=\"height:25px\" width=\"25px\">\r\n              <p>Toileting</p>\r\n            </a>\r\n          </li>\r\n        </ul>\r\n        <div class=\"tab-content\" id=\"myTabContent\">\r\n          \r\n          <div class=\"tab-pane fade show active\" id=\"activity1\" role=\"tabpanel\" aria-labelledby=\"activity-tab\">\r\n\r\n            <form [formGroup]=\"activityForm\">\r\n              <div class=\"row mt-20\">\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Start Time* </label>\r\n                    <p-calendar class=\"cutom-text-box-dailyactivity\" styleClass=\"form-control\"\r\n                      formControlName=\"starttime\" hourFormat=\"12\" [timeOnly]=\"true\" icon=\"pi pi-clock\" [showIcon]=\"true\"></p-calendar>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">End Time*</label>\r\n                    <p-calendar class=\"cutom-text-box-dailyactivity\" styleClass=\"form-control\" formControlName=\"endtime\" hourFormat=\"12\"\r\n                      [timeOnly]=\"true\" icon=\"pi pi-clock\" [showIcon]=\"true\"></p-calendar>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-lg-12\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Activity Notes*</label>\r\n                    <textarea aria-describedby=\"\" formControlName=\"activity\" row=\"10\" class=\"form-control\" id=\"\"\r\n                      placeholder=\"Activity Notes\"></textarea>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-lg-12\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Auto Key </label>\r\n                    <div class=\"scrolldiv\">\r\n                      <div class=\"row\">\r\n                        <div class=\"col-md-12 col-lg-12\">\r\n                          <ul class=\"list5Item\">\r\n                            <li *ngFor=\"let sbact of subActivityList\"> <button type=\"button\" class=\"btn othernotebtn\"\r\n                                (click)=\"addSuggestion(sbact,subActivityList.length)\">{{sbact.subActivityLabel}}</button>\r\n                            </li>\r\n                          </ul>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n            </form>\r\n\r\n          </div>\r\n\r\n          <div class=\"tab-pane fade\" id=\"meal\" role=\"tabpanel\" aria-labelledby=\"meal-tab\">\r\n\r\n            <form [formGroup]=\"mealForm\">\r\n\r\n              <div class=\"row mb-20 mt-20\">\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"exampleFormControlSelect1\">Meal Plan*</label>\r\n                    <select class=\"form-control\" placeholder=\"Meal Plan\" formControlName=\"plantype\"\r\n                      id=\"exampleFormControlSelect1\" (change)=\"getSelectedMealPlan()\">\r\n                      <option value=\"\">Select </option>\r\n                      <option *ngFor=\"let obj of mealPlanList\" [value]=\"obj.mealPlannerID\">{{obj.mealPlanTitle}}\r\n                      </option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <!-- <div class=\"row mb-20 mt-20\"> -->\r\n              <div class=\"table-responsive\" *ngIf=\"foodList.length != 0\">\r\n                <table class=\"table\">\r\n                  <thead class=\"thead-light\">\r\n                    <tr>\r\n                      <th scope=\"col\">Food Item</th>\r\n                      <th scope=\"col\">Amount</th>\r\n                      <th scope=\"col\">Unit</th>\r\n                      <th>consumed Amount*</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr\r\n                      *ngFor=\"let food of foodList; let item of mealForm.get('foodconsumption').controls; let i = index;\"\r\n                      formArrayName=\"foodconsumption\">\r\n                      <td>{{food.foodTypeName}}</td>\r\n                      <td>{{food.amount}}</td>\r\n                      <td>{{food.measureUnitTypeName}}</td>\r\n\r\n                      <td [formGroupName]=\"i\">\r\n                        <input type=\"text \" *ngIf=\"(food.measureUnitTypeID == 8 )\" class=\"form-control\"\r\n                          (blur)=\"getConsumedAmount(food)\" formControlName=\"milkconsumptionquantity\" id=\"\"\r\n                          aria-describedby=\"\" placeholder=\"consumed amount\">\r\n                        <select class=\"form-control\" *ngIf=\"food.measureUnitTypeID != 8 \" placeholder=\"Select\"\r\n                          (change)=\"getConsumedAmount(food)\" formControlName=\"foodconsumtionid\"\r\n                          id=\"exampleFormControlSelect1\">\r\n                          <option value=\"\">Select </option>\r\n                          <option *ngFor=\"let obj of foodConsumptionType\" [value]=\"obj.id\">{{obj.foodConsumtionName}}\r\n                          </option>\r\n                        </select>\r\n                      </td>\r\n\r\n                    </tr>\r\n\r\n\r\n                  </tbody>\r\n                </table>\r\n\r\n              </div>\r\n\r\n              <div class=\"row mb-20 mt-20\">\r\n                <div class=\"col-lg-12\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Other than plan meal </label>\r\n                    <textarea name=\"\" id=\"\" cols=\"30\" rows=\"6\" placeholder=\"Other than plan meal\" class=\"form-control\"\r\n                      formControlName=\"othermealplan\"></textarea>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"row mb-20 mt-20\">\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Other than plan meal comment</label>\r\n                    <input type=\"text \" class=\"form-control\" formControlName=\"othermealcmnt\" id=\"\" aria-describedby=\"\"\r\n                      placeholder=\"Other than plan meal comment\">\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Comment</label>\r\n                    <input type=\"text \" class=\"form-control\" formControlName=\"mealcmnt\" id=\"\" aria-describedby=\"\"\r\n                      placeholder=\"Enter Comment\">\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n\r\n          <div class=\"tab-pane fade\" id=\"health\" role=\"tabpanel\" aria-labelledby=\"health-tab\">\r\n            <form [formGroup]=\"healthForm\">\r\n              <div class=\"row mt-20\">\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Add Temperature(°F) </label>\r\n                    <input aria-describedby=\"\" class=\"form-control\" formControlName=\"temperature\" id=\"\" placeholder=\"\"\r\n                      type=\"text \">\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-6\"></div>\r\n                <div class=\"col-lg-12\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Health Note*</label>\r\n                    <textarea aria-describedby=\"\" row=\"10\" formControlName=\"tempcmnt\" class=\"form-control\" id=\"\"\r\n                      placeholder=\"Health note\"></textarea>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n\r\n          <div class=\"tab-pane fade\" id=\"mood\" role=\"tabpanel\" aria-labelledby=\"mood-tab\">\r\n            <form [formGroup]=\"moodForm\">\r\n\r\n              <h3> My Mood was...*</h3>\r\n              <div class=\"middle\">\r\n                <label>\r\n                  <input type=\"radio\" name=\"radio\" (click)=\"getMarkedMood(1)\" />\r\n                  <div class=\"front-end box\">\r\n                    <span>\r\n                      <img src=\"assets/img/happymob.svg\" alt=\"\">\r\n                    </span>\r\n                    <p>Happy</p>\r\n                  </div>\r\n                </label>\r\n                <label>\r\n                  <input type=\"radio\" name=\"radio\" (click)=\"getMarkedMood(2)\" />\r\n                  <div class=\"front-end box\">\r\n                    <span>\r\n                      <img src=\"assets/img/cryingmob.svg\" alt=\"\">\r\n                    </span>\r\n                    <p>Sad</p>\r\n                  </div>\r\n                </label>\r\n\r\n                <label>\r\n                  <input type=\"radio\" name=\"radio\" (click)=\"getMarkedMood(3)\" />\r\n                  <div class=\"back-end box\">\r\n                    <span>\r\n                      <img src=\"assets/img/playfull.png\" alt=\"\">\r\n                    </span>\r\n                    <p> Playful</p>\r\n                  </div>\r\n                </label>\r\n                <label>\r\n                  <input type=\"radio\" name=\"radio\" (click)=\"getMarkedMood(4)\" />\r\n                  <div class=\"back-end box\">\r\n                    <span>\r\n                      <img src=\"assets/img/tired.png\" alt=\"\">\r\n                    </span>\r\n                    <p> Fussy</p>\r\n                  </div>\r\n                </label>\r\n                <label>\r\n                  <input type=\"radio\" name=\"radio\" (click)=\"getMarkedMood(5)\" />\r\n                  <div class=\"back-end box\">\r\n                    <span>\r\n                      <img src=\"assets/img/Grumpy.png\" alt=\"\">\r\n                    </span>\r\n                    <p> Grumpy</p>\r\n                  </div>\r\n                </label>\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label for=\"\">Comments*</label>\r\n                <textarea aria-describedby=\"\" row=\"10\" class=\"form-control\" formControlName=\"moodcomment\" id=\"\"\r\n                  placeholder=\"Enter Comment\"></textarea>\r\n              </div>\r\n            </form>\r\n\r\n          </div>\r\n\r\n          <div class=\"tab-pane fade\" id=\"notes\" role=\"tabpanel\" aria-labelledby=\"notes-tab\">\r\n            <form [formGroup]=\"notesForm\">\r\n              <div class=\"form-group\">\r\n                <label for=\"\">Notes if any *</label>\r\n                <textarea aria-describedby=\"\" row=\"10\" formControlName=\"notes\" class=\"form-control\" id=\"\"\r\n                  placeholder=\"Notes if any\"></textarea>\r\n              </div>\r\n            </form>\r\n          </div>\r\n\r\n          <div class=\"tab-pane \" id=\"nap1\" role=\"tabpanel\" aria-labelledby=\"nap-tab\">\r\n            <form [formGroup]=\"napForm\">\r\n              <div class=\"row mt-20\">\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Sleep-At Time*</label>\r\n                    <p-calendar class=\"cutom-text-box-dailyactivity\" styleClass=\"form-control\"\r\n                      formControlName=\"napstart\" hourFormat=\"12\" [timeOnly]=\"true\" icon=\"pi pi-clock\" [showIcon]=\"true\"></p-calendar>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Woke-Up Time*</label>\r\n                    <p-calendar class=\"cutom-text-box-dailyactivity\" styleClass=\"form-control\" formControlName=\"napend\" hourFormat=\"12\"\r\n                      [timeOnly]=\"true\" icon=\"pi pi-clock\" [showIcon]=\"true\"></p-calendar>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-lg-12\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Description</label>\r\n                    <textarea aria-describedby=\"\" formControlName=\"napdiscription\" row=\"10\" class=\"form-control\" id=\"\"\r\n                      placeholder=\"Description\"></textarea>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n            </form>\r\n\r\n          </div>\r\n\r\n          <div class=\"tab-pane \" id=\"diper1\" role=\"tabpanel\" aria-labelledby=\"nap-tab\">\r\n\r\n            <form [formGroup]=\"diperForm\">\r\n              <div class=\"row mt-20\">\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Time*</label>\r\n                    <p-calendar class=\"cutom-text-box-dailyactivity\" styleClass=\"form-control\"\r\n                      formControlName=\"diperchangetime\" hourFormat=\"12\" [timeOnly]=\"true\" icon=\"pi pi-clock\" [showIcon]=\"true\">\r\n                    </p-calendar>\r\n                  </div>\r\n                </div>\r\n\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-lg-12\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Description</label>\r\n                    <textarea aria-describedby=\"\" formControlName=\"description\" row=\"10\" class=\"form-control\" id=\"\"\r\n                      placeholder=\"Description\"></textarea>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-lg-12\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Auto Key </label>\r\n                    <div class=\"scrolldiv\">\r\n                      <div class=\"row\">\r\n                        <div class=\"col-md-2\">\r\n                          <button type=\"button\" class=\"btn othernotebtn\"\r\n                            (click)=\"addDiaperSuggestion('Toilet Training / Toilet Used ')\">Toilet</button>\r\n                        </div>\r\n                        <div class=\"col-md-2\">\r\n                          <button type=\"button\" class=\"btn othernotebtn\"\r\n                            (click)=\"addDiaperSuggestion('Wet ')\">Wet</button>\r\n                        </div>\r\n                        <div class=\"col-md-2\">\r\n                          <button type=\"button\" class=\"btn othernotebtn\"\r\n                            (click)=\"addDiaperSuggestion('B/M')\">B/M</button>\r\n                        </div>\r\n                        <div class=\"col-md-2\">\r\n                          <button type=\"button\" class=\"btn othernotebtn\"\r\n                            (click)=\"addDiaperSuggestion('Diaper Change')\">Diaper</button>\r\n                        </div>\r\n                        <div class=\"col-md-2\">\r\n                          <button type=\"button\" class=\"btn othernotebtn\"\r\n                            (click)=\"addDiaperSuggestion('Dry')\">Dry</button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n            </form>\r\n\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n        <button type=\"submit\" class=\"btn btn-primary\" *ngIf=\"isSubscriptionActive\"\r\n          (click)=\"addNewEntry(1,'activity')\">Save changes</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n<ngx-spinner type=\"ball-atom\" size=\"medium\" color=\"#58A7FE\"></ngx-spinner>\r\n<app-confirm-box></app-confirm-box>"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-daily-activity/agency-admin-daily-activity.component.ts":
/*!*********************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-daily-activity/agency-admin-daily-activity.component.ts ***!
  \*********************************************************************************************************************/
/*! exports provided: AgencyAdminDailyActivityComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AgencyAdminDailyActivityComponent", function() { return AgencyAdminDailyActivityComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var ngx_bootstrap__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ngx-bootstrap */ "./node_modules/ngx-bootstrap/esm5/ngx-bootstrap.js");
/* harmony import */ var _teacher_shared_services_teacher_api_service_teacher_api_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../teacher/shared/services/teacher-api-service/teacher-api.service */ "./src/app/layout/teacher/shared/services/teacher-api-service/teacher-api.service.ts");
/* harmony import */ var _shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../shared/services/error-handler/error-handler.service */ "./src/app/shared/services/error-handler/error-handler.service.ts");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ngx-spinner */ "./node_modules/ngx-spinner/fesm5/ngx-spinner.js");
/* harmony import */ var _shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../shared/services/notification-service/notification.service */ "./src/app/shared/services/notification-service/notification.service.ts");
/* harmony import */ var _shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../shared/services/common/common.service */ "./src/app/shared/services/common/common.service.ts");
/* harmony import */ var primeng_api__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! primeng/api */ "./node_modules/primeng/api.js");
/* harmony import */ var primeng_api__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(primeng_api__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var _teacher_shared_constant__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../teacher/shared/constant */ "./src/app/layout/teacher/shared/constant.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};










var AgencyAdminDailyActivityComponent = /** @class */ (function () {
    function AgencyAdminDailyActivityComponent(apiService, error, spinner, notification, commonService, fb, confirmationService) {
        this.apiService = apiService;
        this.error = error;
        this.spinner = spinner;
        this.notification = notification;
        this.commonService = commonService;
        this.fb = fb;
        this.confirmationService = confirmationService;
        this.classList = [];
        this.serchByClass = '';
        this.activityVM = {};
        this.mealVm = {};
        this.HealthVM = {};
        this.MoodVM = {};
        this.NotesVM = {};
        this.NapVM = {};
        this.DiperVM = {};
        this.formType = 'activity';
        this.today = new Date();
        this.dailySheetList = [];
        this.mealTyptList = [];
        this.studentListId = [];
        this.studentListIdForEdit = [];
        this.suggestArr = [];
        this.updateSuggestArr = [];
        this.suggestArrDiper = [];
        this.listOfStudents = [];
        this.moodList = [];
        this.studentActivitiesID = 0;
        this.activityId = 0;
        this.mealId = 0;
        this.moodId = 0;
        this.healthId = 0;
        this.notesId = 0;
        this.napId = 0;
        this.diperId = 0;
        this.showHappy = false;
        this.showSad = false;
        this.showSleepy = false;
        this.showFussy = false;
        this.showGrumpy = false;
        this.subActivityList = [];
        this.myactivityList = [];
        this.mealPlanList = [];
        this.foodList = [];
        this.tempfoodList = [];
        this.allFoodItemList = [];
        this.MealMeasureType = [];
        this.mealQuantityType = [];
        this.studImage = '';
        this.className = '';
        this.markAllStudents = false;
        this.foodConsumptionType = [];
        this.count = 0;
        this.countAfterUpdate = 0;
        this.foodListToSaveConsumption = [];
        this.pageNo = 0;
        this.limit = 10;
        this.totalRecord = 0;
        this.loader = true;
        this.videoPath = '';
        this.showNeweEntryButton = true;
        this.dpConfig = new ngx_bootstrap__WEBPACK_IMPORTED_MODULE_2__["BsDatepickerConfig"]();
        this.isSubscriptionActive = this.commonService.getSubscriptionStatus();
    }
    AgencyAdminDailyActivityComponent.prototype.ngOnInit = function () {
        this.searchByDate = new Date();
        this.searchByDateString = this.commonService.getStringLocalDateTimeFromUTC(this.searchByDate);
        this.dpConfig = Object.assign({}, { containerClass: 'theme-dark-blue' }, { showWeekNumbers: false });
        this.getAllClassess();
        this.creteActivityForm();
        this.createHealthForm();
        this.createMoodForm();
        this.createNotesForm();
        this.creteMealForm();
        this.creteNapForm();
        this.creteDiperForm();
        this.getMealType();
        this.getotherActivitySuggetion();
        this.getSectionVideo();
    };
    AgencyAdminDailyActivityComponent.prototype.OpenInfoVideo = function (data) {
        $('#infovideo').modal('show');
    };
    AgencyAdminDailyActivityComponent.prototype.getSectionVideo = function () {
        var _this = this;
        var req = {
            'SectionID': 9
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_9__["TeacherAPIURLs"].GetVideoForSection, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.videoPath = res.body.filePath;
                console.log(_this.videoPath, 'bbbbbbbbbbbbbbb');
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminDailyActivityComponent.prototype.PauseInfoVideo = function () {
        var myVideo = document.getElementById('pausevideo');
        myVideo.pause();
        myVideo.currentTime = 0;
    };
    AgencyAdminDailyActivityComponent.prototype.ngAfterViewInit = function () {
        this.getFoodItems();
        this.getQuantityType();
        this.getMealMeasureType();
        this.getFoodConsumption();
    };
    AgencyAdminDailyActivityComponent.prototype.creteActivityForm = function () {
        if (this.activityId === 0) {
            this.activityForm = this.fb.group({
                starttime: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
                endtime: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
                activity: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required]
            });
        }
        else {
            this.activityForm = this.fb.group({
                starttime: [this.activityVM.startTime, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
                endtime: [this.activityVM.endTime, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
                activity: [this.activityVM.otherActivityNote, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required]
            });
            this.updateSuggestArr = this.activityForm.value.activity.split(',');
        }
    };
    AgencyAdminDailyActivityComponent.prototype.creteNapForm = function () {
        if (this.napId !== 0) {
            this.napForm = this.fb.group({
                napstart: [this.NapVM.sleptAtTime, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
                napend: [this.NapVM.workUpTime, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
                napdiscription: [this.NapVM.napNote]
            });
        }
        else {
            this.napForm = this.fb.group({
                napstart: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
                napend: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
                napdiscription: ['']
            });
        }
    };
    AgencyAdminDailyActivityComponent.prototype.creteMealForm = function () {
        if (this.mealId === 0) {
            this.mealForm = this.fb.group({
                mealcmnt: [''],
                othermealplan: [''],
                othermealcmnt: [''],
                plantype: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
                amount: [''],
                quantity: [''],
                unit: [''],
                foodconsumption: this.fb.array([]),
            });
            console.log('itemssss', this.mealForm.value.items);
        }
        else {
            this.mealForm = this.fb.group({
                mealcmnt: [this.mealVm.mealComment],
                othermealplan: [this.mealVm.otherThanPlanMeal],
                othermealcmnt: [this.mealVm.otherThanPlanMealComment],
                plantype: [this.mealVm.mealPlanTitle, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
                amount: [''],
                quantity: [''],
                unit: [''],
                foodconsumption: this.fb.array([]),
            });
            this.initItemRows();
        }
    };
    AgencyAdminDailyActivityComponent.prototype.creteDiperForm = function () {
        if (this.diperId !== 0) {
            this.diperForm = this.fb.group({
                diperchangetime: [this.DiperVM.diaperChangeTime, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
                description: [this.DiperVM.StudentActivityDiaperNote]
            });
        }
        else {
            this.diperForm = this.fb.group({
                diperchangetime: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
                description: ['']
            });
        }
    };
    AgencyAdminDailyActivityComponent.prototype.initItemRows = function () {
        if (this.mealId === 0) {
            var ctrl = this.mealForm.get('foodconsumption');
            for (var i = 0; i < this.foodList.length; i++) {
                ctrl.push(this.fb.group({
                    foodconsumtionid: [''],
                    milkconsumptionquantity: ['']
                }));
            }
        }
        else {
            var ctrl = this.mealForm.get('foodconsumption');
            for (var i = 0; i < this.foodList.length; i++) {
                ctrl.push(this.fb.group({
                    foodconsumtionid: [this.foodList[i].foodConsumtionID],
                    milkconsumptionquantity: [this.foodList[i].milkConsumptionQuantity]
                }));
            }
        }
    };
    Object.defineProperty(AgencyAdminDailyActivityComponent.prototype, "consumption", {
        get: function () {
            return this.mealForm.get('consumption_arr');
        },
        enumerable: true,
        configurable: true
    });
    AgencyAdminDailyActivityComponent.prototype.createHealthForm = function () {
        if (this.healthId === 0) {
            this.healthForm = this.fb.group({
                temperature: [''],
                tempcmnt: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
                howtotake: [''],
                repeatdose: [''],
                medicationName: [''],
                unit: ['']
            });
        }
        else {
            this.healthForm = this.fb.group({
                temperature: [this.HealthVM.recordedTemparture],
                tempcmnt: [this.HealthVM.studentHealthDescription, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
                howtotake: [this.HealthVM.howTaken],
                repeatdose: [this.HealthVM.doseRepeatName],
                medicationName: [this.HealthVM.studentMedicationName],
                unit: [this.HealthVM.unit]
            });
        }
    };
    AgencyAdminDailyActivityComponent.prototype.createMoodForm = function () {
        if (this.moodId === 0) {
            this.moodForm = this.fb.group({
                mood: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
                moodcomment: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
                happy: [1],
                sad: [0],
                sleepy: [0],
                fussy: [0],
                Grumpy: [0]
            });
        }
        else {
            this.moodForm = this.fb.group({
                mood: [this.MoodVM.moodTypeID, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
                moodcomment: [this.MoodVM.studentMoodDescription, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
                happy: [this.MoodVM.moodTypeID],
                sad: [this.MoodVM.moodTypeID],
                sleepy: [this.MoodVM.moodTypeID],
                fussy: [this.MoodVM.moodTypeID],
                Grumpy: [this.MoodVM.moodTypeID]
            });
        }
    };
    AgencyAdminDailyActivityComponent.prototype.createNotesForm = function () {
        if (this.notesId === 0) {
            this.notesForm = this.fb.group({
                notes: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required]
            });
        }
        else {
            this.notesForm = this.fb.group({
                notes: [this.NotesVM.noteDescription, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required]
            });
        }
    };
    Object.defineProperty(AgencyAdminDailyActivityComponent.prototype, "activity", {
        // convenience getter for easy access to form fields for activityForm
        get: function () { return this.activityForm.controls; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AgencyAdminDailyActivityComponent.prototype, "meal", {
        // convenience getter for easy access to form fields for mealForm
        get: function () { return this.mealForm.controls; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AgencyAdminDailyActivityComponent.prototype, "health", {
        // convenience getter for easy access to form fields for healthForm
        get: function () { return this.healthForm.controls; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AgencyAdminDailyActivityComponent.prototype, "mood", {
        // convenience getter for easy access to form fields for moodForm
        get: function () { return this.moodForm.controls; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AgencyAdminDailyActivityComponent.prototype, "notes", {
        // convenience getter for easy access to form fields for notesForm
        get: function () { return this.notesForm.controls; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AgencyAdminDailyActivityComponent.prototype, "nap", {
        // convenience getter for easy access to form fields for napForm
        get: function () { return this.napForm.controls; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AgencyAdminDailyActivityComponent.prototype, "diper", {
        // convenience getter for easy access to form fields for diperForm
        get: function () { return this.diperForm.controls; },
        enumerable: true,
        configurable: true
    });
    /**Method to get meal quantity type   */
    AgencyAdminDailyActivityComponent.prototype.getQuantityType = function () {
        var _this = this;
        var data = {
            'agencyID': this.commonService.getAgencyId()
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_9__["TeacherAPIURLs"].GetAllMeasureQuantityDropdown, data, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                //   this.spinner.hide();
                _this.mealQuantityType = res.body.data;
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    /**Method to get meal measer type   */
    AgencyAdminDailyActivityComponent.prototype.getMealMeasureType = function () {
        var _this = this;
        var data = {
            'agencyID': this.commonService.getAgencyId()
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_9__["TeacherAPIURLs"].GetAllMeasureUnitTypeDropdown, data, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.MealMeasureType = res.body.data;
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    /**Method to get Food items   */
    AgencyAdminDailyActivityComponent.prototype.getFoodItems = function () {
        var _this = this;
        var data = {
            'agencyID': this.commonService.getAgencyId()
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_9__["TeacherAPIURLs"].GetAllFoodTypeDropdown, data, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                var arr = res.body.data;
                arr.forEach(function (x) {
                    _this.foodList.forEach(function (z) {
                        if (x.value === z.foodTypeID) {
                            _this.allFoodItemList.push(x);
                        }
                    });
                });
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminDailyActivityComponent.prototype.getTodaysMealPlan = function () {
        var _this = this;
        var data = {
            'studentActivitiesId': 0,
            'agencyID': this.commonService.getAgencyId(),
            'studentID': 0,
            'classID': this.serchByClass,
            'askedDate': this.searchByDate,
            'limit': 0,
            'page': 0
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_9__["TeacherAPIURLs"].GetTodayMealPlan, data, null).subscribe(function (res) {
            _this.spinner.hide();
            if (res.body.statusCode === 200) {
                _this.mealPlanList = res.body.data;
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminDailyActivityComponent.prototype.filterMealPlan = function () {
        var _this = this;
        if (this.mealPlanList) {
            this.mealPlanList.forEach(function (x) {
                _this.tempfoodList = [];
                if (x.mealPlannerID.toString() === _this.selectedMealPlanId) {
                    _this.foodList = [];
                    x.studentActivityMealFoodItems.forEach(function (element) {
                        console.log('item2', _this.consumption);
                        console.log('Meal form', _this.mealForm);
                        _this.foodList.push(element);
                    });
                }
                _this.initItemRows();
            });
        }
    };
    /**Method to get meal type  */
    AgencyAdminDailyActivityComponent.prototype.getSelectedMealPlan = function () {
        this.selectedMealPlanId = this.mealForm.value.plantype;
        this.filterMealPlan();
    };
    AgencyAdminDailyActivityComponent.prototype.getMealType = function () {
        var _this = this;
        var data = {
            'agencyID': this.commonService.getAgencyId()
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_9__["TeacherAPIURLs"].GetAllMealTypeDropdown, data, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.mealTyptList = res.body.data;
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    // Another Activity suggestion for comments
    AgencyAdminDailyActivityComponent.prototype.getotherActivitySuggetion = function () {
        this.subActivityList = [
            { subActivityLabel: 'Playing', subActivityText: ' Playing in classroom.' },
            { subActivityLabel: 'Playing Outside', subActivityText: 'Playing Outside.' },
            { subActivityLabel: 'Music', subActivityText: 'Music' },
            { subActivityLabel: 'Dancing', subActivityText: 'Dancing' },
            { subActivityLabel: 'Science', subActivityText: 'Science' },
            { subActivityLabel: 'Colored', subActivityText: 'Colored' },
            { subActivityLabel: 'Free Draw', subActivityText: 'Free Draw' },
            { subActivityLabel: 'Reading', subActivityText: 'Reading' },
            { subActivityLabel: 'Centers', subActivityText: 'Centers' },
            { subActivityLabel: 'Share Day', subActivityText: 'Share Day' },
            { subActivityLabel: 'Circle Time', subActivityText: 'Circle Time' },
            { subActivityLabel: 'Flash Card', subActivityText: 'Flash Card' },
            { subActivityLabel: 'Puzzles', subActivityText: 'Puzzles' },
            { subActivityLabel: 'Blocks', subActivityText: 'Blocks' },
            { subActivityLabel: 'Legos', subActivityText: 'Legos' }
        ];
    };
    /**Get All class list */
    AgencyAdminDailyActivityComponent.prototype.getAllClassess = function () {
        var _this = this;
        this.spinner.show();
        var data = {
            'agencyID': this.commonService.getAgencyId()
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_9__["TeacherAPIURLs"].GetAllClasses, data, null).subscribe(function (res) {
            _this.spinner.hide();
            if (res.body.statusCode === 200) {
                _this.classList = res.body.data;
                if (_this.classList.length !== 0) {
                    _this.serchByClass = _this.classList[0].classesID;
                }
                _this.getDailySheet();
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    /**Get All Mood list */
    AgencyAdminDailyActivityComponent.prototype.getAllMood = function () {
        var _this = this;
        this.spinner.show();
        var data = {
            'agencyID': this.commonService.getAgencyId()
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_9__["TeacherAPIURLs"].GetAllMoodTypeDropdown, data, null).subscribe(function (res) {
            _this.spinner.hide();
            var mood = ['assets/img/happy.svg', 'assets/img/sad.svg', 'assets/img/sleeping.svg'];
            if (res.body.statusCode === 200) {
                _this.moodList = res.body.data;
                for (var index = 0; index < _this.moodList.length; index++) {
                    _this.moodList[index].imagepath = mood[index];
                }
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminDailyActivityComponent.prototype.getDailySheet = function () {
        var _this = this;
        this.markAllStudents = false;
        this.loader = true;
        if (new Date(this.searchByDate).toDateString() === (this.today).toDateString()) {
            this.showNeweEntryButton = true;
        }
        else {
            this.showNeweEntryButton = false;
        }
        this.studentListId = [];
        var myActivity = [];
        this.spinner.show();
        var data = {
            'agencyID': this.commonService.getAgencyId(),
            'studentActivitiesId': 0,
            'studentID': 0,
            'classID': this.serchByClass === '' ? 0 : this.serchByClass,
            'askedDate': this.searchByDate,
            'askedDateString': this.searchByDateString
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_9__["TeacherAPIURLs"].GetDailySheet, data, null).subscribe(function (res) {
            _this.spinner.hide();
            if (res.body.statusCode === 200 || res.body.statusCode === 0) {
                _this.totalRecord = res.body.totalRows;
                _this.countAfterUpdate = 0;
                _this.listOfStudents = [];
                var list_1 = res.body.data;
                if (res.body.data !== null && res.body.data !== undefined && res.body.data !== []) {
                    _this.getTodaysMealPlan();
                    list_1.forEach(function (element) {
                        if (_this.listOfStudents.length === 0) {
                            _this.listOfStudents.push(element);
                        }
                        else {
                            var index = _this.listOfStudents.findIndex(function (r) { return r.studentID === element.studentID; });
                            if (index === -1) {
                                _this.listOfStudents.push(element);
                            }
                        }
                    });
                    _this.listOfStudents.forEach(function (x) {
                        list_1.forEach(function (element) {
                            if (element.studentID === x.studentID) {
                                if (element.activityTypeID === 1) {
                                    if (element.studentActivityMedications.length > 0) {
                                        myActivity.push(element.studentActivityMedications[0]);
                                    }
                                }
                                else if (element.activityTypeID === 2) {
                                    if (element.studentActivityNotes.length > 0) {
                                        myActivity.push(element.studentActivityNotes[0]);
                                    }
                                }
                                else if (element.activityTypeID === 3) {
                                    if (element.studentActivityMeals.length > 0) {
                                        myActivity.push(element.studentActivityMeals[0]);
                                    }
                                }
                                else if (element.activityTypeID === 4) {
                                    if (element.studentActivityMoods.length > 0) {
                                        myActivity.push(element.studentActivityMoods[0]);
                                    }
                                }
                                else if (element.activityTypeID === 5) {
                                    if (element.studentOtherActivity.length > 0) {
                                        element.studentOtherActivity[0].endTime =
                                            _this.commonService.getLocalDateTimeFromUTC(element.studentOtherActivity[0].endTime);
                                        element.studentOtherActivity[0].startTime =
                                            _this.commonService.getLocalDateTimeFromUTC(element.studentOtherActivity[0].startTime);
                                        myActivity.push(element.studentOtherActivity[0]);
                                    }
                                }
                                else if (element.activityTypeID === 6) {
                                    if (element.studentAcitivityNap.length > 0) {
                                        element.studentAcitivityNap[0].sleptAtTime =
                                            _this.commonService.getLocalDateTimeFromUTC(element.studentAcitivityNap[0].sleptAtTime);
                                        element.studentAcitivityNap[0].workUpTime =
                                            _this.commonService.getLocalDateTimeFromUTC(element.studentAcitivityNap[0].workUpTime);
                                        myActivity.push(element.studentAcitivityNap[0]);
                                    }
                                }
                                else if (element.activityTypeID === 7) {
                                    if (element.studentActivityDiaper.length > 0) {
                                        element.studentActivityDiaper[0].diaperChangeTime =
                                            _this.commonService.getLocalDateTimeFromUTC(element.studentActivityDiaper[0].diaperChangeTime);
                                        myActivity.push(element.studentActivityDiaper[0]);
                                        console.log('sttttt', element.studentActivityDiaper);
                                    }
                                }
                                else {
                                }
                                x.myActivity = myActivity;
                                _this.countAfterUpdate = _this.countAfterUpdate + 1;
                            }
                            if (_this.countAfterUpdate === list_1.length) {
                                _this.viewAllActivityListAfterUpdate(_this.listOfStudents);
                            }
                        });
                        myActivity = [];
                        _this.spinner.hide();
                    });
                    _this.loader = false;
                }
                _this.spinner.hide();
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminDailyActivityComponent.prototype.getSerchClass = function (event) {
    };
    /** Save  Activity */
    AgencyAdminDailyActivityComponent.prototype.addNewEntry = function (option, type) {
        console.log(this.mealForm);
        this.spinner.show();
        if (option === 2) {
            this.formType = type;
        }
        else {
            this.activityVM = {};
            this.mealVm = {};
            this.MoodVM = {};
            this.HealthVM = {};
            this.NotesVM = {};
            this.NapVM = {};
            this.DiperVM = {};
        }
        var agencyID = this.commonService.getAgencyId();
        if (this.studentListId.length > 0 || option === 2) {
            if (this.formType === 'activity') {
                if (this.activityForm.valid) {
                    if (this.activityForm.value.starttime > this.activityForm.value.endtime) {
                        this.spinner.hide();
                        this.notification.warning({ message: 'End time should be greater than Start time  ', title: '' });
                    }
                    else {
                        this.activityVM.agencyID = agencyID;
                        this.activityVM.startTime = this.activityForm.value.starttime;
                        this.activityVM.endTime = this.activityForm.value.endtime;
                        this.activityVM.otherActivityNote = (this.activityForm.value.activity).toString();
                        this.activityVM.id = this.activityId;
                        this.activityVM.studentActivitiesID = this.activityVM.studentActivitiesID === null ||
                            this.activityVM.studentActivitiesID === undefined ?
                            0 : this.activityVM.studentActivitiesID;
                        this.addNewEntrySuccess(this.formType);
                    }
                }
                else {
                    this.spinner.hide();
                    this.notification.warning({ message: 'Please fill mandetory fields marked as star', title: '' });
                    this.commonService.validateAllFields(this.activityForm);
                }
            }
            else if (this.formType === 'meal') {
                if (this.mealForm.valid) {
                    this.mealVm.agencyID = agencyID;
                    this.mealVm.mealComment = this.mealForm.value.mealcmnt;
                    this.mealVm.otherThanPlanMeal = this.mealForm.value.othermealplan;
                    this.mealVm.otherThanPlanMealComment = this.mealForm.value.othermealcmnt;
                    this.mealVm.studentActivitiesID = this.mealVm.studentActivitiesID === null || this.mealVm.studentActivitiesID === undefined ?
                        0 : this.mealVm.studentActivitiesID;
                    this.mealVm.id = this.mealId;
                    this.mealVm.StudentActivityMealFoodItems = this.foodListToSaveConsumption;
                    this.mealVm.MealPlannerID = option === 1 ? this.mealForm.value.plantype : this.mealVm.MealPlannerID;
                    this.addNewEntrySuccess(this.formType);
                }
                else {
                    this.spinner.hide();
                    this.notification.warning({ message: 'Please fill mandetory fields marked as star', title: '' });
                    this.commonService.validateAllFields(this.mealForm);
                }
            }
            else if (this.formType === 'health') {
                if (this.healthForm.valid) {
                    this.HealthVM.id = this.healthId;
                    this.HealthVM.studentActivitiesID = this.HealthVM.studentActivitiesID === null ||
                        this.HealthVM.studentActivitiesID === undefined ?
                        0 : this.HealthVM.studentActivitiesID;
                    this.HealthVM.agencyID = agencyID;
                    this.HealthVM.recordedTemparture = this.healthForm.value.temperature;
                    this.HealthVM.studentHealthDescription = this.healthForm.value.tempcmnt;
                    this.HealthVM.doseRepeatName = this.healthForm.value.repeatdose;
                    this.HealthVM.studentMedicationName = this.healthForm.value.medicationName;
                    this.HealthVM.unit = this.HealthVM.unit ? this.HealthVM.unit : 0;
                    this.HealthVM.howTaken = this.healthForm.value.howtotake;
                    this.HealthVM.doseRepeatID = this.HealthVM.doseRepeatID === undefined ? 0 : this.HealthVM.doseRepeatID;
                    this.HealthVM.dosageQuantityID = this.HealthVM.dosageQuantityID === undefined ? 0 : this.HealthVM.dosageQuantityID;
                    this.HealthVM.studentMedicationID = this.HealthVM.studentMedicationID === undefined ? 0 : this.HealthVM.studentMedicationID;
                    this.HealthVM.AcknowledgeTeacherID = this.HealthVM.AcknowledgeTeacherID ? this.HealthVM.AcknowledgeTeacherID : 0;
                    this.HealthVM.isParentAcknowledge = this.HealthVM.isParentAcknowledge === undefined ? false : this.HealthVM.isParentAcknowledge;
                    this.HealthVM.isTeacherAcknowledge = this.HealthVM.isTeacherAcknowledge === undefined ? false
                        : this.HealthVM.isTeacherAcknowledge;
                    this.HealthVM.AcknowledgeParentID = this.HealthVM.AcknowledgeParentID ? this.HealthVM.AcknowledgeParentID :
                        0;
                    this.addNewEntrySuccess(this.formType);
                }
                else {
                    this.spinner.hide();
                    this.notification.warning({ message: 'Please fill mandetory fields marked as star', title: '' });
                    this.commonService.validateAllFields(this.healthForm);
                }
            }
            else if (this.formType === 'mood') {
                if (this.moodForm.valid) {
                    this.MoodVM.studentMoodDescription = this.moodForm.value.moodcomment;
                    this.MoodVM.id = this.moodId;
                    this.MoodVM.studentActivitiesID = this.MoodVM.studentActivitiesID === null || this.MoodVM.studentActivitiesID === undefined ?
                        0 : this.MoodVM.studentActivitiesID;
                    this.MoodVM.agencyID = agencyID;
                    this.MoodVM.moodTypeID = this.moodForm.value.mood;
                    this.addNewEntrySuccess(this.formType);
                }
                else {
                    this.spinner.hide();
                    this.notification.warning({ message: 'Please fill mandetory fields marked as star', title: '' });
                    this.commonService.validateAllFields(this.moodForm);
                }
            }
            else if (this.formType === 'notes') {
                if (this.notesForm.valid) {
                    this.NotesVM.noteDescription = this.notesForm.value.notes;
                    this.NotesVM.id = this.notesId;
                    this.NotesVM.studentActivitiesID = this.NotesVM.studentActivitiesID === null || this.NotesVM.studentActivitiesID === undefined ?
                        0 : this.NotesVM.studentActivitiesID;
                    this.NotesVM.agencyID = agencyID;
                    this.addNewEntrySuccess(this.formType);
                }
                else {
                    this.spinner.hide();
                    this.notification.warning({ message: 'Please fill mandetory fields marked as star', title: '' });
                    this.commonService.validateAllFields(this.notesForm);
                }
            }
            else if (this.formType === 'nap') {
                if (this.napForm.valid) {
                    if (this.napForm.value.napstart > this.napForm.value.napend) {
                        this.spinner.hide();
                        this.notification.warning({ message: 'slept at time  should be greater than woke-up time  ', title: '' });
                    }
                    else {
                        this.NapVM.id = this.napId;
                        this.NapVM.agencyID = agencyID;
                        this.NapVM.studentActivitiesID = this.NapVM.studentActivitiesID === null || this.NapVM.studentActivitiesID === undefined ?
                            0 : this.NapVM.studentActivitiesID;
                        this.NapVM.sleptAtTime = this.napForm.value.napstart;
                        this.NapVM.workUpTime = this.napForm.value.napend;
                        this.NapVM.napNote = this.napForm.value.napdiscription;
                        this.addNewEntrySuccess(this.formType);
                    }
                }
                else {
                    this.spinner.hide();
                    this.notification.warning({ message: 'Please fill mandetory fields marked as star', title: '' });
                    this.commonService.validateAllFields(this.napForm);
                }
            }
            else if (this.formType === 'diper') {
                if (this.diperForm.valid) {
                    this.DiperVM.id = this.diperId;
                    this.DiperVM.agencyID = agencyID;
                    this.DiperVM.studentActivitiesID = this.DiperVM.studentActivitiesID === null || this.DiperVM.studentActivitiesID === undefined ?
                        0 : this.DiperVM.studentActivitiesID;
                    this.DiperVM.diaperChangeTime = this.diperForm.value.diperchangetime;
                    this.DiperVM.StudentActivityDiaperNote = (this.diperForm.value.description).toString();
                    this.addNewEntrySuccess(this.formType);
                }
                else {
                    this.spinner.hide();
                    this.notification.warning({ message: 'Please fill mandetory fields marked as star', title: '' });
                    this.commonService.validateAllFields(this.diperForm);
                }
            }
            else {
                this.spinner.hide();
                this.notification.warning({ message: 'Please select students', title: '' });
            }
        }
    };
    AgencyAdminDailyActivityComponent.prototype.addNewEntrySuccess = function (data) {
        var agencyID = this.commonService.getAgencyId();
        var finalReq = {};
        if (data === 'activity') {
            var req = {
                'studentOtherActivity': this.activityVM,
                'activityTypeID': 5,
                'selectedStudents': this.editMode === false ? this.studentListId : this.studentListIdForEdit,
                'agencyID': agencyID,
                'classesID': this.serchByClass,
                'id': this.activityVM.studentActivitiesID,
                'activityRegisterDate': new Date()
            };
            finalReq = req;
        }
        else if (data === 'meal') {
            var req = {
                'studentActivityMeals': this.mealVm,
                'activityTypeID': 3,
                'selectedStudents': this.editMode === false ? this.studentListId : this.studentListIdForEdit,
                'agencyID': agencyID,
                'classesID': this.serchByClass,
                'id': this.mealVm.studentActivitiesID,
                'activityRegisterDate': new Date()
            };
            finalReq = req;
        }
        else if (data === 'health') {
            var req = {
                'studentActivityMedications': this.HealthVM,
                'activityTypeID': 1,
                'selectedStudents': this.editMode === false ? this.studentListId : this.studentListIdForEdit,
                'agencyID': agencyID,
                'classesID': this.serchByClass,
                'id': this.HealthVM.studentActivitiesID,
                'activityRegisterDate': new Date()
            };
            finalReq = req;
        }
        else if (data === 'mood') {
            var req = {
                'studentActivityMoods': this.MoodVM,
                'activityTypeID': 4,
                'selectedStudents': this.editMode === false ? this.studentListId : this.studentListIdForEdit,
                'agencyID': agencyID,
                'classesID': this.serchByClass,
                'id': this.MoodVM.studentActivitiesID,
                'activityRegisterDate': new Date()
            };
            finalReq = req;
        }
        else if (data === 'notes') {
            var req = {
                'studentActivityNotes': this.NotesVM,
                'activityTypeID': 2,
                'selectedStudents': this.editMode === false ? this.studentListId : this.studentListIdForEdit,
                'agencyID': agencyID,
                'classesID': this.serchByClass,
                'id': this.NotesVM.studentActivitiesID,
                'activityRegisterDate': new Date()
            };
            finalReq = req;
        }
        else if (data === 'nap') {
            var req = {
                'studentAcitivityNap': this.NapVM,
                'activityTypeID': 6,
                'selectedStudents': this.editMode === false ? this.studentListId : this.studentListIdForEdit,
                'agencyID': agencyID,
                'classesID': this.serchByClass,
                'id': this.NapVM.studentActivitiesID,
                'activityRegisterDate': new Date()
            };
            finalReq = req;
        }
        else if (data === 'diper') {
            var req = {
                'studentActivityDiaper': this.DiperVM,
                'activityTypeID': 7,
                'selectedStudents': this.editMode === false ? this.studentListId : this.studentListIdForEdit,
                'agencyID': agencyID,
                'classesID': this.serchByClass,
                'id': this.DiperVM.studentActivitiesID,
                'activityRegisterDate': new Date()
            };
            finalReq = req;
        }
        this.saveNewDailyActivity(finalReq);
    };
    /**Methd to save new activity over API */
    AgencyAdminDailyActivityComponent.prototype.saveNewDailyActivity = function (req) {
        var _this = this;
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_9__["TeacherAPIURLs"].SaveStudentActivity, req, null).subscribe(function (res) {
            _this.spinner.hide();
            if (res.body.statusCode === 200) {
                _this.markAllStudents = false;
                $('#editactivity12').modal('hide');
                $('#edithealth').modal('hide');
                $('#editactivity').modal('hide');
                $('#editmeal').modal('hide');
                $('#editmood').modal('hide');
                $('#editpost').modal('hide');
                $('#editnap').modal('hide');
                $('#editdiper').modal('hide');
                _this.notification.success({ message: req.id === 0 ? 'Activity added successfully' : 'Activity updated successfully', title: '' });
                _this.getDailySheet();
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    /**Get student id using checkbox */
    AgencyAdminDailyActivityComponent.prototype.getSingleMarkedStudent = function (student, event) {
        this.markAllStudents = false;
        if (event.target.checked === true) {
            if (this.studentListId.length === 0) {
                this.studentListId.push(student.studentID);
                var no = this.listOfStudents.findIndex(function (r) { return r.studentID === student.studentID; });
                if (no !== -1) {
                    this.listOfStudents[no].isMarked = true;
                }
            }
            else {
                var index = this.studentListId.findIndex(function (r) { return r === student.studentID; });
                if (index !== -1) {
                    this.studentListId.push(student.studentID);
                    var no = this.listOfStudents.findIndex(function (r) { return r.studentID === student.studentID; });
                    if (no !== -1) {
                        this.listOfStudents[no].isMarked = true;
                    }
                }
            }
        }
        else if (event.target.checked === false) {
            if (this.studentListId.length > 0) {
                var index = this.studentListId.findIndex(function (r) { return r === student.studentID; });
                this.studentListId.splice(index, 1);
                var no = this.listOfStudents.findIndex(function (r) { return r.studentID === student.studentID; });
                if (no !== -1) {
                    this.listOfStudents[no].isMarked = false;
                }
            }
        }
    };
    AgencyAdminDailyActivityComponent.prototype.getAllMarkedStudent = function (event) {
        var _this = this;
        if (event.target.checked === true) {
            this.studentListId = [];
            this.listOfStudents.forEach(function (data) {
                _this.studentListId.push(data.studentID);
                data.isMarked = true;
            });
        }
        else {
            this.studentListId = [];
            this.listOfStudents.forEach(function (element) {
                element.isMarked = false;
            });
        }
    };
    AgencyAdminDailyActivityComponent.prototype.saveActivity = function () {
    };
    AgencyAdminDailyActivityComponent.prototype.getFormType = function (type) {
        this.clearAllForm();
        if (type === 'activity') {
            this.formType = 'activity';
        }
        else if (type === 'meal') {
            this.formType = 'meal';
        }
        else if (type === 'health') {
            this.formType = 'health';
        }
        else if (type === 'notes') {
            this.formType = 'notes';
        }
        else if (type === 'mood') {
            this.formType = 'mood';
        }
        else if (type === 'activity') {
            this.formType = 'activity';
        }
        else if (type === 'diper') {
            this.formType = 'diper';
        }
        else {
            this.formType = 'nap';
        }
    };
    AgencyAdminDailyActivityComponent.prototype.clearAllForm = function () {
        this.editMode = false;
        this.mealId = 0;
        this.notesId = 0;
        this.moodId = 0;
        this.activityId = 0;
        this.healthId = 0;
        this.napId = 0;
        this.diperId = 0;
        this.creteDiperForm();
        this.createHealthForm();
        this.createMoodForm();
        this.createNotesForm();
        this.creteActivityForm();
        this.creteMealForm();
        this.creteNapForm();
        this.suggestArr = [];
        this.foodList = [];
        this.foodListToSaveConsumption = [];
    };
    AgencyAdminDailyActivityComponent.prototype.getMarkedMood = function (data) {
        this.moodForm.controls['mood'].setValue(data);
        this.moodForm.controls['mood'].updateValueAndValidity();
    };
    // Get Activity details
    AgencyAdminDailyActivityComponent.prototype.getActivityDetails = function (data, formType, studId) {
        this.editMode = true;
        this.markAllStudents = false;
        this.studentListId = [];
        this.listOfStudents.forEach(function (element) {
            element.isMarked = false;
        });
        this.studentListId = [];
        this.studentListIdForEdit = [];
        this.showHappy = false;
        this.showSad = false;
        this.showSleepy = false;
        this.showFussy = false;
        this.showGrumpy = false;
        this.studentListIdForEdit.push(studId);
        if (formType === 'activity') {
            this.activityVM.startTime = data.startTime;
            this.activityVM.endTime = data.endTime;
            this.activityVM.otherActivityNote = data.otherActivityNote;
            this.activityVM.id = data.id;
            this.activityId = data.id;
            this.activityVM.studentActivitiesID = data.studentActivitiesID;
            this.creteActivityForm();
        }
        else if (formType === 'meal') {
            this.getSelectedMealPlan();
            this.mealForm.controls['unit'].setValue('');
            this.mealForm.controls['quantity'].setValue('');
            this.mealForm.updateValueAndValidity();
            this.foodList = [];
            this.mealVm.mealComment = data.mealComment;
            this.mealVm.otherThanPlanMeal = data.otherThanPlanMeal;
            this.mealVm.otherThanPlanMealComment = data.otherThanPlanMealComment;
            this.mealVm.studentActivitiesID = data.studentActivitiesID;
            this.mealVm.MealPlannerID = data.mealPlannerID;
            this.mealVm.id = this.mealId;
            this.mealVm.studentID = studId;
            this.mealId = data.id;
            this.foodList = data.studentActivityMealFoodItems;
            this.mealVm.mealPlanTitle = data.mealPlanTitle;
            this.creteMealForm();
        }
        else if (formType === 'health') {
            this.HealthVM.id = data.id;
            this.HealthVM.studentActivitiesID = data.studentActivitiesID;
            this.HealthVM.recordedTemparture = data.recordedTemparture;
            this.HealthVM.studentHealthDescription = data.studentHealthDescription;
            this.HealthVM.studentID = studId;
            this.healthId = data.id;
            this.HealthVM.studentMedicationName = data.studentMedicationName;
            this.HealthVM.howTaken = data.howTaken;
            this.HealthVM.doseRepeatName = data.doseRepeatName;
            this.HealthVM.unit = data.unit;
            this.HealthVM.studentMedicationID = data.studentMedicationID,
                this.HealthVM.doseRepeatID = data.doseRepeatID,
                this.HealthVM.dosageQuantityID = data.dosageQuantityID,
                this.HealthVM.AcknowledgeTeacherID = data.acknowledgeTeacherID;
            this.HealthVM.isParentAcknowledge = data.isParentAcknowledge;
            this.HealthVM.isTeacherAcknowledge = data.isTeacherAcknowledge;
            this.HealthVM.AcknowledgeParentID = data.acknowledgeParentID;
            this.HealthVM.acknowledgeParentName = data.acknowledgeParentName;
            this.HealthVM.acknowledgeTeacherName = data.acknowledgeTeacherName;
            this.createHealthForm();
        }
        else if (formType === 'mood') {
            this.MoodVM.studentMoodDescription = data.studentMoodDescription;
            this.MoodVM.id = data.id;
            this.moodId = data.id;
            this.MoodVM.studentActivitiesID = data.studentActivitiesID;
            this.MoodVM.moodTypeID = data.moodTypeID;
            if (this.MoodVM.moodTypeID === 1) {
                $('#hp').prop('checked', true);
                this.showHappy = true;
                this.showSleepy = false;
                this.showSad = false;
                this.showFussy = false;
                this.showGrumpy = false;
            }
            else if (this.MoodVM.moodTypeID === 2) {
                this.showSad = true;
                this.showHappy = false;
                this.showSleepy = false;
                this.showFussy = false;
                this.showGrumpy = false;
                $('#sd').prop('checked', true);
            }
            else if (this.MoodVM.moodTypeID === 3) {
                this.showSleepy = true;
                this.showSad = false;
                this.showHappy = false;
                this.showFussy = false;
                this.showGrumpy = false;
                $('#sl').prop('checked', true);
            }
            else if (this.MoodVM.moodTypeID === 4) {
                this.showSad = false;
                this.showHappy = false;
                this.showSleepy = false;
                this.showFussy = true;
                this.showGrumpy = false;
                $('#fs').prop('checked', true);
            }
            else {
                this.showSad = false;
                this.showHappy = false;
                this.showSleepy = false;
                this.showFussy = false;
                this.showGrumpy = true;
                $('#gr').prop('checked', true);
            }
            this.MoodVM.studentID = studId;
            this.createMoodForm();
            this.MoodVM.moodTypeID = data.moodTypeID;
        }
        else if (formType === 'notes') {
            this.NotesVM.noteDescription = data.noteDescription;
            this.NotesVM.id = data.id;
            this.NotesVM.studentActivitiesID = data.studentActivitiesID;
            this.notesId = data.id;
            this.NotesVM.studentID = studId;
            this.createNotesForm();
        }
        else if (formType === 'nap') {
            this.NapVM.id = data.id;
            this.NapVM.sleptAtTime = data.sleptAtTime;
            this.NapVM.workUpTime = data.workUpTime;
            this.NapVM.napNote = data.napNote;
            this.NapVM.id = data.id;
            this.NapVM.studentActivitiesID = data.studentActivitiesID;
            this.napId = data.id;
            this.NotesVM.studentID = studId;
            this.creteNapForm();
        }
        else if (formType === 'diper') {
            this.suggestArrDiper = [];
            this.DiperVM.id = data.id;
            this.DiperVM.diaperChangeTime = data.diaperChangeTime;
            this.DiperVM.StudentActivityDiaperNote = data.studentActivityDiaperNote;
            this.NapVM.studentActivitiesID = data.studentActivitiesID;
            this.diperId = data.id;
            this.NotesVM.studentID = studId;
            this.creteDiperForm();
        }
        else {
        }
    };
    AgencyAdminDailyActivityComponent.prototype.addSuggestion = function (data, length) {
        if (this.activityForm.value.activity) {
            this.suggestArr.push(data.subActivityText);
            this.activityForm.controls['activity'].setValue(this.suggestArr);
            this.activityForm.controls['activity'].updateValueAndValidity();
        }
        else {
            this.suggestArr = [];
            this.suggestArr.push(data.subActivityText);
            this.activityForm.controls['activity'].setValue(this.suggestArr);
            this.activityForm.controls['activity'].updateValueAndValidity();
        }
    };
    AgencyAdminDailyActivityComponent.prototype.updateSuggestion = function (data) {
        if (this.activityForm.value.activity) {
            this.updateSuggestArr.push(data.subActivityText);
            this.activityForm.controls['activity'].setValue(this.updateSuggestArr);
            this.activityForm.controls['activity'].updateValueAndValidity();
        }
        else {
            this.updateSuggestArr = [];
            this.updateSuggestArr.push(data.subActivityText);
            this.activityForm.controls['activity'].setValue(this.updateSuggestArr);
            this.activityForm.controls['activity'].updateValueAndValidity();
        }
    };
    AgencyAdminDailyActivityComponent.prototype.viewAllActivityList = function (dailysheet) {
        this.studentID = dailysheet.studentID;
        if (dailysheet.myActivity.length > 0) {
            this.myactivityList = dailysheet.myActivity;
            this.studentName = dailysheet.studentName;
            this.studImage = dailysheet.imagePath;
            this.className = dailysheet.className;
        }
        else {
            this.myactivityList = [];
        }
        console.log('tactivity list', this.myactivityList);
    };
    AgencyAdminDailyActivityComponent.prototype.viewAllActivityListAfterUpdate = function (studentList) {
        var _this = this;
        studentList.forEach(function (element) {
            if (element.studentID === _this.studentID) {
                _this.studentID = element.studentID;
                if (element.myActivity.length > 0) {
                    _this.myactivityList = element.myActivity;
                    _this.studentName = element.studentName;
                    _this.studImage = element.imagePath;
                    console.log('list of st', studentList);
                }
                else {
                    _this.myactivityList = [];
                }
            }
        });
    };
    // Method to delete the incident
    AgencyAdminDailyActivityComponent.prototype.deleteActivity = function (value) {
        var _this = this;
        var stid = [];
        stid.push(value.studentID);
        this.confirmationService.confirm({
            message: 'Do you want to delete this activity?',
            accept: function () {
                _this.spinner.show();
                var data = {
                    'agencyID': _this.commonService.getAgencyId(),
                    'IsDeleted': true,
                    'DeletedDate': new Date(),
                    'DeletedBy': 1,
                    'activityTypeID': value.activityTypeID,
                    'selectedStudents': stid,
                    'classesID': _this.serchByClass,
                    'studentActivitiesID': value.studentActivitiesID,
                    'id': value.studentActivitiesID
                };
                _this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_9__["TeacherAPIURLs"].SaveStudentActivity, data, null).subscribe(function (res) {
                    if (res.body.statusCode === 200) {
                        _this.deleteActivitySuccess(value);
                    }
                    else {
                        _this.spinner.hide();
                        _this.error.unknownError();
                    }
                }, function (err) {
                    _this.spinner.hide();
                    _this.error.commonError(err);
                });
            }
        });
    };
    AgencyAdminDailyActivityComponent.prototype.deleteActivitySuccess = function (data) {
        var index = this.myactivityList.findIndex(function (r) { return r.id === data.id; });
        this.myactivityList.splice(index, 1);
        this.spinner.hide();
        this.notification.success({ message: 'Activity deleted successfully', title: '' });
    };
    /** Get food Consumption values for students from form */
    AgencyAdminDailyActivityComponent.prototype.getConsumedAmount = function (data) {
        this.foodListToSaveConsumption = this.foodList;
        console.log('amonzzzz', this.mealForm.value.foodconsumption);
        for (var index = 0; index < this.foodList.length; index++) {
            if (data.foodTypeID === this.foodListToSaveConsumption[index].foodTypeID) {
                this.foodListToSaveConsumption[index].milkConsumptionQuantity = this.mealForm.value.foodconsumption[index].milkconsumptionquantity;
                this.foodListToSaveConsumption[index].foodConsumtionID = this.mealForm.value.foodconsumption[index].foodconsumtionid === ''
                    ? 0 : this.mealForm.value.foodconsumption[index].foodconsumtionid;
            }
        }
        console.log('final', this.foodListToSaveConsumption);
    };
    AgencyAdminDailyActivityComponent.prototype.checkIsStudentSelected = function () {
        if (this.studentListId.length === 0) {
            this.notification.warning({ message: 'You cannot add new activity without selecting student ', title: 'Please select student' });
        }
        else {
            this.initItemRows();
            $('#editactivity12').modal('show');
        }
    };
    // **  Api for amount consumption for food other than milk */
    AgencyAdminDailyActivityComponent.prototype.getFoodConsumption = function () {
        var _this = this;
        var data = {
            'agencyID': this.commonService.getAgencyId()
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_9__["TeacherAPIURLs"].GetAllFoodConsumtion, data, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                if (res.body.data !== null && res.body.data !== undefined) {
                    var temp = [];
                    _this.foodConsumptionType = [];
                    temp = res.body.data;
                    var nameList = ['None', 'Some', 'Most', 'All'];
                    for (var index = 0; index < temp.length; index++) {
                        for (var j = 0; j < temp.length; j++) {
                            if (nameList[index] === temp[j].foodConsumtionName) {
                                _this.foodConsumptionType.push(temp[j]);
                            }
                        }
                    }
                    console.log('maza', _this.foodConsumptionType);
                }
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminDailyActivityComponent.prototype.getMealActivityByAPI = function (data, formType, studId) {
        var _this = this;
        this.editMode = true;
        this.markAllStudents = false;
        this.studentListId = [];
        this.studentListIdForEdit = [];
        this.listOfStudents.forEach(function (element) {
            element.isMarked = false;
        });
        this.studentListIdForEdit.push(studId);
        this.spinner.show();
        var req = {
            'agencyID': this.commonService.getAgencyId(),
            'studentAcitivityId': data.studentActivitiesID,
            'studentID': studId,
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_9__["TeacherAPIURLs"].GetParticularStudentActivityMeals, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.mealForm.controls['unit'].setValue('');
                _this.mealForm.controls['quantity'].setValue('');
                _this.mealForm.updateValueAndValidity();
                _this.foodList = [];
                _this.mealVm.mealComment = res.body.data.mealComment;
                _this.mealVm.otherThanPlanMeal = res.body.data.otherThanPlanMeal;
                _this.mealVm.otherThanPlanMealComment = res.body.data.otherThanPlanMealComment;
                _this.mealVm.studentActivitiesID = res.body.data.studentActivitiesID;
                _this.mealVm.MealPlannerID = res.body.data.mealPlannerID;
                _this.mealVm.id = _this.mealId;
                _this.mealVm.studentID = studId;
                _this.mealId = res.body.data.id;
                _this.mealVm.mealPlanTitle = res.body.data.mealPlanTitle;
                _this.foodList = res.body.data.studentActivityMealFoodItems;
                _this.creteMealForm();
                _this.spinner.hide();
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminDailyActivityComponent.prototype.getTeacherOperationalClasses = function () {
        var _this = this;
        this.classList = [];
        this.spinner.show();
        console.log('date', this.searchByDate);
        var data = {
            'agencyID': this.commonService.getAgencyId(),
            'askingDate': this.searchByDate,
            'teacherID': this.commonService.getReleventUserId('userdetails'),
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_9__["TeacherAPIURLs"].GetTeacherOperationalClasses, data, null).subscribe(function (res) {
            _this.spinner.hide();
            if (res.body.statusCode === 200) {
                if (res.body.data !== null && res.body.data !== undefined) {
                    _this.classList = res.body.data;
                    console.log('he class', _this.classList);
                    if (_this.classList.length !== 0) {
                        _this.serchByClass = _this.classList[0].value;
                        _this.getDailySheet();
                    }
                    else {
                        _this.serchByClass = '';
                    }
                }
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminDailyActivityComponent.prototype.getSerchDate = function (event) {
        this.count++;
        if (this.count > 2) {
            this.searchByDate = event;
            this.searchByDateString = this.commonService.getStringLocalDateTimeFromUTC(this.searchByDate);
            console.log(this.searchByDateString, 'sssssss');
        }
    };
    AgencyAdminDailyActivityComponent.prototype.addDiaperSuggestion = function (text) {
        if (this.diperForm.value.description) {
            this.suggestArrDiper.push(text);
            this.diperForm.controls['description'].setValue(this.suggestArrDiper);
            this.diperForm.controls['description'].updateValueAndValidity();
        }
        else {
            this.suggestArrDiper = [];
            this.suggestArrDiper.push(text);
            this.diperForm.controls['description'].setValue(this.suggestArrDiper);
            this.diperForm.controls['description'].updateValueAndValidity();
        }
    };
    AgencyAdminDailyActivityComponent.prototype.paginate = function (event) {
        console.log('Index of the first record', event.first);
        console.log('= Number of rows to display in new page', event.rows);
        console.log('= Index of the new page', event.page);
        console.log('= Total number of pages', event.pageCount);
        this.pageNo = event.page;
        this.getDailySheet();
    };
    AgencyAdminDailyActivityComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-agency-admin-daily-activity',
            template: __webpack_require__(/*! ./agency-admin-daily-activity.component.html */ "./src/app/layout/agency-admin/components/agency-admin-daily-activity/agency-admin-daily-activity.component.html"),
            styles: [__webpack_require__(/*! ./agency-admin-daily-activity.component.css */ "./src/app/layout/agency-admin/components/agency-admin-daily-activity/agency-admin-daily-activity.component.css")]
        }),
        __metadata("design:paramtypes", [_teacher_shared_services_teacher_api_service_teacher_api_service__WEBPACK_IMPORTED_MODULE_3__["TeacherApiService"], _shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_4__["ErrorHandlerService"],
            ngx_spinner__WEBPACK_IMPORTED_MODULE_5__["NgxSpinnerService"], _shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_6__["NotificationService"],
            _shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_7__["CommonService"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormBuilder"], primeng_api__WEBPACK_IMPORTED_MODULE_8__["ConfirmationService"]])
    ], AgencyAdminDailyActivityComponent);
    return AgencyAdminDailyActivityComponent;
}());



/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-dashboard/agency-admin-dashboard.component.css":
/*!************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-dashboard/agency-admin-dashboard.component.css ***!
  \************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "#editactivity .nav-link img,#editmeal .nav-link img, #edithealth .nav-link img,#editpost .nav-link img { height:  25px}\r\n.align_Class{\r\n  align-content: center;\r\n  text-align: center;\r\n}\r\n.currntcls {\r\n    padding: 18px;\r\n    box-shadow: 0 0 5px 0 #ccc;\r\n    background: #fdfdfd;\r\n    border-radius: 10px;\r\n    position: relative;\r\n    display: flex;\r\n    margin-top: 20px;\r\n  }\r\n.currntcls .title {\r\n    padding: 20px;\r\n    border-right: 1px solid #ccc;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n.title span.month {\r\n    color: #969696;\r\n    display: block;\r\n  }\r\n.title span.day {\r\n    font-size: 12px;\r\n  }\r\n.title span.date {\r\n    display: block;\r\n    width: 100%;\r\n    color: #ff6c6c;\r\n    font-size: 60px;\r\n    padding: 0;\r\n    margin: 0;\r\n    line-height: 48px;\r\n  }\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L2FnZW5jeS1hZG1pbi9jb21wb25lbnRzL2FnZW5jeS1hZG1pbi1kYXNoYm9hcmQvYWdlbmN5LWFkbWluLWRhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHlHQUF5RyxhQUFhO0FBQ3RIO0VBQ0UscUJBQXFCO0VBQ3JCLGtCQUFrQjtBQUNwQjtBQUlBO0lBQ0ksYUFBYTtJQUNiLDBCQUEwQjtJQUMxQixtQkFBbUI7SUFDbkIsbUJBQW1CO0lBQ25CLGtCQUFrQjtJQUNsQixhQUFhO0lBQ2IsZ0JBQWdCO0VBQ2xCO0FBQ0E7SUFDRSxhQUFhO0lBQ2IsNEJBQTRCO0lBQzVCLGFBQWE7SUFDYix1QkFBdUI7SUFDdkIsbUJBQW1CO0VBQ3JCO0FBQ0E7SUFDRSxjQUFjO0lBQ2QsY0FBYztFQUNoQjtBQUNBO0lBQ0UsZUFBZTtFQUNqQjtBQUNBO0lBQ0UsY0FBYztJQUNkLFdBQVc7SUFDWCxjQUFjO0lBQ2QsZUFBZTtJQUNmLFVBQVU7SUFDVixTQUFTO0lBQ1QsaUJBQWlCO0VBQ25CIiwiZmlsZSI6InNyYy9hcHAvbGF5b3V0L2FnZW5jeS1hZG1pbi9jb21wb25lbnRzL2FnZW5jeS1hZG1pbi1kYXNoYm9hcmQvYWdlbmN5LWFkbWluLWRhc2hib2FyZC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiI2VkaXRhY3Rpdml0eSAubmF2LWxpbmsgaW1nLCNlZGl0bWVhbCAubmF2LWxpbmsgaW1nLCAjZWRpdGhlYWx0aCAubmF2LWxpbmsgaW1nLCNlZGl0cG9zdCAubmF2LWxpbmsgaW1nIHsgaGVpZ2h0OiAgMjVweH1cclxuLmFsaWduX0NsYXNze1xyXG4gIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuXHJcblxyXG5cclxuLmN1cnJudGNscyB7XHJcbiAgICBwYWRkaW5nOiAxOHB4O1xyXG4gICAgYm94LXNoYWRvdzogMCAwIDVweCAwICNjY2M7XHJcbiAgICBiYWNrZ3JvdW5kOiAjZmRmZGZkO1xyXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBtYXJnaW4tdG9wOiAyMHB4O1xyXG4gIH1cclxuICAuY3Vycm50Y2xzIC50aXRsZSB7XHJcbiAgICBwYWRkaW5nOiAyMHB4O1xyXG4gICAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgI2NjYztcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgfVxyXG4gIC50aXRsZSBzcGFuLm1vbnRoIHtcclxuICAgIGNvbG9yOiAjOTY5Njk2O1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgfVxyXG4gIC50aXRsZSBzcGFuLmRheSB7XHJcbiAgICBmb250LXNpemU6IDEycHg7XHJcbiAgfVxyXG4gIC50aXRsZSBzcGFuLmRhdGUge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGNvbG9yOiAjZmY2YzZjO1xyXG4gICAgZm9udC1zaXplOiA2MHB4O1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIGxpbmUtaGVpZ2h0OiA0OHB4O1xyXG4gIH0iXX0= */"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-dashboard/agency-admin-dashboard.component.html":
/*!*************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-dashboard/agency-admin-dashboard.component.html ***!
  \*************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"wrapper\">\r\n  <div class=\"container-fluid\">\r\n\r\n    <div class=\"an-pagetitle mb-20\">\r\n      <h2>Dashboard</h2>\r\n\r\n    </div>\r\n    <div class=\"pagebadges\">\r\n      <div class=\"row\">\r\n        <div class=\"col-lg-4 col-md-4\">\r\n          <div class=\"badgebox\">\r\n            <div>\r\n              <img src=\"assets/img/enrolled.png\" alt=\"\">\r\n            </div>\r\n            <div class=\"agency_box\">\r\n              <h3>{{enrollStudents}}</h3>\r\n              <p>Student Enrolled </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-lg-4 col-md-4\">\r\n          <div class=\"badgebox\">\r\n            <div>\r\n              <img src=\"assets/img/present.png\" alt=\"\">\r\n            </div>\r\n            <div class=\"agency_box\">\r\n              <h3>{{presentStudents}}</h3>\r\n              <p>Present Students</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-lg-4 col-md-4\">\r\n          <div class=\"badgebox\">\r\n            <div>\r\n              <img src=\"assets/img/group.png\" alt=\"\">\r\n            </div>\r\n            <div class=\"agency_box\">\r\n              <h3>{{requestedStudent}}</h3>\r\n              <p>Enrollment Request</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-lg-6 col-md-12\">\r\n        <div class=\"whitebox white_box_table\">\r\n          <div class=\"head\">Present Teachers Today</div>\r\n          <div class=\"table-responsive\">\r\n            <table class=\"table\">\r\n              <thead class=\"thead-light\">\r\n                <tr>\r\n                  <th scope=\"col\">First Name</th>\r\n                  <th scope=\"col\">Last Name</th>\r\n                  <th scope=\"col\">Time In</th>\r\n                  <th scope=\"col\">Time Out</th>\r\n                  <!-- <th scope=\"col\">Email</th> -->\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr *ngFor=\"let teacher of teacherPresentList\">\r\n                  <td>{{teacher.firstName}}</td>\r\n                  <td>{{teacher.lastName}}</td>\r\n                  <td>{{teacher.timeIn | date:'mediumTime'}}</td>\r\n                  <td *ngIf=\"teacher.timeOut == '0001-01-01T00:00:00'\">-</td>\r\n                  <td *ngIf=\"teacher.timeOut != '0001-01-01T00:00:00'\">{{teacher.timeOut | date:'mediumTime'}}</td>\r\n                  <!-- <td>{{teacher.email}}</td> -->\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-lg-6 col-md-12\">\r\n        <div class=\"whitebox white_box_table\">\r\n          <div class=\"head\">Today's All Classes </div>\r\n          <div class=\"brdr\"></div>\r\n\r\n          <div class=\"tchschdule1\">\r\n            <p-carousel [value]=\"classLogList\" [numVisible]=\"1\" (onPage)=getPageDetailsForClass($event)>\r\n              <ng-template let-item pTemplate=\"item\">\r\n                <div class=\"currntcls\">\r\n                  <div class=\"title\">\r\n                    <div>\r\n                      <span class=\"month\">{{today|date: 'MMMM y'}}</span>\r\n                      <span class=\"date\">{{today|date: 'dd'}}</span>\r\n                      <span class=\"day\">{{today|date: 'EEEE'}}</span>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"\" style=\"width:100%;\">\r\n                    <div class=\"row algcenter\">\r\n                      <div class=\"col-lg-12\">\r\n                        <h3 class=\"clsname\">{{classDetails.className}}</h3>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"row algcenter\">\r\n                      <div class=\"col-lg-6 col-6 text-center\">\r\n                        <div class=\"form-group\">\r\n                          <label for=\"\">Time From</label>\r\n                          <p>{{classDetails.startTime | date:' hh:mm a'}}</p>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"col-lg-6 col-6 text-center\">\r\n                        <div class=\"form-group\">\r\n                          <label for=\"\">Untill</label>\r\n                          <p>{{classDetails.endTime | date:' hh:mm a'}}</p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </ng-template>\r\n            </p-carousel>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-lg-12 col-md-12\">\r\n        <div class=\"whitebox white_box_table\">\r\n          <div class=\"head\">Student Medication (Class : {{classNameForMedication}})</div>\r\n          <div class=\"table-responsive\">\r\n            <table class=\"table\">\r\n              <thead class=\"thead-light\">\r\n                <tr>\r\n                  <th scope=\"col\">Student Name</th>\r\n                  <th scope=\"col\">Medicine Name</th>\r\n                  <th scope=\"col\">Units</th>\r\n                  <th scope=\"col\">Dosage</th>\r\n                  <th scope=\"col\">How To Take</th>\r\n                  <th scope=\"col\">Action</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr *ngFor=\" let med of medicationList\">\r\n                  <td>{{med.studentName}}</td>\r\n                  <td>{{med.medicationName}}</td>\r\n                  <td>{{med.units}}</td>\r\n                  <td>{{med.doseRepeatName}}</td>\r\n                  <td>{{med.howTaken}}</td>\r\n                  <td>\r\n                    <a *ngIf=\"med.isMedicationDone == false\" style=\"cursor:pointer\" data-toggle=\"modal\"\r\n                      data-target=\"#edithealth\" (click)=\"getStudentDetailsOfMedication(med)\">\r\n                      <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\r\n                    </a>\r\n                    <a><i *ngIf=\"med.isMedicationDone == true\" class=\"fa fa-check fa-lg\" style=\"color:#0afe0a;\"\r\n                        aria-hidden=\"true\"></i></a>\r\n                </tr>\r\n                <tr *ngIf=\"medicationList && medicationList.length == 0 && !loader\">\r\n                  <td colspan=\"6\" class=\"align_Class\">\r\n                    No Records Found!\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-lg-6 col-md-12\">\r\n        <div class=\"whitebox white_box_table\">\r\n          <div class=\"head\"> Due Payments\r\n            <a style=\"float:right;\" [routerLink]=\"['../payment']\">View All</a>\r\n          </div>\r\n          <div class=\"table-responsive\">\r\n            <table class=\"table\">\r\n              <thead class=\"thead-light\">\r\n                <tr>\r\n                  <th scope=\"col\">Student Name</th>\r\n                  <th scope=\"col\">Class</th>\r\n                  <th scope=\"col\">Parent Name</th>\r\n                  <th scope=\"col\">Amount($)</th>\r\n\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr *ngFor=\"let payment of paymentDueList\">\r\n                  <td>{{payment.studentName}}</td>\r\n                  <td>{{payment.className}}</td>\r\n                  <td>{{payment.parentName}}</td>\r\n                  <td>${{payment.totalAmount}}</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"col-lg-6 col-md-12\">\r\n        <div class=\"whitebox white_box_table\">\r\n          <div class=\"head\">Student Allergy (Class : {{classNameForAllergy}})</div>\r\n          <div class=\"table-responsive\">\r\n            <table class=\"table\">\r\n              <thead class=\"thead-light\">\r\n                <tr>\r\n                  <th scope=\"col\">Student Name</th>\r\n                  <th scope=\"col\">Allergy Name</th>\r\n                  <th scope=\"col\">Allergy Type</th>\r\n                  <th scope=\"col\">Symptoms</th>\r\n                  <th scope=\"col\">Action</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr *ngFor=\" let allergy of allergyList\">\r\n                  <td>{{allergy.studentName}}</td>\r\n                  <td>{{allergy.allergyName}}</td>\r\n                  <td>{{allergy.allergyTypeName}}</td>\r\n                  <td>{{allergy.allergyReactionTypeName}}</td>\r\n                  <td>{{allergy.treatment}}</td>\r\n                </tr>\r\n                <tr *ngIf=\"allergyList && allergyList.length == 0 && !loader\">\r\n                  <td colspan=\"6\" class=\"align_Class\">\r\n                    No Records Found!\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <!-- Add Health modal -->\r\n    <div class=\"modal fade editshadow\" id=\"edithealth\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"editactivityLabel\"\r\n      aria-hidden=\"true\">\r\n      <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"editactivityLabel\">Today's Medication</h5>\r\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <ul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link active\" id=\"health-tab\" data-toggle=\"tab\" href=\"#health\" role=\"tab\"\r\n                  aria-controls=\"health\" aria-selected=\"false\">\r\n                  <img src=\"assets/img/stethoscope.svg\" alt=\"\">\r\n                  <p>Medications</p>\r\n                </a>\r\n              </li>\r\n            </ul>\r\n\r\n            <form [formGroup]=\"healthForm\">\r\n              <div class=\"row mt-20\">\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Add Temperature (°F)</label>\r\n                    <input aria-describedby=\"\" type=\"text\" formControlName=\"temperature\" class=\"form-control\" id=\"\"\r\n                      placeholder=\"\">\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-lg-12 botm10\">\r\n                  <div class=\"form-group\">\r\n                    <label>Health Note*</label>\r\n                    <textarea aria-describedby=\"\" formControlName=\"tempcmnt\" row=\"10\" class=\"form-control\" id=\"\"\r\n                      placeholder=\"Health Note\"></textarea>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"row mt-20\">\r\n                <div class=\"col-lg-6 \">\r\n                  <div class=\"\">\r\n                    <label class=\"checkboxcustom\">\r\n                      <input type=\"checkbox\" id=\"checkbox-in\" class=\"abc\" formControlName=\"teacherack\">\r\n                      <span class=\"checkmark abc\"></span> <label style=\"margin-left: 15px;\"> Acknowledge</label>\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n            <button type=\"button\" class=\"btn btn-primary\" (click)=\"medicationDone()\">Save</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-dashboard/agency-admin-dashboard.component.ts":
/*!***********************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-dashboard/agency-admin-dashboard.component.ts ***!
  \***********************************************************************************************************/
/*! exports provided: AgencyAdminDashboardComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AgencyAdminDashboardComponent", function() { return AgencyAdminDashboardComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _shared_constatant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../shared/constatant */ "./src/app/layout/agency-admin/components/shared/constatant.ts");
/* harmony import */ var _parent_shared_services_parent_api_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../parent/shared/services/parent-api-service */ "./src/app/layout/parent/shared/services/parent-api-service.ts");
/* harmony import */ var _shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../shared/services/error-handler/error-handler.service */ "./src/app/shared/services/error-handler/error-handler.service.ts");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ngx-spinner */ "./node_modules/ngx-spinner/fesm5/ngx-spinner.js");
/* harmony import */ var _shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../shared/services/notification-service/notification.service */ "./src/app/shared/services/notification-service/notification.service.ts");
/* harmony import */ var _shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../shared/services/common/common.service */ "./src/app/shared/services/common/common.service.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var primeng_api__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! primeng/api */ "./node_modules/primeng/api.js");
/* harmony import */ var primeng_api__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(primeng_api__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var _teacher_shared_constant__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../teacher/shared/constant */ "./src/app/layout/teacher/shared/constant.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};











var AgencyAdminDashboardComponent = /** @class */ (function () {
    function AgencyAdminDashboardComponent(apiService, error, spinner, notification, commonService, fb, route, confirmationService) {
        this.apiService = apiService;
        this.error = error;
        this.spinner = spinner;
        this.notification = notification;
        this.commonService = commonService;
        this.fb = fb;
        this.route = route;
        this.confirmationService = confirmationService;
        this.classLogList = [];
        this.studentListId = [];
        this.HealthVM = {};
        this.teacherPresentList = [];
        this.paymentDueList = [];
        this.pageNo = 0;
        this.limit = 5;
        this.totalRecord = 0;
        this.presentStudents = 0;
        this.enrollStudents = 0;
        this.requestedStudent = 0;
        this.today = new Date();
        this.isSubscritionActive = false;
    }
    AgencyAdminDashboardComponent.prototype.ngOnInit = function () {
        this.searchByDate = new Date();
        this.searchByDateString = this.commonService.getStringLocalDateTimeFromUTC(this.searchByDate);
        this.isSubscritionActive = this.commonService.isSubscriptionActive;
        this.GetCountDetailsForAgencyAdmin();
        this.getAllPresentTeachersForAgency();
        this.getDuePaymentAccordingToAgency();
        this.getClassLog();
        this.createHealthForm();
        this.UpdateLastLogin();
    };
    AgencyAdminDashboardComponent.prototype.createHealthForm = function () {
        this.healthForm = this.fb.group({
            temperature: [''],
            tempcmnt: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_7__["Validators"].required],
            teacherack: [true]
        });
    };
    AgencyAdminDashboardComponent.prototype.getAllPresentTeachersForAgency = function () {
        var _this = this;
        this.teacherPresentList = [];
        var req = {
            'AgencyID': this.commonService.getAgencyId(),
            'askedDate': this.searchByDate,
            'askedDateString': this.searchByDateString
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_1__["AgencyAPIURLs"].GetAllPresentTeachersForAgency, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.teacherPresentList = res.body.data;
                console.log(_this.teacherPresentList, 'tttttttttttttttttttttttttt');
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminDashboardComponent.prototype.UpdateLastLogin = function () {
        var _this = this;
        this.loader = true;
        var req = {
            'AgencyID': this.commonService.getAgencyId(),
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_1__["AgencyAPIURLs"].UpdateLastLogin, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.loader = false;
            }
            else {
                _this.error.unknownError();
            }
        }, function (err) {
            _this.error.commonError(err);
        });
    };
    AgencyAdminDashboardComponent.prototype.GetCountDetailsForAgencyAdmin = function () {
        var _this = this;
        var req = {
            'AgencyID': this.commonService.getAgencyId(),
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_1__["AgencyAPIURLs"].GetCountDetailsForAgencyAdmin, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                if (res.body.data) {
                    _this.presentStudents = res.body.data.presentStudent;
                    _this.requestedStudent = res.body.data.requestedStudent;
                    _this.enrollStudents = res.body.data.enrolledStudent;
                }
            }
            else {
                _this.error.unknownError();
            }
        }, function (err) {
            _this.error.commonError(err);
        });
    };
    AgencyAdminDashboardComponent.prototype.getDuePaymentAccordingToAgency = function () {
        var _this = this;
        this.paymentDueList = [];
        this.spinner.show();
        var model = {
            'agencyID': this.commonService.getAgencyId(),
            'limit': this.limit,
            'page': this.pageNo,
            'studentName': ''
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_1__["AgencyAPIURLs"].GetDuePaymentAccordingToAgency, model, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.totalRecord = res.body.totalRows;
                if (res.body.data !== null && res.body.data !== [] && res.body.data !== []) {
                    res.body.data.forEach(function (x) {
                        x.invoiceFromDate = new Date(x.invoiceFromDate);
                        x.invoiceToDate = new Date(x.invoiceToDate);
                    });
                    _this.paymentDueList = res.body.data;
                }
                _this.spinner.hide();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminDashboardComponent.prototype.getClassLog = function () {
        var _this = this;
        this.classLogList = [];
        var data = {
            'agencyID': this.commonService.getAgencyId(),
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_1__["AgencyAPIURLs"].GetAllClasses, data, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                if (res.body.data !== null && res.body.data !== undefined && res.body.data.length !== 0) {
                    _this.classLogList = res.body.data;
                    _this.classLogList.forEach(function (x) {
                        x.endTime = _this.commonService.getLocalDateTimeFromUTC(x.endTime);
                        x.startTime = _this.commonService.getLocalDateTimeFromUTC(x.startTime);
                    });
                    _this.classDetails = _this.classLogList[0];
                    _this.classId = _this.classDetails.classesID;
                    _this.classNameForMedication = _this.classDetails.className;
                    _this.classNameForAllergy = _this.classDetails.className;
                    _this.getStudentMedication();
                    _this.getStudentAllergy();
                }
                _this.spinner.hide();
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminDashboardComponent.prototype.getStudentMedication = function () {
        var _this = this;
        this.loader = true;
        var reqData = {
            'agencyID': this.commonService.getAgencyId(),
            'askingDate': new Date(),
            'teacherID': 0,
            'classID': this.classId
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_10__["TeacherAPIURLs"].GetTeacherTodayMedicationTasks, reqData, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                if (res.body.data !== null && res.body.data !== undefined) {
                    _this.medicationList = res.body.data;
                    _this.loader = false;
                }
                _this.spinner.hide();
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminDashboardComponent.prototype.getPageDetailsForClass = function (event) {
        this.medicationList = [];
        this.allergyList = [];
        this.classDetails = [];
        this.classDetails = this.classLogList[event.page];
        if (this.classDetails) {
            this.classNameForMedication = this.classDetails.className;
            this.classNameForAllergy = this.classDetails.className;
        }
        if (this.classDetails !== undefined && this.classDetails !== null) {
            this.classId = this.classDetails.classesID;
            this.classNameForMedication = this.classDetails.className;
            this.classNameForAllergy = this.classDetails.className;
            this.getStudentMedication();
            this.getStudentAllergy();
        }
    };
    AgencyAdminDashboardComponent.prototype.medicationDone = function () {
        if (this.healthForm.valid) {
            var agencyID = this.commonService.getAgencyId();
            this.HealthVM.id = 0;
            this.HealthVM.studentActivitiesID = 0;
            this.HealthVM.agencyID = agencyID;
            this.HealthVM.recordedTemparture = this.healthForm.value.temperature;
            this.HealthVM.studentHealthDescription = this.healthForm.value.tempcmnt;
            this.HealthVM.howTaken = this.studentMedicationDetails.howTaken;
            this.HealthVM.studentMedicationID = this.studentMedicationDetails.studentMedicationID;
            this.HealthVM.doseRepeatID = this.studentMedicationDetails.doseRepeatID;
            this.HealthVM.isTeacherAcknowledge = this.healthForm.value.teacherack;
            this.HealthVM.AcknowledgeTeacherID = this.commonService.getLoggedInUserId();
            this.HealthVM.AcknowledgeParentID = 0;
            this.HealthVM.IsMedicationDoneToday = true;
            var req = {
                'studentActivityMedications': this.HealthVM,
                'activityTypeID': 1,
                'selectedStudents': this.studentListId,
                'agencyID': agencyID,
                'classesID': this.classId,
                'id': 0,
                'createdBy': this.commonService.getLoggedInUserId(),
                'activityRegisterDate': this.today.toDateString(),
            };
            this.saveMedication(req);
        }
        else {
            this.notification.warning({ message: 'Please add health note', title: '' });
        }
    };
    AgencyAdminDashboardComponent.prototype.saveMedication = function (req) {
        var _this = this;
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_10__["TeacherAPIURLs"].SaveStudentActivity, req, null).subscribe(function (res) {
            _this.spinner.hide();
            if (res.body.statusCode === 200) {
                $('#edithealth').modal('hide');
                _this.notification.success({ message: 'Activity added successfully', title: '' });
                _this.getStudentMedication();
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminDashboardComponent.prototype.getStudentDetailsOfMedication = function (value) {
        this.createHealthForm();
        this.studentListId = [];
        this.studentMedicationDetails = [];
        this.studentListId.push(value.studentID);
        this.studentMedicationDetails = value;
    };
    // Allergy.....................
    AgencyAdminDashboardComponent.prototype.getStudentAllergy = function () {
        var _this = this;
        this.loader = true;
        var reqData = {
            'agencyID': this.commonService.getAgencyId(),
            'askingDate': new Date(),
            'teacherID': 0,
            'classID': this.classId
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_10__["TeacherAPIURLs"].GetStudentAllergy, reqData, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                if (res.body.data !== null && res.body.data !== undefined) {
                    _this.allergyList = res.body.data;
                    _this.loader = false;
                }
                _this.spinner.hide();
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminDashboardComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-agency-admin-dashboard',
            template: __webpack_require__(/*! ./agency-admin-dashboard.component.html */ "./src/app/layout/agency-admin/components/agency-admin-dashboard/agency-admin-dashboard.component.html"),
            styles: [__webpack_require__(/*! ./agency-admin-dashboard.component.css */ "./src/app/layout/agency-admin/components/agency-admin-dashboard/agency-admin-dashboard.component.css")]
        }),
        __metadata("design:paramtypes", [_parent_shared_services_parent_api_service__WEBPACK_IMPORTED_MODULE_2__["ParentApiService"], _shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_3__["ErrorHandlerService"],
            ngx_spinner__WEBPACK_IMPORTED_MODULE_4__["NgxSpinnerService"], _shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_5__["NotificationService"],
            _shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_6__["CommonService"], _angular_forms__WEBPACK_IMPORTED_MODULE_7__["FormBuilder"], _angular_router__WEBPACK_IMPORTED_MODULE_8__["ActivatedRoute"],
            primeng_api__WEBPACK_IMPORTED_MODULE_9__["ConfirmationService"]])
    ], AgencyAdminDashboardComponent);
    return AgencyAdminDashboardComponent;
}());



/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-discount/agency-admin-discount.component.css":
/*!**********************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-discount/agency-admin-discount.component.css ***!
  \**********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9hZ2VuY3ktYWRtaW4vY29tcG9uZW50cy9hZ2VuY3ktYWRtaW4tZGlzY291bnQvYWdlbmN5LWFkbWluLWRpc2NvdW50LmNvbXBvbmVudC5jc3MifQ== */"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-discount/agency-admin-discount.component.html":
/*!***********************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-discount/agency-admin-discount.component.html ***!
  \***********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"wrapper\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"pagetitle\">\r\n      <div>\r\n        <h2>Payment\r\n          <span>/ Discount </span>\r\n        </h2>\r\n      </div>\r\n      <div>\r\n      </div>\r\n    </div>\r\n    <div class=\"subhead d-flex justify-content-between \">\r\n      <div>\r\n        <h3>Add Discount</h3>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"card cardfilter\">\r\n\r\n      <div class=\"leftfilter\">\r\n        <div class=\"row algcenter\">\r\n          <div class=\"search-date\">\r\n            <div class=\"pr15 label-text\">From Date : </div>\r\n            <input type=\"text\" (bsValueChange)=\"getFromDate($event)\" placeholder=\"From Date\" showWeekNumbers=\"false\"\r\n              class=\"form-control\" [bsConfig]=\"dpConfig\" [(ngModel)]=\"fromDate\" bsDatepicker>          \r\n          </div>\r\n          <div class=\"search-date\">\r\n            <div class=\"pr15 label-text\">To Date : </div>\r\n            <input type=\"text\" (bsValueChange)=\"getTODate($event)\" placeholder=\"To Date\" [(ngModel)]=\"toDate\"\r\n              class=\"form-control\" [bsConfig]=\"dpConfig\" bsDatepicker>            \r\n          </div>\r\n          <div class=\"search-date\">\r\n            <div class=\"pr15 label-text\">Amount </div>\r\n            <input type=\"text\" placeholder=\"Add Amount\" (keypress)=\"commonService.allowOnlyNumberWithDecimal($event)\" [(ngModel)]=\"DiscountAmount\" class=\"form-control\">\r\n          </div>\r\n          <div class=\"search-date\">\r\n            <div class=\"pr15 label-text\"> </div>\r\n              <button type=\"submit\" class=\"btn btn-red btn_current\" title=\"Add Discount\" (click)=\"checkIsStudentSelected()\"> \r\n                  <i class=\"fa fa-percent\" aria-hidden=\"true\"></i> \r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"tab-pane fade show active\" id=\"pills-appstudent\" role=\"tabpanel\" aria-labelledby=\"appStudent\">\r\n      <div class=\"innertable\">\r\n        <div class=\"table-responsive\">\r\n          <table class=\"table\">\r\n            <thead class=\"thead-light\">\r\n              <tr>\r\n                <th class=\"text-center\">\r\n                  <label class=\"checkboxcustom\" title=\"Mark/Unmark all \">\r\n                    <input type=\"checkbox\" [(ngModel)]=\"markAllStudents\"\r\n                      (click)=\"getAllMarkedStudents($event,studentList)\">\r\n                    <span class=\"checkmark\"></span>\r\n                  </label>\r\n                </th>\r\n                <th scope=\"col\">Student Name</th>\r\n                <th scope=\"col\">Class Name</th>\r\n                <th scope=\"col\">Parent Name</th>\r\n                <th scope=\"col\" class=\"text-center\">Discount Amount($)</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr *ngFor=\"let student of studentList\">\r\n                <td>\r\n                  <label class=\"checkboxcustom\">\r\n                    <input type=\"checkbox\" [checked]=\"student.isMarked == true\"\r\n                      (click)=\"getSingleMarkedStudent(student,$event)\">\r\n                    <span class=\"checkmark\"></span>\r\n                  </label>\r\n                </td>\r\n                <td>{{student.studentName}}</td>\r\n                <td>{{student.className}}</td>\r\n                <td>{{student.parentName}}</td>\r\n                <td class=\"text-center\">${{student.discountAmount}}</td>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <p-paginator [alwaysShow]=\"false\" [rows]=\"limit\" [totalRecords]=\"totalRecord\" (onPageChange)=\"paginate($event)\"></p-paginator>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- Modal for adding Discount Amount -->\r\n<div class=\"modal fade extracharge\" data-backdrop=\"static\" style=\"z-index: 1100;\" id=\"discount\" tabindex=\"-1\"\r\n  role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Add Discount</h5>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <div class=\"form-group\">\r\n          <label>Add Discount Amount</label>\r\n          <input type=\"text\" class=\"form-control\" [(ngModel)]=\"DiscountAmount\" placeholder=\"Discount Amount\">\r\n\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label>Add Description*</label>\r\n          <input type=\"text\" class=\"form-control\" [(ngModel)]=\" DiscountDescription\" placeholder=\"Discount Description\">\r\n\r\n        </div>\r\n\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"submit\" class=\"btn btn-primary\" (click)=\"SaveFeesDiscountAmount()\"\r\n          data-dismiss=\"modal\">Save</button>\r\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<ngx-spinner type=\"ball-atom\" size=\"medium\" color=\"#58A7FE\"></ngx-spinner>"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-discount/agency-admin-discount.component.ts":
/*!*********************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-discount/agency-admin-discount.component.ts ***!
  \*********************************************************************************************************/
/*! exports provided: AgencyAdminDiscountComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AgencyAdminDiscountComponent", function() { return AgencyAdminDiscountComponent; });
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var ngx_bootstrap__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ngx-bootstrap */ "./node_modules/ngx-bootstrap/esm5/ngx-bootstrap.js");
/* harmony import */ var src_app_layout_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/layout/teacher/shared/constant */ "./src/app/layout/teacher/shared/constant.ts");
/* harmony import */ var _shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../shared/services/agency-api-service/agency-api.service */ "./src/app/layout/agency-admin/components/shared/services/agency-api-service/agency-api.service.ts");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ngx-spinner */ "./node_modules/ngx-spinner/fesm5/ngx-spinner.js");
/* harmony import */ var src_app_shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/shared/services/error-handler/error-handler.service */ "./src/app/shared/services/error-handler/error-handler.service.ts");
/* harmony import */ var src_app_shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/app/shared/services/common/common.service */ "./src/app/shared/services/common/common.service.ts");
/* harmony import */ var _shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../shared/services/notification-service/notification.service */ "./src/app/shared/services/notification-service/notification.service.ts");
/* harmony import */ var _shared_constatant__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../shared/constatant */ "./src/app/layout/agency-admin/components/shared/constatant.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};










var AgencyAdminDiscountComponent = /** @class */ (function () {
    function AgencyAdminDiscountComponent(fb, apiService, spinner, error, commonService, notification) {
        this.fb = fb;
        this.apiService = apiService;
        this.spinner = spinner;
        this.error = error;
        this.commonService = commonService;
        this.notification = notification;
        this.today = new Date;
        this.serchByClass = '';
        this.dpConfig = new ngx_bootstrap__WEBPACK_IMPORTED_MODULE_2__["BsDatepickerConfig"]();
        this.studentList = [];
        this.agencyId = 0;
        this.pageNo = 0;
        this.limit = 10;
        this.totalRecord = 0;
        this.searchByStudentName = '';
        this.parentList = [];
        this.classList = [];
        this.studentListId = [];
        this.listOfStudents = [];
        this.markAllStudents = false;
        this.studentID = [];
    }
    AgencyAdminDiscountComponent.prototype.ngOnInit = function () {
        this.agencyId = this.commonService.getAgencyId();
        this.dpConfig = Object.assign({}, { containerClass: 'theme-dark-blue' }, { showWeekNumbers: false });
        this.GetStudentFeesDiscountAmount();
    };
    AgencyAdminDiscountComponent.prototype.getSingleMarkedStudent = function (id, event) {
        this.markAllStudents = false;
        if (event.target.checked === true) {
            if (this.studentListId.length === 0) {
                this.studentListId.push(id.studentId);
                var no = this.studentList.findIndex(function (r) { return r.studentId === id.studentId; });
                if (no !== -1) {
                    this.studentList[no].isMarked = true;
                }
            }
            else {
                var index = this.studentListId.findIndex(function (r) { return r === id.studentId; });
                if (index === -1) {
                    this.studentListId.push(id.studentId);
                    var no = this.studentList.findIndex(function (r) { return r.studentId === id.studentId; });
                    if (no !== -1) {
                        this.studentList[no].isMarked = true;
                    }
                }
            }
        }
        else if (event.target.checked === false) {
            if (this.studentListId.length > 0) {
                var index = this.studentListId.findIndex(function (r) { return r === id.studentId; });
                this.studentListId.splice(index, 1);
                var no = this.studentList.findIndex(function (r) { return r.studentId === id.studentId; });
                if (no !== -1) {
                    this.studentList[no].isMarked = false;
                }
            }
        }
        console.log('marksingle', this.studentListId);
    };
    /**Get student id using checkbox */
    AgencyAdminDiscountComponent.prototype.getAllMarkedStudents = function (event, students) {
        var _this = this;
        if (event.target.checked === true) {
            this.studentListId = [];
            students.forEach(function (data) {
                _this.studentListId.push(data.studentId);
                data.isMarked = true;
            });
        }
        else {
            this.studentListId = [];
            students.forEach(function (element) {
                element.isMarked = false;
            });
        }
        console.log('markAll', this.studentListId);
    };
    AgencyAdminDiscountComponent.prototype.checkIsStudentSelected = function () {
        var amount = +this.DiscountAmount;
        if (this.studentListId.length > 0 && this.DiscountAmount && this.fromDate && this.toDate) {
            if (this.fromDate.setHours(0, 0, 0) > this.toDate.setHours(0, 0, 0)) {
                this.spinner.hide();
                this.notification.warning({ message: 'From date shuld be less than To date', title: '' });
            }
            else if (!this.DiscountAmount || amount <= 0 || isNaN(amount)) {
                this.spinner.hide();
                this.notification.warning({ message: 'Amount should be greater than zero', title: '' });
            }
            else {
                this.SaveFeesDiscountAmount();
            }
        }
        else if (this.studentListId.length === 0) {
            this.spinner.hide();
            this.notification.warning({ message: 'Please select student', title: '' });
        }
        else if (!this.DiscountAmount || amount < 0 || isNaN(amount)) {
            this.spinner.hide();
            this.notification.warning({ message: 'Please enter valid amount', title: '' });
        }
        else if (!this.fromDate || !this.toDate) {
            this.spinner.hide();
            this.notification.warning({ message: 'Please select date', title: '' });
        }
    };
    AgencyAdminDiscountComponent.prototype.getStudentsList = function () {
        var _this = this;
        this.studentList = [];
        this.spinner.show();
        var data = {
            'agencyID': this.agencyId,
            'classID': '',
            'studentID': 0,
            'studentName': this.searchByStudentName,
            'page': this.pageNo,
            'limit': this.limit,
        };
        this.apiService.postData(src_app_layout_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_3__["TeacherAPIURLs"].GetAllStudents, data, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.totalRecord = res.body.totalRows;
                _this.spinner.hide();
                _this.studentList = res.body.data;
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminDiscountComponent.prototype.SaveFeesDiscountAmount = function () {
        var _this = this;
        this.spinner.show();
        var data = {
            agencyID: this.agencyId,
            classID: '',
            studentID: 0,
            studentName: this.searchByStudentName,
            FromDate: this.fromDate.toDateString(),
            ToDate: this.toDate.toDateString(),
            DiscountAmount: this.DiscountAmount,
            DiscountDescription: this.DiscountDescription,
            StudentIDs: this.studentListId
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_9__["AgencyAPIURLs"].SaveStudentFeesDiscountAmount, data, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.totalRecord = res.body.totalRows;
                _this.spinner.hide();
                _this.studentList = [];
                _this.studentListId = [];
                _this.studentList = res.body.data;
                _this.fromDate = _this.emptyDate;
                _this.toDate = _this.emptyDate;
                _this.DiscountAmount = null;
                _this.DiscountDescription = '';
                _this.GetStudentFeesDiscountAmount();
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
                _this.studentListId = [];
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
            _this.studentListId = [];
        });
    };
    AgencyAdminDiscountComponent.prototype.getFromDate = function (value) {
        this.fromDateTemp = value;
        if (this.fromDateTemp && this.todateTemp) {
            this.GetStudentFeesDiscountAmount();
        }
    };
    AgencyAdminDiscountComponent.prototype.getTODate = function (value) {
        this.todateTemp = value;
        if (this.fromDateTemp && this.todateTemp) {
            this.GetStudentFeesDiscountAmount();
        }
    };
    AgencyAdminDiscountComponent.prototype.GetStudentFeesDiscountAmount = function () {
        var _this = this;
        this.spinner.show();
        var modal = {
            'agencyId': this.agencyId,
            'fromDate': this.fromDate ? this.fromDateTemp.toDateString() : this.emptyDate,
            'toDate': this.todateTemp ? this.todateTemp.toDateString() : this.emptyDate,
            'page': this.pageNo,
            'limit': this.limit,
        };
        console.log('perday', modal);
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_9__["AgencyAPIURLs"].GetStudentFeesDiscountAmount, modal, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.totalRecord = res.body.totalRows;
                _this.spinner.hide();
                _this.studentList = [];
                _this.studentListId = [];
                _this.studentList = res.body.data;
                if (_this.studentList.length > 0) {
                    _this.studentList.forEach(function (element) {
                        if (element.isMarked === true) {
                            _this.studentListId.push(element.studentId);
                        }
                    });
                }
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
                _this.studentListId = [];
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminDiscountComponent.prototype.paginate = function (event) {
        this.markAllStudents = false;
        this.studentListId = [];
        this.pageNo = event.page;
        this.GetStudentFeesDiscountAmount();
    };
    AgencyAdminDiscountComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-agency-admin-discount',
            template: __webpack_require__(/*! ./agency-admin-discount.component.html */ "./src/app/layout/agency-admin/components/agency-admin-discount/agency-admin-discount.component.html"),
            styles: [__webpack_require__(/*! ./agency-admin-discount.component.css */ "./src/app/layout/agency-admin/components/agency-admin-discount/agency-admin-discount.component.css")]
        }),
        __metadata("design:paramtypes", [_angular_forms__WEBPACK_IMPORTED_MODULE_0__["FormBuilder"], _shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_4__["AgencyApiService"], ngx_spinner__WEBPACK_IMPORTED_MODULE_5__["NgxSpinnerService"],
            src_app_shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_6__["ErrorHandlerService"], src_app_shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_7__["CommonService"], _shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_8__["NotificationService"]])
    ], AgencyAdminDiscountComponent);
    return AgencyAdminDiscountComponent;
}());



/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-duepayment-report/agency-admin-duepayment-report.component.css":
/*!****************************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-duepayment-report/agency-admin-duepayment-report.component.css ***!
  \****************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9hZ2VuY3ktYWRtaW4vY29tcG9uZW50cy9hZ2VuY3ktYWRtaW4tZHVlcGF5bWVudC1yZXBvcnQvYWdlbmN5LWFkbWluLWR1ZXBheW1lbnQtcmVwb3J0LmNvbXBvbmVudC5jc3MifQ== */"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-duepayment-report/agency-admin-duepayment-report.component.html":
/*!*****************************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-duepayment-report/agency-admin-duepayment-report.component.html ***!
  \*****************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"wrapper\">\r\n  <div class=\"container-fluid\">\r\n\r\n    <div class=\"pagetitle\">\r\n      <div>\r\n        <h2>Report\r\n          <span>/ Due Payment Report </span>\r\n        </h2>\r\n      </div>\r\n    </div>\r\n    <div class=\"subhead d-flex justify-content-between mt-20\">\r\n      <div>\r\n        <h3>Due Payment List</h3>\r\n      </div>\r\n      <div style=\"cursor:pointer\" title=\"Download report\" (click)=\"pdfReportForDuePayment()\"><i class=\"fa fa-download\"\r\n          aria-hidden=\"true\"></i>\r\n      </div>\r\n    </div>\r\n    <div class=\"card cardfilter\">\r\n      <!-- <div class=\"col-lg-10\"> -->\r\n      <!-- <div class=\"leftfilter\">\r\n        <div class=\"row algcenter\">\r\n          <div class=\"search-date\">\r\n            <div class=\"pr15 label-text\">Search Name : </div>\r\n            <input type=\"text\" placeholder=\"Search student name\" [(ngModel)]=\"searchByStudentName\"\r\n              class=\"form-control mr15\" id=\"\">\r\n          </div>\r\n          <div class=\"search-date\">\r\n            <div class=\"pr15 label-text\">From Date : </div>\r\n            <input type=\"text\" placeholder=\"Search by date\" [(ngModel)]=\"fromDate\" showWeekNumbers=\"false\"\r\n              class=\"form-control mr15\" [bsConfig]=\"dpConfig\" bsDatepicker>\r\n          </div>\r\n          <div class=\"search-date\">\r\n            <div class=\"pr15 label-text\">To Date : </div>\r\n            <input type=\"text\" placeholder=\"Search by date\" [(ngModel)]=\"toDate\" showWeekNumbers=\"false\"\r\n              class=\"form-control mr15\" [bsConfig]=\"dpConfig\" bsDatepicker>\r\n          </div>\r\n          <div class=\"filter-buttons\">\r\n            <button type=\"submit\" class=\"btn btn-send\" *ngIf=\"!showClearBtn\" (click)=\"search()\">Search</button>\r\n            <button type=\"submit\" class=\"btn btn-secondary\" *ngIf=\"showClearBtn\" (click)=\"clearSearch()\">Clear</button>\r\n          </div>\r\n        </div>\r\n      </div> -->\r\n\r\n      <div class=\"studentlist\">\r\n        <div class=\"tab-content\" id=\"pills-tabContent\">\r\n          <div class=\"tab-pane fade show active\" id=\"pills-appstudent\" role=\"tabpanel\" aria-labelledby=\"appStudent\">\r\n\r\n            <div class=\"innertable studentListSearch\">\r\n              <div class=\"table-responsive\">\r\n                <table class=\"table \">\r\n                  <thead class=\"thead-light\">\r\n                    <tr>\r\n                      <th scope=\"col\">Family Name</th>\r\n                      <th scope=\"col\">Parent Name</th>\r\n                      <th scope=\"col\">($)Amount</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr *ngFor=\"let report of reportList\">\r\n                      <td>{{report.parentLastName}}</td>\r\n                      <td>{{report.parentName}}</td>\r\n                      <td>${{report.balanceAmount}}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                  <!-- </tbody> -->\r\n                </table>\r\n                <div class=\"text-center\">\r\n                  <span *ngIf=\"reportList.length == 0 && !loader\" class=\"text-center\">No result found</span>\r\n                </div>\r\n              </div>\r\n              <p-paginator [alwaysShow]=\"false\" [rows]=\"limit\" [totalRecords]=\"totalRecord\"\r\n                (onPageChange)=\"paginate($event)\"></p-paginator>\r\n\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <ngx-spinner type=\"ball-atom\" size=\"medium\" color=\"#58A7FE\"></ngx-spinner>"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-duepayment-report/agency-admin-duepayment-report.component.ts":
/*!***************************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-duepayment-report/agency-admin-duepayment-report.component.ts ***!
  \***************************************************************************************************************************/
/*! exports provided: AgencyAdminDuepaymentReportComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AgencyAdminDuepaymentReportComponent", function() { return AgencyAdminDuepaymentReportComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../shared/services/agency-api-service/agency-api.service */ "./src/app/layout/agency-admin/components/shared/services/agency-api-service/agency-api.service.ts");
/* harmony import */ var _shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../shared/services/error-handler/error-handler.service */ "./src/app/shared/services/error-handler/error-handler.service.ts");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ngx-spinner */ "./node_modules/ngx-spinner/fesm5/ngx-spinner.js");
/* harmony import */ var _shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../shared/services/notification-service/notification.service */ "./src/app/shared/services/notification-service/notification.service.ts");
/* harmony import */ var _shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../shared/services/common/common.service */ "./src/app/shared/services/common/common.service.ts");
/* harmony import */ var _shared_constatant__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../shared/constatant */ "./src/app/layout/agency-admin/components/shared/constatant.ts");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../../environments/environment */ "./src/environments/environment.ts");
/* harmony import */ var ngx_bootstrap__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ngx-bootstrap */ "./node_modules/ngx-bootstrap/esm5/ngx-bootstrap.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









var AgencyAdminDuepaymentReportComponent = /** @class */ (function () {
    function AgencyAdminDuepaymentReportComponent(apiService, error, spinner, notification, commonService) {
        this.apiService = apiService;
        this.error = error;
        this.spinner = spinner;
        this.notification = notification;
        this.commonService = commonService;
        this.reportList = [];
        this.pageNo = 0;
        this.limit = 10;
        this.totalRecord = 0;
        this.searchByStudentName = '';
        this.loader = true;
        this.dpConfig = new ngx_bootstrap__WEBPACK_IMPORTED_MODULE_8__["BsDatepickerConfig"]();
    }
    AgencyAdminDuepaymentReportComponent.prototype.ngOnInit = function () {
        this.dpConfig = Object.assign({}, { containerClass: 'theme-dark-blue' }, { showWeekNumbers: false });
        this.getDuePaymentReport();
    };
    AgencyAdminDuepaymentReportComponent.prototype.getDuePaymentReport = function () {
        var _this = this;
        this.loader = true;
        this.reportList = [];
        this.spinner.show();
        var data = {
            'agencyID': this.commonService.getAgencyId(),
            // 'studentName': this.searchByStudentName,
            'page': this.pageNo,
            'limit': this.limit,
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_6__["AgencyAPIURLs"].GetDuePaymentReport, data, null).subscribe(function (res) {
            _this.totalRecord = res.body.totalRows;
            if (res.body.statusCode === 200) {
                _this.spinner.hide();
                _this.reportList = res.body.data;
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
            _this.loader = false;
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminDuepaymentReportComponent.prototype.paginate = function (event) {
        this.pageNo = event.page;
        this.getDuePaymentReport();
    };
    AgencyAdminDuepaymentReportComponent.prototype.pdfReportForDuePayment = function () {
        var _this = this;
        this.loader = true;
        this.spinner.show();
        var req = {
            'StudentName': this.searchByStudentName,
            'agencyID': this.commonService.getAgencyId()
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_6__["AgencyAPIURLs"].PdfReportForDuePayment, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                var filename = _environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].baseUrl + res.body.fileName;
                var name_1 = res.body.fileName;
                window.open(filename);
                setTimeout(function () {
                    _this.deletePdFFromServer(name_1);
                }, 5000);
            }
            else {
                _this.error.unknownError();
            }
            _this.loader = false;
            _this.spinner.hide();
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    // Delete pdf after use from server
    AgencyAdminDuepaymentReportComponent.prototype.deletePdFFromServer = function (filename) {
        var req = {
            'fileName': filename,
            'agencyID': this.commonService.getAgencyId()
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_6__["AgencyAPIURLs"].DeleteExistingFile, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
            }
            else {
            }
        }, function (err) {
            console.log(err);
        });
    };
    AgencyAdminDuepaymentReportComponent.prototype.search = function () {
        this.showClearBtn = true;
        this.getDuePaymentReport();
    };
    AgencyAdminDuepaymentReportComponent.prototype.clearSearch = function () {
        this.searchByStudentName = '';
        this.fromDate = null;
        this.toDate = null;
        this.showClearBtn = false;
        this.getDuePaymentReport();
    };
    AgencyAdminDuepaymentReportComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-agency-admin-duepayment-report',
            template: __webpack_require__(/*! ./agency-admin-duepayment-report.component.html */ "./src/app/layout/agency-admin/components/agency-admin-duepayment-report/agency-admin-duepayment-report.component.html"),
            styles: [__webpack_require__(/*! ./agency-admin-duepayment-report.component.css */ "./src/app/layout/agency-admin/components/agency-admin-duepayment-report/agency-admin-duepayment-report.component.css")]
        }),
        __metadata("design:paramtypes", [_shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_1__["AgencyApiService"], _shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_2__["ErrorHandlerService"],
            ngx_spinner__WEBPACK_IMPORTED_MODULE_3__["NgxSpinnerService"], _shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_4__["NotificationService"],
            _shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_5__["CommonService"]])
    ], AgencyAdminDuepaymentReportComponent);
    return AgencyAdminDuepaymentReportComponent;
}());



/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-enrollment-report/agency-admin-enrollment-report.component.css":
/*!****************************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-enrollment-report/agency-admin-enrollment-report.component.css ***!
  \****************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9hZ2VuY3ktYWRtaW4vY29tcG9uZW50cy9hZ2VuY3ktYWRtaW4tZW5yb2xsbWVudC1yZXBvcnQvYWdlbmN5LWFkbWluLWVucm9sbG1lbnQtcmVwb3J0LmNvbXBvbmVudC5jc3MifQ== */"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-enrollment-report/agency-admin-enrollment-report.component.html":
/*!*****************************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-enrollment-report/agency-admin-enrollment-report.component.html ***!
  \*****************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"wrapper\">\r\n  <div class=\"container-fluid\">\r\n\r\n    <div class=\"pagetitle\">\r\n      <div>\r\n        <h2>Report\r\n          <span>/ Student Enrollment Report </span>\r\n        </h2>\r\n      </div>\r\n    </div>\r\n    <div class=\"subhead d-flex justify-content-between mt-20\">\r\n      <div>\r\n        <h3>Student Enrollment List</h3>\r\n      </div>\r\n      <div style=\"cursor:pointer\" title=\"Download report\" (click)=\"pdfReportForChildEnrollment()\"><i class=\"fa fa-download\" aria-hidden=\"true\"></i>\r\n      </div>\r\n    </div>\r\n    <div class=\"card cardfilter\">\r\n      <!-- <div class=\"col-lg-10\"> -->\r\n         <div class=\"leftfilter\">\r\n        <div class=\"row algcenter\">\r\n          <div class=\"search-date\">\r\n            <div class=\"pr15 label-text\">Search By Name : </div>\r\n            <input type=\"text\" placeholder=\"Search student name\" [(ngModel)]=\"searchByStudentName\" class=\"form-control mr15\" id=\"\">\r\n          </div>\r\n          <div class=\"search-date\">\r\n              <div class=\"pr15 label-text\">Search By Class : </div>\r\n              <!-- <input type=\"text\" placeholder=\"Search Class\" [(ngModel)]=\"searchByClass\" class=\"form-control mr15\" id=\"\"> -->\r\n              <select  placeholder=\"Serch\" [(ngModel)]=\"searchByClass\"  id=\"exampleFormControlSelect1\" class=\"form-control mr15\">\r\n                  <option value=\"\">Select class</option>\r\n                  <option value=\"\">All</option>\r\n                  <option *ngFor=\"let classes of classList\" [value]=\"classes.className\">{{classes.className}}</option>\r\n                </select>\r\n            </div>\r\n           <div class=\"search-date\">\r\n            <div class=\"pr15 label-text\">Search By Status : </div>\r\n         <select [(ngModel)]=\"serchStatus\" (change)=\"search()\">\r\n           <option value=\"10\">All</option>\r\n           <option value=\"1\">Requested</option>\r\n           <option value=\"2\">Enrolled</option>\r\n           <option value=\"3\">Request Cancelled</option>\r\n           <option value=\"4\">Denied by Agency</option>\r\n           <option value=\"5\">Completed</option>\r\n         </select>\r\n              </div>\r\n              <div class=\"search-date\">\r\n                <div class=\"pr15 label-text\"> </div>\r\n                  </div>\r\n          <div class=\"filter-buttons\">\r\n            <button type=\"submit\" class=\"btn btn-send\" *ngIf=\"!showClearBtn\" (click)=\"search()\">Search</button>\r\n              <button type=\"submit\" class=\"btn btn-secondary\" *ngIf=\"showClearBtn\" (click)=\"clearSearch()\">Clear</button>\r\n          </div>\r\n      </div> \r\n    </div>\r\n\r\n    <div class=\"studentlist\">\r\n      <div class=\"tab-content\" id=\"pills-tabContent\">\r\n        <div class=\"tab-pane fade show active\" id=\"pills-appstudent\" role=\"tabpanel\" aria-labelledby=\"appStudent\">\r\n\r\n          <div class=\"innertable studentListSearch\">\r\n            <div class=\"table-responsive\">\r\n              <table class=\"table \">\r\n                <thead class=\"thead-light\">\r\n                  <tr>\r\n                    <th scope=\"col\">Student Name</th>\r\n                    <th scope=\"col\">Class</th>\r\n                    <th scope=\"col\">Parent Name</th>\r\n                    <th scope=\"col\">Status</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody >\r\n               <tr *ngFor=\"let report of reportList\">\r\n                <td>{{report.studentName}}</td>\r\n                <td>{{report.classesName}}</td>\r\n                <td>{{report.parentName}}</td>\r\n                <td *ngIf=\"report.enrollmentStatus == 0\">Not Enrolled</td>\r\n                <td *ngIf=\"report.enrollmentStatus == 1\">Requested</td>\r\n                <td *ngIf=\"report.enrollmentStatus == 2\">Enrolled</td>\r\n                <td *ngIf=\"report.enrollmentStatus == 3\">Request Cancelled</td>\r\n                <td *ngIf=\"report.enrollmentStatus == 4\">Denied by Agency</td>\r\n                <td *ngIf=\"report.enrollmentStatus == 5\">Completed</td>\r\n               \r\n\r\n               </tr>\r\n                </tbody>\r\n                <!-- </tbody> -->\r\n              </table>\r\n              <div class=\"text-center\">\r\n                <span  *ngIf=\"reportList.length == 0 && !loader\" class=\"text-center\">No result found</span>\r\n              </div> \r\n            </div>\r\n            <p-paginator [alwaysShow]=\"false\" [rows]=\"limit\" [totalRecords]=\"totalRecord\" (onPageChange)=\"paginate($event)\"></p-paginator>\r\n\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<ngx-spinner type=\"ball-atom\" size=\"medium\" color=\"#58A7FE\"></ngx-spinner>\r\n"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-enrollment-report/agency-admin-enrollment-report.component.ts":
/*!***************************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-enrollment-report/agency-admin-enrollment-report.component.ts ***!
  \***************************************************************************************************************************/
/*! exports provided: AgencyAdminEnrollmentReportComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AgencyAdminEnrollmentReportComponent", function() { return AgencyAdminEnrollmentReportComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../shared/services/agency-api-service/agency-api.service */ "./src/app/layout/agency-admin/components/shared/services/agency-api-service/agency-api.service.ts");
/* harmony import */ var _shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../shared/services/error-handler/error-handler.service */ "./src/app/shared/services/error-handler/error-handler.service.ts");
/* harmony import */ var _shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../shared/services/notification-service/notification.service */ "./src/app/shared/services/notification-service/notification.service.ts");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ngx-spinner */ "./node_modules/ngx-spinner/fesm5/ngx-spinner.js");
/* harmony import */ var _shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../shared/services/common/common.service */ "./src/app/shared/services/common/common.service.ts");
/* harmony import */ var _shared_constatant__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../shared/constatant */ "./src/app/layout/agency-admin/components/shared/constatant.ts");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../../environments/environment */ "./src/environments/environment.ts");
/* harmony import */ var src_app_layout_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/app/layout/teacher/shared/constant */ "./src/app/layout/teacher/shared/constant.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









var AgencyAdminEnrollmentReportComponent = /** @class */ (function () {
    function AgencyAdminEnrollmentReportComponent(apiService, error, spinner, notification, commonService) {
        this.apiService = apiService;
        this.error = error;
        this.spinner = spinner;
        this.notification = notification;
        this.commonService = commonService;
        this.reportList = [];
        this.pageNo = 0;
        this.limit = 10;
        this.totalRecord = 0;
        this.searchByStudentName = '';
        this.loader = true;
        this.showClearBtn = false;
        this.serchStatus = '10';
        this.searchByClass = '';
        this.classList = [];
    }
    AgencyAdminEnrollmentReportComponent.prototype.ngOnInit = function () {
        this.getAllClassess();
        this.getEnrollmentReport();
    };
    AgencyAdminEnrollmentReportComponent.prototype.getEnrollmentReport = function () {
        var _this = this;
        this.loader = true;
        this.reportList = [];
        this.spinner.show();
        var data = {
            'agencyID': this.commonService.getAgencyId(),
            'studentName': this.searchByStudentName,
            'page': this.pageNo,
            'limit': this.limit,
            'fromDate': this.fromDate ? this.fromDate : this.blankDate,
            'toDate': this.toDate ? this.toDate : this.blankDate,
            'EnrollmentStatus': this.serchStatus,
            'ClassesName': this.searchByClass
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_6__["AgencyAPIURLs"].GetChildEnrollmentReport, data, null).subscribe(function (res) {
            _this.totalRecord = res.body.totalRows;
            if (res.body.statusCode === 200) {
                _this.spinner.hide();
                _this.reportList = res.body.data;
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
            _this.loader = false;
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminEnrollmentReportComponent.prototype.paginate = function (event) {
        this.pageNo = event.page;
        this.getEnrollmentReport();
    };
    AgencyAdminEnrollmentReportComponent.prototype.pdfReportForChildEnrollment = function () {
        var _this = this;
        this.loader = true;
        this.spinner.show();
        var req = {
            'StudentName': this.searchByStudentName,
            'agencyID': this.commonService.getAgencyId(),
            'EnrollmentStatus': this.serchStatus,
            'fromDate': this.fromDate ? this.fromDate : this.blankDate,
            'toDate': this.toDate ? this.toDate : this.blankDate,
            'ClassesName': this.searchByClass
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_6__["AgencyAPIURLs"].PdfReportForChildEnrollment, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                var filename = _environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].baseUrl + res.body.fileName;
                var name_1 = res.body.fileName;
                window.open(filename);
                setTimeout(function () {
                    _this.deletePdFFromServer(name_1);
                }, 5000);
            }
            else {
                _this.error.unknownError();
            }
            _this.loader = false;
            _this.spinner.hide();
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    // Delete pdf after use from server
    AgencyAdminEnrollmentReportComponent.prototype.deletePdFFromServer = function (filename) {
        var req = {
            'fileName': filename,
            'agencyID': this.commonService.getAgencyId()
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_6__["AgencyAPIURLs"].DeleteExistingFile, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
            }
            else {
            }
        }, function (err) {
            console.log(err);
        });
    };
    AgencyAdminEnrollmentReportComponent.prototype.search = function () {
        this.showClearBtn = true;
        this.getEnrollmentReport();
    };
    AgencyAdminEnrollmentReportComponent.prototype.clearSearch = function () {
        this.searchByClass = '';
        this.serchStatus = '10';
        this.searchByStudentName = '';
        this.fromDate = null;
        this.toDate = null;
        this.showClearBtn = false;
        this.getEnrollmentReport();
    };
    AgencyAdminEnrollmentReportComponent.prototype.getAllClassess = function () {
        var _this = this;
        this.spinner.show();
        var data = {
            'agencyID': this.commonService.getAgencyId()
        };
        this.apiService.postData(src_app_layout_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_8__["TeacherAPIURLs"].GetAllClasses, data, null).subscribe(function (res) {
            _this.spinner.hide();
            if (res.body.statusCode === 200) {
                _this.classList = res.body.data;
            }
        }, function (err) {
            _this.spinner.hide();
        });
    };
    AgencyAdminEnrollmentReportComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-agency-admin-enrollment-report',
            template: __webpack_require__(/*! ./agency-admin-enrollment-report.component.html */ "./src/app/layout/agency-admin/components/agency-admin-enrollment-report/agency-admin-enrollment-report.component.html"),
            styles: [__webpack_require__(/*! ./agency-admin-enrollment-report.component.css */ "./src/app/layout/agency-admin/components/agency-admin-enrollment-report/agency-admin-enrollment-report.component.css")]
        }),
        __metadata("design:paramtypes", [_shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_1__["AgencyApiService"], _shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_2__["ErrorHandlerService"],
            ngx_spinner__WEBPACK_IMPORTED_MODULE_4__["NgxSpinnerService"], _shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_3__["NotificationService"],
            _shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_5__["CommonService"]])
    ], AgencyAdminEnrollmentReportComponent);
    return AgencyAdminEnrollmentReportComponent;
}());



/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-event-planner/agency-admin-event-planner.component.css":
/*!********************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-event-planner/agency-admin-event-planner.component.css ***!
  \********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".info-icon{\r\n    margin-left: -645px;\r\n    font-size: 20px; \r\n    color: #383333;\r\n}\r\n\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L2FnZW5jeS1hZG1pbi9jb21wb25lbnRzL2FnZW5jeS1hZG1pbi1ldmVudC1wbGFubmVyL2FnZW5jeS1hZG1pbi1ldmVudC1wbGFubmVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxtQkFBbUI7SUFDbkIsZUFBZTtJQUNmLGNBQWM7QUFDbEIiLCJmaWxlIjoic3JjL2FwcC9sYXlvdXQvYWdlbmN5LWFkbWluL2NvbXBvbmVudHMvYWdlbmN5LWFkbWluLWV2ZW50LXBsYW5uZXIvYWdlbmN5LWFkbWluLWV2ZW50LXBsYW5uZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5pbmZvLWljb257XHJcbiAgICBtYXJnaW4tbGVmdDogLTY0NXB4O1xyXG4gICAgZm9udC1zaXplOiAyMHB4OyBcclxuICAgIGNvbG9yOiAjMzgzMzMzO1xyXG59XHJcbiJdfQ== */"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-event-planner/agency-admin-event-planner.component.html":
/*!*********************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-event-planner/agency-admin-event-planner.component.html ***!
  \*********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"wrapper\">\r\n  <div class=\"container-fluid\">\r\n\r\n    <div class=\"pagetitle\">\r\n      <div>\r\n        <h2>Calendar\r\n          <span>/ Event Planner </span>\r\n        </h2>\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\" *ngIf=\"isSubscriptionActive\" class=\"btn btn-red\" data-toggle=\"modal\" data-target=\".addevent\" (click)=\"clearForm();cleareRepeateIDStatus()\">Add\r\n          Event</button>\r\n          \r\n      </div>\r\n      <div class=\"info-icon\">\r\n        <i class=\"fa fa-info-circle\" (click)=\"OpenInfoVideo()\" data-toggle=\"modal\"\r\n           aria-hidden=\"true\" title=\"Information Video\"></i>\r\n      </div>\r\n    </div>\r\n    <div *ngIf=\"calendarOptions\">\r\n      <ng-fullcalendar #ucCalendar [options]=\"calendarOptions\" (eventClick)=\"gotoDate($event.detail)\" (eventDrop)=\"updateEvent($event.detail)\"\r\n        (eventResize)=\"updateEvent($event.detail)\" (clickButton)=\"clickButton($event.detail)\" (eventRender)=\"eventRenderMethod($event.detail)\"\r\n        (click)=\"click($event)\"></ng-fullcalendar>\r\n    </div>\r\n\r\n\r\n    <div class=\"modal fade addevent\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myLargeModalLabel\" aria-hidden=\"true\">\r\n      <div class=\"modal-dialog modal-lg\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Add Events</h5>\r\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <form [formGroup]=\"calenderForm\">\r\n\r\n              <div class=\"row mb-20\">\r\n                <div class=\"col-lg-3\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Begins*</label>\r\n                    <!-- <input type=\"date\" class=\"form-control\" id=\"\" aria-describedby=\"\" placeholder=\"Select Start Date and Time\"> -->\r\n                    <input type=\"text\" placeholder=\"Begin\" formControlName=\"startdate\" showWeekNumbers=\"false\"\r\n                      [minDate]=\"today\" class=\"form-control\" [minDate]=\"today\" [bsConfig]=\"dpConfig\" bsDatepicker>\r\n                    <div *ngIf=\"f.startdate.invalid && (f.startdate.dirty || f.startdate.touched)\" class=\"text-left errormsg\">\r\n                      <span *ngIf=\"f.startdate.errors.required\">\r\n                        <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select date</span>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n\r\n                </div>\r\n                <div class=\"col-lg-3\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">End*</label>\r\n                    <!-- <input type=\"date\" class=\"form-control\" id=\"\" aria-describedby=\"\" placeholder=\"Select Start Date and Time\"> -->\r\n                    <input type=\"text\" placeholder=\"End\" formControlName=\"enddate\" showWeekNumbers=\"false\" [minDate]=\"today\"\r\n                      [minDate]=\"today\" class=\"form-control\" [bsConfig]=\"dpConfig\" bsDatepicker [readOnly]=\"disableEndDate\">\r\n                    <div *ngIf=\"f.enddate.invalid && (f.enddate.dirty || f.enddate.touched)\" class=\"text-left errormsg\">\r\n                      <span *ngIf=\"f.enddate.errors.required\">\r\n                        <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select date</span>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-3\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Start time</label>\r\n                    <!-- <input type=\"date\" class=\"form-control\" id=\"\" aria-describedby=\"\" placeholder=\"Select Start Date and Time\"> -->\r\n                    <p-calendar class=\"custom-textbox-addevent\" styleClass=\"form-control\" formControlName=\"starttime\" hourFormat=\"12\" [timeOnly]=\"true\" icon=\"pi pi-clock\"\r\n                      [showIcon]=\"true\"></p-calendar>\r\n                    <div *ngIf=\"f.starttime.invalid && (f.starttime.dirty || f.starttime.touched)\" class=\"text-left errormsg\">\r\n                      <span *ngIf=\"f.starttime.errors.required\">\r\n                        <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select time</span>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n\r\n                </div>\r\n                <div class=\"col-lg-3\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">End time</label>\r\n                    <!-- <input type=\"date\" class=\"form-control\" id=\"\" aria-describedby=\"\" placeholder=\"Select Start Date and Time\"> -->\r\n                    <p-calendar styleClass=\"form-control\" class=\"custom-textbox-addevent\" formControlName=\"endtime\" hourFormat=\"12\" [timeOnly]=\"true\" icon=\"pi pi-clock\"\r\n                      [showIcon]=\"true\"></p-calendar>\r\n                    <div *ngIf=\"f.endtime.invalid && (f.endtime.dirty || f.endtime.touched)\" class=\"text-left errormsg\">\r\n                      <span *ngIf=\"f.endtime.errors.required\">\r\n                        <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select time</span>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <!-- <input type=\"date\" class=\"form-control\" id=\"\" aria-describedby=\"\" placeholder=\"Select Start Date and Time\"> -->\r\n              <!-- <input type=\"date\" class=\"form-control\" id=\"\" aria-describedby=\"\" placeholder=\"Select Start Date and Time\"> -->\r\n              <!-- <div class=\"row mb-20\">\r\n                    <div class=\"col-lg-6\">\r\n                        <div class=\"form-group\">\r\n                          <label for=\"\">Start time</label>\r\n                          \r\n                          <p-calendar  styleClass=\"form-control\" [timeOnly]=\"true\" [showIcon]=\"true\"></p-calendar>\r\n                        </div>\r\n                       \r\n                      </div>\r\n                    <div class=\"col-lg-6\">\r\n                      <div class=\"form-group\">\r\n                        <label for=\"\">End Time</label>\r\n                        \r\n                        <p-calendar [timeOnly]=\"true\"></p-calendar>\r\n                      </div>\r\n                    </div>                     \r\n              </div> -->\r\n              <div class=\"row mb-20\">\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"exampleFormControlSelect1\">Class*</label>\r\n                    <p-multiSelect [options]=\"classList\" [panelStyle]=\"{minWidth:'200px'}\" formControlName=\"class\"\r\n                      [maxSelectedLabels]=\"5\"></p-multiSelect>\r\n                    <div *ngIf=\"f.class.invalid && (f.class.dirty || f.class.touched)\" class=\"text-left errormsg\">\r\n                      <span *ngIf=\"f.class.errors.required\">\r\n                        <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select class</span>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"exampleFormControlSelect1\">Title*</label>\r\n                    <!-- <select class=\"form-control\" id=\"exampleFormControlSelect1\">\r\n                                <option>Lunch</option>\r\n                                <option>Snacks</option>\r\n                                <option>Dinner</option>\r\n                              </select> -->\r\n                    <input type=\"text\" class=\"form-control\" formControlName=\"title\" id=\"\" aria-describedby=\"\"\r\n                      placeholder=\"Enter Event Title\">\r\n                    <div *ngIf=\"f.title.invalid && (f.title.dirty || f.title.touched)\" class=\"text-left errormsg\">\r\n                      <span *ngIf=\"f.title.errors.required\">\r\n                        <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please enter title</span>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"row mb-20\">\r\n                <div class=\"col-lg-12\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"exampleFormControlSelect1\">Description* (Max limit 500 characters)</label>\r\n                    <textarea name=\"\" id=\"\" cols=\"3\" rows=\"3\" class=\"form-control\" formControlName=\"description\"></textarea>\r\n                    <div *ngIf=\"f.description.invalid && (f.description.dirty || f.description.touched)\" class=\"text-left errormsg\">\r\n                      <span *ngIf=\"f.description.errors.required\">\r\n                        <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please enter description</span>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n\r\n              <div class=\"row mb-20\">\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"exampleFormControlSelect1\">Repeat*</label>\r\n                    <select class=\"form-control\" placeholder=\"First Aid Administered by\" formControlName=\"repeat\" id=\"exampleFormControlSelect1\"\r\n                      (change)=\"getRepeatOptions()\">\r\n                      <option *ngFor=\"let obj of repeatList\" [value]=\"obj.value\">{{obj.label}}</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"col-lg-6\" *ngIf=\"showEndsOn\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Ends on*</label>\r\n                    <!-- <input type=\"date\" class=\"form-control\" id=\"\" aria-describedby=\"\" placeholder=\"\"> -->\r\n                    <input type=\"text\" container=\"\" placeholder=\"Ends on\" formControlName=\"endson\" showWeekNumbers=\"false\" [minDate]=\"today\"\r\n                      class=\"form-control\" [bsConfig]=\"dpConfig\" [minDate]=\"bsDatepicker\" bsDatepicker>\r\n                    <div *ngIf=\"f.endson.invalid && (f.endson.dirty || f.endson.touched)\" class=\"text-left errormsg\">\r\n                      <span *ngIf=\"f.endson.errors.required\">\r\n                        <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select date</span>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <!-- <div class=\"row mb-20\" *ngIf=\"showDays\">\r\n                    <div class=\"col-lg-6\">\r\n                      <div class=\"form-group\"><label>Select days to show event</label> </div>  \r\n                    </div>\r\n                    </div>\r\n                  <div class=\"row mb-20\" *ngIf=\"showDays\">\r\n                    \r\n                    <div class=\"col-lg-2\">\r\n                        <div class=\"form-group\">\r\n                            \r\n                             \r\n                             <div class=\"checkbox\">\r\n                               <label>\r\n                                 <input type=\"checkbox\" value=\"\">\r\n                                 Sunday\r\n                               </label>\r\n                             </div>\r\n                               \r\n                          </div>\r\n                    </div>\r\n                    <div class=\"col-lg-2\">\r\n                        <div class=\"form-group\">\r\n                            <div class=\"checkbox\">\r\n                                <label>\r\n                                  <input type=\"checkbox\" value=\"\">\r\n                                  Monday\r\n                                </label>\r\n                              </div>\r\n                          </div>\r\n                    </div>\r\n                    <div class=\"col-lg-2\">\r\n                        <div class=\"form-group\">\r\n                            <div class=\"checkbox\">\r\n                                <label>\r\n                                  <input type=\"checkbox\" value=\"\">\r\n                                  Tuesday\r\n                                </label>\r\n                              </div>\r\n                          </div>\r\n                    </div>\r\n                    <div class=\"col-lg-2\">\r\n                        <div class=\"form-group\">\r\n                            <div class=\"checkbox\">\r\n                                <label>\r\n                                  <input type=\"checkbox\" value=\"\">\r\n                                  Wednesday\r\n                                </label>\r\n                              </div>\r\n                          </div>\r\n                    </div>\r\n                    <div class=\"col-lg-2\">\r\n                        <div class=\"form-group\">\r\n                            <div class=\"checkbox\">\r\n                                <label>\r\n                                  <input type=\"checkbox\" value=\"\">\r\n                                  Thursday\r\n                                </label>\r\n                              </div>\r\n                          </div>\r\n                    </div>\r\n                    <div class=\"col-lg-2\">\r\n                        <div class=\"form-group\">\r\n                            <div class=\"checkbox\">\r\n                                <label>\r\n                                  <input type=\"checkbox\" value=\"\">\r\n                                  Friday\r\n                                </label>\r\n                              </div>\r\n                          </div>\r\n                    </div>\r\n                  </div> -->\r\n              <!-- <div class=\"row mb-20\" *ngIf=\"showEndsOn\">\r\n                      <div class=\"col-lg-2\">\r\n                          <div class=\"checkbox\">\r\n                              <label>\r\n                                <input type=\"checkbox\" value=\"\">\r\n                                Saturday\r\n                              </label>\r\n                            </div>\r\n         </div> \r\n         </div> -->\r\n            </form>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\"  class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n            <button type=\"button\" *ngIf=\"isSubscriptionActive\" class=\"btn btn-primary\" (click)=\"saveEvent()\">Add Event</button>\r\n          </div>\r\n        </div>\r\n\r\n\r\n      </div>\r\n    </div>\r\n    <!-- Update model -->\r\n    <p-dialog class=\"update-event-popup\" header=\"Update Event\" [(visible)]=\"display\" [width]=\"600\">\r\n      <form [formGroup]=\"calenderForm\" class=\"pl-10 pr-20\">\r\n        <div class=\"row mb-20\">\r\n          <div class=\"col-lg-3\">\r\n            <div class=\"form-group\">\r\n              <label for=\"\">Begins*</label>\r\n              <!-- <input type=\"date\" class=\"form-control\" id=\"\" aria-describedby=\"\" placeholder=\"Select Start Date and Time\"> -->\r\n              <input type=\"text\" placeholder=\"Ends on\" formControlName=\"startdate\" showWeekNumbers=\"false\" [minDate]=\"today\"\r\n                class=\"form-control\" [bsConfig]=\"dpConfig\" bsDatepicker>\r\n              <div *ngIf=\"f.startdate.invalid && (f.startdate.dirty || f.startdate.touched)\" class=\"text-left errormsg\">\r\n                <span *ngIf=\"f.startdate.errors.required\">\r\n                  <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select date</span>\r\n                </span>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n          <div class=\"col-lg-3\">\r\n            <div class=\"form-group\">\r\n              <label for=\"\">End*</label>\r\n              <!-- <input type=\"date\" class=\"form-control\" id=\"\" aria-describedby=\"\" placeholder=\"Select Start Date and Time\"> -->\r\n              <input type=\"text\" placeholder=\"Ends on\" formControlName=\"enddate\" showWeekNumbers=\"false\" [minDate]=\"today\"\r\n                class=\"form-control\" [bsConfig]=\"dpConfig\" bsDatepicker [readOnly]=\"disableEndDate\">\r\n              <div *ngIf=\"f.enddate.invalid && (f.enddate.dirty || f.enddate.touched)\" class=\"text-left errormsg\">\r\n                <span *ngIf=\"f.enddate.errors.required\">\r\n                  <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select date</span>\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-lg-3\">\r\n            <div class=\"form-group\">\r\n              <label for=\"\">Start time</label>\r\n              <!-- <input type=\"date\" class=\"form-control\" id=\"\" aria-describedby=\"\" placeholder=\"Select Start Date and Time\"> -->\r\n              <p-calendar class=\"custom-textbox-eventplan\" styleClass=\"form-control\" formControlName=\"starttime\" hourFormat=\"12\" [timeOnly]=\"true\" icon=\"pi pi-clock\"\r\n                [showIcon]=\"true\"></p-calendar>\r\n              <div *ngIf=\"f.starttime.invalid && (f.starttime.dirty || f.starttime.touched)\" class=\"text-left errormsg\">\r\n                <span *ngIf=\"f.starttime.errors.required\">\r\n                  <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\">select time</span>\r\n                </span>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n          <div class=\"col-lg-3\">\r\n            <div class=\"form-group\">\r\n              <label for=\"\">End time</label>\r\n              <!-- <input type=\"date\" class=\"form-control\" id=\"\" aria-describedby=\"\" placeholder=\"Select Start Date and Time\"> -->\r\n              <p-calendar class=\"custom-textbox-eventplan\" styleClass=\"form-control\" formControlName=\"endtime\" hourFormat=\"12\" [timeOnly]=\"true\" icon=\"pi pi-clock\"\r\n                [showIcon]=\"true\"></p-calendar>\r\n              <div *ngIf=\"f.endtime.invalid && (f.endtime.dirty || f.endtime.touched)\" class=\"text-left errormsg\">\r\n                <span *ngIf=\"f.endtime.errors.required\">\r\n                  <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\">select time</span>\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"row mb-20\">\r\n          <div class=\"col-lg-6\">\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleFormControlSelect1\">Class*</label>\r\n              <p-multiSelect [options]=\"classList\" [panelStyle]=\"{minWidth:'200px'}\" formControlName=\"class\"\r\n                [maxSelectedLabels]=\"5\"></p-multiSelect>\r\n              <div *ngIf=\"f.class.invalid && (f.class.dirty || f.class.touched)\" class=\"text-left errormsg\">\r\n                <span *ngIf=\"f.class.errors.required\">\r\n                  <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select class</span>\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-lg-6\">\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleFormControlSelect1\">Title*</label>\r\n              <!-- <select class=\"form-control\" formControlName=\"category\" id=\"exampleFormControlSelect1\">\r\n                  <option>Lunch</option>\r\n                  <option>Snacks</option>\r\n                  <option>Dinner</option>\r\n                </select> -->\r\n              <input type=\"text\" class=\"form-control\" formControlName=\"title\" id=\"\" aria-describedby=\"\" placeholder=\"Enter Event Title\">\r\n              <div *ngIf=\"f.title.invalid && (f.title.dirty || f.title.touched)\" class=\"text-left errormsg\">\r\n                <span *ngIf=\"f.title.errors.required\">\r\n                  <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please enter title</span>\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row mb-20\">\r\n          <div class=\"col-lg-12\">\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleFormControlSelect1\">Description* (Max limit 500 characters)</label>\r\n              <textarea name=\"\" formControlName=\"description\" id=\"\" cols=\"3\" rows=\"3\" class=\"form-control\" maxlength=\"500\"></textarea>\r\n              <div *ngIf=\"f.description.invalid && (f.description.dirty || f.description.touched)\" class=\"text-left errormsg\">\r\n                <span *ngIf=\"f.description.errors.required\">\r\n                  <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please enter description</span>\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <div class=\"row mb-20\">\r\n          <div class=\"col-lg-6\">\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleFormControlSelect1\">Repeat*</label>\r\n              <select class=\"form-control\" placeholder=\"First Aid Administered by\" formControlName=\"repeat\" id=\"exampleFormControlSelect1\"\r\n                (change)=\"getRepeatOptions()\" disabled>\r\n                <option *ngFor=\"let obj of repeatList\" [value]=\"obj.value\">{{obj.label}}</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"col-lg-6\" *ngIf=\"showEndsOn\">\r\n            <div class=\"form-group\">\r\n              <label for=\"\">Ends on*</label>\r\n              <!-- <input type=\"date\" class=\"form-control\"  formControlName=\"endson\" id=\"\" aria-describedby=\"\" placeholder=\"\"> -->\r\n              <input type=\"text\" placeholder=\"Ends on\" formControlName=\"endson\" showWeekNumbers=\"false\" [minDate]=\"today\"\r\n                class=\"form-control\" [bsConfig]=\"dpConfig\" bsDatepicker disabled>\r\n              <div *ngIf=\"f.endson.invalid && (f.endson.dirty || f.endson.touched)\" class=\"text-left errormsg\">\r\n                <span *ngIf=\"f.endson.errors.required\">\r\n                  <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select date</span>\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- <div class=\"row mb-20\" *ngIf=\"showEndsOn\">\r\n        <div class=\"col-lg-6\">\r\n          <div class=\"form-group\"><label>Select days to show event</label> </div>  \r\n        </div>\r\n        </div>\r\n      <div class=\"row mb-20\" *ngIf=\"showEndsOn\">\r\n        \r\n        <div class=\"col-lg-2\">\r\n            <div class=\"form-group\">\r\n                \r\n                 \r\n                 <div class=\"checkbox\">\r\n                   <label>\r\n                     <input type=\"checkbox\" value=\"\">\r\n                     Sunday\r\n                   </label>\r\n                 </div>\r\n                   \r\n              </div>\r\n        </div>\r\n        <div class=\"col-lg-2\">\r\n            <div class=\"form-group\">\r\n                <div class=\"checkbox\">\r\n                    <label>\r\n                      <input type=\"checkbox\" value=\"\">\r\n                      Monday\r\n                    </label>\r\n                  </div>\r\n              </div>\r\n        </div>\r\n        <div class=\"col-lg-2\">\r\n            <div class=\"form-group\">\r\n                <div class=\"checkbox\">\r\n                    <label>\r\n                      <input type=\"checkbox\" value=\"\">\r\n                      Tuesday\r\n                    </label>\r\n                  </div>\r\n              </div>\r\n        </div>\r\n        <div class=\"col-lg-2\">\r\n            <div class=\"form-group\">\r\n                <div class=\"checkbox\">\r\n                    <label>\r\n                      <input type=\"checkbox\" value=\"\">\r\n                      Wednesday\r\n                    </label>\r\n                  </div>\r\n              </div>\r\n        </div>\r\n        <div class=\"col-lg-2\">\r\n            <div class=\"form-group\">\r\n                <div class=\"checkbox\">\r\n                    <label>\r\n                      <input type=\"checkbox\" value=\"\">\r\n                      Thursday\r\n                    </label>\r\n                  </div>\r\n              </div>\r\n        </div>\r\n        <div class=\"col-lg-2\">\r\n            <div class=\"form-group\">\r\n                <div class=\"checkbox\">\r\n                    <label>\r\n                      <input type=\"checkbox\" value=\"\">\r\n                      Friday\r\n                    </label>\r\n                  </div>\r\n              </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"row mb-20\" *ngIf=\"showEndsOn\">\r\n          <div class=\"col-lg-2\">\r\n              <div class=\"checkbox\">\r\n                  <label>\r\n                    <input type=\"checkbox\" value=\"\">\r\n                    Saturday\r\n                  </label>\r\n                </div>\r\n</div> \r\n</div> -->\r\n\r\n\r\n      </form>\r\n      <p-footer>\r\n        <button type=\"button\" class=\"btn dlt\" (click)=\"deleteEvent()\"> Delete</button>\r\n        <button type=\"button\" *ngIf=\"isSubscriptionActive\" class=\"btn btn-primary\" (click)=\"saveEvent()\">Update Event</button>\r\n      </p-footer>\r\n    </p-dialog>\r\n\r\n    <!-- For Information Video -->\r\n    <div class=\"modal fade\" id=\"infovideo\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"checkoutLabel\" aria-hidden=\"true\">\r\n      <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"checkoutLabel\">Information Video</h5>\r\n            <button type=\"button\" *ngIf=\"videoPath\" class=\"close\" (click)= \"PauseInfoVideo()\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n            <button type=\"button\" *ngIf=\"!videoPath\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <div class=\"cont video_section_pop\" *ngIf=\"videoPath\">\r\n              <video controls id=\"pausevideo\">\r\n                <source *ngIf=\"videoPath\" [src] = \"videoPath\" type=\"video/mp4\" />\r\n                <source *ngIf=\"videoPath\" [src] = \"videoPath\" type=\"video/ogg\" />\r\n                <source *ngIf=\"videoPath\" [src] = \"videoPath\" type=\"video/webm\" />\r\n                Browser not supported\r\n              </video>\r\n            </div>\r\n\r\n            <div class=\"cont video_section_pop\" *ngIf=\"!videoPath\">\r\n                Video Not Found\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n  </div>\r\n</div>\r\n<ngx-spinner type=\"ball-atom\" size=\"medium\" color=\"#58A7FE\"></ngx-spinner>\r\n<app-confirm-box></app-confirm-box>\r\n"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-event-planner/agency-admin-event-planner.component.ts":
/*!*******************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-event-planner/agency-admin-event-planner.component.ts ***!
  \*******************************************************************************************************************/
/*! exports provided: AgencyAdminEventPlannerComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AgencyAdminEventPlannerComponent", function() { return AgencyAdminEventPlannerComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var ng_fullcalendar__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ng-fullcalendar */ "./node_modules/ng-fullcalendar/ng-fullcalendar.es5.js");
/* harmony import */ var _teacher_shared_constant__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../teacher/shared/constant */ "./src/app/layout/teacher/shared/constant.ts");
/* harmony import */ var ngx_bootstrap__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ngx-bootstrap */ "./node_modules/ngx-bootstrap/esm5/ngx-bootstrap.js");
/* harmony import */ var _teacher_shared_services_teacher_api_service_teacher_api_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../teacher/shared/services/teacher-api-service/teacher-api.service */ "./src/app/layout/teacher/shared/services/teacher-api-service/teacher-api.service.ts");
/* harmony import */ var _shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../shared/services/error-handler/error-handler.service */ "./src/app/shared/services/error-handler/error-handler.service.ts");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ngx-spinner */ "./node_modules/ngx-spinner/fesm5/ngx-spinner.js");
/* harmony import */ var _shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../shared/services/notification-service/notification.service */ "./src/app/shared/services/notification-service/notification.service.ts");
/* harmony import */ var _shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../shared/services/common/common.service */ "./src/app/shared/services/common/common.service.ts");
/* harmony import */ var primeng_api__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! primeng/api */ "./node_modules/primeng/api.js");
/* harmony import */ var primeng_api__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(primeng_api__WEBPACK_IMPORTED_MODULE_10__);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};











var AgencyAdminEventPlannerComponent = /** @class */ (function () {
    function AgencyAdminEventPlannerComponent(apiService, fb, error, spinner, notification, commonService, confirmationService) {
        this.apiService = apiService;
        this.fb = fb;
        this.error = error;
        this.spinner = spinner;
        this.notification = notification;
        this.commonService = commonService;
        this.confirmationService = confirmationService;
        this.cars = [];
        this.today = new Date();
        this.classList = [];
        this.repeatList = [];
        this.eventList = [];
        this.eventVM = {};
        this.repeatNeverID = 0;
        this.multiClass = [];
        this.classListArray = [];
        this.eventId = 0;
        this.selectFoodList = [];
        this.shoEventList = [];
        this.disableEndDate = false;
        this.showDays = false;
        this.minEndDate = false;
        this.videoPath = '';
        this.dpConfig = new ngx_bootstrap__WEBPACK_IMPORTED_MODULE_4__["BsDatepickerConfig"]();
        this.isSubscriptionActive = this.commonService.getSubscriptionStatus();
    }
    AgencyAdminEventPlannerComponent.prototype.ngOnInit = function () {
        this.currentDate = new Date();
        this.eventId = 0;
        this.classListArray = [];
        this.getAllClassess();
        this.getRepeatTypelist();
        this.dpConfig = Object.assign({}, { containerClass: 'theme-dark-blue' }, { showWeekNumbers: false });
        this.calendarOptions = {
            editable: false,
            eventLimit: false,
            displayEventTime: false,
            header: {
                left: 'prev,next today',
                center: 'title',
                right: 'month,agendaWeek,agendaDay,listMonth'
            },
            events: this.eventList,
        };
        this.showEndsOn = false;
        this.display = false;
        this.createEventForm();
        this.callEvent(this.currentDate);
        this.getFirstDayOfMonth();
        this.getLastDayOfMonth();
        this.getSectionVideo();
    };
    AgencyAdminEventPlannerComponent.prototype.OpenInfoVideo = function (data) {
        $('#infovideo').modal('show');
    };
    AgencyAdminEventPlannerComponent.prototype.getSectionVideo = function () {
        var _this = this;
        var req = {
            'SectionID': 12
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_3__["TeacherAPIURLs"].GetVideoForSection, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.videoPath = res.body.filePath;
                console.log(_this.videoPath, 'bbbbbbbbbbbbbbb');
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminEventPlannerComponent.prototype.PauseInfoVideo = function () {
        var myVideo = document.getElementById('pausevideo');
        myVideo.pause();
        myVideo.currentTime = 0;
    };
    AgencyAdminEventPlannerComponent.prototype.eventClick = function (data) {
    };
    AgencyAdminEventPlannerComponent.prototype.createEventForm = function () {
        if (this.eventId === 0) {
            this.calenderForm = this.fb.group({
                startdate: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
                enddate: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
                starttime: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
                endtime: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
                class: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
                title: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
                description: [''],
                repeat: [this.repeatNeverID],
                endson: ['']
            });
        }
    };
    AgencyAdminEventPlannerComponent.prototype.editEventForm = function () {
        if (this.eventId !== 0) {
            this.calenderForm = this.fb.group({
                startdate: [this.eventVM.start, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
                enddate: [this.eventVM.end, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
                starttime: [this.eventVM.startTime, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
                endtime: [this.eventVM.endTime, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
                class: [this.classListArray, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
                title: [this.eventVM.title, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
                description: [this.eventVM.description, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
                repeat: [this.eventVM.plannerRepeatTypeID],
                endson: [this.eventVM.endsOn]
            });
        }
    };
    Object.defineProperty(AgencyAdminEventPlannerComponent.prototype, "f", {
        // convenience getter for easy access to form fields
        get: function () { return this.calenderForm.controls; },
        enumerable: true,
        configurable: true
    });
    AgencyAdminEventPlannerComponent.prototype.callEvent = function (date) {
        this.getAllEvent(date);
    };
    /**Method to get event details */
    AgencyAdminEventPlannerComponent.prototype.gotoDate = function (event) {
        var _this = this;
        this.display = true;
        this.disableEndDate = false;
        this.eventVM = {};
        this.classListArray = [];
        this.eventList.forEach(function (x) {
            if (x.id === event.event.id) {
                _this.eventId = event.event.id;
                _this.eventVM.title = event.event.title;
                _this.eventVM.start = (new Date(x.start));
                _this.eventVM.end = (new Date(x.end));
                _this.eventVM.description = x.description;
                _this.eventVM.startTime = _this.commonService.getLocalDateTimeFromUTC(x.startTime);
                _this.eventVM.endTime = _this.commonService.getLocalDateTimeFromUTC(x.endTime);
                if (x.plannerRepeatTypeID === 2) {
                    _this.disableEndDate = true;
                }
                else {
                    _this.disableEndDate = false;
                }
                _this.eventVM.plannerRepeatTypeID = x.plannerRepeatTypeID;
                _this.eventVM.endsOn = new Date(x.endsOn);
                if (x.involvedEventClassesList.length !== 0) {
                    x.involvedEventClassesList.forEach(function (element) {
                        _this.classListArray.push(element.classesID);
                    });
                }
                _this.editEventForm();
                if (_this.calenderForm.value.repeat !== _this.repeatNeverID) {
                    _this.showEndsOn = true;
                    _this.calenderForm.controls['endson'].setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required);
                }
                else if (_this.calenderForm.value.repeat === _this.repeatNeverID) {
                    _this.calenderForm.controls['endson'].setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].nullValidator);
                    _this.showEndsOn = false;
                }
                else {
                }
            }
        });
    };
    AgencyAdminEventPlannerComponent.prototype.closeUpdateDialogBox = function () {
        this.display = false;
    };
    /**Method to get previous and next month events */
    AgencyAdminEventPlannerComponent.prototype.clickButton = function (value) {
        if (value.buttonType === 'prev' || value.buttonType === 'next') {
            var newDate = new Date(value.data._d);
            newDate.setHours(newDate.getHours() + 24);
            this.currentDate = newDate;
            this.callEvent(newDate);
        }
    };
    AgencyAdminEventPlannerComponent.prototype.updateEvent = function (data) {
        console.log('drag', this.calenderForm);
    };
    AgencyAdminEventPlannerComponent.prototype.addNewEvent = function () {
        var temp = this.calenderForm.controls['repeat'].value;
    };
    // Method to hide and show reapet end date field
    AgencyAdminEventPlannerComponent.prototype.getRepeatOptions = function () {
        this.showEndsOn = false;
        if (this.calenderForm.value.repeat !== this.repeatNeverID.toString()) {
            this.showEndsOn = true;
            this.calenderForm.controls['endson'].setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required);
            this.calenderForm.controls['endson'].updateValueAndValidity();
        }
        else if (this.calenderForm.value.repeat === this.repeatNeverID.toString()) {
            this.calenderForm.controls['endson'].setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].nullValidator);
            this.calenderForm.controls['endson'].updateValueAndValidity();
            this.showEndsOn = false;
        }
        else {
        }
        if (this.calenderForm.value.repeat === '2') {
            this.disableEndDate = true;
            this.notification.warning({
                message: 'This event will repeat daily from "Begins" to "Ends On" date you will select',
                title: ''
            });
        }
        else {
            this.disableEndDate = false;
        }
    };
    AgencyAdminEventPlannerComponent.prototype.getAllClassess = function () {
        var _this = this;
        var data = {
            'agencyID': this.commonService.getAgencyId()
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_3__["TeacherAPIURLs"].GetAllClassesDropdown, data, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.classList = res.body.data;
            }
            else {
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminEventPlannerComponent.prototype.getRepeatTypelist = function () {
        var _this = this;
        var data = {
            'agencyID': this.commonService.getAgencyId()
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_3__["TeacherAPIURLs"].GetAllRepeatTypeDropdown, data, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.repeatList = res.body.data;
                _this.repeatList.forEach(function (element) {
                    if (element.label === 'Never') {
                        _this.repeatNeverID = element.value;
                        _this.createEventForm();
                    }
                });
            }
            else {
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminEventPlannerComponent.prototype.getAllEvent = function (date) {
        var _this = this;
        this.spinner.show();
        var data = {
            'agencyID': this.commonService.getAgencyId(),
            'eventSearchFromDate': this.commonService.getFirstDayOfMonth(date),
            'eventSearchToDate': this.commonService.getLastDayOfMonth(date),
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_3__["TeacherAPIURLs"].GetAllEvents, data, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.eventList = res.body.data;
                _this.eventList.forEach(function (x) {
                    var lastdt = new Date(x.end);
                    var enddt = new Date(x.end);
                    lastdt.setHours(enddt.getHours() + 9);
                    x.end = lastdt;
                });
                _this.configureScheduler();
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminEventPlannerComponent.prototype.clearForm = function () {
        this.disableEndDate = false;
        this.eventId = 0;
        this.createEventForm();
    };
    // method to bring repeate id and endson field inital state
    AgencyAdminEventPlannerComponent.prototype.cleareRepeateIDStatus = function () {
        this.showEndsOn = false;
        this.calenderForm.controls['repeat'].setValue(this.repeatNeverID);
        this.calenderForm.controls['endson'].setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].nullValidator);
    };
    AgencyAdminEventPlannerComponent.prototype.getFirstDayOfMonth = function () {
        var date = this.currentDate, y = date.getFullYear(), m = date.getMonth();
        var firstDay = new Date(y, m, 1);
        return firstDay.toDateString();
    };
    AgencyAdminEventPlannerComponent.prototype.getLastDayOfMonth = function () {
        var date = this.currentDate, y = date.getFullYear(), m = date.getMonth();
        var lastDay = new Date(y, m + 1, 0);
        return lastDay.toDateString();
    };
    AgencyAdminEventPlannerComponent.prototype.configureScheduler = function () {
        this.ucCalendar.renderEvents(this.eventList);
        this.spinner.hide();
    };
    AgencyAdminEventPlannerComponent.prototype.removeEventPopupShow = function (event) {
    };
    AgencyAdminEventPlannerComponent.prototype.click = function (event) {
    };
    AgencyAdminEventPlannerComponent.prototype.eventRenderMethod = function (event) {
    };
    AgencyAdminEventPlannerComponent.prototype.saveEvent = function () {
        var _this = this;
        debugger;
        this.multiClass = [];
        if (this.calenderForm.valid) {
            if (this.calenderForm.value.startdate.setHours(0, 0, 0) > this.calenderForm.value.enddate.setHours(0, 0, 0)) {
                this.notification.warning({ message: 'End date should be greater or equal than Begins date ', title: '' });
            }
            else if (this.calenderForm.value.starttime > this.calenderForm.value.endtime) {
                this.notification.warning({ message: 'End time should be greater than Start time  ', title: '' });
            }
            else if (this.showEndsOn &&
                (this.calenderForm.value.enddate.setHours(0, 0, 0) > this.calenderForm.value.endson.setHours(0, 0, 0))) {
                this.notification.warning({ message: 'Ends On  date should be greater than End date ', title: '' });
            }
            else {
                this.spinner.show();
                this.eventVM.agencyID = this.commonService.getAgencyId();
                this.eventVM.title = this.calenderForm.value.title;
                this.eventVM.start = new Date(this.calenderForm.value.startdate).toDateString();
                this.eventVM.end = new Date(this.calenderForm.value.enddate).toDateString();
                this.eventVM.description = this.calenderForm.value.description;
                this.eventVM.plannerRepeatTypeID = this.calenderForm.value.repeat;
                this.eventVM.endsOn = this.calenderForm.value.endson === '' ?
                    new Date() : new Date(this.calenderForm.value.endson).toDateString();
                this.eventVM.startTime = this.calenderForm.value.starttime;
                this.eventVM.endTime = this.calenderForm.value.endtime;
                this.eventVM.id = this.eventId !== 0 ? this.eventId : 0;
                if (this.calenderForm.value.class.length !== 0) {
                    this.calenderForm.value.class.forEach(function (element) {
                        _this.multiClass.push({
                            'agencyID': _this.commonService.getAgencyId(),
                            'classesID': element,
                            'eventID': _this.eventId !== 0 ? _this.eventId : 0
                        });
                    });
                }
                this.eventVM.involvedEventClassesList = this.multiClass;
                this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_3__["TeacherAPIURLs"].SaveEvent, this.eventVM, null).subscribe(function (res) {
                    if (res.body.statusCode === 200) {
                        $('.addevent').modal('hide');
                        _this.display = false;
                        _this.callEvent(_this.currentDate);
                        _this.notification.success({
                            message: _this.eventId === 0 ? 'Event created successfully' :
                                'Event updated successfully', title: ''
                        });
                    }
                    else {
                        _this.spinner.hide();
                        _this.error.unknownError();
                    }
                }, function (err) {
                    _this.spinner.hide();
                    _this.error.commonError(err);
                });
            }
        }
        else if (this.calenderForm.value.startdate <= this.today || this.calenderForm.value.enddate <= this.today) {
            this.notification.warning({ message: 'Your begins or End date should be greater or equal to current date', title: '' });
        }
        else {
            this.spinner.hide();
            this.commonService.validateAllFields(this.calenderForm);
        }
    };
    /**Delete event method */
    AgencyAdminEventPlannerComponent.prototype.deleteEvent = function () {
        var _this = this;
        this.confirmationService.confirm({
            message: 'Do you want to delete this event?',
            accept: function () {
                if (_this.eventId > 0) {
                    _this.spinner.show();
                    var data = {
                        'agencyID': _this.commonService.getAgencyId(),
                        'Id': _this.eventId,
                        'IsDeleted': true,
                        'DeletedDate': new Date(),
                        'DeletedBy': 1
                    };
                    _this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_3__["TeacherAPIURLs"].DeleteEvent, data, null).subscribe(function (res) {
                        if (res.body.statusCode === 200) {
                            _this.deleteIncidentSuccess(_this.eventId);
                        }
                        else {
                            _this.spinner.hide();
                            _this.error.unknownError();
                        }
                    }, function (err) {
                        _this.spinner.hide();
                        _this.error.commonError(err);
                    });
                }
                else {
                    _this.error.unknownError();
                }
            }
        });
    };
    /**Success method for delete event */
    AgencyAdminEventPlannerComponent.prototype.deleteIncidentSuccess = function (data) {
        var index = this.eventList.findIndex(function (r) { return r.id === data; });
        this.eventList.splice(index, 1);
        this.spinner.hide();
        this.ucCalendar.renderEvents(this.eventList);
        this.display = false;
        this.notification.success({ message: 'Event deleted successfully', title: '' });
    };
    AgencyAdminEventPlannerComponent.prototype.validateEndDate = function () {
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])(ng_fullcalendar__WEBPACK_IMPORTED_MODULE_2__["CalendarComponent"]),
        __metadata("design:type", ng_fullcalendar__WEBPACK_IMPORTED_MODULE_2__["CalendarComponent"])
    ], AgencyAdminEventPlannerComponent.prototype, "ucCalendar", void 0);
    AgencyAdminEventPlannerComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-agency-admin-event-planner',
            template: __webpack_require__(/*! ./agency-admin-event-planner.component.html */ "./src/app/layout/agency-admin/components/agency-admin-event-planner/agency-admin-event-planner.component.html"),
            styles: [__webpack_require__(/*! ./agency-admin-event-planner.component.css */ "./src/app/layout/agency-admin/components/agency-admin-event-planner/agency-admin-event-planner.component.css")]
        }),
        __metadata("design:paramtypes", [_teacher_shared_services_teacher_api_service_teacher_api_service__WEBPACK_IMPORTED_MODULE_5__["TeacherApiService"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormBuilder"], _shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_6__["ErrorHandlerService"],
            ngx_spinner__WEBPACK_IMPORTED_MODULE_7__["NgxSpinnerService"], _shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_8__["NotificationService"], _shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_9__["CommonService"],
            primeng_api__WEBPACK_IMPORTED_MODULE_10__["ConfirmationService"]])
    ], AgencyAdminEventPlannerComponent);
    return AgencyAdminEventPlannerComponent;
}());



/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-family-details-report/agency-admin-family-details-report.component.css":
/*!************************************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-family-details-report/agency-admin-family-details-report.component.css ***!
  \************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9hZ2VuY3ktYWRtaW4vY29tcG9uZW50cy9hZ2VuY3ktYWRtaW4tZmFtaWx5LWRldGFpbHMtcmVwb3J0L2FnZW5jeS1hZG1pbi1mYW1pbHktZGV0YWlscy1yZXBvcnQuY29tcG9uZW50LmNzcyJ9 */"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-family-details-report/agency-admin-family-details-report.component.html":
/*!*************************************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-family-details-report/agency-admin-family-details-report.component.html ***!
  \*************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"wrapper\">\r\n  <div class=\"container-fluid\">\r\n\r\n    <div class=\"pagetitle\">\r\n      <div>\r\n        <h2>Report\r\n          <span>/ Family Details Report </span>\r\n        </h2>\r\n      </div>\r\n    </div>\r\n    <div class=\"subhead d-flex justify-content-between mt-20\">\r\n      <div>\r\n        <h3>Student Family Details Report</h3>\r\n      </div>\r\n      <div style=\"cursor:pointer\" title=\"Download report\" (click)=\"pdfReportForFamilydetails()\"><i\r\n          class=\"fa fa-download\" aria-hidden=\"true\"></i>\r\n      </div>\r\n    </div>\r\n    <div class=\"card cardfilter\">\r\n      <!-- <div class=\"col-lg-10\"> -->\r\n      <div class=\"leftfilter\">\r\n        <div class=\"row algcenter\">\r\n          <div class=\"search-date\">\r\n            <div class=\"pr15 label-text\">Search Name : </div>\r\n            <input type=\"text\" placeholder=\"Search student name\" [(ngModel)]=\"searchByStudentName\"\r\n              class=\"form-control mr15\" id=\"\">\r\n          </div>\r\n          <div class=\"filter-buttons\">\r\n            <button type=\"submit\" class=\"btn btn-send\" *ngIf=\"!showClearBtn\" (click)=\"search()\">Search</button>\r\n            <button type=\"submit\" class=\"btn btn-secondary\" *ngIf=\"showClearBtn\" (click)=\"clearSearch()\">Clear</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"studentlist\">\r\n        <div class=\"tab-content\" id=\"pills-tabContent\">\r\n          <div class=\"tab-pane fade show active\" id=\"pills-appstudent\" role=\"tabpanel\" aria-labelledby=\"appStudent\">\r\n\r\n            <div class=\"innertable studentListSearch\">\r\n              <div class=\"table-responsive\">\r\n                <table class=\"table \">\r\n                  <thead class=\"thead-light\">\r\n                    <tr>\r\n                      <th scope=\"col\">Student Name</th>\r\n                      <!-- <th scope=\"col\">Class Name</th> -->\r\n                      <!-- <th scope=\"col\">Enrollment Date</th> -->\r\n                      <th scope=\"col\">Date Of Birth</th>\r\n                      <th scope=\"col\">Parent Name</th>\r\n                      <th scope=\"col\">Contact NO.</th>\r\n                      <th scope=\"col\">Parent Email</th>\r\n                      <th scope=\"col\">Physician</th>\r\n                      <!-- <th scope=\"col\">Physician Number</th> -->\r\n                      <th scope=\"col\" class=\"text-center\">Download Details</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr *ngFor=\"let report of reportList\">\r\n                      <td>{{report.studentName}}</td>\r\n                      <!-- <td>{{report.classesName}}</td>\r\n                      <td>{{report.enrollStartDate | date}}</td> -->\r\n                      <td>{{report.dateofBirth| date}}</td>\r\n                      <td>{{report.parentName}}</td>\r\n                      <td>{{report.parentContactNumber}}</td>\r\n                      <td>{{report.parentEmail}}</td>\r\n                      <td>{{report.physician}}</td>\r\n                      <!-- <td> <p *ngIf=\"report.physicianNumber != 0\">{{report.physicianNumber}}</p> </td> -->\r\n                      <td class=\"text-center\">\r\n                        <a title=\"Download incident report\">\r\n                            <i class=\"fa fa-download\"  aria-hidden=\"true\" title=\"Download\" (click)=\"pdfReportForFamilyDetailsStudentId(report)\"></i>\r\n                          </a>\r\n                    </td>\r\n                    </tr>\r\n                  </tbody>\r\n                  <!-- </tbody> -->\r\n                </table>\r\n                <div class=\"text-center\">\r\n                  <span *ngIf=\"reportList.length == 0 && !loader\" class=\"text-center\">No result found</span>\r\n                </div>\r\n              </div>\r\n              <p-paginator [alwaysShow]=\"false\" [rows]=\"limit\" [totalRecords]=\"totalRecord\"\r\n                (onPageChange)=\"paginate($event)\"></p-paginator>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <ngx-spinner type=\"ball-atom\" size=\"medium\" color=\"#58A7FE\"></ngx-spinner>\r\n"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-family-details-report/agency-admin-family-details-report.component.ts":
/*!***********************************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-family-details-report/agency-admin-family-details-report.component.ts ***!
  \***********************************************************************************************************************************/
/*! exports provided: AgencyAdminFamilyDetailsReportComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AgencyAdminFamilyDetailsReportComponent", function() { return AgencyAdminFamilyDetailsReportComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../shared/services/agency-api-service/agency-api.service */ "./src/app/layout/agency-admin/components/shared/services/agency-api-service/agency-api.service.ts");
/* harmony import */ var _shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../shared/services/error-handler/error-handler.service */ "./src/app/shared/services/error-handler/error-handler.service.ts");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ngx-spinner */ "./node_modules/ngx-spinner/fesm5/ngx-spinner.js");
/* harmony import */ var _shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../shared/services/common/common.service */ "./src/app/shared/services/common/common.service.ts");
/* harmony import */ var _shared_constatant__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../shared/constatant */ "./src/app/layout/agency-admin/components/shared/constatant.ts");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../../environments/environment */ "./src/environments/environment.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};







var AgencyAdminFamilyDetailsReportComponent = /** @class */ (function () {
    function AgencyAdminFamilyDetailsReportComponent(apiService, error, spinner, commonService) {
        this.apiService = apiService;
        this.error = error;
        this.spinner = spinner;
        this.commonService = commonService;
        this.reportList = [];
        this.pageNo = 0;
        this.limit = 10;
        this.totalRecord = 0;
        this.searchByStudentName = '';
        this.loader = true;
        this.showClearBtn = false;
    }
    AgencyAdminFamilyDetailsReportComponent.prototype.ngOnInit = function () {
        this.getFamilyDetails();
    };
    AgencyAdminFamilyDetailsReportComponent.prototype.getFamilyDetails = function () {
        var _this = this;
        this.loader = true;
        this.reportList = [];
        this.spinner.show();
        var data = {
            'agencyID': this.commonService.getAgencyId(),
            'studentName': this.searchByStudentName,
            'page': this.pageNo,
            'limit': this.limit
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_5__["AgencyAPIURLs"].GetFamilyDetailsReport, data, null).subscribe(function (res) {
            _this.totalRecord = res.body.totalRows;
            if (res.body.statusCode === 200) {
                _this.spinner.hide();
                _this.reportList = res.body.data;
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
            _this.loader = false;
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminFamilyDetailsReportComponent.prototype.paginate = function (event) {
        this.pageNo = event.page;
        this.getFamilyDetails();
    };
    AgencyAdminFamilyDetailsReportComponent.prototype.clearSearch = function () {
        this.searchByStudentName = '';
        this.showClearBtn = false;
        this.getFamilyDetails();
    };
    AgencyAdminFamilyDetailsReportComponent.prototype.pdfReportForFamilydetails = function () {
        var _this = this;
        this.loader = true;
        this.spinner.show();
        var req = {
            'StudentName': this.searchByStudentName,
            'agencyID': this.commonService.getAgencyId()
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_5__["AgencyAPIURLs"].PdfReportForFamily, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                var filename = _environments_environment__WEBPACK_IMPORTED_MODULE_6__["environment"].baseUrl + res.body.fileName;
                var name_1 = res.body.fileName;
                window.open(filename);
                setTimeout(function () {
                    _this.deletePdFFromServer(name_1);
                }, 10000);
            }
            else {
                _this.error.unknownError();
            }
            _this.loader = false;
            _this.spinner.hide();
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    // Delete pdf after use from server
    AgencyAdminFamilyDetailsReportComponent.prototype.deletePdFFromServer = function (filename) {
        var req = {
            'fileName': filename,
            'agencyID': this.commonService.getAgencyId()
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_5__["AgencyAPIURLs"].DeleteExistingFile, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
            }
            else {
            }
        }, function (err) {
            console.log(err);
        });
    };
    AgencyAdminFamilyDetailsReportComponent.prototype.pdfReportForFamilyDetailsStudentId = function (data, type) {
        var _this = this;
        this.loader = true;
        this.spinner.show();
        var req = {
            'agencyID': this.commonService.getAgencyId(),
            'studentId': data.studentID
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_5__["AgencyAPIURLs"].PDFFamilyDetailsReportByStudentID, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                var filename = _environments_environment__WEBPACK_IMPORTED_MODULE_6__["environment"].baseUrl + res.body.fileName;
                var name_2 = res.body.fileName;
                window.open(filename);
                setTimeout(function () {
                    _this.deletePdFFromServer(name_2);
                }, 10000);
            }
            else {
                _this.error.unknownError();
            }
            _this.loader = false;
            _this.spinner.hide();
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminFamilyDetailsReportComponent.prototype.search = function () {
        this.showClearBtn = true;
        this.getFamilyDetails();
    };
    AgencyAdminFamilyDetailsReportComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-agency-admin-family-details-report',
            template: __webpack_require__(/*! ./agency-admin-family-details-report.component.html */ "./src/app/layout/agency-admin/components/agency-admin-family-details-report/agency-admin-family-details-report.component.html"),
            styles: [__webpack_require__(/*! ./agency-admin-family-details-report.component.css */ "./src/app/layout/agency-admin/components/agency-admin-family-details-report/agency-admin-family-details-report.component.css")]
        }),
        __metadata("design:paramtypes", [_shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_1__["AgencyApiService"], _shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_2__["ErrorHandlerService"],
            ngx_spinner__WEBPACK_IMPORTED_MODULE_3__["NgxSpinnerService"],
            _shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_4__["CommonService"]])
    ], AgencyAdminFamilyDetailsReportComponent);
    return AgencyAdminFamilyDetailsReportComponent;
}());



/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-food-list/agency-admin-food-list.component.css":
/*!************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-food-list/agency-admin-food-list.component.css ***!
  \************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9hZ2VuY3ktYWRtaW4vY29tcG9uZW50cy9hZ2VuY3ktYWRtaW4tZm9vZC1saXN0L2FnZW5jeS1hZG1pbi1mb29kLWxpc3QuY29tcG9uZW50LmNzcyJ9 */"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-food-list/agency-admin-food-list.component.html":
/*!*************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-food-list/agency-admin-food-list.component.html ***!
  \*************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"wrapper\">\n  <div class=\"container-fluid\">\n\n    <div class=\"pagetitle\">\n      <div>\n        <h2>Food List\n        </h2>\n      </div>\n    </div>\n\n    <div class=\"d-flex justify-content-between align-items-center mt-20 subhead\">\n      <div>\n        <h3>Food List</h3>\n      </div>\n    </div>\n\n    <div class=\"tab-content\" id=\"pills-tabContent\">\n      <div class=\"tab-pane fade show active\" id=\"pills-allergyType\" role=\"tabpanel\" aria-labelledby=\"allergyType\">\n        <div class=\"innertable\">\n          <div class=\"table-responsive\">\n            <table class=\"table\">\n              <thead class=\"thead-light\">\n                <tr>\n                  <th scope=\"col\">Food Name</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr *ngFor=\"let food of foodList\">\n                  <td>{{food.foodTypeName}}</td>\n                </tr>   \n              </tbody>\n            </table>\n            <div class=\"text-center\">\n              <span class=\"text-center\" *ngIf=\"(foodList.length == 0 && !loader)\">No record found</span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n    </div>\n\n  </div>\n</div>\n\n<app-confirm-box></app-confirm-box>\n<ngx-spinner type=\"ball-atom\" size=\"medium\" color=\"#58A7FE\"></ngx-spinner>"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-food-list/agency-admin-food-list.component.ts":
/*!***********************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-food-list/agency-admin-food-list.component.ts ***!
  \***********************************************************************************************************/
/*! exports provided: AgencyAdminFoodListComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AgencyAdminFoodListComponent", function() { return AgencyAdminFoodListComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _agency_admin_components_shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../agency-admin/components/shared/services/agency-api-service/agency-api.service */ "./src/app/layout/agency-admin/components/shared/services/agency-api-service/agency-api.service.ts");
/* harmony import */ var _shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../shared/services/error-handler/error-handler.service */ "./src/app/shared/services/error-handler/error-handler.service.ts");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ngx-spinner */ "./node_modules/ngx-spinner/fesm5/ngx-spinner.js");
/* harmony import */ var _shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../shared/services/notification-service/notification.service */ "./src/app/shared/services/notification-service/notification.service.ts");
/* harmony import */ var _shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../shared/services/common/common.service */ "./src/app/shared/services/common/common.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var primeng_api__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! primeng/api */ "./node_modules/primeng/api.js");
/* harmony import */ var primeng_api__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(primeng_api__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var _shared_constatant__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../shared/constatant */ "./src/app/layout/agency-admin/components/shared/constatant.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};










var AgencyAdminFoodListComponent = /** @class */ (function () {
    function AgencyAdminFoodListComponent(error, apiService, spinner, notification, commonService, fb, route, confirmationService) {
        this.error = error;
        this.apiService = apiService;
        this.spinner = spinner;
        this.notification = notification;
        this.commonService = commonService;
        this.fb = fb;
        this.route = route;
        this.confirmationService = confirmationService;
        this.foodList = [];
    }
    AgencyAdminFoodListComponent.prototype.ngOnInit = function () {
        this.getAllFoodList();
    };
    AgencyAdminFoodListComponent.prototype.getAllFoodList = function () {
        var _this = this;
        this.foodList = [];
        var data = {
            'agencyID': this.commonService.getAgencyId()
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_9__["AgencyAPIURLs"].GetMealItemInformation, data, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.foodList = res.body.data;
                _this.spinner.hide();
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminFoodListComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-agency-admin-food-list',
            template: __webpack_require__(/*! ./agency-admin-food-list.component.html */ "./src/app/layout/agency-admin/components/agency-admin-food-list/agency-admin-food-list.component.html"),
            styles: [__webpack_require__(/*! ./agency-admin-food-list.component.css */ "./src/app/layout/agency-admin/components/agency-admin-food-list/agency-admin-food-list.component.css")]
        }),
        __metadata("design:paramtypes", [_shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_3__["ErrorHandlerService"], _agency_admin_components_shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_2__["AgencyApiService"],
            ngx_spinner__WEBPACK_IMPORTED_MODULE_4__["NgxSpinnerService"], _shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_5__["NotificationService"],
            _shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_6__["CommonService"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormBuilder"], _angular_router__WEBPACK_IMPORTED_MODULE_7__["ActivatedRoute"],
            primeng_api__WEBPACK_IMPORTED_MODULE_8__["ConfirmationService"]])
    ], AgencyAdminFoodListComponent);
    return AgencyAdminFoodListComponent;
}());



/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-givenmedication-report/agency-admin-givenmedication-report.component.css":
/*!**************************************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-givenmedication-report/agency-admin-givenmedication-report.component.css ***!
  \**************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9hZ2VuY3ktYWRtaW4vY29tcG9uZW50cy9hZ2VuY3ktYWRtaW4tZ2l2ZW5tZWRpY2F0aW9uLXJlcG9ydC9hZ2VuY3ktYWRtaW4tZ2l2ZW5tZWRpY2F0aW9uLXJlcG9ydC5jb21wb25lbnQuY3NzIn0= */"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-givenmedication-report/agency-admin-givenmedication-report.component.html":
/*!***************************************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-givenmedication-report/agency-admin-givenmedication-report.component.html ***!
  \***************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"wrapper\">\r\n    <div class=\"container-fluid\">\r\n  \r\n      <div class=\"pagetitle\">\r\n        <div>\r\n          <h2>Report\r\n            <span>/ Given Medication Report </span>\r\n          </h2>\r\n        </div>\r\n      </div>\r\n      <div class=\"subhead d-flex justify-content-between mt-20\">\r\n        <div>\r\n          <h3>Student's Given Medication Report</h3>\r\n        </div>\r\n        <div style=\"cursor:pointer\" title=\"Download report\" (click)=\"pdfReportForGivenMedication()\"><i class=\"fa fa-download\" aria-hidden=\"true\"></i>\r\n        </div>\r\n      </div>\r\n      <div class=\"card cardfilter\">\r\n        <!-- <div class=\"col-lg-10\"> -->\r\n           <div class=\"leftfilter\">\r\n          <div class=\"row algcenter\">\r\n            <div class=\"search-date\">\r\n              <div class=\"pr15 label-text\">Search Name : </div>\r\n              <input type=\"text\" placeholder=\"Search student name\" [(ngModel)]=\"searchByStudentName\" class=\"form-control mr15\" id=\"\">\r\n            </div>\r\n            <div class=\"filter-buttons\">\r\n              <button type=\"submit\" class=\"btn btn-send\"  (click)=\"search()\">Search</button>\r\n              <!-- <button type=\"submit\" class=\"btn btn-secondary\" *ngIf=\"showClearBtn\" (click)=\"clearSearch()\">Clear</button> -->\r\n            </div>\r\n        </div> \r\n      </div>\r\n  \r\n      <div class=\"studentlist\">\r\n        <div class=\"tab-content\" id=\"pills-tabContent\">\r\n          <div class=\"tab-pane fade show active\" id=\"pills-appstudent\" role=\"tabpanel\" aria-labelledby=\"appStudent\">\r\n  \r\n            <div class=\"innertable studentListSearch\">\r\n              <div class=\"table-responsive\">\r\n                <table class=\"table \">\r\n                  <thead class=\"thead-light\">\r\n                    <tr>\r\n                      <th scope=\"col\">Student Name</th>\r\n                      <th scope=\"col\">Medication Name</th>\r\n                      <th scope=\"col\">Medication Given Date</th>\r\n                      <th scope=\"col\" class=\"text-center\">Acknowledge By (Teacher or Admin)</th>\r\n                      <th scope=\"col\" class=\"text-center\">Acknowledge By (Parent)</th>\r\n                     \r\n                        \r\n                    </tr>\r\n                  </thead>\r\n                  <tbody >\r\n                 <tr *ngFor=\"let report of reportList\">\r\n                  <td>{{report.studentName}}</td>\r\n                  <td>{{report.medicationName}}</td>\r\n                  <td>{{report.medicationGivenDate |date }}</td>\r\n                  <td class=\"text-center\">\r\n                      <p *ngIf=\"report.acknowledgeByFromAgency\"> {{report.acknowledgeByFromAgency}} </p>\r\n                    <p *ngIf=\"!report.acknowledgeByFromAgency\">--- </p>\r\n                  </td>\r\n                  <td class=\"text-center\"> \r\n                  <p *ngIf=\"report.acknowledgeByParent\">{{report.acknowledgeByParent}}</p>  \r\n                  <p *ngIf=\"!report.acknowledgeByParent\">---</p>\r\n                  </td>\r\n                 </tr>\r\n                  </tbody>\r\n                  <!-- </tbody> -->\r\n                </table>\r\n                <div class=\"text-center\">\r\n                    <span  *ngIf=\"reportList.length == 0 && !loader\" class=\"text-center\">No result found</span>\r\n                  </div> \r\n              </div>\r\n              <p-paginator [alwaysShow]=\"false\" [rows]=\"limit\" [totalRecords]=\"totalRecord\" (onPageChange)=\"paginate($event)\"></p-paginator>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  \r\n  <ngx-spinner type=\"ball-atom\" size=\"medium\" color=\"#58A7FE\"></ngx-spinner>\r\n  "

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-givenmedication-report/agency-admin-givenmedication-report.component.ts":
/*!*************************************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-givenmedication-report/agency-admin-givenmedication-report.component.ts ***!
  \*************************************************************************************************************************************/
/*! exports provided: AgencyAdminGivenmedicationReportComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AgencyAdminGivenmedicationReportComponent", function() { return AgencyAdminGivenmedicationReportComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _shared_constatant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../shared/constatant */ "./src/app/layout/agency-admin/components/shared/constatant.ts");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../environments/environment */ "./src/environments/environment.ts");
/* harmony import */ var _shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../shared/services/agency-api-service/agency-api.service */ "./src/app/layout/agency-admin/components/shared/services/agency-api-service/agency-api.service.ts");
/* harmony import */ var _shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../shared/services/error-handler/error-handler.service */ "./src/app/shared/services/error-handler/error-handler.service.ts");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ngx-spinner */ "./node_modules/ngx-spinner/fesm5/ngx-spinner.js");
/* harmony import */ var _shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../shared/services/notification-service/notification.service */ "./src/app/shared/services/notification-service/notification.service.ts");
/* harmony import */ var _shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../shared/services/common/common.service */ "./src/app/shared/services/common/common.service.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








var AgencyAdminGivenmedicationReportComponent = /** @class */ (function () {
    function AgencyAdminGivenmedicationReportComponent(apiService, error, spinner, notification, commonService) {
        this.apiService = apiService;
        this.error = error;
        this.spinner = spinner;
        this.notification = notification;
        this.commonService = commonService;
        this.reportList = [];
        this.pageNo = 0;
        this.limit = 10;
        this.totalRecord = 0;
        this.searchByStudentName = '';
        this.loader = true;
        this.showClearBtn = false;
    }
    AgencyAdminGivenmedicationReportComponent.prototype.ngOnInit = function () {
        this.getGivenMedicationDetails();
    };
    AgencyAdminGivenmedicationReportComponent.prototype.getGivenMedicationDetails = function () {
        var _this = this;
        this.loader = true;
        this.reportList = [];
        this.spinner.show();
        var data = {
            'agencyID': this.commonService.getAgencyId(),
            'studentName': this.searchByStudentName,
            'page': this.pageNo,
            'limit': this.limit
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_1__["AgencyAPIURLs"].GetGivenMedicationReport, data, null).subscribe(function (res) {
            _this.totalRecord = res.body.totalRows;
            if (res.body.statusCode === 200) {
                _this.spinner.hide();
                _this.reportList = res.body.data;
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
            _this.loader = false;
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminGivenmedicationReportComponent.prototype.paginate = function (event) {
        this.pageNo = event.page;
        this.getGivenMedicationDetails();
    };
    AgencyAdminGivenmedicationReportComponent.prototype.pdfReportForGivenMedication = function () {
        var _this = this;
        this.loader = true;
        this.spinner.show();
        var req = {
            'StudentName': this.searchByStudentName,
            'agencyID': this.commonService.getAgencyId()
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_1__["AgencyAPIURLs"].PdfGivenMedicationList, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                var filename = _environments_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].baseUrl + res.body.fileName;
                var name_1 = res.body.fileName;
                window.open(filename);
                setTimeout(function () {
                    _this.deletePdFFromServer(name_1);
                }, 10000);
            }
            else {
                _this.error.unknownError();
            }
            _this.loader = false;
            _this.spinner.hide();
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    // Delete pdf after use from server
    AgencyAdminGivenmedicationReportComponent.prototype.deletePdFFromServer = function (filename) {
        var req = {
            'fileName': filename,
            'agencyID': this.commonService.getAgencyId()
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_1__["AgencyAPIURLs"].DeleteExistingFile, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
            }
            else {
            }
        }, function (err) {
            console.log(err);
        });
    };
    AgencyAdminGivenmedicationReportComponent.prototype.search = function () {
        this.showClearBtn = true;
        this.getGivenMedicationDetails();
    };
    AgencyAdminGivenmedicationReportComponent.prototype.clearSearch = function () {
        this.searchByStudentName = '';
        this.showClearBtn = false;
        this.getGivenMedicationDetails();
    };
    AgencyAdminGivenmedicationReportComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-agency-admin-givenmedication-report',
            template: __webpack_require__(/*! ./agency-admin-givenmedication-report.component.html */ "./src/app/layout/agency-admin/components/agency-admin-givenmedication-report/agency-admin-givenmedication-report.component.html"),
            styles: [__webpack_require__(/*! ./agency-admin-givenmedication-report.component.css */ "./src/app/layout/agency-admin/components/agency-admin-givenmedication-report/agency-admin-givenmedication-report.component.css")]
        }),
        __metadata("design:paramtypes", [_shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_3__["AgencyApiService"], _shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_4__["ErrorHandlerService"],
            ngx_spinner__WEBPACK_IMPORTED_MODULE_5__["NgxSpinnerService"], _shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_6__["NotificationService"],
            _shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_7__["CommonService"]])
    ], AgencyAdminGivenmedicationReportComponent);
    return AgencyAdminGivenmedicationReportComponent;
}());



/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-incident-report/agency-admin-incident-report.component.css":
/*!************************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-incident-report/agency-admin-incident-report.component.css ***!
  \************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\r\n#myInput {\r\n    background-image: url('/css/searchicon.png');\r\n    background-position: 10px 12px;\r\n    background-repeat: no-repeat;\r\n    width: 100%;\r\n    font-size: 16px;\r\n    padding: 12px 20px 12px 40px;\r\n    border: 1px solid #ddd;\r\n    margin-bottom: 12px;\r\n  }\r\n  \r\n  #myUL {\r\n    list-style-type: none;\r\n    padding: 0;\r\n    margin: 0;\r\n  }\r\n  \r\n  #myUL li a {\r\n    border: 1px solid #ddd;\r\n    margin-top: -1px; /* Prevent double borders */\r\n    background-color: #f6f6f6;\r\n    padding: 12px;\r\n    text-decoration: none;\r\n    font-size: 18px;\r\n    color: black;\r\n    display: block\r\n  }\r\n  \r\n  #myUL li a:hover:not(.header) {\r\n    background-color: #eee;\r\n  }\r\n  \r\n  /* Added sby Aniket */\r\n  \r\n  .fa-pencil, .fa-eye, .fa-chevron-left, .fa-chevron-right, .fa-plus-circle {\r\n    color: #58A7FE;\r\n    padding-right: 22px;\r\n    font-size: 15px;\r\n  }\r\n  \r\n  .incident-tabs {\r\n    margin-top: 20px;\r\n    margin-bottom: 5px !important;\r\n    border-bottom: 1px solid #e8e8e8;\r\n    text-align: center;\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n  \r\n  .incident-tabs .nav-link {\r\n    border-radius: 10px 10px 0 0;\r\n  }\r\n  \r\n  .modal-body {\r\n    padding: 20px;\r\n  }\r\n  \r\n  .info-icon{\r\n    margin-left: 243px;\r\n    font-size: 25px; \r\n    color: #383333;\r\n}\r\n  \r\n  .info-icon{\r\n  margin-left: -850px;\r\n  font-size: 20px; \r\n  color: #383333;\r\n}\r\n\r\n\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L2FnZW5jeS1hZG1pbi9jb21wb25lbnRzL2FnZW5jeS1hZG1pbi1pbmNpZGVudC1yZXBvcnQvYWdlbmN5LWFkbWluLWluY2lkZW50LXJlcG9ydC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtJQUNJLDRDQUE0QztJQUM1Qyw4QkFBOEI7SUFDOUIsNEJBQTRCO0lBQzVCLFdBQVc7SUFDWCxlQUFlO0lBQ2YsNEJBQTRCO0lBQzVCLHNCQUFzQjtJQUN0QixtQkFBbUI7RUFDckI7O0VBRUE7SUFDRSxxQkFBcUI7SUFDckIsVUFBVTtJQUNWLFNBQVM7RUFDWDs7RUFFQTtJQUNFLHNCQUFzQjtJQUN0QixnQkFBZ0IsRUFBRSwyQkFBMkI7SUFDN0MseUJBQXlCO0lBQ3pCLGFBQWE7SUFDYixxQkFBcUI7SUFDckIsZUFBZTtJQUNmLFlBQVk7SUFDWjtFQUNGOztFQUVBO0lBQ0Usc0JBQXNCO0VBQ3hCOztFQUVBLHFCQUFxQjs7RUFFckI7SUFDRSxjQUFjO0lBQ2QsbUJBQW1CO0lBQ25CLGVBQWU7RUFDakI7O0VBQ0E7SUFDRSxnQkFBZ0I7SUFDaEIsNkJBQTZCO0lBQzdCLGdDQUFnQztJQUNoQyxrQkFBa0I7SUFDbEIsYUFBYTtJQUNiLHVCQUF1QjtFQUN6Qjs7RUFDQTtJQUNFLDRCQUE0QjtFQUM5Qjs7RUFDQTtJQUNFLGFBQWE7RUFDZjs7RUFFQTtJQUNFLGtCQUFrQjtJQUNsQixlQUFlO0lBQ2YsY0FBYztBQUNsQjs7RUFFQTtFQUNFLG1CQUFtQjtFQUNuQixlQUFlO0VBQ2YsY0FBYztBQUNoQiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9hZ2VuY3ktYWRtaW4vY29tcG9uZW50cy9hZ2VuY3ktYWRtaW4taW5jaWRlbnQtcmVwb3J0L2FnZW5jeS1hZG1pbi1pbmNpZGVudC1yZXBvcnQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG4jbXlJbnB1dCB7XHJcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJy9jc3Mvc2VhcmNoaWNvbi5wbmcnKTtcclxuICAgIGJhY2tncm91bmQtcG9zaXRpb246IDEwcHggMTJweDtcclxuICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgIHBhZGRpbmc6IDEycHggMjBweCAxMnB4IDQwcHg7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjZGRkO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTJweDtcclxuICB9XHJcbiAgXHJcbiAgI215VUwge1xyXG4gICAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIG1hcmdpbjogMDtcclxuICB9XHJcbiAgXHJcbiAgI215VUwgbGkgYSB7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjZGRkO1xyXG4gICAgbWFyZ2luLXRvcDogLTFweDsgLyogUHJldmVudCBkb3VibGUgYm9yZGVycyAqL1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Y2ZjZmNjtcclxuICAgIHBhZGRpbmc6IDEycHg7XHJcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICBmb250LXNpemU6IDE4cHg7XHJcbiAgICBjb2xvcjogYmxhY2s7XHJcbiAgICBkaXNwbGF5OiBibG9ja1xyXG4gIH1cclxuICBcclxuICAjbXlVTCBsaSBhOmhvdmVyOm5vdCguaGVhZGVyKSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWVlO1xyXG4gIH1cclxuICBcclxuICAvKiBBZGRlZCBzYnkgQW5pa2V0ICovXHJcbiAgXHJcbiAgLmZhLXBlbmNpbCwgLmZhLWV5ZSwgLmZhLWNoZXZyb24tbGVmdCwgLmZhLWNoZXZyb24tcmlnaHQsIC5mYS1wbHVzLWNpcmNsZSB7XHJcbiAgICBjb2xvcjogIzU4QTdGRTtcclxuICAgIHBhZGRpbmctcmlnaHQ6IDIycHg7XHJcbiAgICBmb250LXNpemU6IDE1cHg7XHJcbiAgfVxyXG4gIC5pbmNpZGVudC10YWJzIHtcclxuICAgIG1hcmdpbi10b3A6IDIwcHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiA1cHggIWltcG9ydGFudDtcclxuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZThlOGU4O1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIH1cclxuICAuaW5jaWRlbnQtdGFicyAubmF2LWxpbmsge1xyXG4gICAgYm9yZGVyLXJhZGl1czogMTBweCAxMHB4IDAgMDtcclxuICB9XHJcbiAgLm1vZGFsLWJvZHkge1xyXG4gICAgcGFkZGluZzogMjBweDtcclxuICB9XHJcblxyXG4gIC5pbmZvLWljb257XHJcbiAgICBtYXJnaW4tbGVmdDogMjQzcHg7XHJcbiAgICBmb250LXNpemU6IDI1cHg7IFxyXG4gICAgY29sb3I6ICMzODMzMzM7XHJcbn1cclxuXHJcbi5pbmZvLWljb257XHJcbiAgbWFyZ2luLWxlZnQ6IC04NTBweDtcclxuICBmb250LXNpemU6IDIwcHg7IFxyXG4gIGNvbG9yOiAjMzgzMzMzO1xyXG59XHJcblxyXG4iXX0= */"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-incident-report/agency-admin-incident-report.component.html":
/*!*************************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-incident-report/agency-admin-incident-report.component.html ***!
  \*************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"wrapper\">\r\n  <div class=\"container-fluid\">\r\n\r\n    <div class=\"pagetitle\">\r\n      <div>\r\n        <h2>Incident Report\r\n        </h2>\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\" *ngIf=\"isSubscriptionActive\" class=\"btn btn-red\" data-toggle=\"modal\"\r\n          data-target=\".addincident\" (click)=\"clearForm()\">Add\r\n          Incident Report</button>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"subhead d-flex justify-content-between mt-20 mb-20\">\r\n      <div>\r\n        <h3>Incident Report</h3>\r\n      </div>\r\n      <div style=\"cursor:pointer\" title=\"Download report\" (click)=\"pdfReportForIncident()\"><i class=\"fa fa-download\"\r\n          aria-hidden=\"true\"></i>\r\n      </div>\r\n      <div class=\"info-icon\">\r\n        <i class=\"fa fa-info-circle\" (click)=\"OpenInfoVideo()\" data-toggle=\"modal\" aria-hidden=\"true\"\r\n          title=\"Information Video\"></i>\r\n      </div>\r\n    </div>\r\n\r\n    <ul class=\"nav nav-pills mb-3 incident-tabs\" id=\"pills-tab\" role=\"tablist\">\r\n      <li class=\"nav-item\" (click)=\"getAllIncidents();onTabChange()\">\r\n        <a class=\"nav-link active\" id=\"incidentLog\" data-toggle=\"pill\" href=\"#pills-incidentLog\" role=\"tab\"\r\n          aria-controls=\"pills-incidentLog\" aria-selected=\"false\">Incident Log</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link \" (click)=\"getAllBitingIncidents();onTabChange()\" id=\"bittingLog\" data-toggle=\"pill\"\r\n          href=\"#pills-bittingLog\" role=\"tab\" aria-controls=\"pills-bittingLog\" aria-selected=\"true\">Biting Log</a>\r\n      </li>\r\n    </ul>\r\n\r\n    <div class=\"tab-content\" id=\"pills-tabContent\">\r\n      <div class=\"tab-pane fade show active\" id=\"pills-incidentLog\" role=\"tabpanel\" aria-labelledby=\"incidentLog\">\r\n\r\n        <div class=\"leftfilter searchwitoutcard\">\r\n          <div class=\"row algcenter\">\r\n            <div class=\"search-date\">\r\n              <div class=\"pr15 label-text\">Search Name : </div>\r\n              <input type=\"text\" placeholder=\"Search student name\" [(ngModel)]=\"searchByStudentName\"\r\n                class=\"form-control mr15\" id=\"\">\r\n            </div>\r\n            <div class=\"search-date\">\r\n              <div class=\"pr15 label-text\">From Date : </div>\r\n              <input type=\"text\" placeholder=\"Search incident date\" [(ngModel)]=\"fromDate\" showWeekNumbers=\"false\"\r\n                class=\"form-control mr15\" [bsConfig]=\"dpConfig\" bsDatepicker>\r\n            </div>\r\n            <div class=\"search-date\">\r\n              <div class=\"pr15 label-text\">To Date : </div>\r\n              <input type=\"text\" placeholder=\"Search incident date\" [(ngModel)]=\"toDate\" showWeekNumbers=\"false\"\r\n                class=\"form-control mr15\" [bsConfig]=\"dpConfig\" bsDatepicker>\r\n            </div>\r\n            <div class=\"filter-buttons\">\r\n              <button type=\"submit\" class=\"btn btn-send\" *ngIf=\"!showClearBtn\" (click)=\"search()\">Search</button>\r\n              <button type=\"submit\" class=\"btn btn-secondary\" *ngIf=\"showClearBtn\"\r\n                (click)=\"clearSearch()\">Clear</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"innertable\">\r\n          <div class=\"table-responsive\">\r\n            <table class=\"table\">\r\n              <thead class=\"thead-light\">\r\n                <tr>\r\n                  <th scope=\"col\">Date</th>\r\n                  <th scope=\"col\">Student</th>\r\n                  <th scope=\"col\">Location</th>\r\n                  <th scope=\"col\">Incident</th>\r\n                  <th scope=\"col\">Report Date</th>\r\n                  <th scope=\"col\">Reporter</th>\r\n                  <th scope=\"col\">Action Taken</th>\r\n                  <th scope=\"col\" class=\"text-center\">Actions</th>\r\n                  <th scope=\"col\" class=\"text-center\">Download Details</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody *ngIf=\"incidentsList.length != 0\">\r\n                <tr *ngFor=\"let incidents of incidentsList\">\r\n                  <td>{{incidents.incidentDate | date}}</td>\r\n                  <td>{{incidents.studentName}}</td>\r\n                  <td>{{incidents.placeOfIncident}} </td>\r\n                  <td>{{incidents.description}}</td>\r\n                  <td>{{incidents.createdDate | date}}</td>\r\n                  <td>{{incidents.teacherName}}</td>\r\n                  <td>{{incidents.actionTaken}}</td>\r\n                  <td class=\"text-center\">\r\n\r\n                    <a data-toggle=\"modal\" data-target=\".addincident\" title=\"Edit/View incident\"\r\n                      (click)=\"getIncidentsDetails(incidents,1)\">\r\n                      <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\r\n                    </a>\r\n\r\n                    <a title=\"Delete incident\" *ngIf=\"isSubscriptionActive \">\r\n                      <i class=\"fa fa-trash\" *ngIf=\"!incidents.isAcknowledge\" aria-hidden=\"true\" title=\"delete\"\r\n                        (click)=\"deleteIncident(incidents)\"></i>\r\n                    </a>\r\n\r\n                  </td>\r\n\r\n                  <td class=\"text-center\">\r\n                    <a title=\"Download incident report\">\r\n                      <i class=\"fa fa-download\" aria-hidden=\"true\" title=\"Download\"\r\n                        (click)=\"pdfReportForIncidentForPerticularstudent(incidents)\"></i>\r\n                    </a>\r\n                  </td>\r\n\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n            <div class=\"text-center\">\r\n              <span *ngIf=\"(incidentsList.length == 0 && !loader )\">No result found</span>\r\n            </div>\r\n          </div>\r\n          <p-paginator [alwaysShow]=\"false\" [rows]=\"limit\" [totalRecords]=\"totalRecord\"\r\n            (onPageChange)=\"paginate($event,1)\"></p-paginator>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"tab-pane fade show\" id=\"pills-bittingLog\" role=\"tabpanel\" aria-labelledby=\"bittingLog\">\r\n        <div class=\"innertable\">\r\n          <div class=\"table-responsive\">\r\n            <table class=\"table\">\r\n              <thead class=\"thead-light\">\r\n                <tr>\r\n                  <th scope=\"col\">Date</th>\r\n                  <th scope=\"col\">Student</th>\r\n                  <th scope=\"col\">Location</th>\r\n                  <th scope=\"col\">Incident</th>\r\n                  <th scope=\"col\">Report Date</th>\r\n                  <th scope=\"col\">Reporter</th>\r\n                  <th scope=\"col\">Action Taken</th>\r\n                  <th scope=\"col\" class=\"text-center\">Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr *ngFor=\"let incidents of bitingLogList\">\r\n                  <td>{{incidents.incidentDate | date}}</td>\r\n                  <td>{{incidents.studentName}}</td>\r\n                  <td>{{incidents.placeOfIncident}} </td>\r\n                  <td>{{incidents.description}}</td>\r\n                  <td>{{incidents.createdDate | date}}</td>\r\n                  <td>{{incidents.teacherName}}</td>\r\n                  <td>{{incidents.actionTaken}}</td>\r\n                  <td class=\"text-center\">\r\n                    <a data-toggle=\"modal\" data-target=\".addincident\" title=\"Edit/View incident\"\r\n                      (click)=\"getIncidentsDetails(incidents, 2)\">\r\n                      <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\r\n                    </a>\r\n                    <a title=\"Delete incident\">\r\n                      <i class=\"fa fa-trash\" *ngIf=\"!incidents.isAcknowledge\" aria-hidden=\"true\" title=\"Delete incident\"\r\n                        (click)=\"deleteIncident(incidents)\"></i>\r\n                    </a>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n            <div class=\"text-center\">\r\n              <span *ngIf=\"(bitingLogList.length == 0 && !loader )\">No result found</span>\r\n            </div>\r\n          </div>\r\n          <p-paginator [alwaysShow]=\"false\" [rows]=\"limit\" [totalRecords]=\"totalRecord\"\r\n            (onPageChange)=\"paginate($event,2)\"></p-paginator>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <!-- modal start -->\r\n    <div class=\"modal fade addincident\" id=\"#addincident\" tabindex=\"-1\" role=\"dialog\"\r\n      aria-labelledby=\"myLargeModalLabel\" aria-hidden=\"true\">\r\n      <div class=\"modal-dialog modal-lg\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">{{incidentId != 0 ? 'Update Incident': 'Add Incident'}}\r\n            </h5>\r\n\r\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <form [formGroup]=\"incidentForm\">\r\n              <div class=\"row mb-20\">\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"exampleFormControlSelect1\">Class*</label>\r\n                    <select class=\"form-control\" placeholder=\"Serch\" formControlName=\"class\"\r\n                      id=\"exampleFormControlSelect1\" (change)=\"getStudentsList()\">\r\n                      <option value=\"\">Select Class</option>\r\n                      <option *ngFor=\"let classes of classList\" [value]=\"classes.classesID\">{{classes.className}}\r\n                      </option>\r\n                    </select>\r\n                    <div *ngIf=\"f.class.invalid && (f.class.dirty || f.class.touched)\" class=\"text-left errormsg\">\r\n                      <span *ngIf=\"f.class.errors.required\">\r\n                        <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select class</span>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"exampleFormControlSelect1\">Student Name*</label>\r\n                    <select class=\"form-control\" placeholder=\"Serch\" formControlName=\"studentname\"\r\n                      id=\"exampleFormControlSelect2\" (change)=\"getAllParticipants()\">\r\n                      <option value=\"\">Select student name </option>\r\n                      <option *ngFor=\"let students of studentList\" [value]=\"students.studentId\">{{students.studentName}}\r\n                      </option>\r\n                    </select>\r\n                    <div *ngIf=\"f.studentname.invalid && (f.studentname.dirty || f.studentname.touched)\"\r\n                      class=\"text-left errormsg\">\r\n                      <span *ngIf=\"f.studentname.errors.required\">\r\n                        <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select student</span>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n\r\n              <div class=\"row mb-20\">\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Place of Incident*</label>\r\n                    <input type=\"text \" class=\"form-control\" formControlName=\"location\" id=\"\" aria-describedby=\"\"\r\n                      placeholder=\"Enter Place Of Incident\">\r\n                    <div *ngIf=\"f.location.invalid && (f.location.dirty || f.location.touched)\"\r\n                      class=\"text-left errormsg\">\r\n                      <span *ngIf=\"f.location.errors.required\">\r\n                        <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please enter place of incident</span>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Nature of Injury*</label>\r\n                    <select class=\"form-control\" placeholder=\"Nature of Injury\" formControlName=\"nature\"\r\n                      id=\"exampleFormControlSelect1\">\r\n                      <option value=\"\">Select option</option>\r\n                      <option *ngFor=\"let injuries of injurriesList\" [value]=\"injuries.id\">\r\n                        {{injuries.natureOfInjuryName}}</option>\r\n                    </select>\r\n\r\n                    <div *ngIf=\"f.nature.invalid && (f.nature.dirty || f.nature.touched)\" class=\"text-left errormsg\">\r\n                      <span *ngIf=\"f.nature.errors.required\">\r\n                        <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please enter nature of injury</span>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"row mb-20\">\r\n\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Involved Participant(s)</label>\r\n                    <p-multiSelect [options]=\"participantsList\" formControlName=\"participants\"\r\n                      [panelStyle]=\"{minWidth:'200px'}\" [maxSelectedLabels]=\"5\"></p-multiSelect>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"exampleFormControlSelect1\"> First Aid Administered By*</label>\r\n                    <select class=\"form-control\" placeholder=\"First Aid Administered by\" formControlName=\"firstaidadmin\"\r\n                      id=\"exampleFormControlSelect1\">\r\n                      <option value=\"\">Select Reporter</option>\r\n                      <option *ngFor=\"let teachers of teacherList\" [value]=\"teachers.id\">{{teachers.teacherName}}\r\n                      </option>\r\n                    </select>\r\n                    <div *ngIf=\"f.firstaidadmin.invalid && (f.firstaidadmin.dirty || f.firstaidadmin.touched)\"\r\n                      class=\"text-left errormsg\">\r\n                      <span *ngIf=\"f.firstaidadmin.errors.required\">\r\n                        <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select first aid Administered\r\n                          by</span>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"row mb-20\">\r\n\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"exampleFormControlSelect1\"> Doctor Required?*</label>\r\n                    <select class=\"form-control\" formControlName=\"doctorrequired\" id=\"exampleFormControlSelect1\">\r\n                      <option value=\"\">Select option</option>\r\n                      <option value=\"true\">Yes</option>\r\n                      <option value=\"false\">No</option>\r\n                    </select>\r\n                    <div *ngIf=\"f.doctorrequired.invalid && (f.doctorrequired.dirty || f.doctorrequired.touched)\"\r\n                      class=\"text-left errormsg\">\r\n                      <span *ngIf=\"f.doctorrequired.errors.required\">\r\n                        <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select option</span>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Date of Incident*</label>\r\n                    <input type=\"text\" placeholder=\"Select date of incident\" formControlName=\"dateofincident\"\r\n                      showWeekNumbers=\"false\" [maxDate]=\"today\" class=\"form-control\" [bsConfig]=\"dpConfig\" bsDatepicker>\r\n\r\n                    <div *ngIf=\"f.dateofincident.invalid && (f.dateofincident.dirty || f.dateofincident.touched)\"\r\n                      class=\"text-left errormsg\">\r\n                      <span *ngIf=\"f.dateofincident.errors.required\">\r\n                        <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select date of incident</span>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"row mb-20\">\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Time of Incident*</label>\r\n                    <p-calendar class=\"custom-inputbox-incedent\" styleClass=\"form-control\"\r\n                      formControlName=\"timeofincident\" hourFormat=\"12\" [timeOnly]=\"true\" icon=\"pi pi-clock\"\r\n                      [showIcon]=\"true\" placeholder=\"Time of Incident\"></p-calendar>\r\n                    <div *ngIf=\"f.timeofincident.invalid && (f.timeofincident.dirty || f.timeofincident.touched)\"\r\n                      class=\"text-left errormsg\">\r\n                      <span *ngIf=\"f.timeofincident.errors.required\">\r\n                        <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select time</span>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"exampleFormControlSelect1\">Was Parent Informed?*</label>\r\n                    <select class=\"form-control\" formControlName=\"parentinformed\" id=\"exampleFormControlSelect1\">\r\n                      <option value=\"\">Select option</option>\r\n                      <option value=\"true\">Yes</option>\r\n                      <option value=\"false\">No</option>\r\n                    </select>\r\n                    <div *ngIf=\"f.parentinformed.invalid && (f.parentinformed.dirty || f.parentinformed.touched)\"\r\n                      class=\"text-left errormsg\">\r\n                      <span *ngIf=\"f.parentinformed.errors.required\">\r\n                        <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select option</span>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"row mb-20\">\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">If Yes, Then How?</label>\r\n                    <input type=\"text\" class=\"form-control\" formControlName=\"wayofinform\" id=\"\" aria-describedby=\"\"\r\n                      placeholder=\"Enter How We Inform To Parent\">\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Description of the Injury</label>\r\n                    <textarea type=\"text\" formControlName=\"description\" class=\"form-control\" id=\"\" aria-describedby=\"\"\r\n                      placeholder=\"Enter Description\"> </textarea>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"row mb-20\">\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Action Taken</label>\r\n                    <textarea type=\"text\" formControlName=\"action\" class=\"form-control\" id=\"\" aria-describedby=\"\"\r\n                      placeholder=\"Enter Action Taken\"> </textarea>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Incident Priority</label>\r\n                    <select class=\"form-control\" formControlName=\"priority\" id=\"exampleFormControlSelect1\">\r\n                      <option value=\"\">Select priority</option>\r\n                      <option *ngFor=\"let obj of incidentPrioritiesList\" [value]=\"obj.value\">{{obj.label}}</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"row mb-20\">\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Part of Body</label>\r\n                    <input type=\"text\" class=\"form-control\" formControlName=\"partofbody\" id=\"\" aria-describedby=\"\"\r\n                      placeholder=\"Injured body part\">\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Context Environment</label>\r\n                    <input type=\"text\" class=\"form-control\" formControlName=\"contextenviroment\" id=\"\"\r\n                      aria-describedby=\"\" placeholder=\"Context Environment\">\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"row mb-20\" *ngIf=\"incidentId\">\r\n                <div class=\"col-lg-12\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Comment From Parent</label>\r\n                    <textarea disabled type=\"text\" rows=\"5\" maxlength=\"500\" formControlName=\"parentcomment\"\r\n                      class=\"form-control\" id=\"\" aria-describedby=\"\" placeholder=\"Enter comment\"> </textarea>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"row mb-20\">\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Context Child</label>\r\n                    <input type=\"text\" class=\"form-control\" formControlName=\"contextchild\" id=\"\" aria-describedby=\"\"\r\n                      placeholder=\"Context Child\">\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </form>\r\n            <div class=\"row mb-20\" *ngIf=\"incidentId != 0 && incidentVm.isAcknowledge\">\r\n              <div class=\"col-lg-6\">\r\n                <p> <b>Note:</b> This incident is acknowledge by parent, You can't edit or delete it.</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n            <button type=\"button\" *ngIf=\"incidentId == 0\" class=\"btn btn-primary\" (click)=\"saveIncident(2)\"> Add\r\n              Incident Report </button>\r\n            <button type=\"button\" *ngIf=\"incidentId != 0 && !incidentVm.isAcknowledge\" class=\"btn btn-primary\"\r\n              (click)=\"saveIncident(3)\"> Update\r\n              Incident Report </button>\r\n            <button type=\"button\" *ngIf=\"incidentId != 0 && incidentVm.isAcknowledge\" disabled class=\"btn btn-primary\"\r\n              (click)=\"saveIncident(3)\"> Update\r\n              Incident Report </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- For Information Video -->\r\n    <div class=\"modal fade\" id=\"infovideo\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"checkoutLabel\"\r\n      aria-hidden=\"true\">\r\n      <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"checkoutLabel\">Information Video</h5>\r\n            <button type=\"button\" *ngIf=\"videoPath\" class=\"close\" (click)=\"PauseInfoVideo()\" data-dismiss=\"modal\"\r\n              aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n            <button type=\"button\" *ngIf=\"!videoPath\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <div class=\"cont video_section_pop\" *ngIf=\"videoPath\">\r\n              <video controls id=\"pausevideo\">\r\n                <source *ngIf=\"videoPath\" [src]=\"videoPath\" type=\"video/mp4\" />\r\n                <source *ngIf=\"videoPath\" [src]=\"videoPath\" type=\"video/ogg\" />\r\n                <source *ngIf=\"videoPath\" [src]=\"videoPath\" type=\"video/webm\" />\r\n                Browser not supported\r\n              </video>\r\n            </div>\r\n\r\n            <div class=\"cont video_section_pop\" *ngIf=\"!videoPath\">\r\n              Video Not Found\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n  </div>\r\n</div>\r\n<ngx-spinner type=\"ball-atom\" size=\"medium\" color=\"#58A7FE\"></ngx-spinner>\r\n<app-confirm-box></app-confirm-box>"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-incident-report/agency-admin-incident-report.component.ts":
/*!***********************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-incident-report/agency-admin-incident-report.component.ts ***!
  \***********************************************************************************************************************/
/*! exports provided: AgencyAdminIncidentReportComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AgencyAdminIncidentReportComponent", function() { return AgencyAdminIncidentReportComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _teacher_shared_constant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../teacher/shared/constant */ "./src/app/layout/teacher/shared/constant.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var ngx_bootstrap__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ngx-bootstrap */ "./node_modules/ngx-bootstrap/esm5/ngx-bootstrap.js");
/* harmony import */ var _teacher_shared_services_teacher_api_service_teacher_api_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../teacher/shared/services/teacher-api-service/teacher-api.service */ "./src/app/layout/teacher/shared/services/teacher-api-service/teacher-api.service.ts");
/* harmony import */ var _shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../shared/services/error-handler/error-handler.service */ "./src/app/shared/services/error-handler/error-handler.service.ts");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ngx-spinner */ "./node_modules/ngx-spinner/fesm5/ngx-spinner.js");
/* harmony import */ var _shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../shared/services/notification-service/notification.service */ "./src/app/shared/services/notification-service/notification.service.ts");
/* harmony import */ var _shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../shared/services/common/common.service */ "./src/app/shared/services/common/common.service.ts");
/* harmony import */ var primeng_api__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! primeng/api */ "./node_modules/primeng/api.js");
/* harmony import */ var primeng_api__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(primeng_api__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var _shared_constatant__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../shared/constatant */ "./src/app/layout/agency-admin/components/shared/constatant.ts");
/* harmony import */ var src_environments_environment__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! src/environments/environment */ "./src/environments/environment.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};












var AgencyAdminIncidentReportComponent = /** @class */ (function () {
    function AgencyAdminIncidentReportComponent(apiService, error, spinner, notification, commonService, fb, confirmationService) {
        this.apiService = apiService;
        this.error = error;
        this.spinner = spinner;
        this.notification = notification;
        this.commonService = commonService;
        this.fb = fb;
        this.confirmationService = confirmationService;
        this.incidentsList = [];
        this.incidentDetails = [];
        this.incidentVm = {};
        this.classList = [];
        this.studentList = [];
        this.searchedStudentList = [];
        this.IncidentInvolvments = [];
        this.participantSudents = [];
        this.participantsList = [];
        this.teacherList = [];
        this.closeModal = '';
        this.injurriesList = [];
        this.incidentPrioritiesList = [];
        this.bitingLogList = [];
        this.loader = true;
        this.mode = 0;
        this.activeTab = 1;
        this.pageNo = 0;
        this.limit = 10;
        this.totalRecord = 0;
        this.showClearBtn = false;
        this.videoPath = '';
        this.dpConfig = new ngx_bootstrap__WEBPACK_IMPORTED_MODULE_3__["BsDatepickerConfig"]();
        this.isSubscriptionActive = this.commonService.getSubscriptionStatus();
    }
    AgencyAdminIncidentReportComponent.prototype.ngOnInit = function () {
        this.loader = true;
        this.participantSudents = [];
        this.incidentVm = {};
        this.incidentId = 0;
        this.dpConfig = Object.assign({}, { containerClass: 'theme-dark-blue' }, { showWeekNumbers: false });
        this.today = new Date();
        this.createIncidentForm();
        this.getAllIncidents();
        this.getAllClassess();
        this.getAllTeachers();
        this.getAllNatureofinjury();
        this.getIncidentPriorities();
        this.getSectionVideo();
    };
    AgencyAdminIncidentReportComponent.prototype.OpenInfoVideo = function (data) {
        $('#infovideo').modal('show');
    };
    AgencyAdminIncidentReportComponent.prototype.getSectionVideo = function () {
        var _this = this;
        var req = {
            'SectionID': 15
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_1__["TeacherAPIURLs"].GetVideoForSection, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.videoPath = res.body.filePath;
                console.log(_this.videoPath, 'bbbbbbbbbbbbbbb');
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminIncidentReportComponent.prototype.PauseInfoVideo = function () {
        var myVideo = document.getElementById('pausevideo');
        myVideo.pause();
        myVideo.currentTime = 0;
    };
    AgencyAdminIncidentReportComponent.prototype.createIncidentForm = function () {
        if (this.incidentId === 0) {
            this.incidentForm = this.fb.group({
                studentname: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
                age: [''],
                location: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
                nature: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
                participants: [''],
                firstaidadmin: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
                doctorrequired: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
                dateofincident: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
                timeofincident: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
                parentinformed: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
                wayofinform: [''],
                description: [''],
                action: [''],
                class: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
                priority: [''],
                partofbody: [''],
                contextenviroment: [''],
                contextchild: [''],
                reporter: [''],
                parentcomment: [''],
                acknowledge: [false]
            });
        }
    };
    AgencyAdminIncidentReportComponent.prototype.createEditablrForm = function () {
        if (this.incidentId !== 0) {
            this.incidentForm = this.fb.group({
                studentname: [this.incidentVm.StudentID, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
                age: [''],
                reporter: [this.incidentVm.Reporter],
                location: [this.incidentVm.IncidentLocation, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
                nature: [this.incidentVm.NatureOfInjuryID, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
                participants: [this.participantSudents],
                firstaidadmin: [this.incidentVm.FirstAidAdministeredID, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
                doctorrequired: [this.incidentVm.IsDoctorRequired, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
                dateofincident: [this.incidentVm.IncidentDate, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
                timeofincident: [this.incidentVm.IncidentTime, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
                parentinformed: [this.incidentVm.WasParentInformed, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
                wayofinform: [this.incidentVm.ParentInformedBy],
                description: [this.incidentVm.Description],
                action: [this.incidentVm.ActionTaken],
                class: [this.incidentVm.ClassesID, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
                priority: [this.incidentVm.IncidentPriortyTypeID],
                partofbody: [this.incidentVm.partOfBody],
                contextenviroment: [this.incidentVm.contextEnviroment],
                contextchild: [this.incidentVm.contextChild],
                parentcomment: [this.incidentVm.ParentComment],
                acknowledge: [this.incidentVm.isAcknowledge]
            });
        }
    };
    Object.defineProperty(AgencyAdminIncidentReportComponent.prototype, "f", {
        // convenience getter for easy access to form fields
        get: function () { return this.incidentForm.controls; },
        enumerable: true,
        configurable: true
    });
    AgencyAdminIncidentReportComponent.prototype.getIncidentsDetails = function (data, type) {
        var _this = this;
        this.mode = type;
        this.getAllParticipants();
        this.incidentVm = {};
        this.spinner.show();
        var req = {
            'agencyID': this.commonService.getAgencyId(),
            'incidentID': data.id,
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_1__["TeacherAPIURLs"].GetIncidentsDetails, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                if (res.body.data.length !== null) {
                    _this.incidentVm.AgencyID = _this.commonService.getAgencyId();
                    _this.incidentId = res.body.data.id;
                    _this.incidentVm.ClassesID = res.body.data.classesID;
                    _this.incidentVm.StudentID = res.body.data.studentID;
                    _this.incidentVm.Reporter = res.body.data.teacherID;
                    _this.incidentVm.IncidentLocation = res.body.data.placeOfIncident;
                    _this.incidentVm.NatureOfInjuryID = res.body.data.natureOfInjuryID;
                    _this.incidentVm.FirstAidAdministeredID = res.body.data.firstAidAdministeredID;
                    _this.incidentVm.IsDoctorRequired = res.body.data.isDoctorRequired;
                    _this.incidentVm.IncidentDate = _this.commonService.getLocalDateTimeFromUTC(res.body.data.incidentDate);
                    _this.incidentVm.IncidentTime = _this.commonService.getLocalDateTimeFromUTC(res.body.data.incidentTime);
                    _this.incidentVm.contextChild = res.body.data.contextChild;
                    _this.incidentVm.contextEnviroment = res.body.data.contextEnviroment;
                    _this.incidentVm.partOfBody = res.body.data.partOfBody;
                    _this.incidentVm.WasParentInformed = res.body.data.wasParentInformed;
                    _this.incidentVm.Description = res.body.data.description;
                    _this.incidentVm.ActionTaken = res.body.data.actionTaken;
                    _this.incidentVm.IncidentPriortyTypeID = res.body.data.incidentPriortyTypeID;
                    _this.incidentVm.ParentInformedBy = res.body.data.parentInformedBy;
                    _this.participantSudents = [];
                    _this.incidentVm.isAcknowledge = res.body.data.isAcknowledge;
                    _this.incidentVm.ParentComment = res.body.data.parentComment;
                    res.body.data.incidentInvolvments.forEach(function (element) {
                        _this.participantSudents.push(element.studentID);
                    });
                    _this.createEditablrForm();
                    _this.getStudentsList();
                    _this.spinner.hide();
                }
                _this.spinner.hide();
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminIncidentReportComponent.prototype.getAllIncidents = function () {
        var _this = this;
        this.loader = true;
        this.spinner.show();
        var req = {
            'agencyID': this.commonService.getAgencyId(),
            'limit': this.limit,
            'page': this.pageNo,
            'fromDate': this.fromDate ? this.fromDate : this.blankDate,
            'toDate': this.toDate ? this.toDate : this.blankDate,
            'studentName': this.searchByStudentName
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_1__["TeacherAPIURLs"].GetAllIncidents, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.totalRecord = res.body.totalRows;
                _this.incidentsList = res.body.data;
                _this.getIncidentCountWithActionTaken(_this.incidentsList);
                _this.spinner.hide();
                _this.loader = false;
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminIncidentReportComponent.prototype.getAllBitingIncidents = function () {
        var _this = this;
        this.spinner.show();
        var req = {
            'agencyID': this.commonService.getAgencyId(),
            'limit': this.limit,
            'page': this.pageNo
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_1__["TeacherAPIURLs"].GetBittingIncidentsDetails, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.totalRecord = res.body.totalRows;
                _this.bitingLogList = res.body.data;
                console.log(_this.bitingLogList, 'bitttttt');
                _this.spinner.hide();
                _this.loader = false;
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    // Get All teacher List
    AgencyAdminIncidentReportComponent.prototype.getAllTeachers = function () {
        var _this = this;
        var req = {
            'agencyID': this.commonService.getAgencyId(),
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_1__["TeacherAPIURLs"].GetAllTeachers, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.teacherList = res.body.data;
            }
            else {
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    // Method to create incident
    AgencyAdminIncidentReportComponent.prototype.saveIncident = function (type) {
        var _this = this;
        this.IncidentInvolvments = [];
        if (this.incidentForm.valid) {
            this.spinner.show();
            this.incidentVm.StudentID = this.incidentForm.value.studentname;
            this.incidentVm.AgencyID = this.commonService.getAgencyId();
            this.incidentVm.TeacherID = this.incidentForm.value.firstaidadmin; // sending teacher id as reporter id
            this.incidentVm.IncidentPriortyTypeID = this.incidentForm.value.priority === '' ? 0 : this.incidentForm.value.priority;
            this.incidentVm.Reporter = this.incidentForm.value.reporter;
            this.incidentVm.PlaceOfIncident = this.incidentForm.value.location;
            this.incidentVm.Id = this.incidentId !== 0 ? this.incidentId : 0;
            this.incidentVm.NatureOfInjuryID = this.incidentForm.value.nature;
            this.incidentVm.IncidentTime = new Date(this.incidentForm.value.timeofincident);
            if (this.incidentForm.value.participants.length !== 0) {
                this.incidentForm.value.participants.forEach(function (element) {
                    _this.IncidentInvolvments.push({
                        'id': 0,
                        'agencyID': _this.commonService.getAgencyId(),
                        'studentID': element,
                        'studentName': '',
                        'classesID': _this.incidentForm.value.class,
                        'className': '',
                        'incidentID': _this.incidentId !== 0 ? _this.incidentId : 0
                    });
                });
            }
            this.incidentVm.FirstAidAdministeredID = this.incidentForm.value.firstaidadmin;
            this.incidentVm.IncidentDate = this.incidentForm.value.dateofincident;
            this.incidentVm.ParentInformedBy = this.incidentForm.value.wayofinform;
            this.incidentVm.WasParentInformed = this.incidentForm.value.parentinformed;
            this.incidentVm.Description = this.incidentForm.value.description;
            this.incidentVm.ActionTaken = this.incidentForm.value.action;
            this.incidentVm.ClassesID = this.incidentForm.value.class;
            this.incidentVm.IncidentInvolvments = this.IncidentInvolvments;
            this.incidentVm.partOfBody = this.incidentForm.value.partofbody;
            this.incidentVm.contextEnviroment = this.incidentForm.value.contextenviroment;
            this.incidentVm.contextChild = this.incidentForm.value.contextchild;
            this.incidentVm.isAcknowledge = this.incidentForm.value.acknowledge;
            this.incidentVm.ParentComment = this.incidentForm.value.parentcomment;
            this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_1__["TeacherAPIURLs"].SaveIncident, this.incidentVm, null).subscribe(function (res) {
                if (res.body.statusCode === 200) {
                    _this.notification.success({
                        message: _this.incidentId !== 0 ? 'Incident report updated successfully'
                            : 'Incident report added successfully', title: ''
                    });
                    if (type === 2 || _this.mode === 1) {
                        _this.activeTab = 2;
                        $('#incidentLog').tab('show');
                        _this.getAllIncidents();
                    }
                    else {
                        _this.getAllBitingIncidents();
                    }
                    $('.addincident').modal('hide');
                }
                else {
                    _this.spinner.hide();
                    _this.error.unknownError();
                }
            }, function (err) {
                _this.spinner.hide();
                _this.error.commonError(err);
            });
        }
        else {
            this.spinner.hide();
            this.commonService.validateAllFields(this.incidentForm);
        }
    };
    AgencyAdminIncidentReportComponent.prototype.changeForm = function () {
        this.activeTab = 2;
        $('#incidentLog').tab('show');
    };
    AgencyAdminIncidentReportComponent.prototype.closeDialog = function () {
        this.closeModal = 'modal';
        $('.addincident').modal('hide');
    };
    AgencyAdminIncidentReportComponent.prototype.getAllClassess = function () {
        var _this = this;
        var data = {
            'agencyID': this.commonService.getAgencyId()
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_1__["TeacherAPIURLs"].GetAllClasses, data, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.classList = res.body.data;
            }
            else {
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminIncidentReportComponent.prototype.getStudentsList = function () {
        var _this = this;
        this.spinner.show();
        var data = {
            'agencyID': this.commonService.getAgencyId(),
            'classID': this.incidentForm.value.class,
            'studentID': 0,
            'studentName': ''
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_1__["TeacherAPIURLs"].GetAllStudentsByClass, data, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.spinner.hide();
                _this.studentList = res.body.data;
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminIncidentReportComponent.prototype.searchStudent = function (text) { };
    AgencyAdminIncidentReportComponent.prototype.clearForm = function () {
        this.incidentId = 0;
        this.participantsList = [];
        this.studentList = [];
        this.createIncidentForm();
    };
    // Method to delete the incident
    AgencyAdminIncidentReportComponent.prototype.deleteIncident = function (value) {
        var _this = this;
        this.confirmationService.confirm({
            message: 'Do you want to delete this record?',
            accept: function () {
                _this.spinner.show();
                var data = {
                    'agencyID': _this.commonService.getAgencyId(),
                    'Id': value.id,
                    'IsDeleted': true,
                    'DeletedDate': new Date(),
                    'DeletedBy': 1
                };
                _this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_1__["TeacherAPIURLs"].DeleteIncident, data, null).subscribe(function (res) {
                    if (res.body.statusCode === 200) {
                        _this.deleteIncidentSuccess(value);
                    }
                    else {
                        _this.spinner.hide();
                        _this.error.unknownError();
                    }
                }, function (err) {
                    _this.spinner.hide();
                    _this.error.commonError(err);
                });
            }
        });
    };
    AgencyAdminIncidentReportComponent.prototype.deleteIncidentSuccess = function (data) {
        var index = this.incidentsList.findIndex(function (r) { return r.id === data.id; });
        this.incidentsList.splice(index, 1);
        var index2 = this.bitingLogList.findIndex(function (r) { return r.id === data.id; });
        this.bitingLogList.splice(index2, 1);
        this.getIncidentCountWithActionTaken(this.incidentsList);
        this.spinner.hide();
        this.notification.success({ message: 'Incident report deleted successfully', title: '' });
    };
    AgencyAdminIncidentReportComponent.prototype.getAllNatureofinjury = function () {
        var _this = this;
        var data = {
            'agencyID': this.commonService.getAgencyId()
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_1__["TeacherAPIURLs"].GetAllNatureofinjury, data, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.injurriesList = res.body.data;
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminIncidentReportComponent.prototype.getAllParticipants = function () {
        var _this = this;
        this.incidentForm.controls['participants'].setValue('');
        this.participantsList = [];
        var data = {
            'agencyID': this.commonService.getAgencyId()
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_1__["TeacherAPIURLs"].GetAllStudentDropdown, data, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                var list = res.body.data;
                list.forEach(function (element) {
                    if (element.value.toString() !== _this.incidentForm.value.studentname) {
                        _this.participantsList.push(element);
                    }
                });
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminIncidentReportComponent.prototype.getIncidentPriorities = function () {
        var _this = this;
        this.incidentForm.controls['participants'].setValue('');
        this.participantsList = [];
        var data = {
            'agencyID': this.commonService.getAgencyId()
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_1__["TeacherAPIURLs"].GetAllIncidentPriortyTypeDropdown, data, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.incidentPrioritiesList = res.body.data;
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    /**Method to get incident counts on which action is not taken*/
    AgencyAdminIncidentReportComponent.prototype.getIncidentCountWithActionTaken = function (listofincident) {
        var count = 0;
        listofincident.forEach(function (element) {
            if (element.actionTaken === '') {
                count++;
            }
        });
        this.commonService.saveIncidentCount(count);
    };
    AgencyAdminIncidentReportComponent.prototype.paginate = function (event, tab) {
        this.pageNo = event.page;
        if (tab === 1) {
            this.getAllIncidents();
        }
        else {
            this.getAllBitingIncidents();
        }
    };
    AgencyAdminIncidentReportComponent.prototype.onTabChange = function () {
        this.pageNo = 0;
    };
    AgencyAdminIncidentReportComponent.prototype.search = function () {
        this.showClearBtn = true;
        this.getAllIncidents();
    };
    AgencyAdminIncidentReportComponent.prototype.pdfReportForIncident = function () {
        var _this = this;
        this.loader = true;
        this.spinner.show();
        var req = {
            'agencyID': this.commonService.getAgencyId(),
            'limit': this.limit,
            'page': this.pageNo,
            'fromDate': this.fromDate ? this.fromDate : this.blankDate,
            'toDate': this.toDate ? this.toDate : this.blankDate,
            'studentName': this.searchByStudentName
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_10__["AgencyAPIURLs"].PDFAllIncidents, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                var filename = src_environments_environment__WEBPACK_IMPORTED_MODULE_11__["environment"].baseUrl + res.body.fileName;
                var name_1 = res.body.fileName;
                window.open(filename);
                setTimeout(function () {
                    _this.deletePdFFromServer(name_1);
                }, 10000);
            }
            else {
                _this.error.unknownError();
            }
            _this.loader = false;
            _this.spinner.hide();
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminIncidentReportComponent.prototype.pdfReportForIncidentForPerticularstudent = function (data, type) {
        var _this = this;
        this.loader = true;
        this.spinner.show();
        var req = {
            'agencyID': this.commonService.getAgencyId(),
            'incidentID': data.id
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_10__["AgencyAPIURLs"].PDFAllIncidentsParticularID, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                var filename = src_environments_environment__WEBPACK_IMPORTED_MODULE_11__["environment"].baseUrl + res.body.fileName;
                var name_2 = res.body.fileName;
                window.open(filename);
                setTimeout(function () {
                    _this.deletePdFFromServer(name_2);
                }, 10000);
            }
            else {
                _this.error.unknownError();
            }
            _this.loader = false;
            _this.spinner.hide();
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    // Delete pdf after use from server
    AgencyAdminIncidentReportComponent.prototype.deletePdFFromServer = function (filename) {
        var req = {
            'fileName': filename,
            'agencyID': this.commonService.getAgencyId()
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_10__["AgencyAPIURLs"].DeleteExistingFile, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
            }
            else {
            }
        }, function (err) {
            console.log(err);
        });
    };
    AgencyAdminIncidentReportComponent.prototype.clearSearch = function () {
        this.searchByStudentName = '';
        this.fromDate = null;
        this.toDate = null;
        this.showClearBtn = false;
        this.getAllIncidents();
    };
    AgencyAdminIncidentReportComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-agency-admin-incident-report',
            template: __webpack_require__(/*! ./agency-admin-incident-report.component.html */ "./src/app/layout/agency-admin/components/agency-admin-incident-report/agency-admin-incident-report.component.html"),
            styles: [__webpack_require__(/*! ./agency-admin-incident-report.component.css */ "./src/app/layout/agency-admin/components/agency-admin-incident-report/agency-admin-incident-report.component.css")]
        }),
        __metadata("design:paramtypes", [_teacher_shared_services_teacher_api_service_teacher_api_service__WEBPACK_IMPORTED_MODULE_4__["TeacherApiService"], _shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_5__["ErrorHandlerService"],
            ngx_spinner__WEBPACK_IMPORTED_MODULE_6__["NgxSpinnerService"], _shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_7__["NotificationService"],
            _shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_8__["CommonService"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"], primeng_api__WEBPACK_IMPORTED_MODULE_9__["ConfirmationService"]])
    ], AgencyAdminIncidentReportComponent);
    return AgencyAdminIncidentReportComponent;
}());



/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-kioskid-report/agency-admin-kioskid-report.component.css":
/*!**********************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-kioskid-report/agency-admin-kioskid-report.component.css ***!
  \**********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9hZ2VuY3ktYWRtaW4vY29tcG9uZW50cy9hZ2VuY3ktYWRtaW4ta2lvc2tpZC1yZXBvcnQvYWdlbmN5LWFkbWluLWtpb3NraWQtcmVwb3J0LmNvbXBvbmVudC5jc3MifQ== */"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-kioskid-report/agency-admin-kioskid-report.component.html":
/*!***********************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-kioskid-report/agency-admin-kioskid-report.component.html ***!
  \***********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"wrapper\">\n  <div class=\"container-fluid\">\n\n    <div class=\"pagetitle\">\n      <div>\n        <h2>Reports\n        </h2>\n      </div>\n    </div>\n\n    <div class=\"subhead d-flex justify-content-between mt-20 mb-20\">\n      <div>\n        <h3>Kiosk ID Report</h3>\n      </div>\n      <div style=\"cursor:pointer\" (click)=\"pdfReportForKioskID()\" title=\"Download report\"><i class=\"fa fa-download\"\n          aria-hidden=\"true\"></i>\n      </div>\n    </div>\n    <div class=\"card cardfilter\">\n      <div class=\"leftfilter\">\n        <div class=\"row algcenter\">\n          <div class=\"search-date\">\n            <input type=\"text\" placeholder=\"Search Parent name\" [(ngModel)]=\"searchName\" class=\"form-control mr15\" id=\"\">\n          </div>\n          <div class=\"filter-buttons\">\n            <button type=\"submit\" class=\"btn btn-send\" *ngIf=\"!showClearBtn\" (click)=\"search()\">Search</button>\n            <button type=\"submit\" class=\"btn btn-secondary\" *ngIf=\"showClearBtn\" (click)=\"clearSearch()\">Clear</button>\n          </div>\n        </div>\n      </div>\n\n\n      <div class=\"innertable\">\n        <div class=\"table-responsive\">\n          <table class=\"table\">\n            <thead class=\"thead-light\">\n              <tr>\n                <th scope=\"col\">Family Key</th>\n                <th scope=\"col\">Parent Name</th>\n                <th scope=\"col\">Quick Pin</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let parent of parentList\">\n                <td>{{parent.parentLastName}}</td>\n                <td>{{parent.parentName}}</td>\n                <td>{{parent.quickPin}}</td>\n              </tr>\n            </tbody>\n          </table>\n          <div class=\"text-center\" *ngIf=\"parentList.length == 0 && !loader\">\n            <span>No record found!</span>\n          </div>\n        </div>\n        <p-paginator [alwaysShow]=\"false\" [rows]=\"limit\" [totalRecords]=\"totalRecord\" (onPageChange)=\"paginate($event)\">\n        </p-paginator>\n      </div>\n    </div>\n\n  </div>\n</div>\n<ngx-spinner type=\"ball-atom\" size=\"medium\" color=\"#58A7FE\"></ngx-spinner>"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-kioskid-report/agency-admin-kioskid-report.component.ts":
/*!*********************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-kioskid-report/agency-admin-kioskid-report.component.ts ***!
  \*********************************************************************************************************************/
/*! exports provided: AgencyAdminKioskidReportComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AgencyAdminKioskidReportComponent", function() { return AgencyAdminKioskidReportComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../shared/services/agency-api-service/agency-api.service */ "./src/app/layout/agency-admin/components/shared/services/agency-api-service/agency-api.service.ts");
/* harmony import */ var _shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../shared/services/error-handler/error-handler.service */ "./src/app/shared/services/error-handler/error-handler.service.ts");
/* harmony import */ var _shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../shared/services/notification-service/notification.service */ "./src/app/shared/services/notification-service/notification.service.ts");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ngx-spinner */ "./node_modules/ngx-spinner/fesm5/ngx-spinner.js");
/* harmony import */ var _shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../shared/services/common/common.service */ "./src/app/shared/services/common/common.service.ts");
/* harmony import */ var _shared_constatant__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./../shared/constatant */ "./src/app/layout/agency-admin/components/shared/constatant.ts");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../../environments/environment */ "./src/environments/environment.ts");
/* harmony import */ var ngx_bootstrap__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ngx-bootstrap */ "./node_modules/ngx-bootstrap/esm5/ngx-bootstrap.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









var AgencyAdminKioskidReportComponent = /** @class */ (function () {
    function AgencyAdminKioskidReportComponent(apiService, error, spinner, notification, commonService) {
        this.apiService = apiService;
        this.error = error;
        this.spinner = spinner;
        this.notification = notification;
        this.commonService = commonService;
        this.searchName = '';
        this.parentList = [];
        this.loader = true;
        this.pageNo = 0;
        this.limit = 10;
        this.totalRecord = 0;
        this.showClearBtn = false;
        this.dpConfig = new ngx_bootstrap__WEBPACK_IMPORTED_MODULE_8__["BsDatepickerConfig"]();
    }
    AgencyAdminKioskidReportComponent.prototype.ngOnInit = function () {
        this.dpConfig = Object.assign({}, { containerClass: 'theme-dark-blue' }, { showWeekNumbers: false });
        this.getKioskIDReport();
    };
    AgencyAdminKioskidReportComponent.prototype.getKioskIDReport = function () {
        var _this = this;
        this.loader = true;
        this.parentList = [];
        this.spinner.show();
        var req = {
            'ParentName': this.searchName,
            'agencyID': this.commonService.getAgencyId(),
            'page': this.pageNo,
            'limit': this.limit
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_6__["AgencyAPIURLs"].GetKioskeIDDetails, req, null).subscribe(function (res) {
            _this.totalRecord = res.body.totalRows;
            if (res.body.statusCode === 200) {
                _this.parentList = res.body.data;
            }
            else {
                _this.error.unknownError();
            }
            _this.loader = false;
            _this.spinner.hide();
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminKioskidReportComponent.prototype.pdfReportForKioskID = function () {
        var _this = this;
        this.loader = true;
        this.spinner.show();
        var req = {
            'ParentName': this.searchName,
            'agencyID': this.commonService.getAgencyId()
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_6__["AgencyAPIURLs"].PdfReportForKioskeIDDetails, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                var filename = _environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].baseUrl + res.body.fileName;
                var name_1 = res.body.fileName;
                window.open(filename);
                setTimeout(function () {
                    _this.deletePdFFromServer(name_1);
                }, 5000);
            }
            else {
                _this.error.unknownError();
            }
            _this.loader = false;
            _this.spinner.hide();
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminKioskidReportComponent.prototype.getRecords = function () {
        console.log('data', this.parentList);
    };
    // Delete pdf after use from server
    AgencyAdminKioskidReportComponent.prototype.deletePdFFromServer = function (filename) {
        var req = {
            'fileName': filename,
            'agencyID': this.commonService.getAgencyId()
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_6__["AgencyAPIURLs"].DeleteExistingFile, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
            }
            else {
            }
        }, function (err) {
            console.log(err);
        });
    };
    AgencyAdminKioskidReportComponent.prototype.paginate = function (event) {
        this.pageNo = event.page;
        this.getKioskIDReport();
    };
    AgencyAdminKioskidReportComponent.prototype.search = function () {
        this.showClearBtn = true;
        this.getKioskIDReport();
    };
    AgencyAdminKioskidReportComponent.prototype.clearSearch = function () {
        this.searchName = '';
        this.showClearBtn = false;
        this.getKioskIDReport();
    };
    AgencyAdminKioskidReportComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-agency-admin-kioskid-report',
            template: __webpack_require__(/*! ./agency-admin-kioskid-report.component.html */ "./src/app/layout/agency-admin/components/agency-admin-kioskid-report/agency-admin-kioskid-report.component.html"),
            styles: [__webpack_require__(/*! ./agency-admin-kioskid-report.component.css */ "./src/app/layout/agency-admin/components/agency-admin-kioskid-report/agency-admin-kioskid-report.component.css")]
        }),
        __metadata("design:paramtypes", [_shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_1__["AgencyApiService"], _shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_2__["ErrorHandlerService"],
            ngx_spinner__WEBPACK_IMPORTED_MODULE_4__["NgxSpinnerService"], _shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_3__["NotificationService"],
            _shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_5__["CommonService"]])
    ], AgencyAdminKioskidReportComponent);
    return AgencyAdminKioskidReportComponent;
}());



/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-kiosklog-report/agency-admin-kiosklog-report.component.css":
/*!************************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-kiosklog-report/agency-admin-kiosklog-report.component.css ***!
  \************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9hZ2VuY3ktYWRtaW4vY29tcG9uZW50cy9hZ2VuY3ktYWRtaW4ta2lvc2tsb2ctcmVwb3J0L2FnZW5jeS1hZG1pbi1raW9za2xvZy1yZXBvcnQuY29tcG9uZW50LmNzcyJ9 */"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-kiosklog-report/agency-admin-kiosklog-report.component.html":
/*!*************************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-kiosklog-report/agency-admin-kiosklog-report.component.html ***!
  \*************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"wrapper\">\r\n  <div class=\"container-fluid\">\r\n\r\n    <div class=\"pagetitle\">\r\n      <div>\r\n        <h2>Report\r\n          <span>/ Kiosk Details </span>\r\n        </h2>\r\n      </div>\r\n    </div>\r\n    <div class=\"subhead d-flex justify-content-between mt-20\">\r\n      <div>\r\n        <h3>Kiosk Details Report</h3>\r\n      </div>\r\n      <div style=\"cursor:pointer\" title=\"Download report\" (click)=\"pdfReportForClassAttendence()\"><i\r\n          class=\"fa fa-download\" aria-hidden=\"true\"></i>\r\n      </div>\r\n    </div>\r\n    <div class=\"card cardfilter\">\r\n      <!-- <div class=\"col-lg-10\"> -->\r\n      <div class=\"leftfilter\">\r\n        <div class=\"row algcenter\">\r\n          <div class=\"search-date\">\r\n            <div class=\"pr15 label-text\">Search Name : </div>\r\n            <input type=\"text\" placeholder=\"Search student name\" [(ngModel)]=\"searchByStudentName\"\r\n              class=\"form-control mr15\" id=\"\">\r\n          </div>\r\n          <div class=\"search-date\">\r\n            <div class=\"pr15 label-text\">From Date : </div>\r\n            <input type=\"text\" placeholder=\"Search by date\" [(ngModel)]=\"fromDate\" showWeekNumbers=\"false\"\r\n              class=\"form-control mr15\" [bsConfig]=\"dpConfig\" bsDatepicker>\r\n          </div>\r\n          <div class=\"search-date\">\r\n            <div class=\"pr15 label-text\">To Date : </div>\r\n            <input type=\"text\" placeholder=\"Search by date\" [(ngModel)]=\"toDate\" showWeekNumbers=\"false\"\r\n              class=\"form-control mr15\" [bsConfig]=\"dpConfig\" bsDatepicker>\r\n          </div>\r\n          <div class=\"filter-buttons\">\r\n            <button type=\"submit\" class=\"btn btn-send\" *ngIf=\"!showClearBtn\" (click)=\"search()\">Search</button>\r\n            <button type=\"submit\" class=\"btn btn-secondary\" *ngIf=\"showClearBtn\" (click)=\"clearSearch()\">Clear</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"studentlist\">\r\n        <div class=\"tab-content\" id=\"pills-tabContent\">\r\n          <div class=\"tab-pane fade show active\" id=\"pills-appstudent\" role=\"tabpanel\" aria-labelledby=\"appStudent\">\r\n\r\n            <div class=\"innertable studentListSearch\">\r\n              <div class=\"table-responsive\">\r\n                <table class=\"table \">\r\n                  <thead class=\"thead-light\">\r\n                    <tr>\r\n                      <th scope=\"col\">Student Name</th>\r\n                      <th scope=\"col\">Date</th>\r\n                      <th scope=\"col\" class=\"text-center\">Check-In Time</th>\r\n                      <th scope=\"col\" class=\"text-center\">Check-Out Time</th>\r\n                      <th scope=\"col\" class=\"text-center\">Update Time</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr *ngFor=\"let report of reportList\">\r\n                      <td>{{report.studentName}}</td>\r\n                      <td *ngIf=\"report.checkInTime != '0001-01-01T00:00:00'\">{{report.checkInTime | date}}</td>\r\n                      <td *ngIf=\"report.checkOutTime != '0001-01-01T00:00:00'\">{{report.checkOutTime | date}}</td>\r\n                      <td class=\"text-center\">\r\n                        <p *ngIf=\"report.checkInTime != '0001-01-01T00:00:00'\"> {{report.checkInTime| date:'hh:mm a'}}\r\n                        </p>\r\n                        <p *ngIf=\"report.checkInTime == '0001-01-01T00:00:00'\"> --- </p>\r\n                      </td>\r\n                      <td class=\"text-center\">\r\n                        <p *ngIf=\"report.checkOutTime == '0001-01-01T00:00:00'\"> --- </p>\r\n                        <p *ngIf=\"report.checkOutTime != '0001-01-01T00:00:00'\">\r\n                          {{report.checkOutTime| date: 'hh:mm a'}}</p>\r\n                      </td>\r\n                      <td class=\"text-center\">\r\n                      <button class=\"btn btn-info\" (click)=\"getDetailsToUpdateTime(report)\" >Update Time</button>\r\n                     \r\n                      </td>\r\n\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n                <div class=\"text-center\">\r\n                  <span *ngIf=\"reportList.length == 0 && !loader\" class=\"text-center\">No result found</span>\r\n                </div>\r\n              </div>\r\n              <p-paginator [alwaysShow]=\"false\" [rows]=\"limit\" [totalRecords]=\"totalRecord\"\r\n                (onPageChange)=\"paginate($event)\"></p-paginator>\r\n            </div>\r\n\r\n            <!-- Update time Modal -->\r\n            <div class=\"modal fade timeupdate\" data-backdrop=\"static\" style=\"z-index: 1100;\" id=\"breakout\" tabindex=\"-1\"\r\n              role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n              <div class=\"modal-dialog\" role=\"document\">\r\n                <div class=\"modal-content\">\r\n                  <div class=\"modal-header\">\r\n                    <h5 class=\"modal-title\" id=\"exampleModalLabel\">{{updateTimeTitle}}</h5>\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                      <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n                  </div>\r\n                  <div class=\"modal-body\">\r\n                    <div class=\"form-group\">\r\n                      <label>Time</label>\r\n                      <p-calendar class=\"custom-textbox-checkedin\" id=\"clkout\" styleClass=\"form-control\"\r\n                        [(ngModel)]=\"timetoUpdate\"  hourFormat=\"12\" [timeOnly]=\"true\" icon=\"pi pi-clock\" [showIcon]=\"true\"></p-calendar>\r\n                    </div>\r\n\r\n                  </div>\r\n                  <div class=\"modal-footer\">\r\n                    <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                    <button type=\"button\" class=\"btn btn-primary\" (click)=\"UpdateClockeOutTime()\">Update</button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <ngx-spinner type=\"ball-atom\" size=\"medium\" color=\"#58A7FE\"></ngx-spinner>\r\n  <app-confirm-box></app-confirm-box>\r\n  \r\n"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-kiosklog-report/agency-admin-kiosklog-report.component.ts":
/*!***********************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-kiosklog-report/agency-admin-kiosklog-report.component.ts ***!
  \***********************************************************************************************************************/
/*! exports provided: AgencyAdminKiosklogReportComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AgencyAdminKiosklogReportComponent", function() { return AgencyAdminKiosklogReportComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../shared/services/agency-api-service/agency-api.service */ "./src/app/layout/agency-admin/components/shared/services/agency-api-service/agency-api.service.ts");
/* harmony import */ var _shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../shared/services/error-handler/error-handler.service */ "./src/app/shared/services/error-handler/error-handler.service.ts");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ngx-spinner */ "./node_modules/ngx-spinner/fesm5/ngx-spinner.js");
/* harmony import */ var _shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../shared/services/notification-service/notification.service */ "./src/app/shared/services/notification-service/notification.service.ts");
/* harmony import */ var _shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../shared/services/common/common.service */ "./src/app/shared/services/common/common.service.ts");
/* harmony import */ var ngx_bootstrap__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ngx-bootstrap */ "./node_modules/ngx-bootstrap/esm5/ngx-bootstrap.js");
/* harmony import */ var _shared_constatant__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../shared/constatant */ "./src/app/layout/agency-admin/components/shared/constatant.ts");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../../environments/environment */ "./src/environments/environment.ts");
/* harmony import */ var primeng_api__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! primeng/api */ "./node_modules/primeng/api.js");
/* harmony import */ var primeng_api__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(primeng_api__WEBPACK_IMPORTED_MODULE_9__);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};










var AgencyAdminKiosklogReportComponent = /** @class */ (function () {
    function AgencyAdminKiosklogReportComponent(apiService, error, spinner, notification, commonService, confirmationService) {
        this.apiService = apiService;
        this.error = error;
        this.spinner = spinner;
        this.notification = notification;
        this.commonService = commonService;
        this.confirmationService = confirmationService;
        this.reportList = [];
        this.pageNo = 0;
        this.limit = 10;
        this.totalRecord = 0;
        this.searchByStudentName = '';
        this.loader = true;
        this.showClearBtn = false;
        this.timetoUpdate = new Date();
        this.recordId = 0;
        this.studentId = 0;
        this.dpConfig = new ngx_bootstrap__WEBPACK_IMPORTED_MODULE_6__["BsDatepickerConfig"]();
    }
    AgencyAdminKiosklogReportComponent.prototype.ngOnInit = function () {
        this.dpConfig = Object.assign({}, { containerClass: 'theme-dark-blue' }, { showWeekNumbers: false });
        this.getKioskDetails();
    };
    AgencyAdminKiosklogReportComponent.prototype.getKioskDetails = function () {
        var _this = this;
        this.loader = true;
        this.reportList = [];
        this.spinner.show();
        var data = {
            'agencyID': this.commonService.getAgencyId(),
            'studentName': this.searchByStudentName,
            'page': this.pageNo,
            'limit': this.limit,
            'fromDate': this.fromDate ? this.fromDate : this.blankDate,
            'toDate': this.toDate ? this.toDate : this.blankDate
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_7__["AgencyAPIURLs"].GetKioskDetails, data, null).subscribe(function (res) {
            _this.totalRecord = res.body.totalRows;
            if (res.body.statusCode === 200) {
                _this.spinner.hide();
                res.body.data.forEach(function (element) {
                    if (element.checkOutTime !== '0001-01-01T00:00:00') {
                        element.checkOutTime = _this.commonService.getLocalDateTimeFromUTC(element.checkOutTime);
                    }
                    else if (element.checkInTime !== '0001-01-01T00:00:00') {
                        element.checkInTime = _this.commonService.getLocalDateTimeFromUTC(element.checkInTime);
                    }
                    else {
                        // do nothing
                    }
                });
                _this.reportList = res.body.data;
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
            _this.loader = false;
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminKiosklogReportComponent.prototype.paginate = function (event) {
        this.pageNo = event.page;
        this.getKioskDetails();
    };
    AgencyAdminKiosklogReportComponent.prototype.pdfReportForClassAttendence = function () {
        var _this = this;
        this.loader = true;
        this.spinner.show();
        var req = {
            'StudentName': this.searchByStudentName,
            'agencyID': this.commonService.getAgencyId()
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_7__["AgencyAPIURLs"].PdfReportForkioskeDetails, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                var filename = _environments_environment__WEBPACK_IMPORTED_MODULE_8__["environment"].baseUrl + res.body.fileName;
                var name_1 = res.body.fileName;
                window.open(filename);
                setTimeout(function () {
                    _this.deletePdFFromServer(name_1);
                }, 10000);
            }
            else {
                _this.error.unknownError();
            }
            _this.loader = false;
            _this.spinner.hide();
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    // Delete pdf after use from server
    AgencyAdminKiosklogReportComponent.prototype.deletePdFFromServer = function (filename) {
        var req = {
            'fileName': filename,
            'agencyID': this.commonService.getAgencyId()
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_7__["AgencyAPIURLs"].DeleteExistingFile, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
            }
            else {
            }
        }, function (err) {
            console.log(err);
        });
    };
    AgencyAdminKiosklogReportComponent.prototype.search = function () {
        this.pageNo = 0;
        this.showClearBtn = true;
        this.getKioskDetails();
    };
    AgencyAdminKiosklogReportComponent.prototype.clearSearch = function () {
        this.searchByStudentName = '';
        this.fromDate = null;
        this.toDate = null;
        this.showClearBtn = false;
        this.getKioskDetails();
    };
    AgencyAdminKiosklogReportComponent.prototype.getDetailsToUpdateTime = function (data) {
        this.recordId = data.id;
        this.studentId = data.studentID;
        if (data.checkOutTime !== '0001-01-01T00:00:00') {
            this.isCheckInTime = false;
            this.updateTimeTitle = 'Update Check-Out Time';
        }
        else {
            this.isCheckInTime = true;
            this.updateTimeTitle = 'Update Check-In Time';
        }
        $('.timeupdate').modal('show');
    };
    AgencyAdminKiosklogReportComponent.prototype.UpdateClockeOutTime = function () {
        var _this = this;
        $('.timeupdate').modal('hide');
        this.confirmationService.confirm({
            message: 'Do you want to update time?',
            accept: function () {
                _this.loader = true;
                _this.spinner.show();
                var data = {
                    'agencyID': _this.commonService.getAgencyId(),
                    'id': _this.recordId,
                    'CheckInTime': _this.timetoUpdate,
                    'CheckOutTime': _this.timetoUpdate,
                    'IsCheckInTime': _this.isCheckInTime,
                    'StudentID': _this.studentId,
                    'UpdatedBy': _this.commonService.getLoggedInUserId()
                };
                _this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_7__["AgencyAPIURLs"].UpdateStudentKioskeTime, data, null).subscribe(function (res) {
                    if (res.body.statusCode === 200) {
                        $('.timeupdate').modal('hide');
                        _this.notification.success({ message: 'Time Updated Successfully', title: '' });
                        _this.getKioskDetails();
                    }
                    else {
                        _this.spinner.hide();
                        _this.notification.warning({ message: res.body.message, title: '' });
                    }
                    _this.loader = false;
                }, function (err) {
                    _this.spinner.hide();
                    _this.error.commonError(err);
                });
            },
            reject: function () {
                $('.timeupdate').modal('show');
            }
        });
    };
    AgencyAdminKiosklogReportComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-agency-admin-kiosklog-report',
            template: __webpack_require__(/*! ./agency-admin-kiosklog-report.component.html */ "./src/app/layout/agency-admin/components/agency-admin-kiosklog-report/agency-admin-kiosklog-report.component.html"),
            styles: [__webpack_require__(/*! ./agency-admin-kiosklog-report.component.css */ "./src/app/layout/agency-admin/components/agency-admin-kiosklog-report/agency-admin-kiosklog-report.component.css")]
        }),
        __metadata("design:paramtypes", [_shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_1__["AgencyApiService"], _shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_2__["ErrorHandlerService"],
            ngx_spinner__WEBPACK_IMPORTED_MODULE_3__["NgxSpinnerService"], _shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_4__["NotificationService"],
            _shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_5__["CommonService"], primeng_api__WEBPACK_IMPORTED_MODULE_9__["ConfirmationService"]])
    ], AgencyAdminKiosklogReportComponent);
    return AgencyAdminKiosklogReportComponent;
}());



/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-ledger-report/agency-admin-ledger-report.component.css":
/*!********************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-ledger-report/agency-admin-ledger-report.component.css ***!
  \********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9hZ2VuY3ktYWRtaW4vY29tcG9uZW50cy9hZ2VuY3ktYWRtaW4tbGVkZ2VyLXJlcG9ydC9hZ2VuY3ktYWRtaW4tbGVkZ2VyLXJlcG9ydC5jb21wb25lbnQuY3NzIn0= */"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-ledger-report/agency-admin-ledger-report.component.html":
/*!*********************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-ledger-report/agency-admin-ledger-report.component.html ***!
  \*********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"wrapper\">\r\n  <div class=\"container-fluid\">\r\n\r\n    <div class=\"pagetitle\">\r\n      <div>\r\n        <h2>Report\r\n          <span>/ Payment Report </span>\r\n        </h2>\r\n      </div>\r\n    </div>\r\n    <div class=\"subhead d-flex justify-content-between mt-20\">\r\n      <div>\r\n        <h3>Paymemnt</h3>\r\n      </div>\r\n      <div style=\"cursor:pointer\" title=\"Download report\" (click)=\"pdfReportForDuePayment()\"><i class=\"fa fa-download\" aria-hidden=\"true\"></i>\r\n      </div>\r\n    </div>\r\n    <div class=\"card cardfilter\">\r\n         <div class=\"leftfilter\">\r\n        <div class=\"row algcenter\">\r\n          <div class=\"search-date\">\r\n            <div class=\"pr15 label-text\">Search Name : </div>\r\n            <input type=\"text\" placeholder=\"Search student name\" [(ngModel)]=\"searchByStudentName\" class=\"form-control mr15\" id=\"\">\r\n          </div>\r\n          <div class=\"search-date\">\r\n            <div class=\"pr15 label-text\">From Date : </div>\r\n            <input type=\"text\" placeholder=\"Search by date\" [(ngModel)]=\"fromDate\"  showWeekNumbers=\"false\"\r\n               class=\"form-control mr15\" [bsConfig]=\"dpConfig\" bsDatepicker>\r\n              </div>\r\n              <div class=\"search-date\">\r\n                <div class=\"pr15 label-text\">To Date : </div>\r\n                <input type=\"text\" placeholder=\"Search by date\" [(ngModel)]=\"toDate\"  showWeekNumbers=\"false\"\r\n                   class=\"form-control mr15\" [bsConfig]=\"dpConfig\" bsDatepicker>\r\n                  </div>\r\n          <div class=\"filter-buttons\">\r\n            <button type=\"submit\" class=\"btn btn-send\" *ngIf=\"!showClearBtn\" (click)=\"search()\">Search</button>\r\n            <button type=\"submit\" class=\"btn btn-secondary\" *ngIf=\"showClearBtn\" (click)=\"clearSearch()\">Clear</button>\r\n          </div>\r\n      </div> \r\n    </div>\r\n\r\n    <div class=\"studentlist\">\r\n      <div class=\"tab-content\" id=\"pills-tabContent\">\r\n        <div class=\"tab-pane fade show active\" id=\"pills-appstudent\" role=\"tabpanel\" aria-labelledby=\"appStudent\">\r\n\r\n          <div class=\"innertable studentListSearch\">\r\n            <div class=\"table-responsive\">\r\n              <table class=\"table \">\r\n                <thead class=\"thead-light\">\r\n                  <tr>\r\n                    <th scope=\"col\">Student Name</th>\r\n                    <th scope=\"col\">Parent Name</th>\r\n                    <th scope=\"col\">Amount</th>\r\n                    <th scope=\"col\">From Date </th>\r\n                    <th scope=\"col\">To Date</th>\r\n                    <th scope=\"col\" class=\"text-center\">Paid on</th>\r\n                    <th scope=\"col\">Credit</th>\r\n                    <th scope=\"col\">Debit</th>                   \r\n                  </tr>\r\n                </thead>\r\n                <tbody >\r\n                  <tr *ngFor=\"let payment of reportList\">\r\n                    <td>{{payment.studentName}}</td>\r\n                    <td>{{payment.parentName}}</td> \r\n                    <td>${{payment.amount}}</td>\r\n                    <td>{{payment.invoiceFromDate| date}} </td>\r\n                    <td>{{payment.invoiceToDate| date}} </td>\r\n                    <td class=\"text-center\" *ngIf=\"payment.paymentDate != '0001-01-01T00:00:00'\">{{payment.paymentDate| date}}</td>\r\n                    <td class=\"text-center\" *ngIf=\"payment.paymentDate == '0001-01-01T00:00:00'\">---</td>\r\n                    <td>${{payment.creditAmount}}</td>\r\n                    <td>${{payment.debitAmount}}</td>\r\n                  </tr>\r\n                  <tr *ngIf=\"reportList.length != 0 && !loader\">\r\n                    <td></td>\r\n                    <td></td>\r\n                    <td><b> Total Amount:</b></td>\r\n                    <td><b>${{totalInvoiceAmount}}</b></td>\r\n                    <td><b>Paid Amount:</b></td>\r\n                    <td><b>${{totalPaidAmount}}</b></td>\r\n                    <td><b>Balance Amount:</b></td>\r\n                    <td><b>${{totalBalanceAmount}}</b></td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n              <div class=\"text-center\">\r\n                <span  *ngIf=\"reportList.length == 0 && !loader\" class=\"text-center\">No result found</span>\r\n              </div> \r\n            </div>\r\n            <p-paginator [alwaysShow]=\"false\" [rows]=\"limit\" [totalRecords]=\"totalRecord\" (onPageChange)=\"paginate($event)\"></p-paginator>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<ngx-spinner type=\"ball-atom\" size=\"medium\" color=\"#58A7FE\"></ngx-spinner>\r\n"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-ledger-report/agency-admin-ledger-report.component.ts":
/*!*******************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-ledger-report/agency-admin-ledger-report.component.ts ***!
  \*******************************************************************************************************************/
/*! exports provided: AgencyAdminLedgerReportComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AgencyAdminLedgerReportComponent", function() { return AgencyAdminLedgerReportComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _shared_constatant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../shared/constatant */ "./src/app/layout/agency-admin/components/shared/constatant.ts");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../environments/environment */ "./src/environments/environment.ts");
/* harmony import */ var ngx_bootstrap__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ngx-bootstrap */ "./node_modules/ngx-bootstrap/esm5/ngx-bootstrap.js");
/* harmony import */ var _shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../shared/services/agency-api-service/agency-api.service */ "./src/app/layout/agency-admin/components/shared/services/agency-api-service/agency-api.service.ts");
/* harmony import */ var _shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../shared/services/error-handler/error-handler.service */ "./src/app/shared/services/error-handler/error-handler.service.ts");
/* harmony import */ var _shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../shared/services/notification-service/notification.service */ "./src/app/shared/services/notification-service/notification.service.ts");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ngx-spinner */ "./node_modules/ngx-spinner/fesm5/ngx-spinner.js");
/* harmony import */ var _shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../shared/services/common/common.service */ "./src/app/shared/services/common/common.service.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









var AgencyAdminLedgerReportComponent = /** @class */ (function () {
    function AgencyAdminLedgerReportComponent(apiService, error, spinner, notification, commonService) {
        this.apiService = apiService;
        this.error = error;
        this.spinner = spinner;
        this.notification = notification;
        this.commonService = commonService;
        this.reportList = [];
        this.pageNo = 0;
        this.limit = 10;
        this.totalRecord = 0;
        this.searchByStudentName = '';
        this.loader = true;
        this.dpConfig = new ngx_bootstrap__WEBPACK_IMPORTED_MODULE_3__["BsDatepickerConfig"]();
    }
    AgencyAdminLedgerReportComponent.prototype.ngOnInit = function () {
        this.dpConfig = Object.assign({}, { containerClass: 'theme-dark-blue' }, { showWeekNumbers: false });
        this.getLedgerReport();
    };
    AgencyAdminLedgerReportComponent.prototype.getLedgerReport = function () {
        var _this = this;
        this.loader = true;
        this.reportList = [];
        this.spinner.show();
        var data = {
            'agencyID': this.commonService.getAgencyId(),
            'studentName': this.searchByStudentName,
            'page': this.pageNo,
            'limit': this.limit,
            'fromDate': this.fromDate ? this.fromDate : this.blankDate,
            'toDate': this.toDate ? this.toDate : this.blankDate
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_1__["AgencyAPIURLs"].GetLedgerReport, data, null).subscribe(function (res) {
            _this.totalRecord = res.body.totalRows;
            if (res.body.statusCode === 200) {
                _this.spinner.hide();
                _this.reportList = res.body.data;
                _this.totalBalanceAmount = res.body.totalBalanceAmount;
                _this.totalInvoiceAmount = res.body.totalInvoiceAmount;
                _this.totalPaidAmount = res.body.totalPaidAmount;
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
            _this.loader = false;
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminLedgerReportComponent.prototype.paginate = function (event) {
        this.pageNo = event.page;
        this.getLedgerReport();
    };
    AgencyAdminLedgerReportComponent.prototype.pdfReportForDuePayment = function () {
        var _this = this;
        this.loader = true;
        this.spinner.show();
        var req = {
            'StudentName': this.searchByStudentName,
            'agencyID': this.commonService.getAgencyId()
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_1__["AgencyAPIURLs"].PdfReportForLedger, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                var filename = _environments_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].baseUrl + res.body.fileName;
                var name_1 = res.body.fileName;
                window.open(filename);
                setTimeout(function () {
                    _this.deletePdFFromServer(name_1);
                }, 5000);
            }
            else {
                _this.error.unknownError();
            }
            _this.loader = false;
            _this.spinner.hide();
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    // Delete pdf after use from server
    AgencyAdminLedgerReportComponent.prototype.deletePdFFromServer = function (filename) {
        var req = {
            'fileName': filename,
            'agencyID': this.commonService.getAgencyId()
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_1__["AgencyAPIURLs"].DeleteExistingFile, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
            }
            else {
            }
        }, function (err) {
            console.log(err);
        });
    };
    AgencyAdminLedgerReportComponent.prototype.search = function () {
        this.showClearBtn = true;
        this.getLedgerReport();
    };
    AgencyAdminLedgerReportComponent.prototype.clearSearch = function () {
        this.searchByStudentName = '';
        this.fromDate = null;
        this.toDate = null;
        this.showClearBtn = false;
        this.getLedgerReport();
    };
    AgencyAdminLedgerReportComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-agency-admin-ledger-report',
            template: __webpack_require__(/*! ./agency-admin-ledger-report.component.html */ "./src/app/layout/agency-admin/components/agency-admin-ledger-report/agency-admin-ledger-report.component.html"),
            styles: [__webpack_require__(/*! ./agency-admin-ledger-report.component.css */ "./src/app/layout/agency-admin/components/agency-admin-ledger-report/agency-admin-ledger-report.component.css")]
        }),
        __metadata("design:paramtypes", [_shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_4__["AgencyApiService"], _shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_5__["ErrorHandlerService"],
            ngx_spinner__WEBPACK_IMPORTED_MODULE_7__["NgxSpinnerService"], _shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_6__["NotificationService"],
            _shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_8__["CommonService"]])
    ], AgencyAdminLedgerReportComponent);
    return AgencyAdminLedgerReportComponent;
}());



/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-meal-planner/agency-admin-meal-planner.component.css":
/*!******************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-meal-planner/agency-admin-meal-planner.component.css ***!
  \******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".wid26{ width: 26%;}\r\n.wid10{ width: 10%;}\r\n.verAligMiddle{  vertical-align: middle;}\r\n.plusIcon{ font-size: 28px; }\r\n.minusIcon{font-size: 28px; color: #FF6C6C;}\r\n\r\n\r\n\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L2FnZW5jeS1hZG1pbi9jb21wb25lbnRzL2FnZW5jeS1hZG1pbi1tZWFsLXBsYW5uZXIvYWdlbmN5LWFkbWluLW1lYWwtcGxhbm5lci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFFBQVEsVUFBVSxDQUFDO0FBQ25CLFFBQVEsVUFBVSxDQUFDO0FBQ25CLGlCQUFpQixzQkFBc0IsQ0FBQztBQUN4QyxXQUFXLGVBQWUsRUFBRTtBQUM1QixXQUFXLGVBQWUsRUFBRSxjQUFjLENBQUMiLCJmaWxlIjoic3JjL2FwcC9sYXlvdXQvYWdlbmN5LWFkbWluL2NvbXBvbmVudHMvYWdlbmN5LWFkbWluLW1lYWwtcGxhbm5lci9hZ2VuY3ktYWRtaW4tbWVhbC1wbGFubmVyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIud2lkMjZ7IHdpZHRoOiAyNiU7fVxyXG4ud2lkMTB7IHdpZHRoOiAxMCU7fVxyXG4udmVyQWxpZ01pZGRsZXsgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7fVxyXG4ucGx1c0ljb257IGZvbnQtc2l6ZTogMjhweDsgfVxyXG4ubWludXNJY29ue2ZvbnQtc2l6ZTogMjhweDsgY29sb3I6ICNGRjZDNkM7fVxyXG5cclxuXHJcbiJdfQ== */"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-meal-planner/agency-admin-meal-planner.component.html":
/*!*******************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-meal-planner/agency-admin-meal-planner.component.html ***!
  \*******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"wrapper\">\r\n  <div class=\"container-fluid\">\r\n\r\n    <div class=\"pagetitle meal_calender\">\r\n      <div>\r\n        <h2>Calendar\r\n          <span> / View Meal </span>\r\n        </h2>\r\n      </div>\r\n      <div *ngIf=\"isSubscriptionActive\">\r\n        <button type=\"submit\" class=\"btn btn-red\" data-toggle=\"modal\" data-target=\".addmeal\" (click)=\"clearForm()\">Add Meal Plan</button>\r\n        <button type=\"submit\" class=\"btn btn-red\" data-toggle=\"modal\" data-target=\".newfood\" (click)=\"clearFoodFormForm()\">Add Food</button>\r\n      </div>\r\n      \r\n    </div>\r\n    <div *ngIf=\"calendarOptions\">\r\n      <ng-fullcalendar #ucCalendar [options]=\"calendarOptions\" (eventClick)=\"gotoDate($event.detail)\"\r\n        (eventDrop)=\"updateEvent($event.detail)\" (eventResize)=\"updateEvent($event.detail)\"\r\n        (clickButton)=\"clickButton($event.detail)\" id=\"calender_section\"></ng-fullcalendar>\r\n    </div>\r\n\r\n<!-- Add Modal -->\r\n    <div class=\"modal fade addmeal modal_padding\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myLargeModalLabel\" aria-hidden=\"true\">\r\n      <div class=\"modal-dialog modal-lg\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Add Menu</h5>\r\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <form [formGroup]=\"calenderForm\">\r\n\r\n              <div class=\"row mb-20\">\r\n                <div class=\"col-lg-3\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Begins*</label>\r\n                    <input type=\"text\" formControlName=\"startdate\" placeholder=\"Begin\" showWeekNumbers=\"false\" \r\n                      class=\"form-control\"  [bsConfig]=\"dpConfig\" bsDatepicker>\r\n                    <div *ngIf=\"f.startdate.invalid && (f.startdate.dirty || f.startdate.touched)\"\r\n                      class=\"text-left errormsg\">\r\n                      <span *ngIf=\"f.startdate.errors.required\">\r\n                        <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select date</span>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-3\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">End*</label>\r\n                    <input type=\"text\" formControlName=\"enddate\" placeholder=\"End\" showWeekNumbers=\"false\" class=\"form-control\"\r\n                       [bsConfig]=\"dpConfig\" bsDatepicker>\r\n                    <div *ngIf=\"f.enddate.invalid && (f.enddate.dirty || f.enddate.touched)\" class=\"text-left errormsg\">\r\n                      <span *ngIf=\"f.enddate.errors.required\">\r\n                        <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select date</span>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n             \r\n             \r\n                <div class=\"col-lg-3\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"exampleFormControlSelect1\">Start Time*</label>\r\n                    <p-calendar class=\"custom-textbox-checkedin\" formControlName=\"starttime\" styleClass=\"form-control\"  hourFormat=\"12\" [timeOnly]=\"true\"\r\n                      icon=\"pi pi-clock\" [showIcon]=\"true\"></p-calendar>\r\n                    <div *ngIf=\"f.starttime.invalid && (f.starttime.dirty || f.starttime.touched)\"\r\n                      class=\"text-left errormsg\">\r\n                      <span *ngIf=\"f.starttime.errors.required\">\r\n                        <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select time</span>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n\r\n                </div>\r\n                <div class=\"col-lg-3\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"exampleFormControlSelect1\">End Time*</label>\r\n                    <p-calendar class=\"custom-textbox-checkedin\" formControlName=\"endtime\" styleClass=\"form-control\"  hourFormat=\"12\" [timeOnly]=\"true\"\r\n                      icon=\"pi pi-clock\" [showIcon]=\"true\"></p-calendar>\r\n                    <div *ngIf=\"f.endtime.invalid && (f.endtime.dirty || f.endtime.touched)\" class=\"text-left errormsg\">\r\n                      <span *ngIf=\"f.endtime.errors.required\">\r\n                        <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select time</span>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"row mb-20\">\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"exampleFormControlSelect1\">Class*</label>\r\n                    <p-multiSelect [options]=\"classList\" formControlName=\"class\" [panelStyle]=\"{minWidth:'200px'}\" [maxSelectedLabels]=\"5\">\r\n                    </p-multiSelect>\r\n                    <div *ngIf=\"f.class.invalid && (f.class.dirty || f.class.touched)\" class=\"text-left errormsg\">\r\n                      <span *ngIf=\"f.class.errors.required\">\r\n                        <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select class</span>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"exampleFormControlSelect1\">Title*</label>\r\n                      <input type=\"text\"  formControlName=\"title\" placeholder=\"Title\" \r\n                      class=\"form-control\" >\r\n                      <div *ngIf=\"f.title.invalid && (f.title.dirty || f.title.touched)\" class=\"text-left errormsg\">\r\n                        <span *ngIf=\"f.title.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please enter title</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                \r\n              </div>\r\n              <div class=\"row mb-20\">\r\n                  <div class=\"col-lg-6\">\r\n                      <div class=\"form-group\">\r\n                        <label for=\"exampleFormControlSelect1\">Category*</label>\r\n                        <select class=\"form-control\" id=\"exampleFormControlSelect1\" formControlName=\"category\">\r\n                          <option>Select</option>\r\n                          <option *ngFor=\"let cat of mealTyptList\" [value]=\"cat.value\">{{cat.label}}</option>\r\n                        </select>\r\n                        <div *ngIf=\"f.category.invalid && (f.category.dirty || f.category.touched)\" class=\"text-left errormsg\">\r\n                            <span *ngIf=\"f.category.errors.required\">\r\n                              <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select category </span>\r\n                            </span>\r\n                          </div>\r\n                      </div>\r\n                      \r\n                    </div>\r\n                </div>\r\n                <div class=\"table-responsive\">\r\n                    <table class=\"table\">\r\n                        <thead>\r\n                          <tr>\r\n                            <th scope=\"col\" class=\"wid26\">Food*</th>\r\n                            <th scope=\"col\" class=\"wid26\">Amount*</th>\r\n                            <th scope=\"col\" class=\"wid26\">Unit*</th>\r\n                            <th scope=\"col\" class=\"wid10\">Add</th>\r\n                            <th scope=\"col\" class=\"wid10\">Remove</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          <tr *ngFor=\"let disp of displayFoodList;let item of calenderForm.get('foodcollection').controls; let i = index;\" formArrayName=\"foodcollection\" >\r\n                            <td scope=\"row\" [formGroupName]=\"i\" >\r\n                                <select class=\"form-control\"  formControlName=\"fooditem\" id=\"exampleFormControlSelect1\">\r\n                                    <option value=\"\">Select</option>\r\n                                    <option *ngFor=\"let food of foodItemList\" [value]=\"food.value\">{{food.label}}</option>\r\n                                  </select>\r\n                            </td>\r\n                            <td [formGroupName]=\"i\">\r\n                                <input type=\"text\"  formControlName=\"amount\" placeholder=\"Amount\" maxlength=\"3\"\r\n                                class=\"form-control\" (keypress)=\"commonService.allowOnlyNumber($event)\">\r\n                            </td>\r\n                            <td [formGroupName]=\"i\">\r\n                                <select class=\"form-control\" formControlName=\"unit\" placeholder=\"Quantity\"\r\n                                id=\"exampleFormControlSelect1\">\r\n                                <option value=\"\">Select</option>\r\n                                <option *ngFor=\"let obj of mealQuantityType\" [value]=\"obj.value\">{{obj.label}}</option>\r\n                              </select>\r\n                                  \r\n                            </td >\r\n                            <td class=\"verAligMiddle\">\r\n                              <a href=\"javascript:void(0);\"  *ngIf=\"( displayFoodList.length < foodItemList.length )\" (click)=\"addFood()\"><i class=\"fa fa-plus-circle plusIcon\" aria-hidden=\"true\"></i></a>                                \r\n\r\n                            </td>\r\n                            <td class=\"verAligMiddle\">\r\n                                <a href=\"javascript:void(0);\" *ngIf=\"displayFoodList.length > 1\" (click)=\"removeFood(disp)\"> \r\n                                <i class=\"fa fa-minus-circle minusIcon\" aria-hidden=\"true\"></i></a>\r\n\r\n                            </td>\r\n                          </tr>                                           \r\n                         \r\n                        </tbody>\r\n                      </table>\r\n\r\n                </div>\r\n\r\n              \r\n              <div class=\"row mb-20\">\r\n                <div class=\"col-lg-12\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"exampleFormControlSelect1\">Description(Max 100 char)</label>\r\n                    <textarea name=\"\" maxlength=\"100\" id=\"\" cols=\"3\" formControlName =\"description\" rows=\"3\" class=\"form-control\"></textarea>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n\r\n              <div class=\"row mb-20\">\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"exampleFormControlSelect1\">Repeat</label>\r\n                    <select class=\"form-control\" (change)=\"getRepeatOptions()\" formControlName =\"repeat\" placeholder=\"Repeat\"\r\n                      id=\"exampleFormControlSelect1\">\r\n                      <option *ngFor=\"let obj of repeatList\" [value]=\"obj.value\" >{{obj.label}}</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"col-lg-6\" *ngIf=\"showEndsOn\">\r\n                  \r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Ends on*</label>\r\n                      <input type=\"text\" placeholder=\"Ends on\" container=\"\"  formControlName =\"endson\"  showWeekNumbers=\"false\"\r\n                         class=\"form-control\"  [bsConfig]=\"dpConfig\" bsDatepicker>\r\n                        <div *ngIf=\"f.endson.invalid && (f.endson.dirty || f.endson.touched)\" class=\"text-left errormsg\">\r\n                          <span *ngIf=\"f.endson.errors.required\">\r\n                            <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select date</span>\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                  \r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n            <button type=\"button\" *ngIf=\"isSubscriptionActive \" class=\"btn btn-primary\" (click)=\"verifyMealPlan ()\">Add Menu</button>\r\n          </div>\r\n        </div>\r\n\r\n\r\n      </div>\r\n    </div>\r\n\r\n\r\n<!-- Add new food item modal -->\r\n    <div class=\"modal fade newfood\" data-backdrop=\"static\" style=\"z-index: 1100;\" id=\"breakout\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n      <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"exampleModalLabel\">Add Food</h5>\r\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <div class=\"form-group\">\r\n              <label>Food Name</label>\r\n             <input type=\"text\" class=\"form-control\" (keypress)=\"commonService.allowAlphabetOnly($event)\" placeholder=\"Food Name\" [(ngModel)]=\"mealItemMasterName\">\r\n            </div>\r\n            \r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n            <button type=\"button\" class=\"btn btn-primary\" (click)=\"saveMealItemInformation()\">Add</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <!-- Meal Details Model -->\r\n    <div class=\"modal fade mealdetails modal_padding\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myLargeModalLabel\" aria-hidden=\"true\">\r\n      <div class=\"modal-dialog modal-lg\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Meal Details</h5>\r\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n       <form [formGroup]=\"calenderForm\"> \r\n\r\n      <div class=\"row mb-20\">\r\n        <div class=\"col-lg-3\">\r\n          <div class=\"form-group\">\r\n            <label for=\"\">Begins*</label>\r\n            <input type=\"text\" placeholder=\"Begin\" formControlName=\"startdate\"  showWeekNumbers=\"false\" \r\n              class=\"form-control\"  [bsConfig]=\"dpConfig\" bsDatepicker >\r\n          </div>\r\n        </div>\r\n        <div class=\"col-lg-3\">\r\n          <div class=\"form-group\">\r\n            <label for=\"\">End*</label>\r\n            <input type=\"text\" placeholder=\"Begin\"  formControlName=\"enddate\" showWeekNumbers=\"false\" \r\n              class=\"form-control\"  [bsConfig]=\"dpConfig\" bsDatepicker >\r\n          </div>\r\n        </div>\r\n        <div class=\"col-lg-3\">\r\n          <div class=\"form-group\">\r\n            <label for=\"exampleFormControlSelect1\">Start Time*</label>\r\n            <p-calendar class=\"custom-textbox-checkedin\" formControlName=\"starttime\" styleClass=\"form-control\"  hourFormat=\"12\" [timeOnly]=\"true\"\r\n              icon=\"pi pi-clock\" [showIcon]=\"true\"></p-calendar>\r\n            <div *ngIf=\"f.starttime.invalid && (f.starttime.dirty || f.starttime.touched)\"\r\n              class=\"text-left errormsg\">\r\n              <span *ngIf=\"f.starttime.errors.required\">\r\n                <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select time</span>\r\n              </span>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n        <div class=\"col-lg-3\">\r\n          <div class=\"form-group\">\r\n            <label for=\"exampleFormControlSelect1\">End Time*</label>\r\n            <p-calendar class=\"custom-textbox-checkedin\" formControlName=\"endtime\" styleClass=\"form-control\"  hourFormat=\"12\" [timeOnly]=\"true\"\r\n              icon=\"pi pi-clock\" [showIcon]=\"true\"></p-calendar>\r\n            <div *ngIf=\"f.endtime.invalid && (f.endtime.dirty || f.endtime.touched)\" class=\"text-left errormsg\">\r\n              <span *ngIf=\"f.endtime.errors.required\">\r\n                <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select time</span>\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"row mb-20\">\r\n        <div class=\"col-lg-6\">\r\n          <div class=\"form-group\">\r\n            <label for=\"exampleFormControlSelect1\">Class</label>           \r\n              <p-multiSelect [options]=\"classList\" formControlName=\"class\" [panelStyle]=\"{minWidth:'200px'}\" [maxSelectedLabels]=\"5\">\r\n              </p-multiSelect>\r\n              <div *ngIf=\"f.class.invalid && (f.class.dirty || f.class.touched)\" class=\"text-left errormsg\">\r\n                <span *ngIf=\"f.class.errors.required\">\r\n                  <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select class</span>\r\n                </span>\r\n              </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-lg-6\">\r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"exampleFormControlSelect1\">Title</label>\r\n            <input type=\"text\" class=\"form-control\" formControlName=\"title\"  id=\"\" aria-describedby=\"\"\r\n              placeholder=\"Title\" >\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row mb-20\">\r\n        <div class=\"col-lg-6\">\r\n          <div class=\"form-group\">\r\n            <label for=\"exampleFormControlSelect1\">Category</label>\r\n            <select class=\"form-control\" placeholder=\"Category\" formControlName=\"category\"\r\n              id=\"exampleFormControlSelect1\" >\r\n              <option *ngFor=\"let obj of mealTyptList\" [value]=\"obj.value\">{{obj.label}}</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-lg-6\">         \r\n        </div>\r\n      </div>\r\n      <div class=\" mb-20 table-responsive\">\r\n        <table class=\"table\">\r\n          <thead class=\"thead-light\">\r\n            <tr>\r\n              <th >Food*</th>\r\n              <th >Amount*</th>\r\n              <th >Unit*</th>\r\n              <th >Add</th>\r\n              <th >Remove</th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n            <tr *ngFor=\"let disp of involvedFoodList;let item of calenderForm.get('foodcollection').controls; let i = index;\"\r\n              formArrayName=\"foodcollection\">             \r\n                <td [formGroupName]=\"i\">\r\n                  <select class=\"form-control\" formControlName=\"fooditem\" id=\"exampleFormControlSelect1\">\r\n                    <option value=\"\">Select</option>\r\n                    <option *ngFor=\"let food of foodItemList\" [value]=\"food.value\">{{food.label}}</option>\r\n                  </select>\r\n                </td>\r\n                <td [formGroupName]=\"i\">\r\n                  <input type=\"text\"  formControlName=\"amount\" placeholder=\"Amount\" maxlength=\"3\"\r\n                    class=\"form-control\" (keypress)=\"commonService.allowOnlyNumber($event)\">\r\n                </td>\r\n                <td [formGroupName]=\"i\">\r\n                  <select class=\"form-control\" formControlName=\"unit\" placeholder=\"Quantity\"\r\n                    id=\"exampleFormControlSelect1\">\r\n                    <option value=\"\">Select</option>\r\n                    <option *ngFor=\"let obj of mealQuantityType\" [value]=\"obj.value\">{{obj.label}}</option>\r\n                  </select>\r\n                </td>              \r\n\r\n             <td class=\"verAligMiddle\">\r\n                <a href=\"javascript:void(0);\"  *ngIf=\"( displayFoodList.length < foodItemList.length )\" (click)=\"addFoodWhileUpdate()\"><i class=\"fa fa-plus-circle plusIcon\" aria-hidden=\"true\"></i></a>                                \r\n\r\n              </td>\r\n              <td class=\"verAligMiddle\">\r\n                  <a href=\"javascript:void(0);\" *ngIf=\"displayFoodList.length > 1\" (click)=\"removeFoodWhileUpdate(disp)\"> \r\n                  <i class=\"fa fa-minus-circle minusIcon\" aria-hidden=\"true\"></i></a>\r\n\r\n              </td>           \r\n            </tr>\r\n          </tbody>\r\n          </table>\r\n      </div>\r\n      <div class=\"row mb-20\">\r\n        <div class=\"col-lg-12\">\r\n          <div class=\"form-group\">\r\n            <label for=\"exampleFormControlSelect1\">Description</label>           \r\n            <textarea name=\"\" id=\"\" class=\"form-control\"  formControlName=\"description\" cols=\"3\" rows=\"3\" \r\n              class=\"form-control\" placeholder=\"Description\" ></textarea>\r\n\r\n          </div>\r\n        </div>\r\n\r\n\r\n      </div>\r\n\r\n\r\n      <div class=\"row mb-20\">\r\n        <div class=\"col-lg-6\">\r\n          <div class=\"form-group\">\r\n            <label for=\"exampleFormControlSelect1\">Repeat</label>\r\n            <select class=\"form-control\" formControlName=\"repeat\" placeholder=\"First Aid Administered by\"\r\n               id=\"exampleFormControlSelect1\" >\r\n              <option *ngFor=\"let obj of repeatList\" [value]=\"obj.value\" disabled>{{obj.label}}</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-lg-6\" *ngIf=\"disableEndDate\">\r\n          <div class=\"form-group\">\r\n            <label for=\"\">Ends on</label>\r\n\r\n            <input type=\"text\" placeholder=\"Begin\" formControlName=\"endson\" showWeekNumbers=\"false\" \r\n              class=\"form-control\"  [bsConfig]=\"dpConfig\" bsDatepicker disabled>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n       </form>      \r\n</div>\r\n<div class=\"modal-footer\">    \r\n  <button type=\"button\" class=\"btn dlt\" (click)=\"deleteEvent()\"> Delete</button>\r\n  <button type=\"button\" *ngIf=\"isSubscriptionActive \" class=\"btn btn-primary\" (click)=\"verifyMealPlan()\">Save changes</button>\r\n</div>\r\n</div>\r\n\r\n\r\n</div>\r\n</div>\r\n\r\n\r\n\r\n  </div>\r\n</div>\r\n\r\n<ngx-spinner type=\"ball-atom\" size=\"medium\" color=\"#58A7FE\"></ngx-spinner>\r\n<app-confirm-box></app-confirm-box>\r\n"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-meal-planner/agency-admin-meal-planner.component.ts":
/*!*****************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-meal-planner/agency-admin-meal-planner.component.ts ***!
  \*****************************************************************************************************************/
/*! exports provided: AgencyAdminMealPlannerComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AgencyAdminMealPlannerComponent", function() { return AgencyAdminMealPlannerComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var ng_fullcalendar__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ng-fullcalendar */ "./node_modules/ng-fullcalendar/ng-fullcalendar.es5.js");
/* harmony import */ var _teacher_shared_constant__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../teacher/shared/constant */ "./src/app/layout/teacher/shared/constant.ts");
/* harmony import */ var ngx_bootstrap__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ngx-bootstrap */ "./node_modules/ngx-bootstrap/esm5/ngx-bootstrap.js");
/* harmony import */ var _teacher_shared_services_teacher_api_service_teacher_api_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../teacher/shared/services/teacher-api-service/teacher-api.service */ "./src/app/layout/teacher/shared/services/teacher-api-service/teacher-api.service.ts");
/* harmony import */ var _shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../shared/services/error-handler/error-handler.service */ "./src/app/shared/services/error-handler/error-handler.service.ts");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ngx-spinner */ "./node_modules/ngx-spinner/fesm5/ngx-spinner.js");
/* harmony import */ var _shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../shared/services/notification-service/notification.service */ "./src/app/shared/services/notification-service/notification.service.ts");
/* harmony import */ var _shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../shared/services/common/common.service */ "./src/app/shared/services/common/common.service.ts");
/* harmony import */ var _shared_constatant__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../shared/constatant */ "./src/app/layout/agency-admin/components/shared/constatant.ts");
/* harmony import */ var primeng_api__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! primeng/api */ "./node_modules/primeng/api.js");
/* harmony import */ var primeng_api__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(primeng_api__WEBPACK_IMPORTED_MODULE_11__);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};












var AgencyAdminMealPlannerComponent = /** @class */ (function () {
    function AgencyAdminMealPlannerComponent(apiService, error, spinner, notification, commonService, fb, confirmationService) {
        this.apiService = apiService;
        this.error = error;
        this.spinner = spinner;
        this.notification = notification;
        this.commonService = commonService;
        this.fb = fb;
        this.confirmationService = confirmationService;
        this.cars = [];
        this.display = false;
        this.today = new Date();
        this.eventDetails = [];
        this.repeatList = [];
        this.repeatNeverID = 0;
        this.mealVM = {};
        this.eventList = [];
        this.cuurentDate = new Date();
        this.classList = [];
        this.mealTyptList = [];
        this.mealQuantityType = [];
        this.MealMeasureType = [];
        this.foodItemList = [];
        this.getFood = [];
        this.displayFoodList = [];
        this.classListArray = [];
        this.foodListArray = [];
        this.involvedFoodList = [];
        this.disableEndDate = false;
        this.mealPlannerId = 0;
        this.tempFood = [];
        this.foodFieldCount = 1;
        this.foodArrayReq = [];
        this.changeInFoodUpdate = false;
        this.involvedMealClassId = 0;
        this.videoPath = '';
        this.dpConfig = new ngx_bootstrap__WEBPACK_IMPORTED_MODULE_4__["BsDatepickerConfig"]();
        this.isSubscriptionActive = this.commonService.getSubscriptionStatus();
    }
    AgencyAdminMealPlannerComponent.prototype.ngOnInit = function () {
        this.showEndsOn = false;
        this.dpConfig = Object.assign({}, { containerClass: 'theme-dark-blue' }, { showWeekNumbers: false });
        this.tempFood = [
            {
                'id': 1,
                'foodItem': '',
                'amount': '',
                'unit': ''
            }
        ];
        this.events = [
            {
                'title': 'Todays Meal',
                'start': this.today,
                'end': this.today,
                'id': 'a',
                'description': 'Snacks type as follows ',
                'class': this.multiarray1,
                'repeate': 'Never'
            }
        ];
        this.displayFoodList.push(this.tempFood);
        this.calendarOptions = {
            editable: false,
            eventLimit: false,
            displayEventTime: false,
            header: {
                left: 'prev,next today',
                center: 'title',
                right: 'month,agendaWeek,agendaDay,listMonth'
            },
            events: this.eventList
        };
        this.callEvent(this.cuurentDate);
        this.getRepeatTypelist();
        this.getAllClasses();
        this.getMealType();
        this.getQuantityType();
        this.getMealMeasureType();
        this.getFoodItems();
        this.createMealPlannerForm();
        this.getSectionVideo();
    };
    AgencyAdminMealPlannerComponent.prototype.OpenInfoVideo = function (data) {
        $('#infovideo').modal('show');
    };
    AgencyAdminMealPlannerComponent.prototype.getSectionVideo = function () {
        var _this = this;
        var req = {
            'SectionID': 5
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_3__["TeacherAPIURLs"].GetVideoForSection, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.videoPath = res.body.filePath;
                console.log(_this.videoPath, 'bbbbbbbbbbbbbbb');
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminMealPlannerComponent.prototype.PauseInfoVideo = function () {
        var myVideo = document.getElementById('pausevideo');
        myVideo.pause();
        myVideo.currentTime = 0;
    };
    AgencyAdminMealPlannerComponent.prototype.createMealPlannerForm = function () {
        if (this.mealPlannerId === 0) {
            this.calenderForm = this.fb.group({
                startdate: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
                enddate: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
                starttime: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
                endtime: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
                class: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
                title: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
                description: [''],
                repeat: [this.repeatNeverID],
                endson: [''],
                category: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
                foodcollection: this.fb.array([this.createItem()])
            });
        }
    };
    AgencyAdminMealPlannerComponent.prototype.updateMealPlannerForm = function () {
        if (this.mealPlannerId !== 0) {
            this.calenderForm = this.fb.group({
                startdate: [this.mealVM.start, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
                enddate: [this.mealVM.end, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
                starttime: [this.mealVM.startTime, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
                endtime: [this.mealVM.endTime, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
                class: [this.classListArray, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
                title: [this.mealVM.title, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
                description: [this.mealVM.description],
                repeat: [this.mealVM.plannerRepeatTypeID],
                endson: [this.mealVM.endsOn],
                category: [this.mealVM.MealTypeID, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
                foodcollection: this.fb.array([])
            });
            this.updateItem();
        }
    };
    AgencyAdminMealPlannerComponent.prototype.createItem = function () {
        return this.fb.group({
            fooditem: [''],
            amount: [''],
            unit: [''],
        });
    };
    AgencyAdminMealPlannerComponent.prototype.updateItem = function () {
        var ctrl = this.calenderForm.get('foodcollection');
        for (var i = 0; i < this.involvedFoodList.length; i++) {
            ctrl.push(this.fb.group({
                fooditem: [this.involvedFoodList[i].foodTypeID],
                amount: [this.involvedFoodList[i].amount],
                unit: [this.involvedFoodList[i].measureUnitTypeID]
            }));
        }
    };
    AgencyAdminMealPlannerComponent.prototype.initItemRows = function () {
        if (this.mealPlannerId === 0) {
            var ctrl = this.calenderForm.get('foodcollection');
            for (var i = 0; i < this.involvedFoodList.length; i++) {
                ctrl.push(this.fb.group({
                    foodItem: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
                    amount: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
                    unit: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required]
                }));
            }
        }
        else {
        }
    };
    Object.defineProperty(AgencyAdminMealPlannerComponent.prototype, "f", {
        get: function () { return this.calenderForm.controls; },
        enumerable: true,
        configurable: true
    });
    AgencyAdminMealPlannerComponent.prototype.eventClick = function (data) {
    };
    AgencyAdminMealPlannerComponent.prototype.gotoDate = function (event) {
        var _this = this;
        this.spinner.show();
        this.mealVM = {};
        this.classListArray = [];
        this.foodListArray = [];
        $('.mealdetails').modal('show');
        this.items = this.fb.array([this.createItem()]);
        var req = {
            'mealPlanID': event.event.id,
            'agencyID': this.commonService.getAgencyId(),
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_10__["AgencyAPIURLs"].GetParticularMealPlan, req, null).subscribe(function (res) {
            //  this.spinner.hide();
            if (res.body.statusCode === 200) {
                _this.mealPlannerId = res.body.data[0].id;
                _this.eventDetails = res.body.data[0];
                if (res.body.data[0].involvedClass.length !== 0) {
                    res.body.data[0].involvedClass.forEach(function (element) {
                        _this.classListArray.push(element.classesID);
                    });
                }
                _this.mealVM.start = new Date(res.body.data[0].start);
                _this.mealVM.end = new Date(res.body.data[0].end);
                _this.mealVM.involvedClass = res.body.data[0].involvedClass;
                _this.mealVM.description = res.body.data[0].description;
                _this.mealVM.title = res.body.data[0].title;
                _this.mealVM.endTime = _this.commonService.getUTCToLocalFormatedTime(res.body.data[0].endTime);
                _this.mealVM.startTime = _this.commonService.getUTCToLocalFormatedTime(res.body.data[0].startTime);
                _this.mealVM.endsOn = res.body.data[0].endsOn;
                _this.mealVM.MealTypeID = res.body.data[0].mealTypeID;
                _this.mealVM.plannerRepeatTypeID = res.body.data[0].plannerRepeatTypeID;
                _this.mealVM.MealTypeID = _this.calenderForm.value.category;
                if (_this.mealVM.plannerRepeatTypeID === 2) {
                    _this.disableEndDate = true;
                }
                else {
                    _this.disableEndDate = false;
                }
                _this.mealVM.endsOn = new Date(res.body.data[0].endsOn);
                _this.mealVM.MealTypeID = res.body.data[0].mealTypeID;
                _this.items.removeAt(0);
                if (res.body.data[0].involvedMealFoodItems.length !== 0) {
                    res.body.data[0].involvedMealFoodItems.forEach(function (element) {
                        _this.foodListArray.push(element.foodTypeID);
                        _this.items.value.push({
                            'id': element.id, 'fooditem': element.foodTypeID, 'amount': element.amount, 'unit': element.measureUnitTypeID
                        });
                    });
                }
                _this.involvedFoodList = res.body.data[0].involvedMealFoodItems;
                _this.displayFoodList = res.body.data[0].involvedMealFoodItems;
                _this.updateMealPlannerForm();
            }
            _this.spinner.hide();
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
        this.updateMealPlannerForm();
    };
    AgencyAdminMealPlannerComponent.prototype.closeUpdateDialogBox = function () {
        this.display = false;
        $('.mealdetails').modal('hide');
    };
    /**Method to get previous and next month events */
    AgencyAdminMealPlannerComponent.prototype.clickButton = function (value) {
        if (value.buttonType === 'prev' || value.buttonType === 'next') {
            var newDate = new Date(value.data._d);
            newDate.setHours(newDate.getHours() + 24);
            this.cuurentDate = newDate;
            this.callEvent(newDate);
        }
    };
    AgencyAdminMealPlannerComponent.prototype.updateEvent = function (data) {
    };
    AgencyAdminMealPlannerComponent.prototype.callEvent = function (date) {
        this.getAllEvent(date);
    };
    AgencyAdminMealPlannerComponent.prototype.getAllEvent = function (date) {
        var _this = this;
        this.spinner.show();
        var data = {
            'agencyID': this.commonService.getAgencyId(),
            'eventSearchFromDate': this.commonService.getFirstDayOfMonth(date),
            'eventSearchToDate': this.commonService.getLastDayOfMonth(date),
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_3__["TeacherAPIURLs"].GetAllMealPlan, data, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.eventList = res.body.data;
                _this.eventList.forEach(function (x) {
                    var lastdt = new Date(x.end);
                    var enddt = new Date(x.end);
                    lastdt.setHours(enddt.getHours() + 9);
                    x.end = lastdt;
                });
                _this.configureScheduler();
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminMealPlannerComponent.prototype.configureScheduler = function () {
        this.ucCalendar.renderEvents(this.eventList);
        this.spinner.hide();
    };
    AgencyAdminMealPlannerComponent.prototype.getRepeatTypelist = function () {
        var _this = this;
        var data = {
            'agencyID': this.commonService.getAgencyId()
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_3__["TeacherAPIURLs"].GetAllRepeatTypeDropdown, data, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.repeatList = res.body.data;
                _this.repeatList.forEach(function (element) {
                    if (element.label === 'Never') {
                        _this.repeatNeverID = element.value;
                        _this.calenderForm.controls['repeat'].setValue(_this.repeatNeverID);
                        _this.calenderForm.controls['repeat'].updateValueAndValidity();
                    }
                });
            }
            else {
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    /**Method to get class list for multiselect component */
    AgencyAdminMealPlannerComponent.prototype.getAllClasses = function () {
        var _this = this;
        this.classList = [];
        var data = {
            'agencyID': this.commonService.getAgencyId()
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_3__["TeacherAPIURLs"].GetAllClassesDropdown, data, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.classList = res.body.data;
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    /**Method to get meal type  */
    AgencyAdminMealPlannerComponent.prototype.getMealType = function () {
        var _this = this;
        var data = {
            'agencyID': this.commonService.getAgencyId()
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_3__["TeacherAPIURLs"].GetAllMealTypeDropdown, data, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.mealTyptList = res.body.data;
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    /**Method to get meal quantity type   */
    AgencyAdminMealPlannerComponent.prototype.getQuantityType = function () {
        var _this = this;
        var data = {
            'agencyID': this.commonService.getAgencyId()
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_3__["TeacherAPIURLs"].GetAllMeasureUnitTypeDropdown, data, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.mealQuantityType = res.body.data;
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    /**Method to get meal measer type   */
    AgencyAdminMealPlannerComponent.prototype.getMealMeasureType = function () {
        var _this = this;
        var data = {
            'agencyID': this.commonService.getAgencyId()
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_3__["TeacherAPIURLs"].GetAllMeasureQuantityDropdown, data, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.MealMeasureType = res.body.data;
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    /**Method to get Food items   */
    AgencyAdminMealPlannerComponent.prototype.getFoodItems = function () {
        var _this = this;
        this.foodItemList = [];
        var data = {
            'agencyID': this.commonService.getAgencyId()
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_3__["TeacherAPIURLs"].GetAllFoodTypeDropdown, data, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.foodItemList = res.body.data;
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminMealPlannerComponent.prototype.addFood = function () {
        this.foodFieldCount++;
        this.tempFood.push({ 'id': this.foodFieldCount });
        this.items = this.calenderForm.get('foodcollection');
        this.items.push(this.createItem());
        this.displayFoodList = this.tempFood;
    };
    AgencyAdminMealPlannerComponent.prototype.addFoodWhileUpdate = function () {
        this.changeInFoodUpdate = true;
        var count = this.involvedFoodList.length;
        this.items = this.calenderForm.get('foodcollection');
        this.involvedFoodList.push({ 'id': ++count });
        this.items.push(this.createItem());
    };
    AgencyAdminMealPlannerComponent.prototype.removeFoodWhileUpdate = function (data) {
        this.changeInFoodUpdate = true;
        var index = this.involvedFoodList.findIndex(function (r) { return r.id === data.id; });
        this.items = this.calenderForm.get('foodcollection');
        this.items.removeAt(index);
        this.involvedFoodList.splice(index, 1);
    };
    AgencyAdminMealPlannerComponent.prototype.removeFood = function (data) {
        var index = this.displayFoodList.findIndex(function (r) { return r.id === data.id; });
        this.items = this.calenderForm.get('foodcollection');
        this.items.removeAt(index);
        this.displayFoodList.splice(index, 1);
    };
    // Method to hide and show reapet end date field
    AgencyAdminMealPlannerComponent.prototype.getRepeatOptions = function () {
        this.showEndsOn = false;
        if (this.calenderForm.value.repeat !== this.repeatNeverID.toString()) {
            this.showEndsOn = true;
            this.calenderForm.controls['endson'].setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required);
            this.calenderForm.controls['endson'].updateValueAndValidity();
        }
        else if (this.calenderForm.value.repeat === this.repeatNeverID.toString()) {
            this.calenderForm.controls['endson'].setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].nullValidator);
            this.calenderForm.controls['endson'].updateValueAndValidity();
            this.showEndsOn = false;
        }
        else {
        }
        if (this.calenderForm.value.repeat === '2') {
            this.disableEndDate = true;
            this.notification.warning({ message: 'This event will repeat daily from "Begins" to "Ends On" date you will select',
                title: '' });
        }
        else {
            this.disableEndDate = false;
        }
    };
    AgencyAdminMealPlannerComponent.prototype.checkIfFoodDetailsEmpty = function () {
        if (this.calenderForm.value.foodcollection.length === 1 && this.mealPlannerId === 0) {
            this.items = this.calenderForm.get('foodcollection');
            this.items.value[0] = this.calenderForm.value.foodcollection[0];
        }
        if (this.mealPlannerId > 0 && !this.changeInFoodUpdate) {
            for (var index = 0; index < this.items.value.length; index++) {
                this.items.value[index] = this.calenderForm.value.foodcollection[index];
            }
        }
        if (this.items !== undefined) {
            var count_1 = 0;
            this.calenderForm.value.foodcollection.forEach(function (element) {
                if (element.amount === '' || element.fooditem === '' || element.unit === '') {
                    count_1 = count_1 + 1;
                }
                else {
                }
            });
            if (count_1 === 0) {
                this.createMealPlan();
            }
            else {
                this.notification.warning({ message: 'Please fill the food details', title: '' });
            }
        }
        else {
            this.notification.warning({ message: 'Please fill the food details', title: '' });
        }
    };
    AgencyAdminMealPlannerComponent.prototype.verifyMealPlan = function () {
        this.multiClass = [];
        if (this.calenderForm.valid) {
            if (this.calenderForm.value.startdate.setHours(0, 0, 0) > this.calenderForm.value.enddate.setHours(0, 0, 0)) {
                this.notification.warning({ message: 'End date should be greater or equal than Begins date ', title: '' });
            }
            else if (this.calenderForm.value.starttime > this.calenderForm.value.endtime) {
                this.notification.warning({ message: 'End time should be greater than Start time  ', title: '' });
            }
            else if (this.showEndsOn &&
                (this.calenderForm.value.enddate.setHours(0, 0, 0) > this.calenderForm.value.endson.setHours(0, 0, 0))) {
                this.notification.warning({ message: 'Ends On  date should be greater than End date ', title: '' });
            }
            else {
                this.checkIfFoodDetailsEmpty();
            }
        }
        else {
            this.spinner.hide();
            this.commonService.validateAllFields(this.calenderForm);
        }
    };
    AgencyAdminMealPlannerComponent.prototype.createMealPlan = function () {
        var _this = this;
        this.foodArrayReq = [];
        this.multiClass = [];
        this.mealVM = {};
        this.spinner.show();
        this.mealVM.agencyID = this.commonService.getAgencyId();
        this.mealVM.title = this.calenderForm.value.title;
        this.mealVM.start = new Date(this.calenderForm.value.startdate).toDateString();
        this.mealVM.end = new Date(this.calenderForm.value.enddate).toDateString();
        this.mealVM.description = this.calenderForm.value.description;
        this.mealVM.plannerRepeatTypeID = this.calenderForm.value.repeat;
        this.mealVM.endsOn = this.calenderForm.value.endson === '' ?
            new Date() : new Date(this.calenderForm.value.endson).toDateString();
        this.mealVM.startTime = this.calenderForm.value.starttime;
        this.mealVM.endTime = this.calenderForm.value.endtime;
        this.mealVM.id = this.mealPlannerId !== 0 ? this.mealPlannerId : 0;
        if (this.calenderForm.value.class.length !== 0) {
            this.calenderForm.value.class.forEach(function (element) {
                _this.multiClass.push({
                    'agencyID': _this.commonService.getAgencyId(),
                    'classesID': element,
                    'MealPlannerID': _this.mealPlannerId !== 0 ? _this.mealPlannerId : 0,
                    'id': _this.involvedMealClassId
                });
            });
        }
        this.mealVM.involvedClass = this.multiClass;
        this.mealVM.MealTypeID = this.calenderForm.value.category;
        if (this.items.value.length !== 0 && this.items !== undefined) {
            this.items.value.forEach(function (element) {
                _this.foodArrayReq.push({
                    'id': _this.mealPlannerId !== 0 ? element.id : 0,
                    'agencyID': _this.commonService.getAgencyId(),
                    'MealPlannerID': _this.mealPlannerId !== 0 ? _this.mealPlannerId : 0,
                    'foodTypeID': element.fooditem,
                    'amount': element.amount,
                    'measureUnitTypeID': element.unit
                });
            });
        }
        this.mealVM.involvedMealFoodItems = this.foodArrayReq;
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_10__["AgencyAPIURLs"].SaveMealPlan, this.mealVM, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.spinner.hide();
                $('.addmeal').modal('hide');
                _this.display = false;
                $('.mealdetails').modal('hide');
                _this.callEvent(_this.cuurentDate);
                _this.notification.success({
                    message: _this.mealPlannerId === 0 ? 'Meal plan created successfully' :
                        'Meal plan updated successfully', title: ''
                });
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminMealPlannerComponent.prototype.clearForm = function () {
        if (this.items) {
            this.items = this.clearItems;
        }
        this.foodFieldCount = 1;
        this.involvedMealClassId = 0;
        this.display = false;
        $('.mealdetails').modal('hide');
        this.changeInFoodUpdate = false;
        this.mealPlannerId = 0;
        this.displayFoodList = [];
        this.tempFood = [];
        this.tempFood = [
            {
                'id': 1,
                'foodItem': '',
                'amount': '',
                'unit': ''
            }
        ];
        this.displayFoodList.push(this.tempFood);
        this.createMealPlannerForm();
    };
    AgencyAdminMealPlannerComponent.prototype.updatePlan = function () {
    };
    // Method to add new food item into food list
    AgencyAdminMealPlannerComponent.prototype.saveMealItemInformation = function () {
        var _this = this;
        this.mealItemMasterName = this.mealItemMasterName.trim();
        if (this.mealItemMasterName === '' || this.mealItemMasterName === undefined && this.mealItemMasterName === null) {
            this.notification.warning({ message: 'Please enter valid food name', title: '' });
        }
        else {
            this.spinner.show();
            var data = {
                'agencyID': this.commonService.getAgencyId(),
                'FoodTypeName': this.mealItemMasterName
            };
            this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_10__["AgencyAPIURLs"].SaveMealItemInformation, data, null).subscribe(function (res) {
                if (res.body.statusCode === 200) {
                    _this.getFoodItems();
                    $('.newfood').modal('hide');
                    _this.notification.success({ message: 'New food item added successfully', title: '' });
                    _this.spinner.hide();
                }
                else if (res.body.statusCode === 987) {
                    _this.notification.warning({ message: 'Already Exist', title: '' });
                    _this.spinner.hide();
                }
                else {
                    _this.spinner.hide();
                    _this.error.unknownError();
                }
            }, function (err) {
                _this.spinner.hide();
                _this.error.commonError(err);
            });
        }
    };
    AgencyAdminMealPlannerComponent.prototype.clearFoodFormForm = function () {
        this.mealItemMasterName = '';
    };
    AgencyAdminMealPlannerComponent.prototype.removeModalPosition = function (event) {
        document.getElementsByTagName('body')[0].removeAttribute('style');
    };
    /**Delete event method */
    AgencyAdminMealPlannerComponent.prototype.deleteEvent = function () {
        var _this = this;
        console.log(this.mealPlannerId);
        this.confirmationService.confirm({
            message: 'Do you want to delete this event?',
            accept: function () {
                if (_this.mealPlannerId > 0) {
                    _this.spinner.show();
                    var data = {
                        'agencyID': _this.commonService.getAgencyId(),
                        'mealPlannerID': _this.mealPlannerId
                    };
                    _this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_3__["TeacherAPIURLs"].DeleteParticularMealPlan, data, null).subscribe(function (res) {
                        if (res.body.statusCode === 200) {
                            _this.deleteMealPlanSuccess(_this.mealPlannerId);
                        }
                        else {
                            _this.spinner.hide();
                            _this.error.unknownError();
                        }
                    }, function (err) {
                        _this.spinner.hide();
                        _this.error.commonError(err);
                    });
                }
                else {
                    _this.error.unknownError();
                }
            }
        });
    };
    /**Success method for delete meal plan */
    AgencyAdminMealPlannerComponent.prototype.deleteMealPlanSuccess = function (data) {
        var index = this.eventList.findIndex(function (r) { return r.id === data; });
        this.eventList.splice(index, 1);
        this.spinner.hide();
        this.ucCalendar.renderEvents(this.eventList);
        $('.mealdetails').modal('hide');
        this.notification.success({ message: 'Plan deleted successfully', title: '' });
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])(ng_fullcalendar__WEBPACK_IMPORTED_MODULE_2__["CalendarComponent"]),
        __metadata("design:type", ng_fullcalendar__WEBPACK_IMPORTED_MODULE_2__["CalendarComponent"])
    ], AgencyAdminMealPlannerComponent.prototype, "ucCalendar", void 0);
    AgencyAdminMealPlannerComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-agency-admin-meal-planner',
            template: __webpack_require__(/*! ./agency-admin-meal-planner.component.html */ "./src/app/layout/agency-admin/components/agency-admin-meal-planner/agency-admin-meal-planner.component.html"),
            styles: [__webpack_require__(/*! ./agency-admin-meal-planner.component.css */ "./src/app/layout/agency-admin/components/agency-admin-meal-planner/agency-admin-meal-planner.component.css")]
        }),
        __metadata("design:paramtypes", [_teacher_shared_services_teacher_api_service_teacher_api_service__WEBPACK_IMPORTED_MODULE_5__["TeacherApiService"], _shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_6__["ErrorHandlerService"],
            ngx_spinner__WEBPACK_IMPORTED_MODULE_7__["NgxSpinnerService"], _shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_8__["NotificationService"],
            _shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_9__["CommonService"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormBuilder"], primeng_api__WEBPACK_IMPORTED_MODULE_11__["ConfirmationService"]])
    ], AgencyAdminMealPlannerComponent);
    return AgencyAdminMealPlannerComponent;
}());



/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-mealserve-report/agency-admin-mealservereport.component.css":
/*!*************************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-mealserve-report/agency-admin-mealservereport.component.css ***!
  \*************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9hZ2VuY3ktYWRtaW4vY29tcG9uZW50cy9hZ2VuY3ktYWRtaW4tbWVhbHNlcnZlLXJlcG9ydC9hZ2VuY3ktYWRtaW4tbWVhbHNlcnZlcmVwb3J0LmNvbXBvbmVudC5jc3MifQ== */"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-mealserve-report/agency-admin-mealservereport.component.html":
/*!**************************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-mealserve-report/agency-admin-mealservereport.component.html ***!
  \**************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"wrapper\">\r\n  <div class=\"container-fluid\">\r\n\r\n    <div class=\"pagetitle\">\r\n      <div>\r\n        <h2>Report\r\n          <span>/ Student Meal Serve </span>\r\n        </h2>\r\n      </div>\r\n    </div>\r\n    <div class=\"subhead d-flex justify-content-between mt-20\">\r\n      <div>\r\n        <h3>Student Meal Serve Report</h3>\r\n      </div>      \r\n    </div>\r\n    <div class=\"card cardfilter\">      \r\n         <div class=\"leftfilter\">\r\n        <div class=\"row algcenter\">          \r\n          <div class=\"search-class\">\r\n            <div class=\"pr15\">\r\n              <div class=\"form-group\">\r\n                <select class=\"form-control\" placeholder=\"Serch\" [(ngModel)]=\"searchByClass\"\r\n                   id=\"exampleFormControlSelect1\">\r\n                  <option value=\"\">All classes</option>\r\n                  <option *ngFor=\"let classes of classList\" [value]=\"classes.classesID\">{{classes.className}}\r\n                  </option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"search-date\">             \r\n              <select name=\"\" id=\"\" [(ngModel)]=\"searchMonth\" class=\"form-control mr15\">\r\n                <option value=\"0\">Select Month</option>\r\n                <option value=\"1\">January</option>\r\n                <option value=\"2\">February</option>\r\n                <option value=\"3\">March</option>\r\n                <option value=\"4\">April</option>\r\n                <option value=\"5\">May</option>\r\n                <option value=\"6\">June</option>\r\n                <option value=\"7\">July</option>\r\n                <option value=\"8\">August</option>\r\n                <option value=\"9\">September</option>\r\n                <option value=\"10\">October</option>\r\n                <option value=\"11\">November</option>\r\n                <option value=\"12\">December</option>\r\n              </select>\r\n            </div>\r\n\r\n            <div class=\"search-date\">            \r\n              <select name=\"\" id=\"\" [(ngModel)]=\"searchYear\" class=\"form-control mr15\">\r\n                <option value=\"0\">Select Year</option>\r\n                <option value=\"2019\">2019</option>                \r\n              </select>\r\n            </div>\r\n          <div class=\"filter-buttons\">\r\n            <button type=\"submit\" class=\"btn btn-send\" title=\"Download report\"  (click)=\"pdfmealserveReport()\">Download</button>\r\n          </div>\r\n      </div> \r\n    </div>\r\n      </div>\r\n  </div>\r\n  <ngx-spinner type=\"ball-atom\" size=\"medium\" color=\"#58A7FE\"></ngx-spinner>"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-mealserve-report/agency-admin-mealservereport.component.ts":
/*!************************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-mealserve-report/agency-admin-mealservereport.component.ts ***!
  \************************************************************************************************************************/
/*! exports provided: AgencyAdminMealServereportComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AgencyAdminMealServereportComponent", function() { return AgencyAdminMealServereportComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var ngx_bootstrap__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ngx-bootstrap */ "./node_modules/ngx-bootstrap/esm5/ngx-bootstrap.js");
/* harmony import */ var src_app_shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/shared/services/error-handler/error-handler.service */ "./src/app/shared/services/error-handler/error-handler.service.ts");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ngx-spinner */ "./node_modules/ngx-spinner/fesm5/ngx-spinner.js");
/* harmony import */ var src_app_shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/shared/services/notification-service/notification.service */ "./src/app/shared/services/notification-service/notification.service.ts");
/* harmony import */ var src_app_shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/shared/services/common/common.service */ "./src/app/shared/services/common/common.service.ts");
/* harmony import */ var _shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../shared/services/agency-api-service/agency-api.service */ "./src/app/layout/agency-admin/components/shared/services/agency-api-service/agency-api.service.ts");
/* harmony import */ var _shared_constatant__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../shared/constatant */ "./src/app/layout/agency-admin/components/shared/constatant.ts");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../../environments/environment */ "./src/environments/environment.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









var AgencyAdminMealServereportComponent = /** @class */ (function () {
    function AgencyAdminMealServereportComponent(apiService, error, spinner, notification, commonService) {
        this.apiService = apiService;
        this.error = error;
        this.spinner = spinner;
        this.notification = notification;
        this.commonService = commonService;
        this.searchByStudentName = '';
        this.studentList = [];
        this.loader = true;
        this.pageNo = 0;
        this.limit = 10;
        this.totalRecord = 0;
        this.searchMonth = 0;
        this.searchYear = 0;
        this.searchByClass = '';
        this.classList = [];
        this.dpConfig = new ngx_bootstrap__WEBPACK_IMPORTED_MODULE_1__["BsDatepickerConfig"]();
    }
    AgencyAdminMealServereportComponent.prototype.ngOnInit = function () {
        this.dpConfig = Object.assign({}, { containerClass: 'theme-dark-blue' }, { showWeekNumbers: false });
        this.getAllClassess();
    };
    AgencyAdminMealServereportComponent.prototype.getAllClassess = function () {
        var _this = this;
        this.classList = [];
        this.spinner.show();
        var data = {
            'agencyID': this.commonService.getAgencyId()
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_7__["AgencyAPIURLs"].GetAllClasses, data, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.spinner.hide();
                _this.classList = res.body.data;
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminMealServereportComponent.prototype.search = function () {
    };
    AgencyAdminMealServereportComponent.prototype.pdfmealserveReport = function () {
        var _this = this;
        if (this.searchMonth == 0 || this.searchMonth == null) {
            this.notification.warning({ message: 'Please select Month', title: '' });
            return;
        }
        if (this.searchYear == 0 || this.searchYear == null) {
            this.notification.warning({ message: 'Please select Year', title: '' });
            return;
        }
        if (!(this.searchMonth == 0 || this.searchMonth == null && this.searchYear == 0 || this.searchYear == null)) {
            this.loader = true;
            this.spinner.show();
            var req = {
                'StudentName': this.searchByStudentName,
                'agencyID': this.commonService.getAgencyId(),
                'month': this.searchMonth,
                'ClassesIDReq': this.searchByClass,
                'year': this.searchYear
            };
            this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_7__["AgencyAPIURLs"].GetMealServeReportPDF, req, null).subscribe(function (res) {
                if (res.body.statusCode === 200) {
                    _this.searchMonth = 0;
                    _this.searchYear = 0;
                    _this.searchByClass = '';
                    var filename = _environments_environment__WEBPACK_IMPORTED_MODULE_8__["environment"].baseUrl + res.body.fileName;
                    var name_1 = res.body.fileName;
                    window.open(filename);
                    setTimeout(function () {
                        _this.deletePdFFromServer(name_1);
                    }, 5000);
                }
                else {
                    _this.notification.warning({ message: 'No Record Found', title: '' });
                }
                _this.loader = false;
                _this.spinner.hide();
            }, function (err) {
                _this.spinner.hide();
                _this.error.commonError(err);
            });
        }
    };
    // Delete pdf after use from server
    AgencyAdminMealServereportComponent.prototype.deletePdFFromServer = function (filename) {
        var req = {
            'fileName': filename,
            'agencyID': this.commonService.getAgencyId()
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_7__["AgencyAPIURLs"].DeleteExistingFile, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
            }
            else {
            }
        }, function (err) {
            console.log(err);
        });
    };
    AgencyAdminMealServereportComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-agency-admin-mealservereport',
            template: __webpack_require__(/*! ./agency-admin-mealservereport.component.html */ "./src/app/layout/agency-admin/components/agency-admin-mealserve-report/agency-admin-mealservereport.component.html"),
            styles: [__webpack_require__(/*! ./agency-admin-mealservereport.component.css */ "./src/app/layout/agency-admin/components/agency-admin-mealserve-report/agency-admin-mealservereport.component.css")]
        }),
        __metadata("design:paramtypes", [_shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_6__["AgencyApiService"], src_app_shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_2__["ErrorHandlerService"],
            ngx_spinner__WEBPACK_IMPORTED_MODULE_3__["NgxSpinnerService"], src_app_shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_4__["NotificationService"],
            src_app_shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_5__["CommonService"]])
    ], AgencyAdminMealServereportComponent);
    return AgencyAdminMealServereportComponent;
}());



/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-medication-report/agency-admin-medication-report.component.css":
/*!****************************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-medication-report/agency-admin-medication-report.component.css ***!
  \****************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9hZ2VuY3ktYWRtaW4vY29tcG9uZW50cy9hZ2VuY3ktYWRtaW4tbWVkaWNhdGlvbi1yZXBvcnQvYWdlbmN5LWFkbWluLW1lZGljYXRpb24tcmVwb3J0LmNvbXBvbmVudC5jc3MifQ== */"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-medication-report/agency-admin-medication-report.component.html":
/*!*****************************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-medication-report/agency-admin-medication-report.component.html ***!
  \*****************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"wrapper\">\r\n    <div class=\"container-fluid\">\r\n  \r\n      <div class=\"pagetitle\">\r\n        <div>\r\n          <h2>Report\r\n            <span>/ Medication Report </span>\r\n          </h2>\r\n        </div>\r\n      </div>\r\n      <div class=\"subhead d-flex justify-content-between mt-20\">\r\n        <div>\r\n          <h3>Student Medication Report</h3>\r\n        </div>\r\n        <div style=\"cursor:pointer\" title=\"Download report\" (click)=\"pdfReportForMedication()\"><i class=\"fa fa-download\" aria-hidden=\"true\"></i>\r\n        </div>\r\n      </div>\r\n      <div class=\"card cardfilter\">       \r\n           <div class=\"leftfilter\">\r\n          <div class=\"row algcenter\">\r\n            <div class=\"search-date\">\r\n              <div class=\"pr15 label-text\">Search Name : </div>\r\n              <input type=\"text\" placeholder=\"Search student name\" [(ngModel)]=\"searchByStudentName\" class=\"form-control mr15\" id=\"\">\r\n            </div>\r\n            <div class=\"filter-buttons\">\r\n              <button type=\"submit\" class=\"btn btn-send\"  (click)=\"search()\">Search</button>             \r\n            </div>\r\n        </div> \r\n      </div>\r\n  \r\n      <div class=\"studentlist\">\r\n        <div class=\"tab-content\" id=\"pills-tabContent\">\r\n          <div class=\"tab-pane fade show active\" id=\"pills-appstudent\" role=\"tabpanel\" aria-labelledby=\"appStudent\">\r\n  \r\n            <div class=\"innertable studentListSearch\">\r\n              <div class=\"table-responsive\">\r\n                <table class=\"table \">\r\n                  <thead class=\"thead-light\">\r\n                    <tr>\r\n                      <th scope=\"col\">Student Name</th>\r\n                      <th scope=\"col\">Medication Name</th>\r\n                      <th scope=\"col\">Units</th>\r\n                      <th scope=\"col\">Strength</th>\r\n                      <th scope=\"col\">How To Take</th>\r\n                      <th scope=\"col\">Start Date</th>\r\n                      <th scope=\"col\">End Date</th>\r\n                      <th scope=\"col\">Other Medication</th>\r\n                      <th scope=\"col\">Dose Repeat type</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody >\r\n                 <tr *ngFor=\"let report of reportList\">\r\n                  <td>{{report.studentName}}</td>\r\n                  <td>{{report.medicationName}}</td>\r\n                  <td>{{report.units}}</td>\r\n                  <td>{{report.strength}}</td>\r\n                  <td>{{report.howToTake}}</td>\r\n                  <td>{{report.medStartDate| date}}</td>\r\n                  <td>{{report.medEndDate| date}}</td>\r\n                  <td>{{report.otherMedication}}</td>\r\n                  <td>{{report.doseRepeat}}</td>\r\n                 </tr>\r\n                  </tbody>                 \r\n                </table>\r\n                <div class=\"text-center\">\r\n                    <span  *ngIf=\"reportList.length == 0 && !loader\" class=\"text-center\">No result found</span>\r\n                  </div> \r\n              </div>\r\n              <p-paginator [alwaysShow]=\"false\" [rows]=\"limit\" [totalRecords]=\"totalRecord\" (onPageChange)=\"paginate($event)\"></p-paginator>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  \r\n  <ngx-spinner type=\"ball-atom\" size=\"medium\" color=\"#58A7FE\"></ngx-spinner>\r\n  "

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-medication-report/agency-admin-medication-report.component.ts":
/*!***************************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-medication-report/agency-admin-medication-report.component.ts ***!
  \***************************************************************************************************************************/
/*! exports provided: AgencyAdminMedicationReportComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AgencyAdminMedicationReportComponent", function() { return AgencyAdminMedicationReportComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../shared/services/agency-api-service/agency-api.service */ "./src/app/layout/agency-admin/components/shared/services/agency-api-service/agency-api.service.ts");
/* harmony import */ var _shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../shared/services/error-handler/error-handler.service */ "./src/app/shared/services/error-handler/error-handler.service.ts");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ngx-spinner */ "./node_modules/ngx-spinner/fesm5/ngx-spinner.js");
/* harmony import */ var _shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../shared/services/notification-service/notification.service */ "./src/app/shared/services/notification-service/notification.service.ts");
/* harmony import */ var _shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../shared/services/common/common.service */ "./src/app/shared/services/common/common.service.ts");
/* harmony import */ var _shared_constatant__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../shared/constatant */ "./src/app/layout/agency-admin/components/shared/constatant.ts");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../../environments/environment */ "./src/environments/environment.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








var AgencyAdminMedicationReportComponent = /** @class */ (function () {
    function AgencyAdminMedicationReportComponent(apiService, error, spinner, notification, commonService) {
        this.apiService = apiService;
        this.error = error;
        this.spinner = spinner;
        this.notification = notification;
        this.commonService = commonService;
        this.reportList = [];
        this.pageNo = 0;
        this.limit = 10;
        this.totalRecord = 0;
        this.searchByStudentName = '';
        this.loader = true;
        this.showClearBtn = false;
    }
    AgencyAdminMedicationReportComponent.prototype.ngOnInit = function () {
        this.getMedicationReport();
    };
    AgencyAdminMedicationReportComponent.prototype.getMedicationReport = function () {
        var _this = this;
        this.loader = true;
        this.reportList = [];
        this.spinner.show();
        var data = {
            'agencyID': this.commonService.getAgencyId(),
            'studentName': this.searchByStudentName,
            'page': this.pageNo,
            'limit': this.limit,
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_6__["AgencyAPIURLs"].GetMedicationReport, data, null).subscribe(function (res) {
            _this.totalRecord = res.body.totalRows;
            if (res.body.statusCode === 200) {
                _this.spinner.hide();
                _this.reportList = res.body.data;
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
            _this.loader = false;
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminMedicationReportComponent.prototype.paginate = function (event) {
        this.pageNo = event.page;
        this.getMedicationReport();
    };
    AgencyAdminMedicationReportComponent.prototype.pdfReportForMedication = function () {
        var _this = this;
        this.loader = true;
        this.spinner.show();
        var req = {
            'StudentName': this.searchByStudentName,
            'agencyID': this.commonService.getAgencyId()
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_6__["AgencyAPIURLs"].PdfMedicationReport, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                var filename = _environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].baseUrl + res.body.fileName;
                var name_1 = res.body.fileName;
                window.open(filename);
                setTimeout(function () {
                    _this.deletePdFFromServer(name_1);
                }, 10000);
            }
            else {
                _this.error.unknownError();
            }
            _this.loader = false;
            _this.spinner.hide();
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    // Delete pdf after use from server
    AgencyAdminMedicationReportComponent.prototype.deletePdFFromServer = function (filename) {
        var req = {
            'fileName': filename,
            'agencyID': this.commonService.getAgencyId()
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_6__["AgencyAPIURLs"].DeleteExistingFile, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
            }
            else {
            }
        }, function (err) {
            console.log(err);
        });
    };
    AgencyAdminMedicationReportComponent.prototype.search = function () {
        this.showClearBtn = true;
        this.getMedicationReport();
    };
    AgencyAdminMedicationReportComponent.prototype.clearSearch = function () {
        this.searchByStudentName = '';
        this.fromDate = null;
        this.toDate = null;
        this.showClearBtn = false;
        this.getMedicationReport();
    };
    AgencyAdminMedicationReportComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-agency-admin-medication-report',
            template: __webpack_require__(/*! ./agency-admin-medication-report.component.html */ "./src/app/layout/agency-admin/components/agency-admin-medication-report/agency-admin-medication-report.component.html"),
            styles: [__webpack_require__(/*! ./agency-admin-medication-report.component.css */ "./src/app/layout/agency-admin/components/agency-admin-medication-report/agency-admin-medication-report.component.css")]
        }),
        __metadata("design:paramtypes", [_shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_1__["AgencyApiService"], _shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_2__["ErrorHandlerService"],
            ngx_spinner__WEBPACK_IMPORTED_MODULE_3__["NgxSpinnerService"], _shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_4__["NotificationService"],
            _shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_5__["CommonService"]])
    ], AgencyAdminMedicationReportComponent);
    return AgencyAdminMedicationReportComponent;
}());



/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-message/agency-admin-message.component.css":
/*!********************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-message/agency-admin-message.component.css ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\r\n  \r\n  .chat_people{ overflow:hidden; clear:both;}\r\n  .chat_list {\r\n    border-bottom: 1px solid #E2F0FF;\r\n    margin: 0;\r\n    padding: 15px;\r\n  }\r\n  .inbox_chat { height: 550px; overflow-y: auto;}\r\n  .inbox_people{background: #F6FBFF;}\r\n  .active_chat{ background:#FF6C6C;color: #fff!important;}\r\n  .active_chat .kidname,.active_chat .chat_ib h5,.active_chat .chat_ib .status{color: #fff}\r\n  .recent_heading h4 {\r\n    color: #fff;\r\n    font-size: 15px;\r\n    padding: 10px 10px;\r\n    font-weight: 400;\r\n}\r\n  .inbox_chat1 \r\n{ \r\n  height: 550px;\r\n  overflow-y: scroll;  \r\n}\r\n  .recent_heading{margin-bottom:10px;}\r\n  .info-icon{\r\n  margin-left: 243px;\r\n  font-size: 20px; \r\n  color: #383333;\r\n}\r\n  .count {\r\n  margin-left: 135px;\r\n  margin-bottom: -25px;\r\n  font-size: 18px;\r\n  color: #58a7fe;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L2FnZW5jeS1hZG1pbi9jb21wb25lbnRzL2FnZW5jeS1hZG1pbi1tZXNzYWdlL2FnZW5jeS1hZG1pbi1tZXNzYWdlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7RUFFRSxjQUFjLGVBQWUsRUFBRSxVQUFVLENBQUM7RUFDMUM7SUFDRSxnQ0FBZ0M7SUFDaEMsU0FBUztJQUNULGFBQWE7RUFDZjtFQUNBLGNBQWMsYUFBYSxFQUFFLGdCQUFnQixDQUFDO0VBQzlDLGNBQWMsbUJBQW1CLENBQUM7RUFDbEMsY0FBYyxrQkFBa0IsQ0FBQyxxQkFBcUIsQ0FBQztFQUN2RCw2RUFBNkUsV0FBVztFQUN4RjtJQUNFLFdBQVc7SUFDWCxlQUFlO0lBQ2Ysa0JBQWtCO0lBQ2xCLGdCQUFnQjtBQUNwQjtFQUVBOztFQUVFLGFBQWE7RUFDYixrQkFBa0I7QUFDcEI7RUFFQSxnQkFBZ0Isa0JBQWtCLENBQUM7RUFFbkM7RUFDRSxrQkFBa0I7RUFDbEIsZUFBZTtFQUNmLGNBQWM7QUFDaEI7RUFFQTtFQUNFLGtCQUFrQjtFQUNsQixvQkFBb0I7RUFDcEIsZUFBZTtFQUNmLGNBQWM7QUFDaEIiLCJmaWxlIjoic3JjL2FwcC9sYXlvdXQvYWdlbmN5LWFkbWluL2NvbXBvbmVudHMvYWdlbmN5LWFkbWluLW1lc3NhZ2UvYWdlbmN5LWFkbWluLW1lc3NhZ2UuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG4gIFxyXG4gIC5jaGF0X3Blb3BsZXsgb3ZlcmZsb3c6aGlkZGVuOyBjbGVhcjpib3RoO31cclxuICAuY2hhdF9saXN0IHtcclxuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjRTJGMEZGO1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgcGFkZGluZzogMTVweDtcclxuICB9XHJcbiAgLmluYm94X2NoYXQgeyBoZWlnaHQ6IDU1MHB4OyBvdmVyZmxvdy15OiBhdXRvO31cclxuICAuaW5ib3hfcGVvcGxle2JhY2tncm91bmQ6ICNGNkZCRkY7fVxyXG4gIC5hY3RpdmVfY2hhdHsgYmFja2dyb3VuZDojRkY2QzZDO2NvbG9yOiAjZmZmIWltcG9ydGFudDt9XHJcbiAgLmFjdGl2ZV9jaGF0IC5raWRuYW1lLC5hY3RpdmVfY2hhdCAuY2hhdF9pYiBoNSwuYWN0aXZlX2NoYXQgLmNoYXRfaWIgLnN0YXR1c3tjb2xvcjogI2ZmZn1cclxuICAucmVjZW50X2hlYWRpbmcgaDQge1xyXG4gICAgY29sb3I6ICNmZmY7XHJcbiAgICBmb250LXNpemU6IDE1cHg7XHJcbiAgICBwYWRkaW5nOiAxMHB4IDEwcHg7XHJcbiAgICBmb250LXdlaWdodDogNDAwO1xyXG59XHJcblxyXG4uaW5ib3hfY2hhdDEgXHJcbnsgXHJcbiAgaGVpZ2h0OiA1NTBweDtcclxuICBvdmVyZmxvdy15OiBzY3JvbGw7ICBcclxufVxyXG5cclxuLnJlY2VudF9oZWFkaW5ne21hcmdpbi1ib3R0b206MTBweDt9XHJcblxyXG4uaW5mby1pY29ue1xyXG4gIG1hcmdpbi1sZWZ0OiAyNDNweDtcclxuICBmb250LXNpemU6IDIwcHg7IFxyXG4gIGNvbG9yOiAjMzgzMzMzO1xyXG59XHJcblxyXG4uY291bnQge1xyXG4gIG1hcmdpbi1sZWZ0OiAxMzVweDtcclxuICBtYXJnaW4tYm90dG9tOiAtMjVweDtcclxuICBmb250LXNpemU6IDE4cHg7XHJcbiAgY29sb3I6ICM1OGE3ZmU7XHJcbn1cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuIl19 */"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-message/agency-admin-message.component.html":
/*!*********************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-message/agency-admin-message.component.html ***!
  \*********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"wrapper\">\r\n  <div class=\"container-fluid\">\r\n\r\n    <div class=\"pagetitle\">\r\n      <div>\r\n        <h2><a [routerLink]=\"['../../agencydashboard']\">Dashboard</a>\r\n          <span>/ Message </span>\r\n        </h2>\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\" class=\"btn btn-red\" [routerLink]=\"['../brodcast']\">Broadcast Message</button>\r\n      </div>\r\n    </div>\r\n    <div class=\"subhead d-flex justify-content-between mt-20\">\r\n      <div>\r\n        <h3>Messages</h3>\r\n      </div>\r\n      <div class=\"info-icon\">\r\n        <i class=\"fa fa-info-circle\" (click)=\"OpenInfoVideo()\" data-toggle=\"modal\" aria-hidden=\"true\"\r\n          title=\"Information Video\"></i>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row mt-20 parent_section\">\r\n\r\n      <div class=\"col-lg-3 col-md-4  pr-0\">\r\n        <div class=\"inbox_people mesg\">\r\n          <div class=\"headind_srch\">\r\n            <div class=\"\">\r\n              <input type=\"text\" class=\"form-control\" [(ngModel)]=\"nameSearch\" placeholder=\"Search Name\">\r\n            </div>\r\n          </div>\r\n          <div class=\"inbox_chat\">\r\n            <div class=\"chat_list \" [ngClass]=\"{active_chat: user.isActive}\" (click)=\"addActivClassTeacherList(user)\"\r\n              *ngFor=\"let user of userList | searchfilter: nameSearch\">\r\n              <div class=\"chat_people \">\r\n                <div class=\"chat_img\">\r\n                  <img src=\"{{user.imagePath}}\" onError=\"this.src='assets/img/user.png'\" alt=\"img\"\r\n                    class=\"img-fluid img-circle\"> </div>\r\n                <div class=\"chat_ib\">\r\n                  <p class=\"kidname\">{{user.listUserName}}</p>\r\n                  <p class=\"count\" *ngIf=\"user.count != 0\">{{user.count}} New</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"col-lg-9 col-md-8 pl-0\">\r\n        <div class=\"card viewchat\">\r\n          <div class=\"chat_people\">\r\n            <div class=\"chat_img\">\r\n              <img src=\"{{receiverPic}}\" onError=\"this.src='assets/img/user.png'\" alt=\"img\"\r\n                class=\"img-fluid img-circle\"> </div>\r\n            <div class=\"chat_ib\">\r\n              <p class=\"kidname\">{{receiverName}}</p>\r\n            </div>\r\n          </div>\r\n          <div class=\"brdr\"></div>\r\n          <div class=\"inbox_chat1\" #scrollMessageBox>\r\n            <div class=\"chatmsg\" *ngFor=\"let msg of previousChatList\">\r\n              <div class=\"incoming_msg\" *ngIf=\"loggedInUserID != msg.senderUserID\">\r\n                <div class=\"received_msg\">\r\n                  <div class=\"received_withd_msg\">\r\n                    <p>{{msg.message}}\r\n                    </p>\r\n                    <div class=\"d-flex justify-content-around\">\r\n                      <div>\r\n                        <span class=\"time_date\"> {{msg.createdDateTime| date: 'hh:mm a' }} |\r\n                          {{msg.createdDateTime| date: 'MMM d, y' }}</span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"outgoing_msg\" *ngIf=\"loggedInUserID == msg.senderUserID\">\r\n                <div class=\"sent_msg\">\r\n                  <p>{{msg.message}}</p>\r\n                  <div class=\"d-flex justify-content-around\">\r\n                    <div>\r\n                      <span class=\"time_date\"> {{msg.createdDateTime| date: 'hh:mm a' }} |\r\n                        {{msg.createdDateTime| date: 'MMM d, y' }} </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n\r\n          <!-- </div> -->\r\n          <div class=\"type_msg\">\r\n            <div class=\"input_msg_write\">\r\n              <textarea type=\"text\" class=\"write_msg\" placeholder=\"Type a message\" [(ngModel)]=\"message\"></textarea>\r\n              <div class=\"sndbtn text-right\">\r\n                <button class=\"btn btn-send\" type=\"button\" (click)=\"sendMessage()\">Send</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <!-- For Information Video -->\r\n    <div class=\"modal fade\" id=\"infovideo\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"checkoutLabel\"\r\n      aria-hidden=\"true\">\r\n      <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"checkoutLabel\">Information Video</h5>\r\n            <button type=\"button\" *ngIf=\"videoPath\" class=\"close\" (click)=\"PauseInfoVideo()\" data-dismiss=\"modal\"\r\n              aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n            <button type=\"button\" *ngIf=\"!videoPath\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <div class=\"cont video_section_pop\" *ngIf=\"videoPath\">\r\n              <video controls id=\"pausevideo\">\r\n                <source *ngIf=\"videoPath\" [src]=\"videoPath\" type=\"video/mp4\" />\r\n                <source *ngIf=\"videoPath\" [src]=\"videoPath\" type=\"video/ogg\" />\r\n                <source *ngIf=\"videoPath\" [src]=\"videoPath\" type=\"video/webm\" />\r\n                Browser not supported\r\n              </video>\r\n            </div>\r\n\r\n            <div class=\"cont video_section_pop\" *ngIf=\"!videoPath\">\r\n              Video Not Found\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n\r\n\r\n  </div>\r\n</div>\r\n<ngx-spinner type=\"ball-atom\" size=\"medium\" color=\"#58A7FE\"></ngx-spinner>"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-message/agency-admin-message.component.ts":
/*!*******************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-message/agency-admin-message.component.ts ***!
  \*******************************************************************************************************/
/*! exports provided: AgencyAdminMessageComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AgencyAdminMessageComponent", function() { return AgencyAdminMessageComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../shared/services/agency-api-service/agency-api.service */ "./src/app/layout/agency-admin/components/shared/services/agency-api-service/agency-api.service.ts");
/* harmony import */ var _shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../shared/services/error-handler/error-handler.service */ "./src/app/shared/services/error-handler/error-handler.service.ts");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ngx-spinner */ "./node_modules/ngx-spinner/fesm5/ngx-spinner.js");
/* harmony import */ var _shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../shared/services/notification-service/notification.service */ "./src/app/shared/services/notification-service/notification.service.ts");
/* harmony import */ var _shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../shared/services/common/common.service */ "./src/app/shared/services/common/common.service.ts");
/* harmony import */ var _aspnet_signalr__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @aspnet/signalr */ "./node_modules/@aspnet/signalr/dist/esm/index.js");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../../environments/environment */ "./src/environments/environment.ts");
/* harmony import */ var _shared_constatant__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../shared/constatant */ "./src/app/layout/agency-admin/components/shared/constatant.ts");
/* harmony import */ var _parent_shared_constant__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../parent/shared/constant */ "./src/app/layout/parent/shared/constant.ts");
/* harmony import */ var src_app_layout_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! src/app/layout/teacher/shared/constant */ "./src/app/layout/teacher/shared/constant.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};











var AgencyAdminMessageComponent = /** @class */ (function () {
    function AgencyAdminMessageComponent(apiService, error, spinner, notification, commonService) {
        this.apiService = apiService;
        this.error = error;
        this.spinner = spinner;
        this.notification = notification;
        this.commonService = commonService;
        this.userList = [];
        this.senderArray = [];
        this.receiverArray = [];
        this.nick = '';
        this.message = '';
        this.messages = [];
        this.previousChatList = [];
        this.nameSearch = '';
        this.videoPath = '';
    }
    AgencyAdminMessageComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.agencyId = this.commonService.getAgencyId();
        this.loggedInUserID = this.commonService.getLoggedInUserId();
        this.eshtablishConnectionSignalR();
        this._hubConnection.on('messageReceived', function (nick, receivedMessage) {
            var text = nick + ": " + receivedMessage;
            _this.messages.push(text);
            var str = text.substring(text.indexOf(':') + 1);
            var Obj = JSON.parse(str);
            _this.msgSenderId = Obj.sender;
            console.log('signal', Obj);
            console.log('this.selectedId,this.receiverId', _this.msgSenderId, _this.receiverId);
            if (_this.msgSenderId === _this.receiverId || _this.loggedInUserID === _this.msgSenderId) {
                _this.previousChatList.push({
                    senderUserID: Obj.sender, receiverUserID: Obj.receiver, message: Obj.message,
                    createdDateTime: new Date()
                });
            }
            if (_this.msgSenderId === _this.receiverId && _this.loggedInUserID === Obj.receiver) {
                _this.UnreadMessageByID();
            }
            if (Obj.receiver === _this.loggedInUserID && Obj.sender !== _this.receiverId) {
                var no = _this.userList.findIndex(function (r) { return r.listUserId === Obj.sender; });
                _this.userList[no].count = _this.userList[no].count + 1;
            }
            if (Obj.receiver === _this.loggedInUserID) {
                var user = _this.userList.find(function (item) { return item.listUserId === Obj.sender; });
                if (user) {
                    var idx = _this.userList.indexOf(user);
                    _this.userList.splice(idx, 1);
                    _this.userList.unshift(user);
                }
            }
        });
        this._hubConnection.on('messageSent', function (nick, receivedMessage) {
            var text = nick + ": " + receivedMessage;
            _this.messages.push(text);
            var str = text.substring(text.indexOf(':') + 1);
            var Obj = JSON.parse(str);
            _this.msgSenderId = Obj.sender;
            console.log('signal', Obj);
            console.log('this.selectedId,this.receiverId', _this.msgSenderId, _this.receiverId);
            if (_this.msgSenderId === _this.receiverId || _this.loggedInUserID === _this.msgSenderId) {
                _this.previousChatList.push({
                    senderUserID: Obj.sender, receiverUserID: Obj.receiver, message: Obj.message,
                    createdDateTime: new Date()
                });
            }
        });
        this.UserName = this.commonService.getUserFullName('userdetails');
        this.getUserList();
        this.getSectionVideo();
        this.scrollToBottom();
    };
    AgencyAdminMessageComponent.prototype.ngAfterViewChecked = function () {
        this.scrollToBottom();
    };
    AgencyAdminMessageComponent.prototype.scrollToBottom = function () {
        try {
            this.myScrollContainer.nativeElement.scrollTop = this.myScrollContainer.nativeElement.scrollHeight;
        }
        catch (err) { }
    };
    AgencyAdminMessageComponent.prototype.OpenInfoVideo = function (data) {
        $('#infovideo').modal('show');
    };
    AgencyAdminMessageComponent.prototype.getSectionVideo = function () {
        var _this = this;
        var req = {
            'SectionID': 14
        };
        this.apiService.postData(src_app_layout_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_10__["TeacherAPIURLs"].GetVideoForSection, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.videoPath = res.body.filePath;
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminMessageComponent.prototype.PauseInfoVideo = function () {
        var myVideo = document.getElementById('pausevideo');
        myVideo.pause();
        myVideo.currentTime = 0;
    };
    AgencyAdminMessageComponent.prototype.sendMessage = function () {
        var _this = this;
        if (this.message !== '') {
            console.log(this._hubConnection);
            if (true) {
                console.log(this._hubConnection);
                this._hubConnection
                    .invoke('SendMessage', this.nick, this.message, this.agencyId, this.loggedInUserID, this.receiverId)
                    .then(function () { return _this.message = ''; })
                    .catch(function (err) { return console.error(err, _this.eshtablishConnectionSignalR()); });
            }
        }
    };
    AgencyAdminMessageComponent.prototype.getUserList = function () {
        var _this = this;
        this.userList = [];
        this.spinner.show();
        var model = {
            'agencyID': this.commonService.getAgencyId(),
            'roleID': 2,
            'userID': this.commonService.getLoggedInUserId()
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_8__["AgencyAPIURLs"].GetListForChat, model, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                if (res.body.data !== null && res.body.data !== [] && res.body.data.length > 0) {
                    _this.userList = res.body.data;
                    _this.userList[0].isActive = true;
                    _this.receiverName = _this.userList[0].listUserName;
                    _this.receiverPic = _this.userList[0].imagePath;
                    _this.receiverId = _this.userList[0].listUserId;
                    _this.userList[0].count = 0;
                    _this.getPreviousChat();
                }
            }
            _this.spinner.hide();
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminMessageComponent.prototype.addActivClassTeacherList = function (value) {
        var _this = this;
        this.message = '';
        var no = this.userList.findIndex(function (r) { return r.listUserId === value.listUserId; });
        this.userList[no].count = 0;
        this.userList.forEach(function (x) {
            if (x.listUserId === value.listUserId) {
                x.isActive = true;
                _this.receiverName = value.listUserName;
                _this.receiverPic = value.imagePath;
                _this.receiverId = value.listUserId;
                _this.getPreviousChat();
            }
            else {
                x.isActive = false;
            }
        });
    };
    AgencyAdminMessageComponent.prototype.getPreviousChat = function () {
        var _this = this;
        this.previousChatList = [];
        var model = {
            'agencyID': this.commonService.getAgencyId(),
            'senderUserID': this.commonService.getLoggedInUserId(),
            'receiverUserID': this.receiverId
        };
        this.apiService.postData(_parent_shared_constant__WEBPACK_IMPORTED_MODULE_9__["ParentAPIURLs"].GetMessageByID, model, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                if (res.body.data !== null && res.body.data !== [] && res.body.data !== []) {
                    _this.previousChatList = res.body.data;
                }
                _this.spinner.hide();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminMessageComponent.prototype.eshtablishConnectionSignalR = function () {
        var _this = this;
        var url = _environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].baseUrl + '' + 'chat';
        this._hubConnection = new _aspnet_signalr__WEBPACK_IMPORTED_MODULE_6__["HubConnectionBuilder"]()
            .withUrl(url)
            .build();
        this._hubConnection
            .start()
            .then(function () {
            _this._hubConnection.invoke('getConnectionId', _this.loggedInUserID)
                .then(function (connectionId) {
                // Send the connectionId to controller
                _this.token = connectionId;
            });
        })
            .catch(function (err) { return console.log('Error while establishing connection :(', _this.eshtablishConnectionSignalR()); });
    };
    AgencyAdminMessageComponent.prototype.UnreadMessageByID = function () {
        var _this = this;
        var model = {
            'receiverUserID': this.commonService.getLoggedInUserId(),
            'senderUserID': this.msgSenderId
        };
        this.apiService.postData(_parent_shared_constant__WEBPACK_IMPORTED_MODULE_9__["ParentAPIURLs"].UnreadMessageByID, model, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                // this.totalRecord = res.body.totalRows;
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('scrollMessageBox'),
        __metadata("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"])
    ], AgencyAdminMessageComponent.prototype, "myScrollContainer", void 0);
    AgencyAdminMessageComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-agency-admin-message',
            template: __webpack_require__(/*! ./agency-admin-message.component.html */ "./src/app/layout/agency-admin/components/agency-admin-message/agency-admin-message.component.html"),
            styles: [__webpack_require__(/*! ./agency-admin-message.component.css */ "./src/app/layout/agency-admin/components/agency-admin-message/agency-admin-message.component.css")]
        }),
        __metadata("design:paramtypes", [_shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_1__["AgencyApiService"], _shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_2__["ErrorHandlerService"],
            ngx_spinner__WEBPACK_IMPORTED_MODULE_3__["NgxSpinnerService"], _shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_4__["NotificationService"],
            _shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_5__["CommonService"]])
    ], AgencyAdminMessageComponent);
    return AgencyAdminMessageComponent;
}());



/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-msg-brodcast/agency-admin-msg-brodcast.component.css":
/*!******************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-msg-brodcast/agency-admin-msg-brodcast.component.css ***!
  \******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".minusIcon{font-size: 20px; color: white }\r\n/* #FF6C6C; */\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L2FnZW5jeS1hZG1pbi9jb21wb25lbnRzL2FnZW5jeS1hZG1pbi1tc2ctYnJvZGNhc3QvYWdlbmN5LWFkbWluLW1zZy1icm9kY2FzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFdBQVcsZUFBZSxFQUFFLGFBQWE7QUFDekMsYUFBYSIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9hZ2VuY3ktYWRtaW4vY29tcG9uZW50cy9hZ2VuY3ktYWRtaW4tbXNnLWJyb2RjYXN0L2FnZW5jeS1hZG1pbi1tc2ctYnJvZGNhc3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5taW51c0ljb257Zm9udC1zaXplOiAyMHB4OyBjb2xvcjogd2hpdGUgfVxyXG4vKiAjRkY2QzZDOyAqLyJdfQ== */"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-msg-brodcast/agency-admin-msg-brodcast.component.html":
/*!*******************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-msg-brodcast/agency-admin-msg-brodcast.component.html ***!
  \*******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"wrapper\">\r\n  <div class=\"container-fluid\">\r\n\r\n    <div class=\"pagetitle\">\r\n      <div>\r\n        <h2><a [routerLink]=\"['../message']\">Message</a>\r\n          <span>/ Broadcast Message </span>\r\n        </h2>\r\n        <h3 style=\"color: #707070; margin-top:4px; font-weight: 400;\">Remaining Text Message:\r\n          <span> {{remainingMessage}}</span>\r\n        </h3>\r\n      </div>\r\n      <div>\r\n        <!-- (click)=\"sendTextMessage()\" -->\r\n        <button class=\"btn btn-red\" title=\"Click to send message\" (click)=\"checkReceiver()\" style=\"font-size: 14px;\"><i\r\n            class=\"fa fa-paper-plane minusIcon\" aria-hidden=\"true\" style=\"font-size: 16px;\"></i>&nbsp; Send\r\n          Message</button>\r\n\r\n        <button class=\"btn btn-red\" title=\"Click to send text message\" (click)=\"checkTextReceiver()\"\r\n          style=\"font-size: 14px;\"><i class=\"fa fa-paper-plane minusIcon\" aria-hidden=\"true\"\r\n            style=\"font-size: 16px;\"></i>&nbsp; Send Text Message</button>\r\n\r\n        <button class=\"btn btn-red\" title=\"Click to send email\" (click)=\"checkEmailReceiver()\"\r\n          style=\"font-size: 14px;\"><i class=\"fa fa-paper-plane minusIcon\" aria-hidden=\"true\"\r\n            style=\"font-size: 16px;\"></i>&nbsp; Send Email</button>\r\n\r\n      </div>\r\n    </div>\r\n    <div class=\"subhead d-flex justify-content-between mt-20\">\r\n      <div>\r\n        <h3>Users</h3>\r\n      </div>\r\n      <div style=\"cursor:pointer\">\r\n        <button type=\"submit\" class=\"btn btn-red\" data-toggle=\"modal\" (click)=\"buyMessage()\"\r\n          style=\"font-size: 12px;\">Buy Texts</button>\r\n      </div>\r\n    </div>\r\n    <div class=\"card cardfilter\">\r\n      <div class=\"row algcenter\">\r\n\r\n        <div class=\"leftfilter\">\r\n          <div class=\"search-date\">\r\n            <div class=\"pr15 label-text\">Search Name : </div>\r\n            <input type=\"text\" placeholder=\"Search name\" [(ngModel)]=\"nameSearch\" class=\"form-control mr15\" id=\"\">\r\n          </div>\r\n          <div class=\"search-date\">\r\n            <div class=\"label-text\">Search By User</div>\r\n            <div class=\"pr15\">\r\n              <div class=\"form-group\">\r\n                <select name=\"\" id=\"\" [(ngModel)]=\"userType\">\r\n                  <option value=\"0\">All</option>\r\n                  <option value=\"3\">Teacher</option>\r\n                  <option value=\"4\">Parent</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"search-date\">\r\n            <div class=\"label-text\">Search By Class</div>\r\n            <div class=\"pr15\">\r\n              <div class=\"form-group\">\r\n                <select class=\"form-control\" placeholder=\"Serch\" [(ngModel)]=\"serchByClass\"\r\n                  id=\"exampleFormControlSelect1\">\r\n                  <option value=\"0\">Select class</option>\r\n                  <option *ngFor=\"let classes of classList\" [value]=\"classes.classesID\">{{classes.className}}</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"filter-buttons\">\r\n            <button type=\"submit\" class=\"btn btn-send\" (click)=\"getUserList()\">Search</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"innertable \">\r\n      <div class=\"table-responsive\">\r\n        <table class=\"table\">\r\n          <thead class=\"thead-light\">\r\n            <tr>\r\n              <th class=\"text-center\">\r\n                <label class=\"checkboxcustom\" title=\"Mark/Unmark all \">\r\n                  <input type=\"checkbox\" [(ngModel)]=\"markAllStudents\" (click)=\"getAllMarkedStudent($event)\">\r\n                  <span class=\"checkmark\"></span>\r\n                </label>\r\n              </th>\r\n              <th>Photo</th>\r\n              <th>Name</th>\r\n              <th>User</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr *ngFor=\"let user of userList \">\r\n              <td>\r\n                <label class=\"checkboxcustom\">\r\n                  <input type=\"checkbox\" [checked]=\"user.isMarked\" (click)=\"getSingleMarkedStudent(user,$event)\">\r\n                  <span class=\"checkmark\"></span>\r\n                </label>\r\n              </td>\r\n              <td>\r\n                <img src=\"{{user.imagePath}}\" onError=\"this.src='assets/img/user.png'\" alt=\"\"\r\n                  class=\"img-circle childimg\">\r\n              </td>\r\n              <td>\r\n                {{user.listUserName}}\r\n              </td>\r\n              <td>\r\n                {{user.userRole}}\r\n        </table>\r\n        <div class=\"text-center\">\r\n\r\n          <span *ngIf=\"userList.length == 0 && !loader\" class=\"text-center\">No result found</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n    <!-- Add new Extra Fees Master item modal -->\r\n    <div class=\"modal fade mybrodmsg\" data-backdrop=\"static\" style=\"z-index: 1100;\" id=\"breakout\" tabindex=\"-1\"\r\n      role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n      <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"exampleModalLabel\">Send Message</h5>\r\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <div class=\"form-group\">\r\n              <textarea type=\"text\" [(ngModel)]=\"message\" class=\"form-control\" name=\"\" id=\"\" cols=\"10\" rows=\"10\"\r\n                placeholder=\"Type a message here\"></textarea>\r\n            </div>\r\n\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" (click)=\"clearMessageForm()\"\r\n              data-dismiss=\"modal\">Close</button>\r\n            <button type=\"button\" class=\"btn btn-primary\" (click)=\"sendMessage()\">Send</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"modal fade mybrodemail\" data-backdrop=\"static\" style=\"z-index: 1100;\" id=\"breakout\" tabindex=\"-1\"\r\n      role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n      <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"exampleModalLabel\">Send Email</h5>\r\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <div class=\"form-group\">\r\n              <textarea type=\"text\" [(ngModel)]=\"subject\" class=\"form-control\" name=\"\" id=\"\" cols=\"10\" rows=\"1\"\r\n                placeholder=\"Type a subject here\"></textarea>\r\n              <br>\r\n              <textarea type=\"text\" [(ngModel)]=\"emailmessage\" class=\"form-control\" name=\"\" id=\"\" cols=\"10\" rows=\"10\"\r\n                placeholder=\"Type a message here\"></textarea>\r\n            </div>\r\n\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" (click)=\"clearEmailForm()\"\r\n              data-dismiss=\"modal\">Close</button>\r\n            <button type=\"button\" class=\"btn btn-primary\" (click)=\"sendEmail()\">Send Email</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"modal fade mybrodtxtmsg\" data-backdrop=\"static\" style=\"z-index: 1100;\" id=\"breakout\" tabindex=\"-1\"\r\n      role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n      <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"exampleModalLabel\">Send Text Message</h5>\r\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <div class=\"form-group\">\r\n              <textarea type=\"text\" [(ngModel)]=\"txtmessage\" class=\"form-control\" name=\"\" id=\"\" cols=\"10\" rows=\"10\"\r\n                placeholder=\"Type a message here\"></textarea>\r\n            </div>\r\n\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" (click)=\"clearTextForm()\"\r\n              data-dismiss=\"modal\">Close</button>\r\n            <button type=\"button\" class=\"btn btn-primary\" (click)=\"sendTextMessage()\">Send</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"modal fade buymessages\" data-backdrop=\"static\" style=\"z-index: 1100;\" id=\"breakout\" tabindex=\"-1\"\r\n      role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n      <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"exampleModalLabel\">Buy Text Message</h5>\r\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <form [formGroup]=\"buyTextForm\">\r\n              <div class=\"form-group\">\r\n                <div class=\"row mb-20\">\r\n                  <div class=\"col-lg-12\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Buy Text Messages</label>\r\n                      <select class=\"form-control\" placeholder=\"Text Message Pack\" formControlName=\"txtplan\"\r\n                        id=\"exampleFormControlSelect1\">\r\n                        <option value=\"\">Select Message Pack</option>\r\n                        <option *ngFor=\"let plan of txtPlanList\" [value]=\"plan.amount\">${{plan.amount}} / {{plan.messages}} Messages</option>\r\n                        <!-- <option value=\"10\">$10 / 50 Messages</option>\r\n                        <option value=\"20\">$20 / 100 Messages</option>\r\n                        <option value=\"30\">$30 / 150 Messages</option>\r\n                        <option value=\"40\">$40 / 200 Messages</option>\r\n                        <option value=\"50\">$50 / 250 Messages</option> -->\r\n                      </select>\r\n                      <div *ngIf=\"f.txtplan.invalid && (f.txtplan.dirty || f.txtplan.touched)\"\r\n                        class=\"text-left errormsg\">\r\n                        <span *ngIf=\"f.txtplan.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select text message pack </span>\r\n                        </span>\r\n                      </div>\r\n\r\n                    </div>\r\n                  </div>\r\n\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n            <button type=\"button\" class=\"btn btn-primary\" (click)=\"openCheckout()\">Buy</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n<ngx-spinner type=\"ball-atom\" size=\"medium\" color=\"#58A7FE\"></ngx-spinner>"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-msg-brodcast/agency-admin-msg-brodcast.component.ts":
/*!*****************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-msg-brodcast/agency-admin-msg-brodcast.component.ts ***!
  \*****************************************************************************************************************/
/*! exports provided: AgencyAdminMsgBrodcastComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AgencyAdminMsgBrodcastComponent", function() { return AgencyAdminMsgBrodcastComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../shared/services/agency-api-service/agency-api.service */ "./src/app/layout/agency-admin/components/shared/services/agency-api-service/agency-api.service.ts");
/* harmony import */ var src_app_shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/shared/services/error-handler/error-handler.service */ "./src/app/shared/services/error-handler/error-handler.service.ts");
/* harmony import */ var src_app_shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/shared/services/notification-service/notification.service */ "./src/app/shared/services/notification-service/notification.service.ts");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ngx-spinner */ "./node_modules/ngx-spinner/fesm5/ngx-spinner.js");
/* harmony import */ var src_app_shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/shared/services/common/common.service */ "./src/app/shared/services/common/common.service.ts");
/* harmony import */ var _aspnet_signalr__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @aspnet/signalr */ "./node_modules/@aspnet/signalr/dist/esm/index.js");
/* harmony import */ var _shared_constatant__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../shared/constatant */ "./src/app/layout/agency-admin/components/shared/constatant.ts");
/* harmony import */ var src_environments_environment__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/environments/environment */ "./src/environments/environment.ts");
/* harmony import */ var _teacher_shared_constant__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../teacher/shared/constant */ "./src/app/layout/teacher/shared/constant.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var src_app_shared_constdata__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! src/app/shared/constdata */ "./src/app/shared/constdata.ts");
/* harmony import */ var src_app_layout_admin_shared_constant__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! src/app/layout/admin/shared/constant */ "./src/app/layout/admin/shared/constant.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};













var AgencyAdminMsgBrodcastComponent = /** @class */ (function () {
    function AgencyAdminMsgBrodcastComponent(apiService, error, fb, renderer, spinner, notification, commonService) {
        this.apiService = apiService;
        this.error = error;
        this.fb = fb;
        this.renderer = renderer;
        this.spinner = spinner;
        this.notification = notification;
        this.commonService = commonService;
        this.userList = [];
        this.senderArray = [];
        this.receiverArray = [];
        this.emailArray = [];
        this.phoneArray = [];
        this.nick = '';
        this.message = '';
        this.subject = '';
        this.emailmessage = '';
        this.txtmessage = '';
        this.messages = [];
        this.previousChatList = [];
        this.nameSearch = '';
        this.loader = true;
        this.markAllStudents = false;
        this.userType = 0;
        this.classList = [];
        this.totalRecord = 0;
        this.serchByClass = 0;
        this.remainingMessage = 0;
        this.url = src_environments_environment__WEBPACK_IMPORTED_MODULE_8__["environment"].baseUrl + '' + 'chat';
    }
    AgencyAdminMsgBrodcastComponent.prototype.ngOnInit = function () {
        this.txtPlanList = [];
        console.log(this.agencyName);
        this.agencyId = this.commonService.getAgencyId();
        this.loggedInUserID = this.commonService.getLoggedInUserId();
        this.createBuyTextForm();
        this.getUserList();
        this.signalRWebConnection();
        this.trySignalRConnection();
        this.getRemainingMessageCount();
        this.getAllClassess();
        this.getPlan();
    };
    AgencyAdminMsgBrodcastComponent.prototype.createBuyTextForm = function () {
        this.buyTextForm = this.fb.group({
            txtplan: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_10__["Validators"].required]
        });
    };
    Object.defineProperty(AgencyAdminMsgBrodcastComponent.prototype, "f", {
        get: function () { return this.buyTextForm.controls; },
        enumerable: true,
        configurable: true
    });
    AgencyAdminMsgBrodcastComponent.prototype.getAllClassess = function () {
        var _this = this;
        this.spinner.show();
        var data = {
            'agencyID': this.commonService.getAgencyId()
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_9__["TeacherAPIURLs"].GetAllClasses, data, null).subscribe(function (res) {
            _this.spinner.hide();
            if (res.body.statusCode === 200) {
                _this.totalRecord = res.body.totalRows;
                _this.classList = res.body.data;
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminMsgBrodcastComponent.prototype.signalRWebConnection = function () {
        var _this = this;
        this._hubConnection = new _aspnet_signalr__WEBPACK_IMPORTED_MODULE_6__["HubConnectionBuilder"]()
            .withUrl(this.url)
            .build();
        this._hubConnection
            .start()
            .then(function () {
            console.log('Connection started!');
            _this._hubConnection.invoke('getConnectionId', _this.loggedInUserID)
                .then(function (connectionId) {
                // Send the connectionId to controller
                _this.token = connectionId;
            });
        })
            .catch(function (err) { return console.log('Error while establishing connection :('); });
    };
    AgencyAdminMsgBrodcastComponent.prototype.trySignalRConnection = function () {
        var _this = this;
        this._hubConnection.on('messageReceived', function (nick, receivedMessage) {
            var text = nick + ": " + receivedMessage;
            _this.messages.push(text);
            var str = text.substring(text.indexOf(':') + 1);
            var Obj = JSON.parse(str);
            _this.msgSenderId = Obj.sender;
            console.log('signal', Obj);
            console.log('this.selectedId,this.receiverId', _this.msgSenderId, _this.receiverId);
        });
        this._hubConnection.on('messageSent', function (nick, receivedMessage) {
            var text = nick + ": " + receivedMessage;
            _this.messages.push(text);
            var str = text.substring(text.indexOf(':') + 1);
            var Obj = JSON.parse(str);
            _this.msgSenderId = Obj.sender;
            console.log('signal', Obj);
            console.log('this.selectedId,this.receiverId', _this.msgSenderId, _this.receiverId);
        });
    };
    AgencyAdminMsgBrodcastComponent.prototype.getUserList = function () {
        var _this = this;
        this.loader = true;
        this.receiverArray = [];
        this.emailArray = [];
        this.phoneArray = [];
        this.markAllStudents = false;
        this.userList = [];
        this.spinner.show();
        var model = {
            'agencyID': this.commonService.getAgencyId(),
            'roleID': 2,
            'FilteredUser': this.userType,
            'SerachByName': this.nameSearch,
            'ClassID': this.serchByClass
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_7__["AgencyAPIURLs"].GetListForChat, model, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.loader = false;
                if (res.body.data !== null && res.body.data !== [] && res.body.data.length > 0) {
                    _this.userList = res.body.data;
                    _this.userList.forEach(function (r) {
                        r.isMarked = false;
                    });
                    _this.userList[0].isActive = true;
                    _this.receiverName = _this.userList[0].listUserName;
                    _this.receiverPic = _this.userList[0].imagePath;
                    _this.receiverId = _this.userList[0].listUserId;
                }
            }
            _this.spinner.hide();
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    /**Get student id using checkbox */
    AgencyAdminMsgBrodcastComponent.prototype.getSingleMarkedStudent = function (value, event) {
        this.markAllStudents = false;
        if (event.target.checked === true) {
            if (this.receiverArray.length === 0) {
                this.receiverArray.push(value.listUserId);
                this.emailArray.push(value.emailID);
                this.phoneArray.push(value.phoneNumber);
                var no = this.userList.findIndex(function (r) { return r.listUserId === value.listUserId; });
                if (no !== -1) {
                    this.userList[no].isMarked = true;
                }
            }
            else {
                var index = this.receiverArray.findIndex(function (r) { return r.listUserId === value.listUserId; });
                if (index === -1) {
                    this.receiverArray.push(value.listUserId);
                    this.emailArray.push(value.emailID);
                    this.phoneArray.push(value.phoneNumber);
                    var no = this.userList.findIndex(function (r) { return r.listUserId === value.listUserId; });
                    if (no !== -1) {
                        this.userList[no].isMarked = true;
                    }
                }
            }
        }
        else if (event.target.checked === false) {
            if (this.receiverArray.length > 0) {
                var index = this.receiverArray.indexOf(value.listUserId);
                this.receiverArray.splice(index, 1);
                this.emailArray.splice(index, 1);
                this.phoneArray.splice(index, 1);
                var no = this.userList.findIndex(function (r) { return r.listUserId === value.listUserId; });
                if (no !== -1) {
                    this.userList[no].isMarked = false;
                }
            }
        }
    };
    AgencyAdminMsgBrodcastComponent.prototype.getAllMarkedStudent = function (event) {
        var _this = this;
        if (event.target.checked === true) {
            this.receiverArray = [];
            this.emailArray = [];
            this.phoneArray = [];
            this.userList.forEach(function (data) {
                _this.receiverArray.push(data.listUserId);
                _this.emailArray.push(data.emailID);
                _this.phoneArray.push(data.phoneNumber);
                data.isMarked = true;
            });
            this.markAllStudents = true;
        }
        else {
            this.receiverArray = [];
            this.emailArray = [];
            this.phoneArray = [];
            this.userList.forEach(function (element) {
                element.isMarked = false;
            });
            this.markAllStudents = false;
        }
    };
    AgencyAdminMsgBrodcastComponent.prototype.sendMessage = function () {
        var _this = this;
        if (this.message !== '') {
            console.log(this._hubConnection);
            if (this.receiverArray.length > 0) {
                console.log(this._hubConnection);
                this._hubConnection
                    .invoke('SendMessageMultiple', this.nick, this.message, this.agencyId, this.loggedInUserID, this.receiverArray)
                    .then(function () { return _this.message = ''; })
                    .catch(function (err) { return console.error('send err', err); });
                this.receiverArray = [];
                this.userList.forEach(function (element) {
                    element.isMarked = false;
                });
                this.markAllStudents = false;
                $('.mybrodmsg').modal('hide');
            }
        }
    };
    AgencyAdminMsgBrodcastComponent.prototype.checkReceiver = function () {
        if (this.receiverArray.length > 0) {
            this.message = '';
            $('.mybrodmsg').modal('show');
        }
        else {
            this.notification.warning({ message: 'Please select User', title: '' });
        }
    };
    AgencyAdminMsgBrodcastComponent.prototype.clearMessageForm = function () {
        this.message = '';
    };
    // Send Multiple Email
    AgencyAdminMsgBrodcastComponent.prototype.clearEmailForm = function () {
        this.subject = '';
        this.emailmessage = '';
    };
    AgencyAdminMsgBrodcastComponent.prototype.checkEmailReceiver = function () {
        if (this.receiverArray.length > 0) {
            this.emailmessage = '';
            this.subject = '';
            $('.mybrodemail').modal('show');
        }
        else {
            this.notification.warning({ message: 'Please select User', title: '' });
        }
    };
    AgencyAdminMsgBrodcastComponent.prototype.sendEmail = function () {
        var _this = this;
        if (this.emailmessage === '' && this.subject === '') {
            this.notification.warning({ message: 'Please enter message and subject', title: '' });
        }
        else {
            if (this.emailArray.length > 0) {
                this.loader = true;
                this.spinner.show();
                var model = {
                    'agencyID': this.commonService.getAgencyId(),
                    'senderID': this.loggedInUserID,
                    'message': this.emailmessage,
                    'subject': this.subject,
                    'emailArray': this.emailArray
                };
                this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_7__["AgencyAPIURLs"].SendEmail, model, null).subscribe(function (res) {
                    if (res.body.statusCode === 200) {
                        _this.loader = false;
                        _this.receiverArray = [];
                        _this.emailArray = [];
                        _this.phoneArray = [];
                        _this.userList.forEach(function (element) {
                            element.isMarked = false;
                        });
                        _this.markAllStudents = false;
                        $('.mybrodemail').modal('hide');
                    }
                    _this.spinner.hide();
                }, function (err) {
                    _this.spinner.hide();
                    _this.error.commonError(err);
                });
            }
            this.signalRWebConnection();
            this.trySignalRConnection();
        }
    };
    // For text Message
    AgencyAdminMsgBrodcastComponent.prototype.getPlan = function () {
        var _this = this;
        var req = {
            'isActive': true,
            'agencyID': this.commonService.getAgencyId()
        };
        this.apiService.postData(src_app_layout_admin_shared_constant__WEBPACK_IMPORTED_MODULE_12__["AdminAPIURLs"].GetTextMessagePlan, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.txtPlanList = res.body.data;
                _this.spinner.hide();
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminMsgBrodcastComponent.prototype.clearTextForm = function () {
        this.txtmessage = '';
    };
    AgencyAdminMsgBrodcastComponent.prototype.checkTextReceiver = function () {
        if (this.receiverArray.length > 0) {
            this.txtmessage = '';
            $('.mybrodtxtmsg').modal('show');
        }
        else {
            this.notification.warning({ message: 'Please select User', title: '' });
        }
    };
    AgencyAdminMsgBrodcastComponent.prototype.sendTextMessage = function () {
        var _this = this;
        if (this.emailmessage !== '') {
            this.notification.warning({ message: 'Please enter message', title: '' });
        }
        else {
            if (this.phoneArray.length > 0) {
                this.loader = true;
                this.spinner.show();
                var model = {
                    'agencyID': this.commonService.getAgencyId(),
                    'senderID': this.loggedInUserID,
                    'message': this.txtmessage,
                    'phoneArray': this.phoneArray,
                };
                this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_7__["AgencyAPIURLs"].SendTextMessage, model, null).subscribe(function (res) {
                    if (res.body.statusCode === 200) {
                        _this.loader = false;
                        _this.receiverArray = [];
                        _this.emailArray = [];
                        _this.phoneArray = [];
                        _this.userList.forEach(function (element) {
                            element.isMarked = false;
                        });
                        _this.markAllStudents = false;
                        $('.mybrodtxtmsg').modal('hide');
                        _this.notification.success({ message: 'Message Send successfully', title: 'Success' });
                        _this.getRemainingMessageCount();
                        _this.spinner.hide();
                    }
                    else if (res.body.statusCode === 206) {
                        _this.notification.warning({ message: 'Your Remaining Messages Is Low', title: '' });
                        _this.spinner.hide();
                    }
                    else if (res.body.statusCode === 207) {
                        _this.notification.warning({ message: 'Your Messages is long, Please write short message', title: '' });
                        _this.spinner.hide();
                    }
                    else if (res.body.statusCode === 986) {
                        _this.notification.warning({ message: 'Message Not send', title: '' });
                        _this.spinner.hide();
                    }
                    else {
                        _this.spinner.hide();
                        _this.error.unknownError();
                    }
                }, function (err) {
                    _this.spinner.hide();
                    _this.error.commonError(err);
                });
            }
        }
    };
    AgencyAdminMsgBrodcastComponent.prototype.getRemainingMessageCount = function () {
        var _this = this;
        this.spinner.show();
        var data = {
            'agencyID': this.commonService.getAgencyId(),
            'askedDateString': this.commonService.getStringLocalDateTimeFromUTC(new Date)
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_7__["AgencyAPIURLs"].GetRemainingTextMessages, data, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.remainingMessage = res.body.count;
                _this.spinner.hide();
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminMsgBrodcastComponent.prototype.buyMessage = function () {
        this.createBuyTextForm();
        $('.buymessages').modal('show');
    };
    AgencyAdminMsgBrodcastComponent.prototype.openCheckout = function () {
        var _this = this;
        if (this.buyTextForm.valid) {
            var amounttopay = this.buyTextForm.value.txtplan;
            var handler_1 = window.StripeCheckout.configure({
                key: src_app_shared_constdata__WEBPACK_IMPORTED_MODULE_11__["AdminStripKey"].publishableKey,
                locale: 'auto',
                token: function (token) {
                    _this.spinner.show();
                    console.log(token);
                    var model = {
                        'agencyID': _this.commonService.getAgencyId(),
                        'tokenID': token.id,
                        'CreatedBy': _this.commonService.getReleventUserId('userdetails'),
                        'Amount': _this.buyTextForm.value.txtplan
                    };
                    console.log(model);
                    _this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_7__["AgencyAPIURLs"].BuyTextMessagePlan, model, null).subscribe(function (result) {
                        if (result.body.statusCode === 200) {
                            _this.spinner.hide();
                            _this.notification.success({ message: 'Payment Successfull!', title: '' });
                            $('.buymessages').modal('hide');
                            _this.getRemainingMessageCount();
                        }
                        else if (result.body.statusCode === 986) {
                            _this.notification.warning({ message: 'Missing Parameter', title: '' });
                            _this.spinner.hide();
                        }
                        else {
                            _this.spinner.hide();
                            _this.error.unknownError();
                            console.log('err');
                        }
                    }, function (err) {
                        _this.error.commonError(err);
                        _this.spinner.hide();
                    });
                }
            });
            handler_1.open({
                name: 'Classroom Panda',
                description: 'Child Day Care',
                amount: amounttopay * 100,
                email: this.commonService.getAgencyemailid(),
            });
            this.globalListener = this.renderer.listenGlobal('window', 'popstate', function () {
                handler_1.close();
            });
        }
        else {
            this.spinner.hide();
            this.commonService.validateAllFields(this.buyTextForm);
        }
    };
    AgencyAdminMsgBrodcastComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-agency-admin-msg-brodcast',
            template: __webpack_require__(/*! ./agency-admin-msg-brodcast.component.html */ "./src/app/layout/agency-admin/components/agency-admin-msg-brodcast/agency-admin-msg-brodcast.component.html"),
            styles: [__webpack_require__(/*! ./agency-admin-msg-brodcast.component.css */ "./src/app/layout/agency-admin/components/agency-admin-msg-brodcast/agency-admin-msg-brodcast.component.css")]
        }),
        __metadata("design:paramtypes", [_shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_1__["AgencyApiService"], src_app_shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_2__["ErrorHandlerService"], _angular_forms__WEBPACK_IMPORTED_MODULE_10__["FormBuilder"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["Renderer"],
            ngx_spinner__WEBPACK_IMPORTED_MODULE_4__["NgxSpinnerService"], src_app_shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_3__["NotificationService"],
            src_app_shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_5__["CommonService"]])
    ], AgencyAdminMsgBrodcastComponent);
    return AgencyAdminMsgBrodcastComponent;
}());



/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-newmealplanner/agency-admin-newmealplanner.component.css":
/*!**********************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-newmealplanner/agency-admin-newmealplanner.component.css ***!
  \**********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".wid26{ width: 26%;}\r\n.wid10{ width: 10%;}\r\n.verAligMiddle{  vertical-align: middle;}\r\n.plusIcon{ font-size: 28px; }\r\n.minusIcon{font-size: 28px; color: #FF6C6C;}\r\n.foodzindex {\r\n    z-index: 1000\r\n}\r\n.editshadow{\r\n    /* display: block; */\r\n    z-index: 1051;\r\n    /* padding-left: 17px; */\r\n    background: rgba(0,0,0,0.5);\r\n  }\r\n.info-icon{\r\n    margin-left: -520px;\r\n    font-size: 20px; \r\n    color: #383333;\r\n}\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L2FnZW5jeS1hZG1pbi9jb21wb25lbnRzL2FnZW5jeS1hZG1pbi1uZXdtZWFscGxhbm5lci9hZ2VuY3ktYWRtaW4tbmV3bWVhbHBsYW5uZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxRQUFRLFVBQVUsQ0FBQztBQUNuQixRQUFRLFVBQVUsQ0FBQztBQUNuQixpQkFBaUIsc0JBQXNCLENBQUM7QUFDeEMsV0FBVyxlQUFlLEVBQUU7QUFDNUIsV0FBVyxlQUFlLEVBQUUsY0FBYyxDQUFDO0FBQzNDO0lBQ0k7QUFDSjtBQUVBO0lBQ0ksb0JBQW9CO0lBQ3BCLGFBQWE7SUFDYix3QkFBd0I7SUFDeEIsMkJBQTJCO0VBQzdCO0FBRUE7SUFDRSxtQkFBbUI7SUFDbkIsZUFBZTtJQUNmLGNBQWM7QUFDbEIiLCJmaWxlIjoic3JjL2FwcC9sYXlvdXQvYWdlbmN5LWFkbWluL2NvbXBvbmVudHMvYWdlbmN5LWFkbWluLW5ld21lYWxwbGFubmVyL2FnZW5jeS1hZG1pbi1uZXdtZWFscGxhbm5lci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLndpZDI2eyB3aWR0aDogMjYlO31cclxuLndpZDEweyB3aWR0aDogMTAlO31cclxuLnZlckFsaWdNaWRkbGV7ICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO31cclxuLnBsdXNJY29ueyBmb250LXNpemU6IDI4cHg7IH1cclxuLm1pbnVzSWNvbntmb250LXNpemU6IDI4cHg7IGNvbG9yOiAjRkY2QzZDO31cclxuLmZvb2R6aW5kZXgge1xyXG4gICAgei1pbmRleDogMTAwMFxyXG59XHJcblxyXG4uZWRpdHNoYWRvd3tcclxuICAgIC8qIGRpc3BsYXk6IGJsb2NrOyAqL1xyXG4gICAgei1pbmRleDogMTA1MTtcclxuICAgIC8qIHBhZGRpbmctbGVmdDogMTdweDsgKi9cclxuICAgIGJhY2tncm91bmQ6IHJnYmEoMCwwLDAsMC41KTtcclxuICB9XHJcblxyXG4gIC5pbmZvLWljb257XHJcbiAgICBtYXJnaW4tbGVmdDogLTUyMHB4O1xyXG4gICAgZm9udC1zaXplOiAyMHB4OyBcclxuICAgIGNvbG9yOiAjMzgzMzMzO1xyXG59Il19 */"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-newmealplanner/agency-admin-newmealplanner.component.html":
/*!***********************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-newmealplanner/agency-admin-newmealplanner.component.html ***!
  \***********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"wrapper\">\r\n  <div class=\"container-fluid\">\r\n\r\n    <div class=\"pagetitle meal_calender\">\r\n      <div>\r\n        <h2>Calendar\r\n          <span> / View Meal </span>\r\n        </h2>\r\n      </div>\r\n      <div *ngIf=\"isSubscriptionActive\">\r\n        <button type=\"submit\" class=\"btn btn-red\" data-toggle=\"modal\" data-target=\".addmeal\" (click)=\"clearForm()\">Add\r\n          Meal Plan</button>\r\n        <button type=\"submit\" class=\"btn btn-red\" data-toggle=\"modal\" data-target=\".newfood\"\r\n          (click)=\"clearFoodFormForm()\">Add Food</button>\r\n      </div>\r\n      <div class=\"info-icon\">\r\n        <i class=\"fa fa-info-circle\" (click)=\"OpenInfoVideo()\" data-toggle=\"modal\"\r\n           aria-hidden=\"true\" title=\"Information Video\"></i>\r\n      </div>\r\n    </div>\r\n    <div *ngIf=\"calendarOptions\">\r\n      <ng-fullcalendar #ucCalendar [options]=\"calendarOptions\" (eventClick)=\"gotoDate($event.detail)\"\r\n        (eventDrop)=\"updateEvent($event.detail)\" (eventResize)=\"updateEvent($event.detail)\"\r\n        (clickButton)=\"clickButton($event.detail)\" id=\"calender_section\"></ng-fullcalendar>\r\n    </div>\r\n\r\n  <!-- Add Modal -->\r\n  <div class=\"modal fade addmeal modal_padding\" data-backdrop=\"static\" role=\"dialog\" aria-labelledby=\"myLargeModalLabel\"\r\n  aria-hidden=\"true\">\r\n  <div class=\"modal-dialog modal-lg\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Create Meal Plan</h5>\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <form [formGroup]=\"calenderForm\">\r\n\r\n          <div class=\"row mb-20\">\r\n            <div class=\"col-lg-3\">\r\n              <div class=\"form-group\">\r\n                <label for=\"\">Begins*</label>\r\n                <input type=\"text\" formControlName=\"startdate\" placeholder=\"Begin\" showWeekNumbers=\"false\"\r\n                  class=\"form-control\" [bsConfig]=\"dpConfig\" bsDatepicker>\r\n                <div *ngIf=\"f.startdate.invalid && (f.startdate.dirty || f.startdate.touched)\"\r\n                  class=\"text-left errormsg\">\r\n                  <span *ngIf=\"f.startdate.errors.required\">\r\n                    <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select date</span>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-lg-3\">\r\n              <div class=\"form-group\">\r\n                <label for=\"\">End*</label>\r\n                <input type=\"text\" formControlName=\"enddate\" placeholder=\"End\" showWeekNumbers=\"false\"\r\n                  class=\"form-control\" [bsConfig]=\"dpConfig\" bsDatepicker>\r\n                <div *ngIf=\"f.enddate.invalid && (f.enddate.dirty || f.enddate.touched)\" class=\"text-left errormsg\">\r\n                  <span *ngIf=\"f.enddate.errors.required\">\r\n                    <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select date</span>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n\r\n            <div class=\"col-lg-6\">\r\n              <div class=\"form-group\">\r\n                <label for=\"exampleFormControlSelect1\">Class*</label>\r\n                <p-multiSelect [options]=\"classList\" formControlName=\"class\" [panelStyle]=\"{minWidth:'200px'}\"\r\n                  [maxSelectedLabels]=\"5\">\r\n                </p-multiSelect>\r\n                <div *ngIf=\"f.class.invalid && (f.class.dirty || f.class.touched)\" class=\"text-left errormsg\">\r\n                  <span *ngIf=\"f.class.errors.required\">\r\n                    <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select class</span>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n          </div>\r\n          <div class=\"row mb-20\">\r\n            <div class=\"col-lg-6\">\r\n              <div class=\"form-group\">\r\n                <label for=\"exampleFormControlSelect1\">Title*</label>\r\n                <input type=\"text\" formControlName=\"title\" placeholder=\"Title\" class=\"form-control\">\r\n                <div *ngIf=\"f.title.invalid && (f.title.dirty || f.title.touched)\" class=\"text-left errormsg\">\r\n                  <span *ngIf=\"f.title.errors.required\">\r\n                    <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please enter title</span>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-lg-6\">\r\n\r\n              <div class=\"form-group\">\r\n                <label for=\"exampleFormControlSelect1\">Days*</label>\r\n                <ul class=\"unstyled centered\">\r\n                    <li>\r\n                        <input class=\"styled-checkbox\" formControlName=\"alldays\" (change)=\"marUnmarkAllDays()\" id=\"styled-checkbox-0\" type=\"checkbox\" value=\"value1\">\r\n                        <label for=\"styled-checkbox-0\">All</label>\r\n                      </li>\r\n                  <li>\r\n                    <input class=\"styled-checkbox\" formControlName=\"mon\" (click)=\"unmarkAllDaysCheck('mon')\" id=\"styled-checkbox-1\" type=\"checkbox\" value=\"value1\">\r\n                    <label for=\"styled-checkbox-1\">Mon</label>\r\n                  </li>\r\n\r\n                  <li>\r\n                    <input class=\"styled-checkbox\" formControlName=\"tue\" (click)=\"unmarkAllDaysCheck('tue')\" id=\"styled-checkbox-2\" type=\"checkbox\" value=\"value1\">\r\n                    <label for=\"styled-checkbox-2\">Tue</label>\r\n                  </li>\r\n\r\n                  <li>\r\n                    <input class=\"styled-checkbox\" formControlName=\"wed\" (click)=\"unmarkAllDaysCheck('wed')\" id=\"styled-checkbox-3\" type=\"checkbox\" value=\"value1\">\r\n                    <label for=\"styled-checkbox-3\">Wed</label>\r\n                  </li>\r\n\r\n                  <li>\r\n                    <input class=\"styled-checkbox\" formControlName=\"thu\" (click)=\"unmarkAllDaysCheck('thu')\" id=\"styled-checkbox-4\" type=\"checkbox\" value=\"value1\">\r\n                    <label for=\"styled-checkbox-4\">Thu</label>\r\n                  </li>\r\n\r\n                  <li>\r\n                    <input class=\"styled-checkbox\" formControlName=\"fri\" (click)=\"unmarkAllDaysCheck('fri')\" id=\"styled-checkbox-5\" type=\"checkbox\" value=\"value1\">\r\n                    <label for=\"styled-checkbox-5\">Fri</label>\r\n                  </li>\r\n\r\n                  <li>\r\n                    <input class=\"styled-checkbox\" formControlName=\"sat\" (click)=\"unmarkAllDaysCheck('sat')\" id=\"styled-checkbox-6\" type=\"checkbox\" value=\"value1\">\r\n                    <label for=\"styled-checkbox-6\">Sat</label>\r\n                  </li>\r\n\r\n                  <li>\r\n                    <input class=\"styled-checkbox\" formControlName=\"sun\" (click)=\"unmarkAllDaysCheck('sun')\" id=\"styled-checkbox-7\" type=\"checkbox\" value=\"value1\">\r\n                    <label for=\"styled-checkbox-7\">Sun</label>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n          <div class=\"row mb-20\">\r\n            <div class=\"col-lg-2\">\r\n              <div class=\"form-group\" style=\"margin-top: 22px;\">\r\n                <div class=\"\">\r\n                  <label class=\"checkboxcustom\">\r\n                    <input type=\"checkbox\" id=\"checkbox-in\" formControlName=\"biweekly\" (change)=\"isBiweeklyCheck()\">\r\n                    <span class=\"checkmark abc\"></span><label style=\"margin-left: 12px; color: black;\">\r\n                      Bi-Weekly</label>\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-lg-10\">\r\n                <div class=\"form-group\" style=\"margin-top: 22px;\">\r\n              <button class=\"btn btn-info\" data-toggle=\"modal\" data-target=\".firstfood\" (click)=\"closeAddFoodModel(1)\" style=\"margin-right: 10px;height: 30px;\">{{addFoodLable}}</button>\r\n              <button class=\"btn btn-info\" *ngIf=\"showNextWeekBtn\" data-toggle=\"modal\" data-target=\".secondfood\" (click)=\"closeAddFoodModel(2)\" style=\"height: 30px;\">Add Second Week Food</button>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n          <div class=\"row mb-20\">\r\n            <div class=\"col-lg-12\">\r\n              <div class=\"form-group\">\r\n                <label for=\"exampleFormControlSelect1\">Description(Max 100 char)</label>\r\n                <textarea name=\"\" maxlength=\"100\" id=\"\" cols=\"3\" formControlName=\"description\" rows=\"3\"\r\n                  class=\"form-control\"></textarea>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n        <button type=\"button\" *ngIf=\"isSubscriptionActive \" class=\"btn btn-primary\" (click)=\"verifyMealPlan()\">Add\r\n          Meal Plan</button>\r\n      </div>\r\n    </div>\r\n\r\n\r\n  </div>\r\n</div>\r\n    <!-- First Week Food Menu modal -->\r\n    <div class=\"modal fade firstfood modal_padding editshadow\" *ngIf=\"mealPlannerId == 0\" data-backdrop=\"static\" role=\"dialog\"\r\n      aria-labelledby=\"myLargeModalLabel\" aria-hidden=\"true\">\r\n      <div class=\"modal-dialog modal-lg\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Add Menu</h5>\r\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <form [formGroup]=\"firstFoodForm\">\r\n              <div class=\"table-responsive\">\r\n                <table class=\"table\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th scope=\"col\" class=\"wid26\">Food*</th>\r\n                      <th scope=\"col\" class=\"wid26\">Amount*</th>\r\n                      <th scope=\"col\" class=\"wid26\">Unit*</th>\r\n                      <th scope=\"col\" class=\"wid10\">Add</th>\r\n                      <th scope=\"col\" class=\"wid10\">Remove</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr *ngFor=\"let disp of displayFoodList;let item of firstFoodForm.get('foodcollection').controls; let i = index;\"\r\n                      formArrayName=\"foodcollection\">\r\n                      <!-- <div [formGroupName]=\"i\">   -->\r\n                      <td scope=\"row\" [formGroupName]=\"i\">\r\n                        <select class=\"form-control\" formControlName=\"fooditem\" id=\"exampleFormControlSelect1\">\r\n                          <option value=\"\">Select</option>\r\n                          <option *ngFor=\"let food of foodItemList\" [value]=\"food.value\">{{food.label}}</option>\r\n                        </select>\r\n                      </td>\r\n                      <td [formGroupName]=\"i\">\r\n                        <input type=\"text\" formControlName=\"amount\" placeholder=\"Amount\" maxlength=\"3\"\r\n                          class=\"form-control\" (keypress)=\"commonService.allowOnlyNumber($event)\">\r\n                      </td>\r\n                      <td [formGroupName]=\"i\">\r\n                        <select class=\"form-control\" formControlName=\"unit\" placeholder=\"Quantity\"\r\n                          id=\"exampleFormControlSelect1\">\r\n                          <option value=\"\">Select</option>\r\n                          <option *ngFor=\"let obj of mealQuantityType\" [value]=\"obj.value\">{{obj.label}}</option>\r\n                        </select>\r\n\r\n                      </td>\r\n                      <td class=\"verAligMiddle\">\r\n                        <a href=\"javascript:void(0);\" *ngIf=\"( displayFoodList.length < foodItemList.length )\"\r\n                          (click)=\"addFood()\"><i class=\"fa fa-plus-circle plusIcon\" aria-hidden=\"true\"></i></a>\r\n\r\n                      </td>\r\n                      <td class=\"verAligMiddle\">\r\n                        <a href=\"javascript:void(0);\" *ngIf=\"displayFoodList.length > 1\" (click)=\"removeFood(disp)\">\r\n                          <i class=\"fa fa-minus-circle minusIcon\" aria-hidden=\"true\"></i></a>\r\n\r\n                      </td>\r\n                    </tr>\r\n\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </form>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Second Week Food Menu modal -->\r\n    <div class=\"modal fade secondfood modal_padding editshadow\" data-backdrop=\"static\" role=\"dialog\"\r\n      aria-labelledby=\"myLargeModalLabel\" aria-hidden=\"true\">\r\n      <div class=\"modal-dialog modal-lg\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Add Food Menu For next week</h5>\r\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <form [formGroup]=\"secondFoodForm\">\r\n              <div class=\"table-responsive\">\r\n                <table class=\"table\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th scope=\"col\" class=\"wid26\">Food*</th>\r\n                      <th scope=\"col\" class=\"wid26\">Amount*</th>\r\n                      <th scope=\"col\" class=\"wid26\">Unit*</th>\r\n                      <th scope=\"col\" class=\"wid10\">Add</th>\r\n                      <th scope=\"col\" class=\"wid10\">Remove</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr\r\n                      *ngFor=\"let disp of displayFoodListSecond;let item of secondFoodForm.get('foodcollectionsecond').controls; let i = index;\"\r\n                      formArrayName=\"foodcollectionsecond\">\r\n                      <!-- <div [formGroupName]=\"i\">   -->\r\n                      <td scope=\"row\" [formGroupName]=\"i\">\r\n                        <select class=\"form-control\" formControlName=\"fooditem\" id=\"exampleFormControlSelect1\">\r\n                          <option value=\"\">Select</option>\r\n                          <option *ngFor=\"let food of foodItemList\" [value]=\"food.value\">{{food.label}}</option>\r\n                        </select>\r\n                      </td>\r\n                      <td [formGroupName]=\"i\">\r\n                        <input type=\"text\" formControlName=\"amount\" placeholder=\"Amount\" maxlength=\"3\"\r\n                          class=\"form-control\" (keypress)=\"commonService.allowOnlyNumber($event)\">\r\n                      </td>\r\n                      <td [formGroupName]=\"i\">\r\n                        <select class=\"form-control\" formControlName=\"unit\" placeholder=\"Quantity\"\r\n                          id=\"exampleFormControlSelect1\">\r\n                          <option value=\"\">Select</option>\r\n                          <option *ngFor=\"let obj of mealQuantityType\" [value]=\"obj.value\">{{obj.label}}</option>\r\n                        </select>\r\n\r\n                      </td>\r\n                      <td class=\"verAligMiddle\">\r\n                        <a href=\"javascript:void(0);\" *ngIf=\"( displayFoodListSecond.length < foodItemList.length )\"\r\n                          (click)=\"addFoodSecond()\"><i class=\"fa fa-plus-circle plusIcon\" aria-hidden=\"true\"></i></a>\r\n\r\n                      </td>\r\n                      <td class=\"verAligMiddle\">\r\n                        <a href=\"javascript:void(0);\" *ngIf=\"displayFoodListSecond.length > 1\" (click)=\"removeFoodSecond(disp)\">\r\n                          <i class=\"fa fa-minus-circle minusIcon\" aria-hidden=\"true\"></i></a>\r\n\r\n                      </td>\r\n                    </tr>\r\n\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </form>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n\r\n\r\n     <!-- Update Modal -->\r\n  <div class=\"modal fade addmealup modal_padding\" data-backdrop=\"static\" role=\"dialog\" aria-labelledby=\"myLargeModalLabel\"\r\n  aria-hidden=\"true\">\r\n  <div class=\"modal-dialog modal-lg\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Meal Plan Details</h5>\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <form [formGroup]=\"calenderForm\">\r\n\r\n          <div class=\"row mb-20\">\r\n            <div class=\"col-lg-3\">\r\n              <div class=\"form-group\">\r\n                <label for=\"\">Begins*</label>\r\n                <input type=\"text\" formControlName=\"startdate\" disabled placeholder=\"Begin\" showWeekNumbers=\"false\"\r\n                  class=\"form-control\" [bsConfig]=\"dpConfig\" bsDatepicker>\r\n                <div *ngIf=\"f.startdate.invalid && (f.startdate.dirty || f.startdate.touched)\"\r\n                  class=\"text-left errormsg\">\r\n                  <span *ngIf=\"f.startdate.errors.required\">\r\n                    <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select date</span>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-lg-3\">\r\n              <div class=\"form-group\">\r\n                <label for=\"\">End*</label>\r\n                <input type=\"text\" disabled formControlName=\"enddate\" placeholder=\"End\" showWeekNumbers=\"false\"\r\n                  class=\"form-control\" [bsConfig]=\"dpConfig\" bsDatepicker>\r\n                <div *ngIf=\"f.enddate.invalid && (f.enddate.dirty || f.enddate.touched)\" class=\"text-left errormsg\">\r\n                  <span *ngIf=\"f.enddate.errors.required\">\r\n                    <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select date</span>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n\r\n            <div class=\"col-lg-6\">\r\n              <div class=\"form-group\">\r\n                <label for=\"exampleFormControlSelect1\">Class*</label>\r\n                <p-multiSelect [options]=\"classList\" [disabled]=\"true\" formControlName=\"class\" [panelStyle]=\"{minWidth:'200px'}\"\r\n                  [maxSelectedLabels]=\"50\">\r\n                </p-multiSelect>\r\n                <div *ngIf=\"f.class.invalid && (f.class.dirty || f.class.touched)\" class=\"text-left errormsg\">\r\n                  <span *ngIf=\"f.class.errors.required\">\r\n                    <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select class</span>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n              <div class=\"col-lg-6\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"exampleFormControlSelect1\">Title*</label>\r\n                  <input type=\"text\" formControlName=\"title\" placeholder=\"Title\" class=\"form-control\">\r\n                  <div *ngIf=\"f.title.invalid && (f.title.dirty || f.title.touched)\" class=\"text-left errormsg\">\r\n                    <span *ngIf=\"f.title.errors.required\">\r\n                      <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please enter title</span>\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n          </div>\r\n          <div class=\"table-responsive\">\r\n            <table class=\"table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th scope=\"col\" class=\"wid26\">Food*</th>\r\n                    <th scope=\"col\" class=\"wid26\">Amount*</th>\r\n                    <th scope=\"col\" class=\"wid26\">Unit*</th>\r\n                    <th scope=\"col\" class=\"wid10\">Add</th>\r\n                    <th scope=\"col\" class=\"wid10\">Remove</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr *ngFor=\"let disp of involvedFoodList;let item of calenderForm.get('foodcollectionUp').controls; let i = index;\" formArrayName=\"foodcollectionUp\" >\r\n                       <!-- <div [formGroupName]=\"i\">   -->\r\n                    <td scope=\"row\" [formGroupName]=\"i\" >\r\n                        <select class=\"form-control\"  formControlName=\"fooditem\" id=\"exampleFormControlSelect1\">\r\n                            <option value=\"\">Select</option>\r\n                            <option *ngFor=\"let food of foodItemList\" [value]=\"food.value\">{{food.label}}</option>\r\n                          </select>\r\n                    </td>\r\n                    <td [formGroupName]=\"i\">\r\n                        <input type=\"text\"  formControlName=\"amount\" placeholder=\"Amount\" maxlength=\"3\"\r\n                        class=\"form-control\" (keypress)=\"commonService.allowOnlyNumber($event)\">\r\n                    </td>\r\n                    <td [formGroupName]=\"i\">\r\n                        <select class=\"form-control\" formControlName=\"unit\" placeholder=\"Quantity\"\r\n                        id=\"exampleFormControlSelect1\">\r\n                        <option value=\"\">Select</option>\r\n                        <option *ngFor=\"let obj of mealQuantityType\" [value]=\"obj.value\">{{obj.label}}</option>\r\n                      </select>\r\n                          \r\n                    </td >\r\n                    <td class=\"verAligMiddle\">\r\n                      <a href=\"javascript:void(0);\"  *ngIf=\"( displayFoodList.length < foodItemList.length )\" (click)=\"addFoodWhileUpdate()\"><i class=\"fa fa-plus-circle plusIcon\" aria-hidden=\"true\"></i></a>                                \r\n\r\n                    </td>\r\n                    <td class=\"verAligMiddle\">\r\n                        <a href=\"javascript:void(0);\" *ngIf=\"displayFoodList.length > 1\" (click)=\"removeFoodWhileUpdate(disp)\"> \r\n                        <i class=\"fa fa-minus-circle minusIcon\" aria-hidden=\"true\"></i></a>\r\n\r\n                    </td>\r\n                     <!-- </div>  -->\r\n                  </tr>                                            \r\n                 \r\n                </tbody>\r\n              </table>\r\n\r\n        </div>\r\n        \r\n          <div class=\"row mb-20\">\r\n            <div class=\"col-lg-12\">\r\n              <div class=\"form-group\">\r\n                <label for=\"exampleFormControlSelect1\">Description(Max 100 char)</label>\r\n                <textarea name=\"\" maxlength=\"100\" id=\"\" cols=\"3\" formControlName=\"description\" rows=\"3\"\r\n                  class=\"form-control\"></textarea>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n        <button type=\"submit\" class=\"btn btn-send\" (click)=\"deleteEvent()\">Delete</button> \r\n        <button type=\"button\" *ngIf=\"isSubscriptionActive \" class=\"btn btn-primary\" (click)=\"verifyMealPlanWhileUpdate()\">Update\r\n          Meal Plan</button>\r\n      </div>\r\n    </div>\r\n\r\n\r\n  </div>\r\n</div>\r\n\r\n\r\n<!-- Add new food item modal -->\r\n<div class=\"modal fade newfood\" data-backdrop=\"static\" style=\"z-index: 1100;\" id=\"breakout\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Add Food</h5>\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <div class=\"form-group\">\r\n          <label>Food Name</label>\r\n         <input type=\"text\" class=\"form-control\" (keypress)=\"commonService.allowAlphabetOnly($event)\" placeholder=\"Food Name\" [(ngModel)]=\"mealItemMasterName\">\r\n        </div>\r\n        \r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"saveMealItemInformation()\">Add</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n<!-- For Information Video -->\r\n<div class=\"modal fade\" id=\"infovideo\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"checkoutLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\" id=\"checkoutLabel\">Information Video</h5>\r\n        <button type=\"button\" *ngIf=\"videoPath\" class=\"close\" (click)= \"PauseInfoVideo()\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n        <button type=\"button\" *ngIf=\"!videoPath\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <div class=\"cont video_section_pop\" *ngIf=\"videoPath\">\r\n          <video controls id=\"pausevideo\">\r\n            <source *ngIf=\"videoPath\" [src] = \"videoPath\" type=\"video/mp4\" />\r\n            <source *ngIf=\"videoPath\" [src] = \"videoPath\" type=\"video/ogg\" />\r\n            <source *ngIf=\"videoPath\" [src] = \"videoPath\" type=\"video/webm\" />\r\n            Browser not supported\r\n          </video>\r\n        </div>\r\n\r\n        <div class=\"cont video_section_pop\" *ngIf=\"!videoPath\">\r\n            Video Not Found\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n  </div>\r\n</div>\r\n<ngx-spinner type=\"ball-atom\" size=\"medium\" color=\"#58A7FE\"></ngx-spinner>\r\n<app-confirm-box></app-confirm-box>\r\n"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-newmealplanner/agency-admin-newmealplanner.component.ts":
/*!*********************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-newmealplanner/agency-admin-newmealplanner.component.ts ***!
  \*********************************************************************************************************************/
/*! exports provided: AgencyAdminNewmealplannerComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AgencyAdminNewmealplannerComponent", function() { return AgencyAdminNewmealplannerComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _shared_constatant__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../shared/constatant */ "./src/app/layout/agency-admin/components/shared/constatant.ts");
/* harmony import */ var src_app_layout_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/layout/teacher/shared/constant */ "./src/app/layout/teacher/shared/constant.ts");
/* harmony import */ var ng_fullcalendar__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ng-fullcalendar */ "./node_modules/ng-fullcalendar/ng-fullcalendar.es5.js");
/* harmony import */ var ngx_bootstrap__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ngx-bootstrap */ "./node_modules/ngx-bootstrap/esm5/ngx-bootstrap.js");
/* harmony import */ var src_app_layout_teacher_shared_services_teacher_api_service_teacher_api_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/layout/teacher/shared/services/teacher-api-service/teacher-api.service */ "./src/app/layout/teacher/shared/services/teacher-api-service/teacher-api.service.ts");
/* harmony import */ var src_app_shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/app/shared/services/error-handler/error-handler.service */ "./src/app/shared/services/error-handler/error-handler.service.ts");
/* harmony import */ var src_app_shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/app/shared/services/notification-service/notification.service */ "./src/app/shared/services/notification-service/notification.service.ts");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ngx-spinner */ "./node_modules/ngx-spinner/fesm5/ngx-spinner.js");
/* harmony import */ var src_app_shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! src/app/shared/services/common/common.service */ "./src/app/shared/services/common/common.service.ts");
/* harmony import */ var primeng_api__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! primeng/api */ "./node_modules/primeng/api.js");
/* harmony import */ var primeng_api__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(primeng_api__WEBPACK_IMPORTED_MODULE_11__);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};












var AgencyAdminNewmealplannerComponent = /** @class */ (function () {
    function AgencyAdminNewmealplannerComponent(apiService, error, spinner, notification, commonService, fb, confirmationService) {
        this.apiService = apiService;
        this.error = error;
        this.spinner = spinner;
        this.notification = notification;
        this.commonService = commonService;
        this.fb = fb;
        this.confirmationService = confirmationService;
        this.cars = [];
        this.display = false;
        this.today = new Date();
        this.eventDetails = [];
        this.repeatList = [];
        this.repeatNeverID = 0;
        this.mealVM = {};
        this.eventList = [];
        this.cuurentDate = new Date();
        this.classList = [];
        this.mealTyptList = [];
        this.mealQuantityType = [];
        this.MealMeasureType = [];
        this.foodItemList = [];
        this.getFood = [];
        this.displayFoodList = [];
        this.displayFoodListSecond = [];
        this.classListArray = [];
        this.foodListArray = [];
        this.involvedFoodList = [];
        this.disableEndDate = false;
        this.mealPlannerId = 0;
        this.tempFood = [];
        this.tempFoodSecond = [];
        this.foodFieldCount = 1;
        this.foodFieldCountSecond = 1;
        this.foodArrayReq = [];
        this.foodArrayReqSecond = [];
        this.changeInFoodUpdate = false;
        this.involvedMealClassId = 0;
        this.showNextWeekBtn = false;
        this.agencyID = 0;
        this.addFoodLable = 'Add Food';
        this.videoPath = '';
        this.dpConfig = new ngx_bootstrap__WEBPACK_IMPORTED_MODULE_5__["BsDatepickerConfig"]();
        this.isSubscriptionActive = this.commonService.getSubscriptionStatus();
        this.agencyID = this.commonService.getAgencyId();
    }
    AgencyAdminNewmealplannerComponent.prototype.ngOnInit = function () {
        this.showEndsOn = false;
        this.dpConfig = Object.assign({}, { containerClass: 'theme-dark-blue' }, { showWeekNumbers: false });
        this.tempFood = [
            {
                'id': 1,
                'foodItem': '',
                'amount': '',
                'unit': ''
            }
        ];
        this.tempFoodSecond = [
            {
                'id': 1,
                'foodItem': '',
                'amount': '',
                'unit': ''
            }
        ];
        this.events = [
            {
                'title': 'Todays Meal',
                'start': this.today,
                'end': this.today,
                'id': 'a',
                'description': 'Snacks type as follows ',
                'class': this.multiarray1,
                'repeate': 'Never'
            }
        ];
        this.displayFoodList.push(this.tempFood);
        this.displayFoodListSecond.push(this.tempFoodSecond);
        this.calendarOptions = {
            editable: false,
            eventLimit: false,
            displayEventTime: false,
            header: {
                left: 'prev,next today',
                center: 'title',
                right: 'month,agendaWeek,agendaDay,listMonth'
            },
            events: this.eventList
        };
        this.callEvent(this.cuurentDate);
        this.getRepeatTypelist();
        this.getAllClasses();
        this.getMealType();
        this.getQuantityType();
        this.getMealMeasureType();
        this.getFoodItems();
        this.createMealPlannerForm();
        this.createFirstFoodForm();
        this.createSecondFoodForm();
        this.getSectionVideo();
    };
    AgencyAdminNewmealplannerComponent.prototype.OpenInfoVideo = function (data) {
        $('#infovideo').modal('show');
    };
    AgencyAdminNewmealplannerComponent.prototype.getSectionVideo = function () {
        var _this = this;
        var req = {
            'SectionID': 13
        };
        this.apiService.postData(src_app_layout_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_3__["TeacherAPIURLs"].GetVideoForSection, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.videoPath = res.body.filePath;
                console.log(_this.videoPath, 'bbbbbbbbbbbbbbb');
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminNewmealplannerComponent.prototype.PauseInfoVideo = function () {
        var myVideo = document.getElementById('pausevideo');
        myVideo.pause();
        myVideo.currentTime = 0;
    };
    AgencyAdminNewmealplannerComponent.prototype.createMealPlannerForm = function () {
        if (this.mealPlannerId === 0) {
            this.calenderForm = this.fb.group({
                startdate: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
                enddate: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
                class: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
                title: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
                description: [''],
                repeat: [this.repeatNeverID],
                endson: [''],
                biweekly: [false],
                sun: [false],
                mon: [false],
                tue: [false],
                wed: [false],
                thu: [false],
                fri: [false],
                sat: [false],
                alldays: [false],
                foodcollectionUp: this.fb.array([this.createItem()])
            });
        }
    };
    AgencyAdminNewmealplannerComponent.prototype.updateMealPlannerForm = function () {
        this.calenderForm = this.fb.group({
            startdate: [this.mealVM.start, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            enddate: [this.mealVM.end, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            class: [this.classListArray, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            title: [this.mealVM.title, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            description: [this.mealVM.description],
            biweekly: [this.mealVM.isBiweekly],
            foodcollectionUp: this.fb.array([]),
            alldays: [false],
            sun: [this.mealVM.sun],
            mon: [this.mealVM.mon],
            tue: [this.mealVM.tue],
            wed: [this.mealVM.wed],
            thu: [this.mealVM.thu],
            fri: [this.mealVM.fri],
            sat: [this.mealVM.sat]
        });
        this.updateItem();
    };
    AgencyAdminNewmealplannerComponent.prototype.createFirstFoodForm = function () {
        if (this.mealPlannerId === 0) {
            this.firstFoodForm = this.fb.group({
                foodcollection: this.fb.array([this.createItem()])
            });
        }
    };
    AgencyAdminNewmealplannerComponent.prototype.createSecondFoodForm = function () {
        if (this.mealPlannerId === 0) {
            this.secondFoodForm = this.fb.group({
                foodcollectionsecond: this.fb.array([this.createItem()])
            });
        }
    };
    AgencyAdminNewmealplannerComponent.prototype.updateSecondFoodForm = function () {
        if (this.mealPlannerId !== 0) {
            this.secondFoodForm = this.fb.group({
                foodcollectionsecond: this.fb.array([])
            });
            this.updateItemSecond();
        }
    };
    AgencyAdminNewmealplannerComponent.prototype.createItem = function () {
        return this.fb.group({
            fooditem: [''],
            amount: [''],
            unit: [''],
        });
    };
    AgencyAdminNewmealplannerComponent.prototype.updateItem = function () {
        var ctrl = this.calenderForm.get('foodcollectionUp');
        for (var i = 0; i < this.involvedFoodList.length; i++) {
            ctrl.push(this.fb.group({
                fooditem: [this.involvedFoodList[i].foodTypeID],
                amount: [this.involvedFoodList[i].amount],
                unit: [this.involvedFoodList[i].measureUnitTypeID]
            }));
        }
    };
    AgencyAdminNewmealplannerComponent.prototype.updateItemSecond = function () {
        var ctrl = this.secondFoodForm.get('foodcollectionsecond');
        for (var i = 0; i < this.involvedFoodList.length; i++) {
            ctrl.push(this.fb.group({
                fooditem: [this.involvedFoodList[i].foodTypeID],
                amount: [this.involvedFoodList[i].amount],
                unit: [this.involvedFoodList[i].measureUnitTypeID]
            }));
        }
    };
    Object.defineProperty(AgencyAdminNewmealplannerComponent.prototype, "f", {
        get: function () { return this.calenderForm.controls; },
        enumerable: true,
        configurable: true
    });
    AgencyAdminNewmealplannerComponent.prototype.eventClick = function (data) {
    };
    AgencyAdminNewmealplannerComponent.prototype.gotoDate = function (event) {
        var _this = this;
        this.selectedDay = event.event.end._d;
        this.getDayFromSelectedPlan();
        this.spinner.show();
        this.mealVM = {};
        this.classListArray = [];
        this.foodListArray = [];
        $('.addmealup').modal('show');
        this.items = this.fb.array([this.createItem()]);
        var req = {
            'mealPlanID': event.event.id,
            'agencyID': this.agencyID,
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_2__["AgencyAPIURLs"].GetParticularMealPlan, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                if (res.body.data.length > 0) {
                    _this.mealPlannerId = res.body.data[0].id;
                    _this.eventDetails = res.body.data[0];
                    if (res.body.data[0].involvedClass.length !== 0) {
                        res.body.data[0].involvedClass.forEach(function (element) {
                            _this.classListArray.push(element.classesID);
                        });
                    }
                    _this.mealVM.start = new Date(_this.selectedDay);
                    _this.mealVM.end = new Date(_this.selectedDay);
                    _this.mealVM.involvedClass = res.body.data[0].involvedClass;
                    _this.mealVM.description = res.body.data[0].description;
                    _this.mealVM.title = res.body.data[0].title;
                    _this.mealVM.MealTypeID = res.body.data[0].mealTypeID;
                    _this.mealVM.isBiweekly = res.body.data[0].isBiweekly;
                    _this.items.removeAt(0);
                    if (res.body.data[0].involvedMealFoodItems.length !== 0) {
                        res.body.data[0].involvedMealFoodItems.forEach(function (element) {
                            _this.foodListArray.push(element.foodTypeID);
                            _this.items.value.push({
                                'id': element.id, 'fooditem': element.foodTypeID, 'amount': element.amount, 'unit': element.measureUnitTypeID
                            });
                        });
                    }
                    _this.involvedFoodList = res.body.data[0].involvedMealFoodItems;
                    _this.displayFoodList = res.body.data[0].involvedMealFoodItems;
                    _this.mealVM.mon = _this.calenderForm.value.mon;
                    _this.mealVM.tue = _this.calenderForm.value.tue;
                    _this.mealVM.wed = _this.calenderForm.value.wed;
                    _this.mealVM.thu = _this.calenderForm.value.thu;
                    _this.mealVM.fri = _this.calenderForm.value.fri;
                    _this.mealVM.sat = _this.calenderForm.value.sat;
                    _this.mealVM.sun = _this.calenderForm.value.sun;
                    _this.updateMealPlannerForm();
                }
            }
            _this.spinner.hide();
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminNewmealplannerComponent.prototype.closeUpdateDialogBox = function () {
        this.display = false;
        $('.mealdetails').modal('hide');
    };
    /**Method to get previous and next month events */
    AgencyAdminNewmealplannerComponent.prototype.clickButton = function (value) {
        if (value.buttonType === 'prev' || value.buttonType === 'next') {
            var newDate = new Date(value.data._d);
            newDate.setHours(newDate.getHours() + 24);
            this.cuurentDate = newDate;
            this.callEvent(newDate);
        }
    };
    AgencyAdminNewmealplannerComponent.prototype.updateEvent = function (data) {
    };
    AgencyAdminNewmealplannerComponent.prototype.callEvent = function (date) {
        this.getAllEvent(date);
    };
    AgencyAdminNewmealplannerComponent.prototype.getAllEvent = function (date) {
        var _this = this;
        this.spinner.show();
        var data = {
            'agencyID': this.agencyID,
            'eventSearchFromDate': this.commonService.getFirstDayOfMonth(date),
            'eventSearchToDate': this.commonService.getLastDayOfMonth(date),
        };
        this.apiService.postData(src_app_layout_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_3__["TeacherAPIURLs"].GetAllMealPlan, data, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.eventList = res.body.data;
                _this.eventList.forEach(function (x) {
                    var lastdt = new Date(x.end);
                    var enddt = new Date(x.end);
                    lastdt.setHours(enddt.getHours() + 9);
                    x.end = lastdt;
                });
                _this.configureScheduler();
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminNewmealplannerComponent.prototype.configureScheduler = function () {
        this.ucCalendar.renderEvents(this.eventList);
        this.spinner.hide();
    };
    AgencyAdminNewmealplannerComponent.prototype.getRepeatTypelist = function () {
        var _this = this;
        var data = {
            'agencyID': this.agencyID
        };
        this.apiService.postData(src_app_layout_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_3__["TeacherAPIURLs"].GetAllRepeatTypeDropdown, data, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.repeatList = res.body.data;
                _this.repeatList.forEach(function (element) {
                    if (element.label === 'Never') {
                        _this.repeatNeverID = element.value;
                        _this.calenderForm.controls['repeat'].setValue(_this.repeatNeverID);
                        _this.calenderForm.controls['repeat'].updateValueAndValidity();
                    }
                });
            }
            else {
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    /**Method to get class list for multiselect component */
    AgencyAdminNewmealplannerComponent.prototype.getAllClasses = function () {
        var _this = this;
        this.classList = [];
        var data = {
            'agencyID': this.agencyID
        };
        this.apiService.postData(src_app_layout_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_3__["TeacherAPIURLs"].GetAllClassesDropdown, data, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.classList = res.body.data;
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    /**Method to get meal type  */
    AgencyAdminNewmealplannerComponent.prototype.getMealType = function () {
        var _this = this;
        var data = {
            'agencyID': this.agencyID
        };
        this.apiService.postData(src_app_layout_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_3__["TeacherAPIURLs"].GetAllMealTypeDropdown, data, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.mealTyptList = res.body.data;
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    /**Method to get meal quantity type   */
    AgencyAdminNewmealplannerComponent.prototype.getQuantityType = function () {
        var _this = this;
        var data = {
            'agencyID': this.agencyID
        };
        this.apiService.postData(src_app_layout_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_3__["TeacherAPIURLs"].GetAllMeasureUnitTypeDropdown, data, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.mealQuantityType = res.body.data;
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    /**Method to get meal measer type   */
    AgencyAdminNewmealplannerComponent.prototype.getMealMeasureType = function () {
        var _this = this;
        var data = {
            'agencyID': this.agencyID
        };
        this.apiService.postData(src_app_layout_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_3__["TeacherAPIURLs"].GetAllMeasureQuantityDropdown, data, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.MealMeasureType = res.body.data;
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    /**Method to get Food items   */
    AgencyAdminNewmealplannerComponent.prototype.getFoodItems = function () {
        var _this = this;
        this.foodItemList = [];
        var data = {
            'agencyID': this.agencyID
        };
        this.apiService.postData(src_app_layout_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_3__["TeacherAPIURLs"].GetAllFoodTypeDropdown, data, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.foodItemList = res.body.data;
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminNewmealplannerComponent.prototype.addFood = function () {
        this.foodFieldCount++;
        this.tempFood.push({ 'id': this.foodFieldCount });
        this.items = this.firstFoodForm.get('foodcollection');
        this.items.push(this.createItem());
        this.displayFoodList = this.tempFood;
    };
    // remove food item in second week modal
    AgencyAdminNewmealplannerComponent.prototype.addFoodSecond = function () {
        this.foodFieldCountSecond++;
        this.tempFoodSecond.push({ 'id': this.foodFieldCountSecond });
        this.itemsSecond = this.secondFoodForm.get('foodcollectionsecond');
        this.itemsSecond.push(this.createItem());
        this.displayFoodListSecond = this.tempFoodSecond;
    };
    AgencyAdminNewmealplannerComponent.prototype.addFoodWhileUpdate = function () {
        this.changeInFoodUpdate = true;
        var count = this.involvedFoodList.length;
        this.items = this.calenderForm.get('foodcollectionUp');
        this.involvedFoodList.push({ 'id': ++count });
        this.items.push(this.createItem());
    };
    AgencyAdminNewmealplannerComponent.prototype.removeFoodWhileUpdate = function (data) {
        this.changeInFoodUpdate = true;
        var index = this.involvedFoodList.findIndex(function (r) { return r.id === data.id; });
        this.items = this.calenderForm.get('foodcollectionUp');
        this.items.removeAt(index);
        this.involvedFoodList.splice(index, 1);
    };
    AgencyAdminNewmealplannerComponent.prototype.removeFood = function (data) {
        var index = this.displayFoodList.findIndex(function (r) { return r.id === data.id; });
        this.items = this.firstFoodForm.get('foodcollection');
        this.items.removeAt(index);
        this.displayFoodList.splice(index, 1);
    };
    // remove food item in second week modal
    AgencyAdminNewmealplannerComponent.prototype.removeFoodSecond = function (data) {
        var index = this.displayFoodList.findIndex(function (r) { return r.id === data.id; });
        this.itemsSecond = this.secondFoodForm.get('foodcollectionsecond');
        this.itemsSecond.removeAt(index);
        this.displayFoodListSecond.splice(index, 1);
    };
    // Method to hide and show reapet end date field
    AgencyAdminNewmealplannerComponent.prototype.getRepeatOptions = function () {
        this.showEndsOn = false;
        if (this.calenderForm.value.repeat !== this.repeatNeverID.toString()) {
            this.showEndsOn = true;
            this.calenderForm.controls['endson'].setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required);
            this.calenderForm.controls['endson'].updateValueAndValidity();
        }
        else if (this.calenderForm.value.repeat === this.repeatNeverID.toString()) {
            this.calenderForm.controls['endson'].setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].nullValidator);
            this.calenderForm.controls['endson'].updateValueAndValidity();
            this.showEndsOn = false;
        }
        else {
        }
        if (this.calenderForm.value.repeat === '2') {
            this.disableEndDate = true;
            this.notification.warning({
                message: 'This event will repeat daily from "Begins" to "Ends On" date you will select',
                title: ''
            });
        }
        else {
            this.disableEndDate = false;
        }
    };
    // Check weither for details added or not while adding meal plan
    AgencyAdminNewmealplannerComponent.prototype.checkIfFoodDetailsEmpty = function () {
        if (this.items !== undefined || this.itemsSecond !== undefined) {
            var count_1 = 0;
            var CountSecond_1 = 0;
            this.firstFoodForm.value.foodcollection.forEach(function (element) {
                if (element.amount === '' || element.fooditem === '' || element.unit === '') {
                    count_1 = count_1 + 1;
                }
                else {
                }
            });
            this.secondFoodForm.value.foodcollectionsecond.forEach(function (element) {
                if (element.amount === '' || element.fooditem === '' || element.unit === '') {
                    CountSecond_1 = CountSecond_1 + 1;
                }
                else {
                }
            });
            if (count_1 > 0) {
                var msg1 = 'Please fill the food details';
                var msg2 = 'Please fill the food details for first week';
                this.notification.warning({ message: this.calenderForm.value.biweekly ? msg2 : msg1, title: '' });
            }
            else if (this.calenderForm.value.biweekly === true && CountSecond_1 > 0) {
                this.notification.warning({ message: 'Please fill the food details for Second week', title: '' });
            }
            else {
                this.createMealPlan();
            }
        }
        else {
            this.notification.warning({ message: 'Please fill the food details', title: '' });
        }
    };
    // Check validation before adding new meal plan
    AgencyAdminNewmealplannerComponent.prototype.verifyMealPlan = function () {
        this.items = this.firstFoodForm.get('foodcollection');
        this.itemsSecond = this.secondFoodForm.get('foodcollectionsecond');
        this.multiClass = [];
        if (this.calenderForm.valid) {
            if (this.calenderForm.value.startdate.setHours(0, 0, 0) > this.calenderForm.value.enddate.setHours(0, 0, 0)) {
                this.spinner.hide();
                this.notification.warning({ message: 'End date should be greater or equal than Begins date ', title: '' });
            }
            else if (this.items.value.length === 0 || this.items === undefined) {
                this.spinner.hide();
                this.notification.warning({ message: 'Please add food for first week', title: '' });
            }
            else if (this.calenderForm.value.biweekly === true && (this.itemsSecond.value.length === 0 || this.itemsSecond === undefined)) {
                this.spinner.hide();
                this.notification.warning({ message: 'Please add food for next week', title: '' });
            }
            else if (this.checkNoDaysSelected()) {
                this.notification.warning({ message: 'Please select day(s)', title: '' });
            }
            else {
                this.checkIfFoodDetailsEmpty();
            }
        }
        else {
            this.spinner.hide();
            this.commonService.validateAllFields(this.calenderForm);
        }
    };
    // Check validation before adding new meal plan
    AgencyAdminNewmealplannerComponent.prototype.verifyMealPlanWhileUpdate = function () {
        this.items = this.calenderForm.get('foodcollectionUp');
        this.multiClass = [];
        if (this.calenderForm.valid) {
            if (this.calenderForm.value.startdate.setHours(0, 0, 0) > this.calenderForm.value.enddate.setHours(0, 0, 0)) {
                this.notification.warning({ message: 'End date should be greater or equal than Begins date ', title: '' });
            }
            else {
                this.checkIfFoodDetailsEmptyForUpdate();
            }
        }
        else {
            this.spinner.hide();
            this.commonService.validateAllFields(this.calenderForm);
        }
    };
    // Check weither for details added or not while update meal plan
    AgencyAdminNewmealplannerComponent.prototype.checkIfFoodDetailsEmptyForUpdate = function () {
        if (this.items !== undefined) {
            var count_2 = 0;
            this.calenderForm.value.foodcollectionUp.forEach(function (element) {
                if (element.amount === '' || element.fooditem === '' || element.unit === '') {
                    count_2 = count_2 + 1;
                }
                else {
                }
            });
            if (count_2 === 0) {
                this.createMealPlan();
            }
            else {
                this.notification.warning({ message: 'Please fill the food details', title: '' });
            }
        }
        else {
            this.notification.warning({ message: 'Please fill the food details', title: '' });
        }
    };
    // Method to cretae and Update meal plan
    AgencyAdminNewmealplannerComponent.prototype.createMealPlan = function () {
        var _this = this;
        var mealAPI = '';
        this.foodArrayReq = [];
        this.foodArrayReqSecond = [];
        this.multiClass = [];
        this.mealVM = {};
        this.spinner.show();
        this.mealVM.agencyID = this.agencyID;
        this.mealVM.title = this.calenderForm.value.title;
        this.mealVM.start = new Date(this.calenderForm.value.startdate).toDateString();
        this.mealVM.end = new Date(this.calenderForm.value.enddate).toDateString();
        this.mealVM.description = this.calenderForm.value.description;
        this.mealVM.isBiweekly = this.calenderForm.value.biweekly;
        this.mealVM.id = this.mealPlannerId !== 0 ? this.mealPlannerId : 0;
        if (this.calenderForm.value.class.length !== 0) {
            this.calenderForm.value.class.forEach(function (element) {
                _this.multiClass.push({
                    'agencyID': _this.agencyID,
                    'classesID': element,
                    'MealPlannerID': _this.mealPlannerId !== 0 ? _this.mealPlannerId : 0,
                    'id': _this.involvedMealClassId
                });
            });
        }
        this.mealVM.mon = this.calenderForm.value.mon;
        this.mealVM.tue = this.calenderForm.value.tue;
        this.mealVM.wed = this.calenderForm.value.wed;
        this.mealVM.thu = this.calenderForm.value.thu;
        this.mealVM.fri = this.calenderForm.value.fri;
        this.mealVM.sat = this.calenderForm.value.sat;
        this.mealVM.sun = this.calenderForm.value.sun;
        this.mealVM.involvedClass = this.multiClass;
        if (this.items.value.length !== 0 && this.items !== undefined) {
            this.items.value.forEach(function (element) {
                _this.foodArrayReq.push({
                    'id': _this.mealPlannerId !== 0 ? element.id : 0,
                    'agencyID': _this.agencyID,
                    'MealPlannerID': _this.mealPlannerId !== 0 ? _this.mealPlannerId : 0,
                    'foodTypeID': element.fooditem,
                    'amount': element.amount,
                    'measureUnitTypeID': element.unit
                });
            });
        }
        if (this.mealPlannerId === 0) {
            mealAPI = _shared_constatant__WEBPACK_IMPORTED_MODULE_2__["AgencyAPIURLs"].SaveMealPlan;
            if (this.itemsSecond.value.length !== 0 && this.itemsSecond !== undefined) {
                this.itemsSecond.value.forEach(function (element) {
                    _this.foodArrayReqSecond.push({
                        'id': _this.mealPlannerId !== 0 ? element.id : 0,
                        'agencyID': _this.agencyID,
                        'MealPlannerID': _this.mealPlannerId !== 0 ? _this.mealPlannerId : 0,
                        'foodTypeID': element.fooditem,
                        'amount': element.amount,
                        'measureUnitTypeID': element.unit
                    });
                });
            }
        }
        else {
            mealAPI = _shared_constatant__WEBPACK_IMPORTED_MODULE_2__["AgencyAPIURLs"].UpdateParticularMealPlan;
        }
        this.mealVM.involvedMealFoodItems = this.foodArrayReq;
        if (this.mealVM.isBiweekly) {
            this.mealVM.involvedMealFoodItemsSecond = this.foodArrayReqSecond;
        }
        else {
            this.mealVM.involvedMealFoodItemsSecond = [];
        }
        this.mealVM.involvedMealFoodItems = this.foodArrayReq;
        this.apiService.postData(mealAPI, this.mealVM, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.spinner.hide();
                $('.addmeal').modal('hide');
                _this.display = false;
                $('.addmealup').modal('hide');
                _this.callEvent(_this.cuurentDate);
                _this.notification.success({
                    message: _this.mealPlannerId === 0 ? 'Meal plan created successfully' :
                        'Meal plan updated successfully', title: ''
                });
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminNewmealplannerComponent.prototype.clearForm = function () {
        this.mealPlannerId = 0;
        if (this.items) {
            this.items = this.clearItems;
        }
        if (this.itemsSecond) {
            this.itemsSecond = this.clearItems;
        }
        this.showNextWeekBtn = false;
        this.foodFieldCount = 1;
        this.foodFieldCountSecond = 1;
        this.involvedMealClassId = 0;
        this.display = false;
        $('.mealdetails').modal('hide');
        this.changeInFoodUpdate = false;
        this.displayFoodList = [];
        this.displayFoodListSecond = [];
        this.tempFood = [];
        this.tempFoodSecond = [];
        this.tempFood = [
            {
                'id': 1,
                'foodItem': '',
                'amount': '',
                'unit': ''
            }
        ];
        this.tempFoodSecond = [
            {
                'id': 1,
                'foodItem': '',
                'amount': '',
                'unit': ''
            }
        ];
        this.displayFoodList.push(this.tempFood);
        this.displayFoodListSecond.push(this.tempFoodSecond);
        this.createMealPlannerForm();
        this.createFirstFoodForm();
        this.createSecondFoodForm();
    };
    AgencyAdminNewmealplannerComponent.prototype.isBiweeklyCheck = function () {
        if (this.calenderForm.value.biweekly === true) {
            this.showNextWeekBtn = true;
            this.addFoodLable = 'Add First Week Food';
        }
        else {
            this.addFoodLable = 'Add Food';
            this.foodFieldCountSecond = 1;
            this.displayFoodListSecond = [];
            this.tempFoodSecond = [
                {
                    'id': 1,
                    'foodItem': '',
                    'amount': '',
                    'unit': ''
                }
            ];
            this.displayFoodListSecond.push(this.tempFoodSecond);
            this.createSecondFoodForm();
            this.showNextWeekBtn = false;
        }
    };
    // Method to add new food item into food list
    AgencyAdminNewmealplannerComponent.prototype.saveMealItemInformation = function () {
        var _this = this;
        this.mealItemMasterName = this.mealItemMasterName.trim();
        if (this.mealItemMasterName === '' || this.mealItemMasterName === undefined && this.mealItemMasterName === null) {
            this.notification.warning({ message: 'Please enter valid food name', title: '' });
        }
        else {
            this.spinner.show();
            var data = {
                'agencyID': this.agencyID,
                'FoodTypeName': this.mealItemMasterName
            };
            this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_2__["AgencyAPIURLs"].SaveMealItemInformation, data, null).subscribe(function (res) {
                if (res.body.statusCode === 200) {
                    _this.getFoodItems();
                    $('.newfood').modal('hide');
                    _this.notification.success({ message: 'New food item added successfully', title: '' });
                    _this.spinner.hide();
                }
                else if (res.body.statusCode === 987) {
                    _this.notification.warning({ message: 'Already Exist', title: '' });
                    _this.spinner.hide();
                }
                else {
                    _this.spinner.hide();
                    _this.error.unknownError();
                }
            }, function (err) {
                _this.spinner.hide();
                _this.error.commonError(err);
            });
        }
    };
    AgencyAdminNewmealplannerComponent.prototype.clearFoodFormForm = function () {
        this.mealItemMasterName = '';
    };
    /**Delete event method */
    AgencyAdminNewmealplannerComponent.prototype.deleteEvent = function () {
        var _this = this;
        this.confirmationService.confirm({
            message: 'Do you want to delete this record?',
            accept: function () {
                if (_this.mealPlannerId > 0) {
                    _this.spinner.show();
                    var data = {
                        'agencyID': _this.agencyID,
                        'mealPlannerID': _this.mealPlannerId,
                        'mon': _this.calenderForm.value.mon,
                        'tue': _this.calenderForm.value.tue,
                        'wed': _this.calenderForm.value.wed,
                        'thu': _this.calenderForm.value.thu,
                        'fri': _this.calenderForm.value.fri,
                        'sat': _this.calenderForm.value.sat,
                        'sun': _this.calenderForm.value.sun
                    };
                    _this.apiService.postData(src_app_layout_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_3__["TeacherAPIURLs"].DeleteParticularMealPlan, data, null).subscribe(function (res) {
                        if (res.body.statusCode === 200) {
                            _this.deleteMealPlanSuccess(_this.mealPlannerId);
                        }
                        else {
                            _this.spinner.hide();
                            _this.error.unknownError();
                        }
                    }, function (err) {
                        _this.spinner.hide();
                        _this.error.commonError(err);
                    });
                }
                else {
                    _this.error.unknownError();
                }
            }
        });
    };
    /**Success method for delete meal plan */
    AgencyAdminNewmealplannerComponent.prototype.deleteMealPlanSuccess = function (data) {
        $('.addmealup').modal('hide');
        this.callEvent(this.cuurentDate);
        this.notification.success({ message: 'Record deleted successfully', title: '' });
    };
    AgencyAdminNewmealplannerComponent.prototype.marUnmarkAllDays = function () {
        if (this.calenderForm.value.alldays) {
            this.calenderForm.controls['mon'].setValue(true);
            this.calenderForm.controls['tue'].setValue(true);
            this.calenderForm.controls['wed'].setValue(true);
            this.calenderForm.controls['thu'].setValue(true);
            this.calenderForm.controls['fri'].setValue(true);
            this.calenderForm.controls['sat'].setValue(true);
            this.calenderForm.controls['sun'].setValue(true);
            this.calenderForm.updateValueAndValidity();
        }
        else {
            this.calenderForm.controls['mon'].setValue(false);
            this.calenderForm.controls['tue'].setValue(false);
            this.calenderForm.controls['wed'].setValue(false);
            this.calenderForm.controls['thu'].setValue(false);
            this.calenderForm.controls['fri'].setValue(false);
            this.calenderForm.controls['sat'].setValue(false);
            this.calenderForm.controls['sun'].setValue(false);
            this.calenderForm.updateValueAndValidity();
        }
    };
    AgencyAdminNewmealplannerComponent.prototype.unmarkAllDaysCheck = function (contrl) {
        console.log(this.calenderForm);
        this.calenderForm.controls['alldays'].setValue(false);
        this.calenderForm.updateValueAndValidity();
    };
    AgencyAdminNewmealplannerComponent.prototype.checkNoDaysSelected = function () {
        if (this.calenderForm.value.mon === false && this.calenderForm.value.tue === false && this.calenderForm.value.wed === false
            && this.calenderForm.value.thu === false && this.calenderForm.value.fri === false && this.calenderForm.value.mon === false
            && this.calenderForm.value.sun === false) {
            return true;
        }
    };
    AgencyAdminNewmealplannerComponent.prototype.getDayFromSelectedPlan = function () {
        var d = new Date(this.selectedDay).getDay();
        if (d === 0) {
            this.calenderForm.controls['sun'].setValue(true);
            this.calenderForm.controls['mon'].setValue(false);
            this.calenderForm.controls['tue'].setValue(false);
            this.calenderForm.controls['wed'].setValue(false);
            this.calenderForm.controls['thu'].setValue(false);
            this.calenderForm.controls['fri'].setValue(false);
            this.calenderForm.controls['sat'].setValue(false);
        }
        else if (d === 1) {
            this.calenderForm.controls['mon'].setValue(true);
            this.calenderForm.controls['tue'].setValue(false);
            this.calenderForm.controls['wed'].setValue(false);
            this.calenderForm.controls['thu'].setValue(false);
            this.calenderForm.controls['fri'].setValue(false);
            this.calenderForm.controls['sat'].setValue(false);
            this.calenderForm.controls['sun'].setValue(false);
        }
        else if (d === 2) {
            this.calenderForm.controls['tue'].setValue(true);
            this.calenderForm.controls['mon'].setValue(false);
            this.calenderForm.controls['wed'].setValue(false);
            this.calenderForm.controls['thu'].setValue(false);
            this.calenderForm.controls['fri'].setValue(false);
            this.calenderForm.controls['sat'].setValue(false);
            this.calenderForm.controls['sun'].setValue(false);
        }
        else if (d === 3) {
            this.calenderForm.controls['wed'].setValue(true);
            this.calenderForm.controls['mon'].setValue(false);
            this.calenderForm.controls['tue'].setValue(false);
            this.calenderForm.controls['thu'].setValue(false);
            this.calenderForm.controls['fri'].setValue(false);
            this.calenderForm.controls['sat'].setValue(false);
            this.calenderForm.controls['sun'].setValue(false);
        }
        else if (d === 4) {
            this.calenderForm.controls['thu'].setValue(true);
            this.calenderForm.controls['mon'].setValue(false);
            this.calenderForm.controls['tue'].setValue(false);
            this.calenderForm.controls['wed'].setValue(false);
            this.calenderForm.controls['fri'].setValue(false);
            this.calenderForm.controls['sat'].setValue(false);
            this.calenderForm.controls['sun'].setValue(false);
        }
        else if (d === 5) {
            this.calenderForm.controls['fri'].setValue(true);
            this.calenderForm.controls['mon'].setValue(false);
            this.calenderForm.controls['tue'].setValue(false);
            this.calenderForm.controls['wed'].setValue(false);
            this.calenderForm.controls['thu'].setValue(false);
            this.calenderForm.controls['sat'].setValue(false);
            this.calenderForm.controls['sun'].setValue(false);
        }
        else {
            this.calenderForm.controls['sat'].setValue(true);
            this.calenderForm.controls['mon'].setValue(false);
            this.calenderForm.controls['tue'].setValue(false);
            this.calenderForm.controls['wed'].setValue(false);
            this.calenderForm.controls['thu'].setValue(false);
            this.calenderForm.controls['fri'].setValue(false);
            this.calenderForm.controls['sun'].setValue(false);
        }
    };
    // this method is use to close add food modal (first and second week)
    AgencyAdminNewmealplannerComponent.prototype.closeAddFoodModel = function (no) {
        if (no === 1) {
            $('.secondfood').modal('hide');
        }
        else {
            $('.firstfood').modal('hide');
        }
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])(ng_fullcalendar__WEBPACK_IMPORTED_MODULE_4__["CalendarComponent"]),
        __metadata("design:type", ng_fullcalendar__WEBPACK_IMPORTED_MODULE_4__["CalendarComponent"])
    ], AgencyAdminNewmealplannerComponent.prototype, "ucCalendar", void 0);
    AgencyAdminNewmealplannerComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-agency-admin-newmealplanner',
            template: __webpack_require__(/*! ./agency-admin-newmealplanner.component.html */ "./src/app/layout/agency-admin/components/agency-admin-newmealplanner/agency-admin-newmealplanner.component.html"),
            styles: [__webpack_require__(/*! ./agency-admin-newmealplanner.component.css */ "./src/app/layout/agency-admin/components/agency-admin-newmealplanner/agency-admin-newmealplanner.component.css")]
        }),
        __metadata("design:paramtypes", [src_app_layout_teacher_shared_services_teacher_api_service_teacher_api_service__WEBPACK_IMPORTED_MODULE_6__["TeacherApiService"], src_app_shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_7__["ErrorHandlerService"],
            ngx_spinner__WEBPACK_IMPORTED_MODULE_9__["NgxSpinnerService"], src_app_shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_8__["NotificationService"],
            src_app_shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_10__["CommonService"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormBuilder"], primeng_api__WEBPACK_IMPORTED_MODULE_11__["ConfirmationService"]])
    ], AgencyAdminNewmealplannerComponent);
    return AgencyAdminNewmealplannerComponent;
}());



/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-parent-ledger/agency-admin-parent-ledger.component.css":
/*!********************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-parent-ledger/agency-admin-parent-ledger.component.css ***!
  \********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".wid26{ width: 26%;}\r\n.wid10{ width: 10%;}\r\n.verAligMiddle{  vertical-align: middle;}\r\n.plusIcon{ font-size: 28px; }\r\n.minusIcon{font-size: 28px; color: #FF6C6C;}\r\n.info-icon{\r\n  margin-left: 243px;\r\n  font-size: 20px; \r\n  color: #383333;\r\n}\r\n/* #balncextra .ui-inputswitch {\r\n  width: 66px !important;\r\n  height: 29px !important;\r\n }\r\n\r\n #balncextra .ui-inputswitch-slider {\r\n    height: 21px !important;\r\n    width: 27px !important;\r\n} */\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L2FnZW5jeS1hZG1pbi9jb21wb25lbnRzL2FnZW5jeS1hZG1pbi1wYXJlbnQtbGVkZ2VyL2FnZW5jeS1hZG1pbi1wYXJlbnQtbGVkZ2VyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsUUFBUSxVQUFVLENBQUM7QUFDbkIsUUFBUSxVQUFVLENBQUM7QUFDbkIsaUJBQWlCLHNCQUFzQixDQUFDO0FBQ3hDLFdBQVcsZUFBZSxFQUFFO0FBQzVCLFdBQVcsZUFBZSxFQUFFLGNBQWMsQ0FBQztBQUUzQztFQUNFLGtCQUFrQjtFQUNsQixlQUFlO0VBQ2YsY0FBYztBQUNoQjtBQUdBOzs7Ozs7OztHQVFHIiwiZmlsZSI6InNyYy9hcHAvbGF5b3V0L2FnZW5jeS1hZG1pbi9jb21wb25lbnRzL2FnZW5jeS1hZG1pbi1wYXJlbnQtbGVkZ2VyL2FnZW5jeS1hZG1pbi1wYXJlbnQtbGVkZ2VyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIud2lkMjZ7IHdpZHRoOiAyNiU7fVxyXG4ud2lkMTB7IHdpZHRoOiAxMCU7fVxyXG4udmVyQWxpZ01pZGRsZXsgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7fVxyXG4ucGx1c0ljb257IGZvbnQtc2l6ZTogMjhweDsgfVxyXG4ubWludXNJY29ue2ZvbnQtc2l6ZTogMjhweDsgY29sb3I6ICNGRjZDNkM7fVxyXG5cclxuLmluZm8taWNvbntcclxuICBtYXJnaW4tbGVmdDogMjQzcHg7XHJcbiAgZm9udC1zaXplOiAyMHB4OyBcclxuICBjb2xvcjogIzM4MzMzMztcclxufVxyXG5cclxuXHJcbi8qICNiYWxuY2V4dHJhIC51aS1pbnB1dHN3aXRjaCB7XHJcbiAgd2lkdGg6IDY2cHggIWltcG9ydGFudDtcclxuICBoZWlnaHQ6IDI5cHggIWltcG9ydGFudDtcclxuIH1cclxuXHJcbiAjYmFsbmNleHRyYSAudWktaW5wdXRzd2l0Y2gtc2xpZGVyIHtcclxuICAgIGhlaWdodDogMjFweCAhaW1wb3J0YW50O1xyXG4gICAgd2lkdGg6IDI3cHggIWltcG9ydGFudDtcclxufSAqLyJdfQ== */"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-parent-ledger/agency-admin-parent-ledger.component.html":
/*!*********************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-parent-ledger/agency-admin-parent-ledger.component.html ***!
  \*********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"wrapper\">\n  <div class=\"container-fluid\">\n\n    <div class=\"pagetitle\">\n      <div>\n        <h2>Dashboard\n          <span>/ Payment </span>\n        </h2>\n      </div>\n      <div>\n        <a href=\"https://connect.stripe.com/express/oauth/authorize?client_id={{stripClintID}}&state={STATE_VALUE}\"\n          *ngIf=\"showBtnCreateAcc\" target=\"_blank\">\n          <button type=\"submit\" class=\"btn btn-red\">Create Stripe Account</button></a>\n      </div>\n    </div>\n\n    <div class=\"subhead d-flex justify-content-between mt-20\">\n      <div>\n        <h3>Payment</h3>\n      </div>\n      <div class=\"info-icon\">\n        <i class=\"fa fa-info-circle\" (click)=\"OpenInfoVideo()\" data-toggle=\"modal\"\n           aria-hidden=\"true\" title=\"Information Video\"></i>\n      </div>\n    </div>\n\n    <div class=\"Paymetlist\">\n      <ul class=\"nav nav-pills mb-3\" id=\"pills-tab\" role=\"tablist\">\n        <li class=\"nav-item\" (click)=\"onTabPaymentLedger($event);\">\n          <a class=\"nav-link active\" id=\"allStudent\" data-toggle=\"pill\" href=\"#pills-allstudent\" role=\"tab\"\n            aria-controls=\"pills-allstudent\" aria-selected=\"false\">Payments Ledger</a>\n        </li>\n      </ul>\n\n      <div class=\"tab-content\" id=\"pills-tabContent\">\n        <!-- Payment Ledger Tab -->\n        <div class=\"tab-pane fade active show\" id=\"pills-allstudent\" role=\"tabpanel\" aria-labelledby=\"allstudent\">\n          <div class=\"leftfilter searchwitoutcard\">\n            <div class=\"row algcenter\">\n              <div class=\"search-date\">\n                <div class=\"pr15 label-text\">Search Name : </div>\n                <input type=\"text\" placeholder=\"Search parent name\" [(ngModel)]=\"searchByParentName\"\n                  class=\"form-control mr15\" id=\"\" (keydown)=\"keyDownFunction($event,1)\">\n              </div>\n              <div class=\"filter-buttons\">\n                <button type=\"submit\" class=\"btn btn-send\" (click)=\"getLedgerReport()\">Search</button>\n              </div>\n            </div>\n          </div>\n          <div class=\"innertable\">\n            <div class=\"table-responsive\">\n              <table class=\"table\">\n                <thead class=\"thead-light\">\n                  <tr>\n                    <th scope=\"col\">Family Account</th>\n                    <th scope=\"col\">Children</th>\n                    <th scope=\"col\">Parent/Sponsor</th>\n                    <th scope=\"col\">Balance</th>\n                    <th scope=\"col\" class=\"text-center\">Action</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr *ngFor=\"let report of reportList\">\n                    <td>{{report.parentLastName}}</td>\n                    <td>{{report.studentNames}}</td>\n                    <td>{{report.parentName}}</td>\n                    <td>${{report.balanceAmount}}</td>\n                    <td class=\"text-center\">\n                      <a [routerLink]=\"['../paymentledger', report.parentID]\">\n                        <i class=\"fa fa-eye\" aria-hidden=\"true\"></i>\n                      </a>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n              <div class=\"text-center\">\n                <span *ngIf=\"reportList.length === 0 && !loader\">No record found</span>\n              </div>\n            </div>\n            <!-- <p-paginator  #pagiHistory [alwaysShow]=\"false\" [rows]=\"limit\" [totalRecords]=\"totalRecord\"\n              (onPageChange)=\"paginate($event,1)\"></p-paginator> -->\n\n          </div>\n        </div>\n\n      </div>\n    </div>\n\n    <!-- For Information Video -->\n    <div class=\"modal fade\" id=\"infovideo\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"checkoutLabel\" aria-hidden=\"true\">\n      <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header\">\n            <h5 class=\"modal-title\" id=\"checkoutLabel\">Information Video</h5>\n            <button type=\"button\" *ngIf=\"videoPath\" class=\"close\" (click)= \"PauseInfoVideo()\" data-dismiss=\"modal\" aria-label=\"Close\">\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n            <button type=\"button\" *ngIf=\"!videoPath\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n          <div class=\"modal-body\">\n            <div class=\"cont video_section_pop\" *ngIf=\"videoPath\">\n              <video controls id=\"pausevideo\">\n                <source *ngIf=\"videoPath\" [src] = \"videoPath\" type=\"video/mp4\" />\n                <source *ngIf=\"videoPath\" [src] = \"videoPath\" type=\"video/ogg\" />\n                <source *ngIf=\"videoPath\" [src] = \"videoPath\" type=\"video/webm\" />\n                Browser not supported\n              </video>\n            </div>\n\n            <div class=\"cont video_section_pop\" *ngIf=\"!videoPath\">\n                Video Not Found\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n\n  </div>\n</div>\n\n<app-confirm-box></app-confirm-box>\n<ngx-spinner type=\"ball-atom\" size=\"medium\" color=\"#58A7FE\"></ngx-spinner>"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-parent-ledger/agency-admin-parent-ledger.component.ts":
/*!*******************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-parent-ledger/agency-admin-parent-ledger.component.ts ***!
  \*******************************************************************************************************************/
/*! exports provided: AgencyAdminParentLedgerComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AgencyAdminParentLedgerComponent", function() { return AgencyAdminParentLedgerComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../shared/services/agency-api-service/agency-api.service */ "./src/app/layout/agency-admin/components/shared/services/agency-api-service/agency-api.service.ts");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ngx-spinner */ "./node_modules/ngx-spinner/fesm5/ngx-spinner.js");
/* harmony import */ var _shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../shared/services/notification-service/notification.service */ "./src/app/shared/services/notification-service/notification.service.ts");
/* harmony import */ var _shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../shared/services/common/common.service */ "./src/app/shared/services/common/common.service.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var primeng_api__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! primeng/api */ "./node_modules/primeng/api.js");
/* harmony import */ var primeng_api__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(primeng_api__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _shared_constatant__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../shared/constatant */ "./src/app/layout/agency-admin/components/shared/constatant.ts");
/* harmony import */ var _shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../shared/services/error-handler/error-handler.service */ "./src/app/shared/services/error-handler/error-handler.service.ts");
/* harmony import */ var ngx_bootstrap__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ngx-bootstrap */ "./node_modules/ngx-bootstrap/esm5/ngx-bootstrap.js");
/* harmony import */ var src_app_shared_constdata__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! src/app/shared/constdata */ "./src/app/shared/constdata.ts");
/* harmony import */ var src_app_layout_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! src/app/layout/teacher/shared/constant */ "./src/app/layout/teacher/shared/constant.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};













var AgencyAdminParentLedgerComponent = /** @class */ (function () {
    function AgencyAdminParentLedgerComponent(activatedRoute, apiService, error, spinner, notification, commonService, fb, confirmationService, router) {
        var _this = this;
        this.activatedRoute = activatedRoute;
        this.apiService = apiService;
        this.error = error;
        this.spinner = spinner;
        this.notification = notification;
        this.commonService = commonService;
        this.fb = fb;
        this.confirmationService = confirmationService;
        this.router = router;
        this.showBtnCreateAcc = false;
        this.count = 0;
        this.pageNo = 0;
        this.limit = 10;
        this.totalRecord = 0;
        this.typeid = 0;
        this.loader = true;
        this.dpConfig = new ngx_bootstrap__WEBPACK_IMPORTED_MODULE_10__["BsDatepickerConfig"]();
        this.subsidyDetailsID = 0;
        this.searchByParentName = '';
        this.reportList = [];
        this.studentReportList = [];
        this.videoPath = '';
        this.activatedRoute.queryParams.subscribe(function (params) {
            _this.authCode = params['code'];
        });
        this.agencyId = this.commonService.getAgencyId();
        this.stripClintID = src_app_shared_constdata__WEBPACK_IMPORTED_MODULE_11__["StripClintID"].ClientID;
    }
    AgencyAdminParentLedgerComponent.prototype.ngOnInit = function () {
        this.dpConfig = Object.assign({}, { containerClass: 'theme-dark-blue' }, { showWeekNumbers: false });
        this.searchByParentName = '';
        this.getLedgerReport();
        this.getPaymentDetails();
        this.getSectionVideo();
    };
    AgencyAdminParentLedgerComponent.prototype.OpenInfoVideo = function (data) {
        $('#infovideo').modal('show');
    };
    AgencyAdminParentLedgerComponent.prototype.getSectionVideo = function () {
        var _this = this;
        var req = {
            'SectionID': 17
        };
        this.apiService.postData(src_app_layout_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_12__["TeacherAPIURLs"].GetVideoForSection, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.videoPath = res.body.filePath;
                console.log(_this.videoPath, 'bbbbbbbbbbbbbbb');
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminParentLedgerComponent.prototype.PauseInfoVideo = function () {
        var myVideo = document.getElementById('pausevideo');
        myVideo.pause();
        myVideo.currentTime = 0;
    };
    // Methode for get Parent Ledger
    AgencyAdminParentLedgerComponent.prototype.getLedgerReport = function () {
        var _this = this;
        this.loader = true;
        this.reportList = [];
        this.spinner.show();
        var data = {
            'agencyID': this.commonService.getAgencyId(),
            'ParentName': this.searchByParentName,
            'page': this.pageNo,
            'limit': this.limit,
            'fromDate': this.fromDate ? this.fromDate : this.blankDate,
            'toDate': this.toDate ? this.toDate : this.blankDate,
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_8__["AgencyAPIURLs"].GetParentLedger, data, null).subscribe(function (res) {
            _this.totalRecord = res.body.totalRows;
            if (res.body.statusCode === 200) {
                _this.spinner.hide();
                _this.reportList = res.body.data;
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
            _this.loader = false;
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminParentLedgerComponent.prototype.getPaymentDetails = function () {
        var _this = this;
        var model = {
            'agencyID': this.commonService.getAgencyId()
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_8__["AgencyAPIURLs"].GetStripeDetailsForAgency, model, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                if (res.body.data === [] || res.body.data === null || res.body.data.length === 0) {
                    _this.showBtnCreateAcc = true;
                    if (_this.authCode) {
                        _this.confirm();
                    }
                }
                else {
                    _this.showBtnCreateAcc = false;
                }
            }
            else {
                _this.error.unknownError();
            }
        }, function (err) {
            _this.error.commonError(err);
        });
    };
    AgencyAdminParentLedgerComponent.prototype.confirm = function () {
        var _this = this;
        this.spinner.show();
        var model = {
            'code': this.authCode,
            'agencyID': this.commonService.getAgencyId(),
            'currentUserId': this.commonService.getReleventUserId('userdetails')
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_8__["AgencyAPIURLs"].CreateStripeAccount, model, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.showBtnCreateAcc = false;
                _this.notification.success({ message: 'Strip account has been created successfully!', title: '' });
                _this.spinner.hide();
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminParentLedgerComponent.prototype.onTabPaymentLedger = function (event) {
        this.searchByParentName = '';
        this.totalRecord = 0;
        this.pageNo = 0;
        this.searchByParentName = '';
        this.getLedgerReport();
    };
    AgencyAdminParentLedgerComponent.prototype.keyDownFunction = function (event, no) {
        if (event.keyCode === 13) {
            if (no === 1) {
                this.getLedgerReport();
            }
        }
    };
    AgencyAdminParentLedgerComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-agency-admin-parent-ledger',
            template: __webpack_require__(/*! ./agency-admin-parent-ledger.component.html */ "./src/app/layout/agency-admin/components/agency-admin-parent-ledger/agency-admin-parent-ledger.component.html"),
            styles: [__webpack_require__(/*! ./agency-admin-parent-ledger.component.css */ "./src/app/layout/agency-admin/components/agency-admin-parent-ledger/agency-admin-parent-ledger.component.css")]
        }),
        __metadata("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_1__["ActivatedRoute"], _shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_2__["AgencyApiService"], _shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_9__["ErrorHandlerService"],
            ngx_spinner__WEBPACK_IMPORTED_MODULE_3__["NgxSpinnerService"], _shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_4__["NotificationService"],
            _shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_5__["CommonService"], _angular_forms__WEBPACK_IMPORTED_MODULE_6__["FormBuilder"],
            primeng_api__WEBPACK_IMPORTED_MODULE_7__["ConfirmationService"], _angular_router__WEBPACK_IMPORTED_MODULE_1__["Router"]])
    ], AgencyAdminParentLedgerComponent);
    return AgencyAdminParentLedgerComponent;
}());



/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-parent/agency-admin-parent.component.css":
/*!******************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-parent/agency-admin-parent.component.css ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "/* Added by Aniket 02 April 2019 */\r\n.parenttype li {\r\nfloat: left;\r\n}\r\n.closepos{  position: absolute;  right: 170px;}\r\n.btn-send {\r\n    background: #58A7FE;\r\n    padding: 5px 20px;\r\n    color: #fff;\r\n    font-size: 15px !important;\r\n    border-radius: 30px;\r\n}\r\n@media (max-width:767px){\r\n    .closepos {\r\n        position: absolute;\r\n        right: 40px;\r\n    }\r\n}\r\n.info-icon{\r\n    margin-left: 243px;\r\n    font-size: 20px; \r\n    color: #383333;\r\n}\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L2FnZW5jeS1hZG1pbi9jb21wb25lbnRzL2FnZW5jeS1hZG1pbi1wYXJlbnQvYWdlbmN5LWFkbWluLXBhcmVudC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGtDQUFrQztBQUNsQztBQUNBLFdBQVc7QUFDWDtBQUNBLFlBQVksa0JBQWtCLEdBQUcsWUFBWSxDQUFDO0FBRTlDO0lBQ0ksbUJBQW1CO0lBQ25CLGlCQUFpQjtJQUNqQixXQUFXO0lBQ1gsMEJBQTBCO0lBQzFCLG1CQUFtQjtBQUN2QjtBQUVBO0lBQ0k7UUFDSSxrQkFBa0I7UUFDbEIsV0FBVztJQUNmO0FBQ0o7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixlQUFlO0lBQ2YsY0FBYztBQUNsQiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9hZ2VuY3ktYWRtaW4vY29tcG9uZW50cy9hZ2VuY3ktYWRtaW4tcGFyZW50L2FnZW5jeS1hZG1pbi1wYXJlbnQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIEFkZGVkIGJ5IEFuaWtldCAwMiBBcHJpbCAyMDE5ICovXHJcbi5wYXJlbnR0eXBlIGxpIHtcclxuZmxvYXQ6IGxlZnQ7XHJcbn1cclxuLmNsb3NlcG9zeyAgcG9zaXRpb246IGFic29sdXRlOyAgcmlnaHQ6IDE3MHB4O31cclxuXHJcbi5idG4tc2VuZCB7XHJcbiAgICBiYWNrZ3JvdW5kOiAjNThBN0ZFO1xyXG4gICAgcGFkZGluZzogNXB4IDIwcHg7XHJcbiAgICBjb2xvcjogI2ZmZjtcclxuICAgIGZvbnQtc2l6ZTogMTVweCAhaW1wb3J0YW50O1xyXG4gICAgYm9yZGVyLXJhZGl1czogMzBweDtcclxufVxyXG5cclxuQG1lZGlhIChtYXgtd2lkdGg6NzY3cHgpe1xyXG4gICAgLmNsb3NlcG9zIHtcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgcmlnaHQ6IDQwcHg7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5pbmZvLWljb257XHJcbiAgICBtYXJnaW4tbGVmdDogMjQzcHg7XHJcbiAgICBmb250LXNpemU6IDIwcHg7IFxyXG4gICAgY29sb3I6ICMzODMzMzM7XHJcbn0iXX0= */"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-parent/agency-admin-parent.component.html":
/*!*******************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-parent/agency-admin-parent.component.html ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"wrapper\">\r\n  <div class=\"container-fluid\">\r\n\r\n    <div class=\"pagetitle\">\r\n      <div>\r\n        <h2>Parent List\r\n        </h2>\r\n      </div>\r\n      <div class=\"closepos\">\r\n        <button type=\"submit\" *ngIf=\"isSubscriptionActive\" class=\"btn btn-red \" data-toggle=\"modal\"\r\n          (click)=\"cleareAllForm()\" data-target=\".addparent\">Add Parent</button>\r\n      </div>\r\n      <div *ngIf=\"isSubscriptionActive\" class=\"upload-btn-wrapper\">\r\n        <button class=\"btn btn-send\">Upload CSV</button>\r\n        <input type=\"file\" #input (change)=\"processCSVFile($event)\">\r\n      </div>\r\n\r\n    </div>\r\n    <div class=\"subhead d-flex justify-content-between mt-20\">\r\n      <div>\r\n        <h3>Parent List</h3>\r\n      </div>\r\n      <div class=\"info-icon\">\r\n        <i class=\"fa fa-info-circle\" (click)=\"OpenInfoVideo()\" data-toggle=\"modal\" aria-hidden=\"true\"\r\n          title=\"Information Video\"></i>\r\n      </div>\r\n    </div>\r\n    <div class=\"card cardfilter\">\r\n      <div class=\"row algcenter\">\r\n\r\n        <div class=\"leftfilter\">\r\n          <div class=\"search-date\">\r\n            <div class=\"pr15 label-text\">Search Name : </div>\r\n            <input type=\"text\" placeholder=\"Search parent name\" (keydown)=\"keyDownFunction($event)\"\r\n              [(ngModel)]=\"nameSearch\" class=\"form-control mr15\" id=\"\">\r\n          </div>\r\n          <div class=\"search-date\">\r\n            <div class=\"label-text\">Search By Activation</div>\r\n            <div class=\"pr15\">\r\n              <div class=\"form-group\">\r\n                <select name=\"\" id=\"\" [(ngModel)]=\"activationType\">\r\n                  <option value=\"\">All</option>\r\n                  <option value=\"Activated\">Active</option>\r\n                  <option value=\"Deactivated\">Deactive</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"filter-buttons\">\r\n            <button type=\"submit\" class=\"btn btn-send\" (click)=\"getAllParentList()\">Search</button>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n    <div class=\"innertable\">\r\n      <div class=\"table-responsive\">\r\n        <table class=\"table\">\r\n          <thead class=\"thead-light\">\r\n            <tr>\r\n              <th scope=\"col\">Photo</th>\r\n              <th scope=\"col\">Parent Name</th>\r\n              <th scope=\"col\">Email</th>\r\n              <th scope=\"col\" class=\"text-center\">Actions</th>\r\n              <th scope=\"col\" class=\"text-center\">Change Status</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr *ngFor=\"let parent of parentList\">\r\n              <td>\r\n                <img src=\"{{parent.imagePath}}\" onError=\"this.src='assets/img/user.png'\" alt=\"\"\r\n                  class=\"img-circle childimg\">\r\n              </td>\r\n              <td>{{parent.parentName}}</td>\r\n              <td>{{parent.email}}</td>\r\n              <td class=\"text-center\">\r\n                <a>\r\n                  <i class=\"fa fa-eye\" *ngIf=\"!parent.isDelete\" data-target=\".addparent\" data-toggle=\"modal\"\r\n                    title=\"View/update details\" style=\"cursor:pointer\" aria-hidden=\"true\"\r\n                    (click)=\"getParentDetails(parent)\"></i>\r\n                  <i class=\"fa fa-eye\" *ngIf=\"parent.isDelete\" title=\"View details\" data-toggle=\"modal\"\r\n                    aria-hidden=\"true\" style=\"cursor:pointer\" data-target=\".deactiveparent\"\r\n                    (click)=\"getParentDetails(parent)\"></i>\r\n                  <i class=\"fa fa-envelope\" style=\"cursor: pointer; color: #FF6C6C;\" title=\"update email\"\r\n                    aria-hidden=\"true\" data-target=\".mailupdate\"\r\n                    (click)=\"getparentIdForEmailUpdate(parent);clearEmailForm();\" data-toggle=\"modal\"></i>\r\n\r\n                  <i class=\"fa fa-key\" *ngIf=\"parent.isAuthorizedToPickup\"\r\n                    style=\"cursor: pointer; margin-left: 10px;color: #58a7fe;\" title=\"change quick pin\"\r\n                    aria-hidden=\"true\" (click)=\"changeQuickPin(parent);\" data-toggle=\"modal\"></i>\r\n\r\n                  <i class=\"fa fa-exclamation-circle\" *ngIf=\"parent.parentLogID != 0\"\r\n                    style=\"cursor: pointer; color: #FF6C6C; margin-left: 10px;\" title=\"updated info\" aria-hidden=\"true\"\r\n                    data-target=\".pupdated\" (click)=\"getParentUpdateInfo(parent);clearEmailForm();\"\r\n                    data-toggle=\"modal\"></i>\r\n\r\n                </a>\r\n              </td>\r\n              <td class=\"text-center\" *ngIf=\"isSubscriptionActive\">\r\n                <button class=\"form-control\" *ngIf=\"!parent.isDelete\" class=\"btn btn-warning\"\r\n                  (click)=\"deleteParent(parent)\">Deactivate</button>\r\n                <button class=\"form-control\" *ngIf=\"parent.isDelete\" class=\"btn btn-success\"\r\n                  (click)=\"activateParent(parent)\">Activate</button>\r\n\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <div class=\"text-center\">\r\n          <span *ngIf=\"parentList.length == 0 && !loader\">No record found</span>\r\n        </div>\r\n      </div>\r\n      <p-paginator [alwaysShow]=\"false\" [rows]=\"limit\" [totalRecords]=\"totalRecord\" (onPageChange)=\"paginate($event)\">\r\n      </p-paginator>\r\n\r\n    </div>\r\n\r\n  </div>\r\n\r\n  <!-- Modal for activated parent -->\r\n  <div class=\"modal fade addparent\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myLargeModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-lg\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">{{addMode == true ? 'Add Parent' : 'Parent Details'}}</h5>\r\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <div class=\"modal-body profileupdate\">\r\n            <form [formGroup]=\"profileForm\">\r\n              <div class=\"upload-profile\">\r\n                <div *ngIf=\"image == ''\"> <img src=\"assets/img/user.png\" alt=\"\" class=\"img-fluid img-circle\"> </div>\r\n                <div *ngIf=\"image !=''\"> <img src=\"{{image}}\" alt=\"image\" class=\"img-fluid img-circle\"\r\n                    onError=\"this.src='assets/img/user.png'\"> </div>\r\n\r\n                <div class=\"upload-btn-wrapper\">\r\n                  <button class=\"btn btn-send\">Upload a photo </button>\r\n                  <input type=\"file\" #input (change)=\"processFile($event)\">\r\n                </div>\r\n              </div>\r\n              <div class=\"form-fields\">\r\n                <div class=\"row mb-15 \" style=\"margin-top: 10px\" *ngIf=\"id == 0\">\r\n                  <div class=\"col-lg-12\">\r\n                    <ul class=\"parenttype\">\r\n                      <li>\r\n                        <div class=\"ui-g-12\">\r\n                          <p-radioButton name=\"group2\" formControlName=\"typeofparent\"\r\n                            (onClick)=\"getTypeofparent('parent')\" value=\"parent\" label=\"Parent\" inputId=\"preopt1\">\r\n                          </p-radioButton>\r\n                        </div>\r\n                      </li>\r\n                      <li>\r\n                        <div class=\"ui-g-12\">\r\n                          <p-radioButton name=\"group2\" formControlName=\"typeofparent\"\r\n                            (onClick)=\"getTypeofparent('secondparent')\" value=\"secondparent\" label=\"Secondary Parent\"\r\n                            inputId=\"preopt2\"></p-radioButton>\r\n                        </div>\r\n                      </li>\r\n                      <li>\r\n                        <div class=\"ui-g-12\">\r\n                          <p-radioButton name=\"group2\" formControlName=\"typeofparent\"\r\n                            (onClick)=\"getTypeofparent('guardian')\" value=\"guardian\" label=\"Guardian\" inputId=\"preopt3\">\r\n                          </p-radioButton>\r\n                        </div>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"row mb-10 \">\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">First Name*</label>\r\n                      <input type=\"text \" maxlength=\"35\" class=\"form-control\" formControlName=\"firstname\" id=\"\"\r\n                        aria-describedby=\"\" (keypress)=\"commonService.allowAlphabetOnly($event)\"\r\n                        placeholder=\"Enter First Name\">\r\n                      <div *ngIf=\"f.firstname.invalid && (f.firstname.dirty || f.firstname.touched)\"\r\n                        class=\"text-left errormsg\">\r\n                        <span *ngIf=\"f.firstname.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please enter first name</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Last Name*</label>\r\n                      <input type=\"text \" maxlength=\"35\" class=\"form-control\" id=\"\"\r\n                        (keypress)=\"commonService.allowAlphabetOnly($event)\" formControlName=\"lastname\"\r\n                        aria-describedby=\"\" placeholder=\"Enter Last Name\">\r\n                      <div *ngIf=\"f.lastname.invalid && (f.lastname.dirty || f.lastname.touched)\"\r\n                        class=\"text-left errormsg\">\r\n                        <span *ngIf=\"f.lastname.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please enter last name</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"row mb-10\">\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Email Address*</label>\r\n                      <input type=\"email\" maxlength=\"100\" [readOnly]=\"disableEmail\" class=\"form-control\"\r\n                        formControlName=\"email\" id=\"\" aria-describedby=\"\" placeholder=\"Email address\">\r\n                      <div *ngIf=\"f.email.invalid && (f.email.dirty || f.email.touched)\" class=\"text-left errormsg\">\r\n                        <span *ngIf=\"f.email.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please enter email</span>\r\n                        </span>\r\n                        <span *ngIf=\"f.email.errors.pattern\">\r\n                          <i class=\"fa fa-exclamation-circle errtext\"></i> <span class=\"errtext\"> Please enter valid\r\n                            email address</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Mobile*</label>\r\n                      <input type=\"text\" maxlength=\"10\" class=\"form-control\" formControlName=\"mobile\" id=\"\"\r\n                        aria-describedby=\"\" (keypress)=\"allowOnlyNumber($event)\" placeholder=\"Mobile\">\r\n                      <div *ngIf=\"f.mobile.invalid && (f.mobile.dirty || f.mobile.touched)\" class=\"text-left errormsg\">\r\n                        <span *ngIf=\"f.mobile.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please enter phone number</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"row mb-10\" *ngIf=\"showExtraFields\">\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"exampleInputEmail1\">Parent*</label>\r\n                      <select class=\"form-control\" placeholder=\"Parent\" formControlName=\"masterparentid\"\r\n                        id=\"exampleFormControlSelect1\" (change)=\"getAllStudentOfParentList(1)\">\r\n                        <option value=\"\">Select Parent</option>\r\n                        <option *ngFor=\"let parent of masterParentList\" [value]=\"parent.id\">{{parent.parentName}}\r\n                        </option>\r\n                      </select>\r\n                      <div *ngIf=\"f.masterparentid.invalid && (f.masterparentid.dirty || f.masterparentid.touched)\"\r\n                        class=\"text-left errormsg\">\r\n                        <span *ngIf=\"f.masterparentid.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select parent</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Associate Children*</label>\r\n                      <p-multiSelect [options]=\"parentChildList\" *ngIf=\"id == 0\" formControlName=\"associatedchildid\"\r\n                        [panelStyle]=\"{minWidth:'200px'}\" [maxSelectedLabels]=\"15\"></p-multiSelect>\r\n                      <p-multiSelect [options]=\"parentChildList\" *ngIf=\"id != 0\" formControlName=\"associatedchildid\"\r\n                        [panelStyle]=\"{minWidth:'200px'}\" [maxSelectedLabels]=\"15\"></p-multiSelect>\r\n                      <div\r\n                        *ngIf=\"f.associatedchildid.invalid && (f.associatedchildid.dirty || f.associatedchildid.touched)\"\r\n                        class=\"text-left errormsg\">\r\n                        <span *ngIf=\"f.associatedchildid.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select children</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n\r\n                <div class=\"row mb-10\">\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Address</label>\r\n                      <input type=\"text \" maxlength=\"255\" class=\"form-control\" formControlName=\"address\" id=\"\"\r\n                        aria-describedby=\"\" placeholder=\"Address\">\r\n                      <!-- <div *ngIf=\"f.address.invalid && (f.address.dirty || f.address.touched)\"\r\n                        class=\"text-left errormsg\">\r\n                        <span *ngIf=\"f.address.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please enter address</span>\r\n                        </span>\r\n                      </div> -->\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"exampleInputEmail1\">Country*</label>\r\n                      <select class=\"form-control\" placeholder=\"Country\" formControlName=\"country\"\r\n                        id=\"exampleFormControlSelect1\" (change)=\"getStatesList();clearStateCity()\">\r\n                        <option value=\"\">Select Country</option>\r\n                        <option *ngFor=\"let countries of countryList\" [value]=\"countries.id\">{{countries.countryName}}\r\n                        </option>\r\n                      </select>\r\n                      <div *ngIf=\"f.country.invalid && (f.country.dirty || f.country.touched)\"\r\n                        class=\"text-left errormsg\">\r\n                        <span *ngIf=\"f.country.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select country</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"row mb-10\">\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"exampleFormControlSelect1\">State*</label>\r\n                      <select class=\"form-control\" placeholder=\"State\" formControlName=\"state\"\r\n                        id=\"exampleFormControlSelect1\" (change)=\"getCitiesList();clearCity()\">\r\n                        <option value=\"\">Select State</option>\r\n                        <option *ngFor=\"let states of stateList\" [value]=\"states.id\">{{states.stateName}}</option>\r\n                      </select>\r\n                      <div *ngIf=\"f.state.invalid && (f.state.dirty || f.state.touched)\" class=\"text-left errormsg\">\r\n                        <span *ngIf=\"f.state.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select state</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">City*</label>\r\n                      <select class=\"form-control\" placeholder=\"City\" formControlName=\"city\"\r\n                        id=\"exampleFormControlSelect1\">\r\n                        <option value=\"\">Select City</option>\r\n                        <option *ngFor=\"let cities of cityList\" [value]=\"cities.id\">{{cities.cityName}}</option>\r\n                      </select>\r\n                      <div *ngIf=\"f.city.invalid && (f.city.dirty || f.city.touched)\" class=\"text-left errormsg\">\r\n                        <span *ngIf=\"f.city.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select city</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"row mb-10\">\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Zip Code</label>\r\n                      <input type=\"text\" maxlength=\"6\" (keypress)=\"allowOnlyNumber($event)\" class=\"form-control\"\r\n                        formControlName=\"zipcode\" id=\"\" aria-describedby=\"\" placeholder=\"Zip code\">\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Date of Birth</label>\r\n                      <input type=\"text\" placeholder=\"Select date\" formControlName=\"birthdate\" showWeekNumbers=\"false\"\r\n                        [maxDate]=\"today\" class=\"form-control\" [bsConfig]=\"dpConfig\" bsDatepicker>\r\n                      <!-- <div *ngIf=\"f.birthdate.invalid && (f.birthdate.dirty || f.birthdate.touched)\"\r\n                        class=\"text-left errormsg\">\r\n                        <span *ngIf=\"f.birthdate.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select birthdate</span>\r\n                        </span>\r\n                      </div> -->\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n\r\n                <div class=\"row mb-10\">\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Profession</label>\r\n                      <input type=\"text\" maxlength=\"100\" class=\"form-control\" formControlName=\"profession\" id=\"\"\r\n                        aria-describedby=\"\" placeholder=\"Profession\">\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Gender</label>\r\n                      <select formControlName=\"gender\" class=\"form-control\" placeholder=\"Select gender\">\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"1\">Male</option>\r\n                        <option value=\"2\">Female</option>\r\n                      </select>\r\n                      <div *ngIf=\"f.gender.invalid && (f.gender.dirty || f.gender.touched)\" class=\"text-left errormsg\">\r\n                        <span *ngIf=\"f.gender.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select gender</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"row mb-10 \">\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Employer Name</label>\r\n                      <input type=\"text \" (keypress)=\"commonService.allowAlphabetOnly($event)\" maxlength=\"35\"\r\n                        class=\"form-control\" formControlName=\"employername\" id=\"\" aria-describedby=\"\"\r\n                        placeholder=\"Employer Name\">\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Employer Number</label>\r\n                      <input type=\"text \" (keypress)=\"allowOnlyNumber($event)\" maxlength=\"10\" class=\"form-control\" id=\"\"\r\n                        formControlName=\"employernumber\" aria-describedby=\"\" placeholder=\"Employer Number\">\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"row mb-10\">\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Employer Address</label>\r\n                      <input type=\"text \" maxlength=\"35\" class=\"form-control\" formControlName=\"employeraddress\" id=\"\"\r\n                        aria-describedby=\"\" placeholder=\"Employer Address\">\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-6\">\r\n                    <label for=\"\">Relation With Student*</label>\r\n                    <select class=\"form-control\" placeholder=\"Relation\" formControlName=\"relationid\"\r\n                      id=\"exampleFormControlSelect1\">\r\n                      <option value=\"\">Select Relation</option>\r\n                      <option *ngFor=\"let relation of relationTypeList\" [value]=\"relation.value\">{{relation.label}}\r\n                      </option>\r\n                    </select>\r\n                    <div *ngIf=\"f.relationid.invalid && (f.relationid.dirty || f.relationid.touched)\"\r\n                      class=\"text-left errormsg\">\r\n                      <span *ngIf=\"f.relationid.errors.required\">\r\n                        <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select relation</span>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n\r\n                </div>\r\n\r\n                <div class=\"row mt-20\">\r\n                  <div class=\"col-lg-12\">\r\n                    <div class=\"\">\r\n                      <label class=\"checkboxcustom\" style=\"color: #333333;\">\r\n                        <input type=\"checkbox\" id=\"checkbox-in\" class=\"form-control abc\"\r\n                          formControlName=\"joinclassroom\">\r\n                        <span class=\"checkmark abc\"></span><label style=\"margin-left: 12px; margin-top: 2px;\"> Join Classroom Panda\r\n                          Learning Program & Get Educational Products For A Special Price!</label>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"row mt-20\" *ngIf=\"isGuardian\">\r\n                  <div class=\"col-lg-3\">\r\n                    <div class=\"\">\r\n                      <label class=\"checkboxcustom\">\r\n                        <input type=\"checkbox\" id=\"checkbox-in\" class=\"form-control abc\"\r\n                          (change)=\"markAsAllowToPickup()\" formControlName=\"allowpickup\">\r\n                        <span class=\"checkmark abc\"></span><label style=\"margin-left: 12px;\"> Authorized pickup</label>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-9\">\r\n                    <div class=\"form-group\" id=\"desc1\" *ngIf=\"reasonNotToAllowbox\">\r\n                      <label for=\"\">Reason for not allowing pickup*</label>\r\n                      <textarea class=\"form-control\" maxlength=\"100\" formControlName=\"notallowedreason\"\r\n                        aria-describedby=\"\" placeholder=\"Reason for not allowing for pickup\"></textarea>\r\n                      <div\r\n                        *ngIf=\"f.notallowedreason.invalid && (f.notallowedreason.dirty || f.notallowedreason.touched)\"\r\n                        class=\"text-left errormsg\">\r\n                        <span *ngIf=\"f.notallowedreason.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please enter reason</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"row mt-20\" *ngIf=\"isSecondparent\">\r\n                  <div class=\"col-lg-3\">\r\n                    <div class=\"\">\r\n                      <label class=\"checkboxcustom\">\r\n                        <input type=\"checkbox\" id=\"checkbox-in\" class=\"form-control abc\"\r\n                          (change)=\"markAsNotAllowToPickup()\" formControlName=\"notallowpickup\">\r\n                        <span class=\"checkmark abc\"></span><label style=\"margin-left: 12px;\"> Restricted</label>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-9\">\r\n                    <div class=\"form-group\" id=\"desc1\" *ngIf=\"reasonNotToAllowbox\">\r\n                      <label for=\"\">Reason for not allowing pickup*</label>\r\n                      <textarea class=\"form-control\" maxlength=\"100\" formControlName=\"notallowedreason\"\r\n                        aria-describedby=\"\" placeholder=\"Reason for not allowing for pickup\"></textarea>\r\n                      <div\r\n                        *ngIf=\"f.notallowedreason.invalid && (f.notallowedreason.dirty || f.notallowedreason.touched)\"\r\n                        class=\"text-left errormsg\">\r\n                        <span *ngIf=\"f.notallowedreason.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please enter reason</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n              </div>\r\n            </form>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n            <button type=\"button\" class=\"btn btn-primary\" *ngIf=\"isSubscriptionActive\"\r\n              (click)=\"SaveParentDetails()\">{{addMode == true ? 'Add Parent' : 'Save Changes'}}</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- last  -->\r\n  </div>\r\n\r\n  <!--Modal for Details of Deactive parents  -->\r\n  <div class=\"modal fade deactiveparent\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myLargeModalLabel\"\r\n    aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-lg\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">{{addMode == true ? 'Add Parent' : 'Parent Details'}}</h5>\r\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <div class=\"modal-body profileupdate\">\r\n            <form [formGroup]=\"profileForm\">\r\n              <div class=\"upload-profile\">\r\n                <div *ngIf=\"image == ''\"> <img src=\"assets/img/user.png\" alt=\"\" class=\"img-fluid img-circle\"> </div>\r\n                <div *ngIf=\"image !=''\"> <img src=\"{{image}}\" alt=\"image\" class=\"img-fluid img-circle\"\r\n                    onError=\"this.src='assets/img/user.png'\"> </div>\r\n\r\n              </div>\r\n              <div class=\"form-fields\">\r\n                <div class=\"row mb-10 \">\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">First name</label>\r\n                      <input type=\"text \" maxlength=\"35\" class=\"form-control\" disabled formControlName=\"firstname\" id=\"\"\r\n                        aria-describedby=\"\" placeholder=\"Enter First Name\">\r\n                      <div *ngIf=\"f.firstname.invalid && (f.firstname.dirty || f.firstname.touched)\"\r\n                        class=\"text-left errormsg\">\r\n                        <span *ngIf=\"f.firstname.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please enter first name</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Last name</label>\r\n                      <input type=\"text \" disabled maxlength=\"35\" class=\"form-control\" id=\"\" formControlName=\"lastname\"\r\n                        aria-describedby=\"\" placeholder=\"Enter Last Name\">\r\n                      <div *ngIf=\"f.lastname.invalid && (f.lastname.dirty || f.lastname.touched)\"\r\n                        class=\"text-left errormsg\">\r\n                        <span *ngIf=\"f.lastname.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please enter last name</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n\r\n\r\n                <div class=\"row mb-10\">\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Email Address</label>\r\n                      <input type=\"email\" disabled maxlength=\"100\" [readOnly]=\"disableEmail\" class=\"form-control\"\r\n                        formControlName=\"email\" id=\"\" aria-describedby=\"\" placeholder=\"Email address\">\r\n                      <div *ngIf=\"f.email.invalid && (f.email.dirty || f.email.touched)\" class=\"text-left errormsg\">\r\n                        <span *ngIf=\"f.email.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please enter email</span>\r\n                        </span>\r\n                        <span *ngIf=\"f.email.errors.pattern\">\r\n                          <i class=\"fa fa-exclamation-circle errtext\"></i> <span class=\"errtext\"> Please enter valid\r\n                            email address</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Mobile</label>\r\n                      <input type=\"text\" disabled maxlength=\"10\" class=\"form-control\" formControlName=\"mobile\" id=\"\"\r\n                        aria-describedby=\"\" (keypress)=\"allowOnlyNumber($event)\" placeholder=\"Mobile\">\r\n                      <div *ngIf=\"f.mobile.invalid && (f.mobile.dirty || f.mobile.touched)\" class=\"text-left errormsg\">\r\n                        <span *ngIf=\"f.mobile.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please enter phone number</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n\r\n                <div class=\"row mb-10\">\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Associate Children</label>\r\n                      <p-multiSelect [options]=\"parentChildList\" *ngIf=\"id == 0\" formControlName=\"associatedchildid\"\r\n                        [panelStyle]=\"{minWidth:'200px'}\" [maxSelectedLabels]=\"15\"></p-multiSelect>\r\n                      <p-multiSelect [options]=\"parentChildList\" *ngIf=\"id != 0\" readonly=\"true\"\r\n                        formControlName=\"associatedchildid\" [panelStyle]=\"{minWidth:'200px'}\" [maxSelectedLabels]=\"15\">\r\n                      </p-multiSelect>\r\n                      <div\r\n                        *ngIf=\"f.associatedchildid.invalid && (f.associatedchildid.dirty || f.associatedchildid.touched)\"\r\n                        class=\"text-left errormsg\">\r\n                        <span *ngIf=\"f.associatedchildid.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select children</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Address</label>\r\n                      <input type=\"text \" disabled maxlength=\"255\" class=\"form-control\" formControlName=\"address\" id=\"\"\r\n                        aria-describedby=\"\" placeholder=\"Address\">\r\n                      <div *ngIf=\"f.address.invalid && (f.address.dirty || f.address.touched)\"\r\n                        class=\"text-left errormsg\">\r\n                        <span *ngIf=\"f.address.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please enter address</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n\r\n                <div class=\"row mb-10\">\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"exampleInputEmail1\">Country</label>\r\n                      <select class=\"form-control\" disabled placeholder=\"Country\" formControlName=\"country\"\r\n                        id=\"exampleFormControlSelect1\" (change)=\"getStatesList();clearStateCity()\">\r\n                        <option value=\"\">Select Country</option>\r\n                        <option *ngFor=\"let countries of countryList\" [value]=\"countries.id\">{{countries.countryName}}\r\n                        </option>\r\n                      </select>\r\n                      <div *ngIf=\"f.country.invalid && (f.country.dirty || f.country.touched)\"\r\n                        class=\"text-left errormsg\">\r\n                        <span *ngIf=\"f.country.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select country</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"exampleFormControlSelect1\">State</label>\r\n                      <select class=\"form-control\" disabled placeholder=\"State\" formControlName=\"state\"\r\n                        id=\"exampleFormControlSelect1\" (change)=\"getCitiesList();clearCity()\">\r\n                        <option value=\"\">Select State</option>\r\n                        <option *ngFor=\"let states of stateList\" [value]=\"states.id\">{{states.stateName}}</option>\r\n                      </select>\r\n                      <div *ngIf=\"f.state.invalid && (f.state.dirty || f.state.touched)\" class=\"text-left errormsg\">\r\n                        <span *ngIf=\"f.state.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select state</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"row mb-10\">\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">City</label>\r\n                      <select class=\"form-control\" disabled placeholder=\"City\" formControlName=\"city\"\r\n                        id=\"exampleFormControlSelect1\">\r\n                        <option value=\"\">Select City</option>\r\n                        <option *ngFor=\"let cities of cityList\" [value]=\"cities.id\">{{cities.cityName}}</option>\r\n                      </select>\r\n                      <div *ngIf=\"f.city.invalid && (f.city.dirty || f.city.touched)\" class=\"text-left errormsg\">\r\n                        <span *ngIf=\"f.city.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select city</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Zip Code</label>\r\n                      <input type=\"text\" (keypress)=\"allowOnlyNumber($event)\" disabled maxlength=\"6\"\r\n                        class=\"form-control\" formControlName=\"zipcode\" id=\"\" aria-describedby=\"\" placeholder=\"Zip code\">\r\n                    </div>\r\n                  </div>\r\n\r\n                </div>\r\n\r\n\r\n                <div class=\"row mb-10\">\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Date Of Birth</label>\r\n                      <input type=\"text\" disabled placeholder=\"Select date\" formControlName=\"birthdate\"\r\n                        showWeekNumbers=\"false\" [maxDate]=\"today\" class=\"form-control\" [bsConfig]=\"dpConfig\"\r\n                        bsDatepicker>\r\n                      <div *ngIf=\"f.birthdate.invalid && (f.birthdate.dirty || f.birthdate.touched)\"\r\n                        class=\"text-left errormsg\">\r\n                        <span *ngIf=\"f.birthdate.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select birthdate</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Gender</label>\r\n                      <select formControlName=\"gender\" disabled class=\"form-control\" placeholder=\"Select gender\">\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"1\">Male</option>\r\n                        <option value=\"2\">Female</option>\r\n                      </select>\r\n                      <div *ngIf=\"f.gender.invalid && (f.gender.dirty || f.gender.touched)\" class=\"text-left errormsg\">\r\n                        <span *ngIf=\"f.gender.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select gender</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"row mb-10\">\r\n                  <div class=\"col-lg-6\">\r\n                    <label for=\"\">Relation With Student</label>\r\n                    <select class=\"form-control\" disabled placeholder=\"Relation\" formControlName=\"relationid\"\r\n                      id=\"exampleFormControlSelect1\">\r\n                      <option value=\"\">Select Relation</option>\r\n                      <option *ngFor=\"let relation of relationTypeList\" [value]=\"relation.value\">{{relation.label}}\r\n                      </option>\r\n                    </select>\r\n                    <div *ngIf=\"f.relationid.invalid && (f.relationid.dirty || f.relationid.touched)\"\r\n                      class=\"text-left errormsg\">\r\n                      <span *ngIf=\"f.relationid.errors.required\">\r\n                        <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select relation</span>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Profession</label>\r\n                      <input type=\"text\" disabled maxlength=\"200\" class=\"form-control\" formControlName=\"profession\"\r\n                        id=\"\" aria-describedby=\"\" placeholder=\"Profession\">\r\n\r\n                    </div>\r\n                  </div>\r\n\r\n                </div>\r\n\r\n                <div class=\"row mt-20\">\r\n                  <div class=\"col-lg-12\">\r\n                    <div class=\"\">\r\n                      <label class=\"checkboxcustom\" style=\"color: #333333;\">\r\n                        <input type=\"checkbox\" id=\"checkbox-in\" class=\"form-control abc\"\r\n                          formControlName=\"joinclassroom\">\r\n                        <span class=\"checkmark abc\"></span><label style=\"margin-left: 12px; margin-top: 2px;\"> Join Classroom Panda\r\n                          Learning Program & Get Educational Products For A Special Price!</label>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n\r\n\r\n                <div class=\"row mt-20\" *ngIf=\"isGuardian\">\r\n                  <div class=\"col-lg-3\">\r\n                    <div class=\"\">\r\n                      <label class=\"\">\r\n                        <input type=\"checkbox\" disabled id=\"checkbox-in\" class=\"form-control abc\"\r\n                          (change)=\"markAsAllowToPickup()\" formControlName=\"allowpickup\">\r\n                        <span class=\"checkmark abc\"></span><label style=\"margin-left: 12px;\"> Authorized pickup</label>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-9\">\r\n                    <div class=\"form-group\" id=\"desc1\" *ngIf=\"reasonNotToAllowbox\">\r\n                      <label for=\"\">Reason for not allowing pickup</label>\r\n                      <textarea class=\"form-control\" disabled maxlength=\"100\" formControlName=\"notallowedreason\"\r\n                        aria-describedby=\"\" placeholder=\"Reason for not allowing for pickup\"></textarea>\r\n                      <div\r\n                        *ngIf=\"f.notallowedreason.invalid && (f.notallowedreason.dirty || f.notallowedreason.touched)\"\r\n                        class=\"text-left errormsg\">\r\n                        <span *ngIf=\"f.notallowedreason.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please enter reason</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"row mt-20\" *ngIf=\"isSecondparent\">\r\n                  <div class=\"col-lg-3\">\r\n                    <div class=\"\">\r\n                      <label class=\"\">\r\n                        <input type=\"checkbox\" disabled id=\"checkbox-in\" class=\"form-control abc\"\r\n                          (change)=\"markAsNotAllowToPickup()\" formControlName=\"notallowpickup\">\r\n                        <span class=\"checkmark abc\"></span><label style=\"margin-left: 12px;\"> Restricted</label>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-9\">\r\n                    <div class=\"form-group\" id=\"desc1\" *ngIf=\"reasonNotToAllowbox\">\r\n                      <label for=\"\">Reason for not allowing pickup</label>\r\n                      <textarea class=\"form-control\" disabled maxlength=\"100\" formControlName=\"notallowedreason\"\r\n                        aria-describedby=\"\" placeholder=\"Reason for not allowing for pickup\"></textarea>\r\n                      <div\r\n                        *ngIf=\"f.notallowedreason.invalid && (f.notallowedreason.dirty || f.notallowedreason.touched)\"\r\n                        class=\"text-left errormsg\">\r\n                        <span *ngIf=\"f.notallowedreason.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please enter reason</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n\r\n\r\n    <!-- last  -->\r\n  </div>\r\n  <!-- Rejected User List -->\r\n  <div class=\"modal fade rejectedUsr\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myLargeModalLabel\"\r\n    aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-lg\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Rejected Parent List</h5>\r\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <div class=\"innertable\">\r\n            <div class=\"table-responsive\">\r\n\r\n              <table class=\"table\">\r\n                <thead class=\"thead-light\">\r\n                  <tr>\r\n                    <th scope=\"col\">Parent First Name</th>\r\n                    <th scope=\"col\">Parent Last Name</th>\r\n                    <th scope=\"col\">Parent Email Address</th>\r\n                    <th scope=\"col\">Reason</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n\r\n                  <tr *ngFor=\"let student of rejectedUserList\">\r\n                    <td>{{student.firstName}}</td>\r\n                    <td>{{student.lastName}}</td>\r\n                    <td>{{student.emailId}}</td>\r\n                    <td>{{student.msg}}</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n\r\n  <!-- Modal for Advance payment -->\r\n  <div class=\"modal fade advancepay\" data-backdrop=\"static\" id=\"breakout\" tabindex=\"-1\" role=\"dialog\"\r\n    aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <h5 class=\"modal-title\" id=\"exampleModalLabel\">Add Advance Amount</h5>\r\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <div class=\"form-group\">\r\n            <label>Amount($)</label>\r\n            <input type=\"text\" maxlength=\"5\" class=\"form-control\"\r\n              (keypress)=\"commonService.allowOnlyNumberWithDecimal($event)\" placeholder=\"Amount\"\r\n              [(ngModel)]=\"advanceAmount\">\r\n          </div>\r\n\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n          <button type=\"button\" class=\"btn btn-primary\" (click)=\"saveAdvancePay()\">Add</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n\r\n  <div class=\"modal fade mailupdate\" data-backdrop=\"static\" style=\"z-index: 1100;\" id=\"breakout\" tabindex=\"-1\"\r\n    role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <h5 class=\"modal-title\" id=\"exampleModalLabel\">Update Email</h5>\r\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <form [formGroup]=\"newEmailForm\">\r\n            <div class=\"form-group\">\r\n              <label>New Email</label>\r\n              <input type=\"text\" class=\"form-control\" placeholder=\"New Email\" formControlName=\"newemail\">\r\n              <div\r\n                *ngIf=\"newEmailForm.controls.newemail.invalid && (newEmailForm.controls.newemail.dirty || newEmailForm.controls.newemail.touched)\"\r\n                class=\"text-left errormsg\">\r\n                <span *ngIf=\"newEmailForm.controls.newemail.errors.required\">\r\n                  <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please enter email</span>\r\n                </span>\r\n                <span *ngIf=\"newEmailForm.controls.newemail.errors.pattern\">\r\n                  <i class=\"fa fa-exclamation-circle errtext\"></i> <span class=\"errtext\"> Please enter valid\r\n                    email address</span>\r\n                </span>\r\n              </div>\r\n\r\n            </div>\r\n          </form>\r\n        </div>\r\n\r\n        <div class=\"modal-footer\">\r\n          <!-- data-dismiss=\"modal\" -->\r\n          <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n          <button type=\"button\" class=\"btn btn-primary\" (click)=\"upateEmail()\">Update Email</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- For Information Video -->\r\n  <div class=\"modal fade\" id=\"infovideo\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"checkoutLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <h5 class=\"modal-title\" id=\"checkoutLabel\">Information Video</h5>\r\n          <button type=\"button\" *ngIf=\"videoPath\" class=\"close\" (click)=\"PauseInfoVideo()\" data-dismiss=\"modal\"\r\n            aria-label=\"Close\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n          <button type=\"button\" *ngIf=\"!videoPath\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <div class=\"cont video_section_pop\" *ngIf=\"videoPath\">\r\n            <video controls id=\"pausevideo\">\r\n              <source *ngIf=\"videoPath\" [src]=\"videoPath\" type=\"video/mp4\" />\r\n              <source *ngIf=\"videoPath\" [src]=\"videoPath\" type=\"video/ogg\" />\r\n              <source *ngIf=\"videoPath\" [src]=\"videoPath\" type=\"video/webm\" />\r\n              Browser not supported\r\n            </video>\r\n          </div>\r\n\r\n          <div class=\"cont video_section_pop\" *ngIf=\"!videoPath\">\r\n            Video Not Found\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n\r\n  <div class=\"modal fade pupdated\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myLargeModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-lg\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Updated Data By Parent</h5>\r\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n\r\n          <div class=\"table-responsive\">\r\n            <table class=\"table\">\r\n              <thead class=\"thead-light\">\r\n                <tr>\r\n                  <th scope=\"col\">Column Name</th>\r\n                  <th scope=\"col\">Old Value</th>\r\n                  <th scope=\"col\">New Value</th>\r\n                  <th scope=\"col\" class=\"text-center\">Updated Date</th>\r\n                  <th scope=\"col\" class=\"text-center\">Updated For</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr *ngFor=\"let plog of parentUpdatedInfoList\">\r\n                  <td>{{plog.columnName}}</td>\r\n                  <td class=\"text-center\" *ngIf=\"plog.oldValue != ''\">{{plog.oldValue}}</td>\r\n                  <td class=\"text-center\" *ngIf=\"plog.oldValue == ''\">-</td>\r\n                  <td class=\"text-center\" *ngIf=\"plog.newValue != ''\">{{plog.newValue}}</td>\r\n                  <td class=\"text-center\" *ngIf=\"plog.newValue == ''\">-</td>\r\n                  <td class=\"text-center\">{{plog.valueUpdateDate | date}}</td>\r\n                  <td class=\"text-center\">{{plog.updatedFor}}</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <button type=\"button\" class=\"btn btn-secondary\" (click)=\"deleteParentUpdatedInfo(parentID)\">Close</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- last  -->\r\n\r\n\r\n\r\n  </div>\r\n\r\n</div>\r\n<ngx-spinner type=\"ball-atom\" size=\"medium\" color=\"#58A7FE\"></ngx-spinner>\r\n\r\n<app-confirm-box></app-confirm-box>"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-parent/agency-admin-parent.component.ts":
/*!*****************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-parent/agency-admin-parent.component.ts ***!
  \*****************************************************************************************************/
/*! exports provided: AgencyAdminParentComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AgencyAdminParentComponent", function() { return AgencyAdminParentComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var ngx_bootstrap__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ngx-bootstrap */ "./node_modules/ngx-bootstrap/esm5/ngx-bootstrap.js");
/* harmony import */ var src_app_layout_parent_shared_services_parent_api_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/layout/parent/shared/services/parent-api-service */ "./src/app/layout/parent/shared/services/parent-api-service.ts");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ngx-spinner */ "./node_modules/ngx-spinner/fesm5/ngx-spinner.js");
/* harmony import */ var src_app_shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/shared/services/error-handler/error-handler.service */ "./src/app/shared/services/error-handler/error-handler.service.ts");
/* harmony import */ var src_app_shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/shared/services/common/common.service */ "./src/app/shared/services/common/common.service.ts");
/* harmony import */ var src_app_shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/app/shared/services/notification-service/notification.service */ "./src/app/shared/services/notification-service/notification.service.ts");
/* harmony import */ var src_app_layout_parent_shared_constant__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/app/layout/parent/shared/constant */ "./src/app/layout/parent/shared/constant.ts");
/* harmony import */ var src_app_layout_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/app/layout/teacher/shared/constant */ "./src/app/layout/teacher/shared/constant.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var primeng_api__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! primeng/api */ "./node_modules/primeng/api.js");
/* harmony import */ var primeng_api__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(primeng_api__WEBPACK_IMPORTED_MODULE_11__);
/* harmony import */ var _shared_constatant__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../shared/constatant */ "./src/app/layout/agency-admin/components/shared/constatant.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};













var AgencyAdminParentComponent = /** @class */ (function () {
    function AgencyAdminParentComponent(apiService, error, spinner, notification, commonService, fb, route, confirmationService, toaster) {
        this.apiService = apiService;
        this.error = error;
        this.spinner = spinner;
        this.notification = notification;
        this.commonService = commonService;
        this.fb = fb;
        this.route = route;
        this.confirmationService = confirmationService;
        this.toaster = toaster;
        this.linkedChildList = [];
        this.parentList = [];
        this.today = new Date();
        this.flag = false;
        this.formData = new FormData();
        this.disableEmail = false;
        this.allowPickup = false;
        this.masterParentList = [];
        this.parentChildList = [];
        this.parentUpdatedInfoList = [];
        this.childList = [];
        this.emailPattern = /^([\w-\.]+\u0040([\w-]+\.)+[\w-]{2,4})?$/;
        this.isSecondparent = false;
        this.isGuardian = false;
        this.isSecondary = false;
        this.relationTypeList = [];
        this.showExtraFields = false;
        this.isParent = true;
        this.reasonNotToAllowbox = true;
        this.activationType = 'Activated';
        this.pageNo = 0;
        this.limit = 10;
        this.totalRecord = 0;
        this.loader = true;
        this.dpConfig = new ngx_bootstrap__WEBPACK_IMPORTED_MODULE_2__["BsDatepickerConfig"]();
        this.nameSearch = '';
        this.rejectedUserList = [];
        this.advanceAmount = 0;
        this.parentIdForAdavance = 0;
        this.videoPath = '';
        this.isSubscriptionActive = this.commonService.getSubscriptionStatus();
    }
    AgencyAdminParentComponent.prototype.ngOnInit = function () {
        this.spinner.show();
        this.dpConfig = Object.assign({}, { containerClass: 'theme-dark-blue' }, { showWeekNumbers: false });
        this.image = '';
        this.countryList = [];
        this.cityList = [];
        this.stateList = [];
        this.parentVM = {};
        this.createParentForm();
        this.getAllCountries();
        this.GetAgencyCountryStateID();
        this.getAllParentList();
        this.getRelationType();
        this.getMasterParentList();
        this.newEmailCrateForm();
        this.getSectionVideo();
    };
    AgencyAdminParentComponent.prototype.OpenInfoVideo = function (data) {
        $('#infovideo').modal('show');
    };
    AgencyAdminParentComponent.prototype.getSectionVideo = function () {
        var _this = this;
        var req = {
            'SectionID': 1
        };
        this.apiService.postData(src_app_layout_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_9__["TeacherAPIURLs"].GetVideoForSection, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.videoPath = res.body.filePath;
                console.log(_this.videoPath, 'bbbbbbbbbbbbbbb');
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminParentComponent.prototype.PauseInfoVideo = function () {
        var myVideo = document.getElementById('pausevideo');
        myVideo.pause();
        myVideo.currentTime = 0;
    };
    AgencyAdminParentComponent.prototype.newEmailCrateForm = function () {
        this.newEmailForm = this.fb.group({
            newemail: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].pattern(this.emailPattern)]]
        });
    };
    AgencyAdminParentComponent.prototype.getparentIdForEmailUpdate = function (data) {
        if (data) {
            this.id = data.id;
        }
    };
    // method to update email
    AgencyAdminParentComponent.prototype.upateEmail = function () {
        var _this = this;
        if (this.newEmailForm.valid) {
            this.loader = true;
            this.spinner.show();
            var req = {
                'AgencyID': this.commonService.getAgencyId(),
                'id': this.id,
                'EmailId': this.newEmailForm.controls.newemail.value.trim()
            };
            this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_12__["AgencyAPIURLs"].UpdateEmailForParent, req, null).subscribe(function (res) {
                if (res.body.statusCode === 200) {
                    $('.mailupdate').modal('hide');
                    _this.notification.success({ message: res.body.message, title: '' });
                    _this.getAllParentList();
                }
                else {
                    _this.spinner.hide();
                    _this.notification.warning({ message: res.body.message, title: '' });
                }
            }, function (err) {
                _this.spinner.hide();
                _this.error.commonError(err);
            });
        }
        else {
            this.spinner.hide();
            this.commonService.validateAllFields(this.newEmailForm);
        }
    };
    // Methode to change Quick Pin for User
    AgencyAdminParentComponent.prototype.changeQuickPin = function (value) {
        var _this = this;
        this.confirmationService.confirm({
            message: 'Do you want to change Quick Pin for this user?',
            accept: function () {
                _this.spinner.show();
                var req = {
                    'AgencyID': _this.commonService.getAgencyId(),
                    'id': value.id,
                };
                _this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_12__["AgencyAPIURLs"].ChangeQuickPinForParent, req, null).subscribe(function (res) {
                    if (res.body.statusCode === 200) {
                        _this.spinner.hide();
                        _this.notification.success({ message: res.body.message, title: '' });
                    }
                    else {
                        _this.spinner.hide();
                        _this.notification.warning({ message: res.body.message, title: '' });
                    }
                }, function (err) {
                    _this.spinner.hide();
                    _this.error.commonError(err);
                });
            }
        });
    };
    AgencyAdminParentComponent.prototype.clearEmailForm = function () {
        this.newEmailCrateForm();
    };
    AgencyAdminParentComponent.prototype.createParentForm = function () {
        this.profileForm = this.fb.group({
            firstname: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            lastname: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            email: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].pattern(this.emailPattern)]],
            mobile: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            // address: ['', Validators.required],
            address: [''],
            country: [this.agencyCountryID, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            city: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            state: [this.agencyStateID, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            zipcode: [''],
            // birthdate: ['', Validators.required],
            birthdate: [''],
            hiringdate: [''],
            grospay: [''],
            certification: [''],
            photo: [''],
            homephone: [''],
            gender: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            profession: [''],
            typeofparent: ['parent'],
            masterparentid: [''],
            associatedchildid: [''],
            relationid: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            notallowedreason: [''],
            allowpickup: [false],
            notallowpickup: [false],
            employername: [''],
            employernumber: [''],
            employeraddress: [''],
            joinclassroom: [false]
        });
        this.getStatesList();
        this.getCitiesList();
    };
    AgencyAdminParentComponent.prototype.editParentForm = function () {
        this.disableEmail = true;
        if (this.parentVM.IsAuthorizedToPickup === true) {
            this.allowPickup = false;
        }
        else {
            this.allowPickup = true;
        }
        this.profileForm = this.fb.group({
            firstname: [this.parentVM.FirstName, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            lastname: [this.parentVM.LastName, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            email: [this.parentVM.EmailId],
            mobile: [this.parentVM.Mobile, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            address: [this.parentVM.Address],
            country: [this.parentVM.CountryId, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            city: [this.parentVM.CityId, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            state: [this.parentVM.StateId, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            zipcode: [this.parentVM.PostalCode],
            birthdate: [this.parentVM.DateOfBirth],
            hiringdate: [this.parentVM.DateHired],
            grospay: [this.parentVM.GrossPayPerHour],
            certification: [this.parentVM.Certification],
            photo: [''],
            homephone: [this.parentVM.HomePhone],
            gender: [this.parentVM.GenderID, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            profession: [this.parentVM.Profession],
            typeofparent: [{ value: '', disabled: true }],
            masterparentid: [{ value: this.parentVM.addedByID, disabled: true }],
            associatedchildid: [this.childList],
            relationid: [this.parentVM.relationTypeId, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            notallowedreason: [this.parentVM.ReasonNotToAllow],
            allowpickup: [this.parentVM.IsAuthorizedToPickup],
            notallowpickup: this.allowPickup,
            joinclassroom: [this.parentVM.IsJoinClassroom],
            employername: [this.parentVM.employerName],
            employernumber: [this.parentVM.employerNumber],
            employeraddress: [this.parentVM.employerAddress]
        });
    };
    Object.defineProperty(AgencyAdminParentComponent.prototype, "f", {
        // convenience getter for easy access to form fields
        get: function () { return this.profileForm.controls; },
        enumerable: true,
        configurable: true
    });
    AgencyAdminParentComponent.prototype.getParentDetails = function (value) {
        var _this = this;
        this.addMode = false;
        this.spinner.show();
        var req = {
            'AgencyID': this.commonService.getAgencyId(),
            'classID': 0,
            'studentID': 0,
            'parentID': value.id,
            'studentName': 'string',
        };
        this.apiService.postData(src_app_layout_parent_shared_constant__WEBPACK_IMPORTED_MODULE_8__["ParentAPIURLs"].GetParentInformation, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                if (res.body.data !== null && res.body.data !== []) {
                    _this.date = (res.body.data.dateOfBirth).toString();
                    if (_this.date === '0001-01-01T00:00:00') {
                        _this.parentVM.DateOfBirth = null;
                    }
                    else {
                        _this.parentVM.DateOfBirth = new Date(res.body.data.dateOfBirth);
                    }
                    _this.parentVM.FirstName = res.body.data.firstName;
                    _this.parentVM.LastName = res.body.data.lastName;
                    _this.parentVM.EmailId = res.body.data.emailId;
                    _this.parentVM.Mobile = res.body.data.mobile;
                    _this.parentVM.Address = res.body.data.address;
                    _this.parentVM.CityId = res.body.data.cityId;
                    _this.parentVM.StateId = res.body.data.stateId;
                    _this.parentVM.CountryId = res.body.data.countryId;
                    _this.parentVM.PostalCode = res.body.data.postalCode;
                    // this.parentVM.DateOfBirth = new Date(res.body.data.dateOfBirth);
                    _this.parentVM.GenderID = res.body.data.genderID;
                    _this.id = res.body.data.id;
                    _this.parentVM.Profession = res.body.data.profession;
                    _this.parentVM.relationTypeId = res.body.data.relationTypeId;
                    _this.parentVM.addedByID = res.body.data.addedByID;
                    _this.parentVM.isParent = res.body.data.isParent;
                    _this.parentVM.IsAuthorizedToPickup = res.body.data.isAuthorizedToPickup;
                    _this.parentVM.ReasonNotToAllow = res.body.data.reasonNotToAllow;
                    _this.parentVM.employerName = res.body.data.employerName;
                    _this.parentVM.employerNumber = res.body.data.employerNumber;
                    _this.parentVM.employerAddress = res.body.data.employerAddress;
                    _this.parentVM.IsJoinClassroom = res.body.data.isJoinClassroom;
                    _this.childList = [];
                    if (res.body.data.associatedChild !== null && res.body.data.associatedChild !== []) {
                        res.body.data.associatedChild.forEach(function (element) {
                            _this.childList.push(element.studentID);
                        });
                    }
                    if (res.body.data.isSecondaryParent === true) {
                        _this.isSecondparent = true;
                        _this.isGuardian = false;
                        _this.isParent = false;
                        _this.showExtraFields = true;
                        _this.profileForm.controls['masterparentid'].setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required);
                        _this.profileForm.controls['masterparentid'].updateValueAndValidity();
                        _this.profileForm.controls['associatedchildid'].setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required);
                        _this.profileForm.controls['associatedchildid'].updateValueAndValidity();
                    }
                    else if (_this.parentVM.isParent === true) {
                        _this.isGuardian = false;
                        _this.isParent = true;
                        _this.isSecondparent = false;
                        _this.showExtraFields = false;
                        _this.profileForm.controls['masterparentid'].setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].nullValidator);
                        _this.profileForm.controls['masterparentid'].updateValueAndValidity();
                        _this.profileForm.controls['associatedchildid'].setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].nullValidator);
                        _this.profileForm.controls['associatedchildid'].updateValueAndValidity();
                    }
                    else {
                        _this.isGuardian = true;
                        _this.isParent = false;
                        _this.isSecondparent = false;
                        _this.showExtraFields = true;
                        _this.profileForm.controls['masterparentid'].setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required);
                        _this.profileForm.controls['masterparentid'].updateValueAndValidity();
                        _this.profileForm.controls['associatedchildid'].setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required);
                        _this.profileForm.controls['associatedchildid'].updateValueAndValidity();
                    }
                    if (res.body.data.isAuthorizedToPickup === true) {
                        _this.reasonNotToAllowbox = false;
                        _this.profileForm.controls['notallowedreason'].setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].nullValidator);
                        _this.profileForm.controls['notallowedreason'].updateValueAndValidity();
                    }
                    else {
                        _this.reasonNotToAllowbox = true;
                        _this.profileForm.controls['notallowedreason'].setValue('');
                        _this.profileForm.controls['notallowedreason'].setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required);
                        _this.profileForm.controls['notallowedreason'].updateValueAndValidity();
                    }
                    _this.parentVM.HomePhone = res.body.data.homePhone;
                    _this.image = res.body.data.imagePath;
                    _this.editParentForm();
                    _this.getAllCountries();
                    _this.getStatesList();
                    _this.getCitiesList();
                    _this.getAllStudentOfParentList(2);
                }
                _this.spinner.hide();
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminParentComponent.prototype.getParentUpdateInfo = function (value) {
        var _this = this;
        this.spinner.show();
        this.parentUpdatedInfoList = [];
        var req = {
            'AgencyID': this.commonService.getAgencyId(),
            'parentID': value.id
        };
        this.apiService.postData(src_app_layout_parent_shared_constant__WEBPACK_IMPORTED_MODULE_8__["ParentAPIURLs"].GetParentUpdatedInformation, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.parentUpdatedInfoList = res.body.data;
                if (_this.parentUpdatedInfoList.length > 0) {
                    _this.parentID = _this.parentUpdatedInfoList[0].parentID;
                }
                _this.spinner.hide();
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminParentComponent.prototype.deleteParentUpdatedInfo = function (id) {
        var _this = this;
        this.spinner.show();
        this.parentUpdatedInfoList = [];
        var req = {
            'AgencyID': this.commonService.getAgencyId(),
            'ParentID': id
        };
        this.apiService.postData(src_app_layout_parent_shared_constant__WEBPACK_IMPORTED_MODULE_8__["ParentAPIURLs"].DeleteParentUpdatedInformation, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                $('.pupdated').modal('hide');
                _this.parentID = 0;
                _this.spinner.hide();
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminParentComponent.prototype.getAllParentList = function () {
        var _this = this;
        this.loader = true;
        this.parentList = [];
        var req = {
            'AgencyID': this.commonService.getAgencyId(),
            'ActivationType': this.activationType,
            'limit': this.limit,
            'page': this.pageNo,
            'ParentName': this.nameSearch
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_12__["AgencyAPIURLs"].GetAllParentInformationForAgency, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.totalRecord = res.body.totalRows;
                _this.parentList = res.body.data;
                console.log(_this.parentList);
                _this.loader = false;
                _this.spinner.hide();
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminParentComponent.prototype.getAllStudentOfParentList = function (type) {
        var _this = this;
        this.spinner.show();
        this.parentChildList = [];
        var req = {
            'AgencyID': this.commonService.getAgencyId(),
            'ParentID': type === 1 ? this.profileForm.value.masterparentid : this.parentVM.addedByID
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_12__["AgencyAPIURLs"].GetAllStudentForParentDropdown, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.parentChildList = res.body.data;
                _this.spinner.hide();
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminParentComponent.prototype.getMasterParentList = function () {
        var _this = this;
        this.masterParentList = [];
        var req = {
            'AgencyID': this.commonService.getAgencyId(),
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_12__["AgencyAPIURLs"].GetMasterParentForDropdown, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.masterParentList = res.body.data;
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    // Method to delete/deactivate Parent
    AgencyAdminParentComponent.prototype.deleteParent = function (value) {
        var _this = this;
        this.confirmationService.confirm({
            message: 'Do you want to deactivate this user?',
            accept: function () {
                _this.spinner.show();
                var req = {
                    'AgencyID': _this.commonService.getAgencyId(),
                    'id': value.id,
                    'IsDeleted': true,
                    'DeletedDate': new Date(),
                    'DeletedBy': _this.commonService.getReleventUserId('userdetails')
                };
                _this.apiService.postData(src_app_layout_parent_shared_constant__WEBPACK_IMPORTED_MODULE_8__["ParentAPIURLs"].SaveParentInformation, req, null).subscribe(function (res) {
                    if (res.body.statusCode === 200) {
                        _this.deleteParentSuccess(value);
                    }
                    else {
                        _this.spinner.hide();
                        _this.error.unknownError();
                    }
                }, function (err) {
                    _this.spinner.hide();
                    _this.error.commonError(err);
                });
            }
        });
    };
    AgencyAdminParentComponent.prototype.deleteParentSuccess = function (data) {
        this.getAllParentList();
        this.notification.success({ message: 'This User has been deactivated', title: '' });
    };
    // Method to delete/deactivate Parent
    AgencyAdminParentComponent.prototype.activateParent = function (value) {
        var _this = this;
        this.confirmationService.confirm({
            message: 'Do you want to activate this user?',
            accept: function () {
                _this.spinner.show();
                var req = {
                    'AgencyID': _this.commonService.getAgencyId(),
                    'id': value.id,
                    'IsDeleted': false,
                    'UpdatedBy': _this.commonService.getReleventUserId('userdetails')
                };
                _this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_12__["AgencyAPIURLs"].ActivateParent, req, null).subscribe(function (res) {
                    if (res.body.statusCode === 200) {
                        _this.notification.success({ message: 'This user has been activated', title: '' });
                        _this.getAllParentList();
                    }
                    else {
                        _this.spinner.hide();
                        _this.error.unknownError();
                    }
                }, function (err) {
                    _this.spinner.hide();
                    _this.error.commonError(err);
                });
            }
        });
    };
    AgencyAdminParentComponent.prototype.getAllCountries = function () {
        var _this = this;
        this.countryList = [];
        var req = {
            'AgencyID': this.commonService.getAgencyId(),
        };
        this.apiService.postData(src_app_layout_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_9__["TeacherAPIURLs"].GetAllCountry, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.countryList = res.body.data;
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminParentComponent.prototype.getStatesList = function () {
        var _this = this;
        this.spinner.show();
        this.stateList = [];
        this.cityList = [];
        var req = {
            'AgencyID': this.commonService.getAgencyId(),
            'CountryId': this.profileForm.value.country
        };
        this.apiService.postData(src_app_layout_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_9__["TeacherAPIURLs"].GetAllStates, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.stateList = res.body.data;
                _this.spinner.hide();
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminParentComponent.prototype.getCitiesList = function () {
        var _this = this;
        this.spinner.show();
        this.cityList = [];
        var req = {
            'AgencyID': this.commonService.getAgencyId(),
            'StateId': this.profileForm.value.state
        };
        this.apiService.postData(src_app_layout_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_9__["TeacherAPIURLs"].GetAllCities, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.cityList = res.body.data;
                _this.spinner.hide();
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminParentComponent.prototype.GetAgencyCountryStateID = function () {
        var _this = this;
        this.spinner.show();
        var req = {
            'AgencyID': this.commonService.getAgencyId(),
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_12__["AgencyAPIURLs"].GetAgencyCountryStateID, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                console.log(res.body.data);
                _this.agencyCountryID = res.body.data.countryId;
                _this.agencyStateID = res.body.data.stateId;
                _this.spinner.hide();
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    // verify thta profile updating  with new photo or without photo
    AgencyAdminParentComponent.prototype.SaveParentDetails = function () {
        this.spinner.show();
        if (this.flag === true) {
            this.UploadImage();
            this.flag = false;
        }
        else {
            this.updateProfile();
        }
    };
    AgencyAdminParentComponent.prototype.updateProfile = function () {
        var _this = this;
        this.linkedChildList = [];
        if (this.profileForm.valid) {
            if (this.profileForm.value.relationid === 0) {
                this.spinner.hide();
                this.notification.warning({ message: 'Please select relation with student', title: '' });
            }
            else {
                this.spinner.show();
                this.parentVM.FirstName = this.profileForm.value.firstname;
                this.parentVM.LastName = this.profileForm.value.lastname;
                this.parentVM.EmailId = this.profileForm.value.email;
                this.parentVM.Mobile = this.profileForm.value.mobile;
                this.parentVM.Address = this.profileForm.value.address;
                this.parentVM.CityId = this.profileForm.value.city;
                this.parentVM.StateId = this.profileForm.value.state;
                this.parentVM.CountryId = this.profileForm.value.country;
                this.parentVM.PostalCode = this.profileForm.value.zipcode;
                // tslint:disable-next-line: max-line-length
                this.parentVM.DateOfBirth = this.profileForm.value.birthdate === '' || this.profileForm.value.birthdate === null ? new Date('0001-01-01T05:53:28') : this.profileForm.value.birthdate;
                this.parentVM.GenderID = this.profileForm.value.gender;
                this.parentVM.Profession = this.profileForm.value.profession;
                this.parentVM.relationTypeId = this.profileForm.value.relationid;
                this.parentVM.employerName = this.profileForm.value.employername;
                this.parentVM.employerNumber = this.profileForm.value.employernumber === '' ? 0 : this.profileForm.value.employernumber;
                this.parentVM.employerAddress = this.profileForm.value.employeraddress;
                this.parentVM.addedByID = this.profileForm.value.masterparentid === '' ? 0 : this.profileForm.value.masterparentid;
                if (this.isParent === true) {
                    this.parentVM.isParent = true;
                    this.parentVM.isGaurdian = false;
                    this.parentVM.isSecondaryParent = false;
                }
                else if (this.isGuardian === true) {
                    this.parentVM.isParent = false;
                    this.parentVM.isGaurdian = true;
                    this.parentVM.isSecondaryParent = false;
                }
                else {
                    this.parentVM.isParent = false;
                    this.parentVM.isGaurdian = false;
                    this.parentVM.isSecondaryParent = true;
                }
                if (this.id === 0) {
                    this.parentVM.createdBy = this.commonService.getReleventUserId('userdetails');
                }
                else {
                    this.parentVM.updatedBy = this.commonService.getReleventUserId('userdetails');
                }
                if (this.profileForm.value.associatedchildid.length !== 0) {
                    this.profileForm.value.associatedchildid.forEach(function (element) {
                        _this.linkedChildList.push({
                            'studentID': element,
                        });
                    });
                }
                this.parentVM.ReasonNotToAllow = this.profileForm.value.notallowedreason;
                /**Only guardian and second parent users has option for Is auth to pickup, parent always authorize to pickup  */
                if (this.isGuardian === true) {
                    this.parentVM.IsAuthorizedToPickup = this.profileForm.value.allowpickup;
                }
                else if (this.isSecondparent === true) {
                    if (this.profileForm.value.notallowpickup === true) {
                        this.parentVM.IsAuthorizedToPickup = false;
                    }
                    else {
                        this.parentVM.IsAuthorizedToPickup = true;
                    }
                }
                else {
                    this.parentVM.IsAuthorizedToPickup = true;
                }
                this.parentVM.HomePhone = this.profileForm.value.homephone;
                this.parentVM.ImagePath = this.image;
                this.parentVM.Id = this.id;
                this.image = this.profileimage;
                this.parentVM.AgencyID = this.commonService.getAgencyId();
                this.spinner.hide();
                this.parentVM.AssociatedChild = this.linkedChildList;
                this.parentVM.IsJoinClassroom = this.profileForm.value.joinclassroom;
                this.apiService.postData(src_app_layout_parent_shared_constant__WEBPACK_IMPORTED_MODULE_8__["ParentAPIURLs"].SaveParentInformation, this.parentVM, null).subscribe(function (res) {
                    if (res.body.statusCode === 200) {
                        _this.flag = false;
                        _this.notification.success({
                            message: _this.id === 0 ? 'New user created successfully!' : 'User information updated successfully!',
                            title: ''
                        });
                        _this.spinner.hide();
                        $('.addparent').modal('hide');
                        _this.getAllParentList();
                    }
                    else if (res.body.statusCode === 986) {
                        _this.spinner.hide();
                        _this.notification.warning({ message: ' User already exist !', title: '' });
                    }
                    else if (res.body.statusCode === 205) {
                        _this.spinner.hide();
                        _this.notification.warning({ message: 'Please enter valid name', title: '' });
                    }
                    else {
                        _this.spinner.hide();
                        _this.error.unknownError();
                    }
                }, function (err) {
                    _this.spinner.hide();
                    _this.error.commonError(err);
                });
            }
        }
        else {
            this.spinner.hide();
            this.commonService.validateAllFields(this.profileForm);
        }
    };
    AgencyAdminParentComponent.prototype.allowOnlyNumber = function (event) {
        this.commonService.allowOnlyNumber(event);
    };
    AgencyAdminParentComponent.prototype.clearStateCity = function () {
        this.profileForm.controls['state'].setValue('');
        this.profileForm.controls['city'].setValue('');
    };
    AgencyAdminParentComponent.prototype.clearCity = function () {
        this.profileForm.controls['city'].setValue('');
    };
    AgencyAdminParentComponent.prototype.processFile = function (event) {
        var _this = this;
        this.formData = new FormData();
        var self = this;
        if (event.target.files && event.target.files[0]) {
            if (event.target.files[0].type !== 'image/png' && event.target.files[0].type !== 'image/jpeg' &&
                event.target.files[0].type !== 'image/jpg') {
                self.fileData = null;
                self.profileimage = '';
                return false;
            }
            var reader_1 = new FileReader();
            this.formData.append('fileData', event.target.files[0], event.target.files[0].name);
            self.fileData = this.formData;
            console.log(this.fileData, 'fffffffffffffffffff');
            reader_1.readAsDataURL(event.target.files[0]); // read file as data url
            setTimeout(function () {
                _this.image = reader_1.result;
            }, 100);
            this.flag = true;
        }
    };
    AgencyAdminParentComponent.prototype.UploadImage = function () {
        var _this = this;
        this.apiService.uploadImage(src_app_layout_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_9__["TeacherAPIURLs"].UploadImage, this.fileData, null).subscribe(function (res) {
            if (res.status === 200) {
                _this.image = res.body.data;
                _this.updateProfile();
            }
        }, function (err) {
            _this.error.commonError(err);
        });
    };
    AgencyAdminParentComponent.prototype.cleareAllForm = function () {
        this.showExtraFields = false;
        this.isParent = true;
        this.isGuardian = false;
        this.isSecondparent = false;
        this.addMode = true;
        this.id = 0;
        this.parentVM = {};
        this.disableEmail = false;
        this.image = '';
        this.createParentForm();
    };
    AgencyAdminParentComponent.prototype.getTypeofparent = function (event) {
        if (event === 'secondparent') {
            this.profileForm.controls['masterparentid'].setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required);
            this.profileForm.controls['associatedchildid'].setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required);
            this.profileForm.controls['masterparentid'].updateValueAndValidity();
            this.profileForm.controls['associatedchildid'].updateValueAndValidity();
            this.profileForm.controls['notallowedreason'].setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].nullValidator);
            this.profileForm.controls['notallowedreason'].updateValueAndValidity();
            this.isSecondparent = true;
            this.isGuardian = false;
            this.isParent = false;
            this.showExtraFields = true;
            this.reasonNotToAllowbox = false;
        }
        else if (event === 'parent') {
            this.isSecondparent = false;
            this.isGuardian = false;
            this.isParent = true;
            this.showExtraFields = false;
            this.reasonNotToAllowbox = false;
            this.profileForm.controls['notallowedreason'].setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].nullValidator);
            this.profileForm.controls['notallowedreason'].updateValueAndValidity();
            this.profileForm.controls['masterparentid'].setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].nullValidator);
            this.profileForm.controls['associatedchildid'].setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].nullValidator);
            this.profileForm.controls['masterparentid'].updateValueAndValidity();
            this.profileForm.controls['associatedchildid'].updateValueAndValidity();
        }
        else {
            this.isGuardian = true;
            this.isSecondparent = false;
            this.isParent = false;
            this.showExtraFields = true;
            this.profileForm.controls['masterparentid'].setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required);
            this.profileForm.controls['masterparentid'].updateValueAndValidity();
            this.profileForm.controls['associatedchildid'].setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required);
            this.profileForm.controls['associatedchildid'].updateValueAndValidity();
            this.profileForm.controls['notallowedreason'].setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required);
            this.profileForm.controls['notallowedreason'].updateValueAndValidity();
            this.reasonNotToAllowbox = true;
        }
    };
    AgencyAdminParentComponent.prototype.markAsAllowToPickup = function () {
        if (this.profileForm.value.allowpickup === true) {
            this.reasonNotToAllowbox = false;
            this.profileForm.controls['notallowedreason'].setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].nullValidator);
            this.profileForm.controls['notallowedreason'].updateValueAndValidity();
        }
        else {
            this.reasonNotToAllowbox = true;
            this.profileForm.controls['notallowedreason'].setValue('');
            this.profileForm.controls['notallowedreason'].setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required);
            this.profileForm.controls['notallowedreason'].updateValueAndValidity();
        }
    };
    AgencyAdminParentComponent.prototype.markAsNotAllowToPickup = function () {
        if (this.profileForm.value.notallowpickup === true) {
            this.reasonNotToAllowbox = true;
            this.profileForm.controls['notallowedreason'].setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required);
            this.profileForm.controls['notallowedreason'].updateValueAndValidity();
        }
        else {
            this.reasonNotToAllowbox = false;
            this.profileForm.controls['notallowedreason'].setValue('');
            this.profileForm.controls['notallowedreason'].setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].nullValidator);
            this.profileForm.controls['notallowedreason'].updateValueAndValidity();
        }
    };
    AgencyAdminParentComponent.prototype.getRelationType = function () {
        var _this = this;
        this.relationTypeList = [];
        var data = {
            'agencyID': this.commonService.getAgencyId(),
        };
        this.apiService.postData(src_app_layout_parent_shared_constant__WEBPACK_IMPORTED_MODULE_8__["ParentAPIURLs"].GetRelationType, data, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.relationTypeList = res.body.data;
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminParentComponent.prototype.paginate = function (event) {
        console.log(event);
        this.pageNo = event.page;
        this.getAllParentList();
    };
    AgencyAdminParentComponent.prototype.processCSVFile = function (event) {
        var _this = this;
        this.spinner.show();
        this.formData = new FormData();
        this.agencyId = this.commonService.getAgencyId();
        if (event.target.files && event.target.files[0] && event.target.files[0].name.includes('.csv')) {
            this.formData.append('FileName', event.target.files[0], event.target.files[0].name);
            this.formData.append('AgencyId', this.commonService.getAgencyId().toString());
            this.formData.append('CreatedBy', this.commonService.getLoggedInUserId().toString());
            this.apiService.uploadImage(_shared_constatant__WEBPACK_IMPORTED_MODULE_12__["AgencyAPIURLs"].UploadParentUserWithFile, this.formData, null).subscribe(function (res) {
                if (res.body.statusCode === 200) {
                    _this.spinner.hide();
                    event.target.value = '';
                    _this.getAllParentList();
                    _this.notification.success({ message: 'File uploaded successfully', title: 'Success' });
                }
                else if (res.body.statusCode === 987) {
                    _this.spinner.hide();
                    _this.getAllParentList();
                    _this.rejectedUserList = res.body.data;
                    $('.rejectedUsr').modal('show');
                }
                else {
                    _this.spinner.hide();
                    _this.error.unknownError();
                }
            }, function (err) {
                _this.spinner.hide();
                _this.error.commonError(err);
                _this.toaster.error({ message: 'Something went wrong', title: 'Error' });
            });
        }
        else {
            this.spinner.hide();
            this.toaster.warning({ message: 'Unsupported file type', title: 'Warning' });
        }
    };
    AgencyAdminParentComponent.prototype.saveAdvancePay = function () {
        var _this = this;
        this.spinner.show();
        if (this.advanceAmount > 0) {
            var data = {
                'agencyID': this.commonService.getAgencyId(),
                'ParentId': this.parentIdForAdavance,
                'CreditAdvanceAmount': this.advanceAmount
            };
            this.apiService.postData(src_app_layout_parent_shared_constant__WEBPACK_IMPORTED_MODULE_8__["ParentAPIURLs"].SaveAdvanceFeePaymentDetails, data, null).subscribe(function (res) {
                if (res.body.statusCode === 200) {
                    $('.advancepay').modal('hide');
                    _this.getAllParentList();
                }
                else {
                    _this.spinner.hide();
                    _this.error.unknownError();
                }
            }, function (err) {
                _this.spinner.hide();
                _this.error.commonError(err);
            });
        }
        else {
            this.spinner.hide();
            this.notification.warning({ message: 'Amount should be grater than zero', title: '' });
        }
    };
    AgencyAdminParentComponent.prototype.parentInfoForAdavance = function (value) {
        this.advanceAmount = 0;
        this.parentIdForAdavance = value.id;
    };
    AgencyAdminParentComponent.prototype.keyDownFunction = function (event) {
        if (event.keyCode === 13) {
            this.getAllParentList();
        }
    };
    AgencyAdminParentComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-agency-admin-parent',
            template: __webpack_require__(/*! ./agency-admin-parent.component.html */ "./src/app/layout/agency-admin/components/agency-admin-parent/agency-admin-parent.component.html"),
            styles: [__webpack_require__(/*! ./agency-admin-parent.component.css */ "./src/app/layout/agency-admin/components/agency-admin-parent/agency-admin-parent.component.css")]
        }),
        __metadata("design:paramtypes", [src_app_layout_parent_shared_services_parent_api_service__WEBPACK_IMPORTED_MODULE_3__["ParentApiService"], src_app_shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_5__["ErrorHandlerService"],
            ngx_spinner__WEBPACK_IMPORTED_MODULE_4__["NgxSpinnerService"], src_app_shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_7__["NotificationService"],
            src_app_shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_6__["CommonService"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormBuilder"], _angular_router__WEBPACK_IMPORTED_MODULE_10__["ActivatedRoute"],
            primeng_api__WEBPACK_IMPORTED_MODULE_11__["ConfirmationService"], src_app_shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_7__["NotificationService"]])
    ], AgencyAdminParentComponent);
    return AgencyAdminParentComponent;
}());



/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-payment-ledger/agency-admin-payment-ledger.component.css":
/*!**********************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-payment-ledger/agency-admin-payment-ledger.component.css ***!
  \**********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".btndownload{\r\n    background: #57a6d4;\r\n    color: #Fff;\r\n    font-size: 12px;\r\n    border-radius: 30px;\r\n    margin: 0 auto;\r\n    text-align: center;\r\n    padding: 5px 20px;\r\n    /* margin-left: 925px; */\r\n    cursor:pointer;\r\n}\r\n.btninvoice{\r\n    background: #57a6d4;\r\n    color: #Fff;\r\n    font-size: 12px;\r\n    border-radius: 30px;\r\n    margin: 0 auto;\r\n    text-align: center;\r\n    padding: 5px 20px;\r\n    /* margin-left: 925px; */\r\n    cursor:pointer;\r\n}\r\n.btninline{\r\n    display:inline-block;\r\n    margin-left:828px;\r\n}\r\n/* Added by Aniket 02 April 2019 */\r\n.parenttype li {\r\n    float: left;\r\n    }\r\n.closepos{  position: absolute;  right: 170px;}\r\n.btn-send {\r\n        background: #58A7FE;\r\n        padding: 5px 20px;\r\n        color: #fff;\r\n        font-size: 15px !important;\r\n        border-radius: 30px;\r\n    }\r\n@media (max-width:767px){\r\n        .closepos {\r\n            position: absolute;\r\n            right: 40px;\r\n        }\r\n    }\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L2FnZW5jeS1hZG1pbi9jb21wb25lbnRzL2FnZW5jeS1hZG1pbi1wYXltZW50LWxlZGdlci9hZ2VuY3ktYWRtaW4tcGF5bWVudC1sZWRnZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLG1CQUFtQjtJQUNuQixXQUFXO0lBQ1gsZUFBZTtJQUNmLG1CQUFtQjtJQUNuQixjQUFjO0lBQ2Qsa0JBQWtCO0lBQ2xCLGlCQUFpQjtJQUNqQix3QkFBd0I7SUFDeEIsY0FBYztBQUNsQjtBQUNBO0lBQ0ksbUJBQW1CO0lBQ25CLFdBQVc7SUFDWCxlQUFlO0lBQ2YsbUJBQW1CO0lBQ25CLGNBQWM7SUFDZCxrQkFBa0I7SUFDbEIsaUJBQWlCO0lBQ2pCLHdCQUF3QjtJQUN4QixjQUFjO0FBQ2xCO0FBRUE7SUFDSSxvQkFBb0I7SUFDcEIsaUJBQWlCO0FBQ3JCO0FBRUEsa0NBQWtDO0FBQ2xDO0lBQ0ksV0FBVztJQUNYO0FBQ0EsWUFBWSxrQkFBa0IsR0FBRyxZQUFZLENBQUM7QUFFOUM7UUFDSSxtQkFBbUI7UUFDbkIsaUJBQWlCO1FBQ2pCLFdBQVc7UUFDWCwwQkFBMEI7UUFDMUIsbUJBQW1CO0lBQ3ZCO0FBRUE7UUFDSTtZQUNJLGtCQUFrQjtZQUNsQixXQUFXO1FBQ2Y7SUFDSiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9hZ2VuY3ktYWRtaW4vY29tcG9uZW50cy9hZ2VuY3ktYWRtaW4tcGF5bWVudC1sZWRnZXIvYWdlbmN5LWFkbWluLXBheW1lbnQtbGVkZ2VyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYnRuZG93bmxvYWR7XHJcbiAgICBiYWNrZ3JvdW5kOiAjNTdhNmQ0O1xyXG4gICAgY29sb3I6ICNGZmY7XHJcbiAgICBmb250LXNpemU6IDEycHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiAzMHB4O1xyXG4gICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBwYWRkaW5nOiA1cHggMjBweDtcclxuICAgIC8qIG1hcmdpbi1sZWZ0OiA5MjVweDsgKi9cclxuICAgIGN1cnNvcjpwb2ludGVyO1xyXG59XHJcbi5idG5pbnZvaWNle1xyXG4gICAgYmFja2dyb3VuZDogIzU3YTZkNDtcclxuICAgIGNvbG9yOiAjRmZmO1xyXG4gICAgZm9udC1zaXplOiAxMnB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogMzBweDtcclxuICAgIG1hcmdpbjogMCBhdXRvO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgcGFkZGluZzogNXB4IDIwcHg7XHJcbiAgICAvKiBtYXJnaW4tbGVmdDogOTI1cHg7ICovXHJcbiAgICBjdXJzb3I6cG9pbnRlcjtcclxufVxyXG5cclxuLmJ0bmlubGluZXtcclxuICAgIGRpc3BsYXk6aW5saW5lLWJsb2NrO1xyXG4gICAgbWFyZ2luLWxlZnQ6ODI4cHg7XHJcbn1cclxuXHJcbi8qIEFkZGVkIGJ5IEFuaWtldCAwMiBBcHJpbCAyMDE5ICovXHJcbi5wYXJlbnR0eXBlIGxpIHtcclxuICAgIGZsb2F0OiBsZWZ0O1xyXG4gICAgfVxyXG4gICAgLmNsb3NlcG9zeyAgcG9zaXRpb246IGFic29sdXRlOyAgcmlnaHQ6IDE3MHB4O31cclxuICAgIFxyXG4gICAgLmJ0bi1zZW5kIHtcclxuICAgICAgICBiYWNrZ3JvdW5kOiAjNThBN0ZFO1xyXG4gICAgICAgIHBhZGRpbmc6IDVweCAyMHB4O1xyXG4gICAgICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMTVweCAhaW1wb3J0YW50O1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDMwcHg7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOjc2N3B4KXtcclxuICAgICAgICAuY2xvc2Vwb3Mge1xyXG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgIHJpZ2h0OiA0MHB4O1xyXG4gICAgICAgIH1cclxuICAgIH0iXX0= */"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-payment-ledger/agency-admin-payment-ledger.component.html":
/*!***********************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-payment-ledger/agency-admin-payment-ledger.component.html ***!
  \***********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"wrapper\">\r\n  <div class=\"container-fluid\">\r\n\r\n    <div class=\"pagetitle\">\r\n      <div>\r\n        <h2>Payment\r\n          <span>/ Payment Ledger </span>\r\n        </h2>\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\" class=\"btn btn-red\" (click)=\"cleareAllForm()\" data-toggle=\"modal\"\r\n          data-target=\".postLedger\">Post Ledger Item </button>\r\n      </div>\r\n    </div>\r\n    <div class=\"pagetitle\">\r\n      <div>\r\n        <h4>Family Account: {{lastName}}</h4>\r\n        <h4>Sponsor : {{parentName}}</h4>\r\n\r\n      </div>\r\n      <div class=\"closepos\" style=\"margin-right: 10px;\">\r\n        <button type=\"submit\" class=\"btn btn-send \" title=\"Download Ledger Report\"\r\n          (click)=\"pdfReportForPaymentLedger()\">Download</button>\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\" class=\"btn btn-send \" title=\"Send Invoice\" (click)=\"SendInvoiceMail()\">Send\r\n          Invoice</button>\r\n      </div>\r\n\r\n      <!-- <input type=\"button\" class=\"btninvoice\" title=\"Send Invoice\" value=\"Send Invoice\">\r\n      <input type=\"button\"  class=\"btndownload\" title=\"Download Payment Ledger\"  value=\"Download\">\r\n      <button class=\"btndownload\" title=\"Download report\">Download</button> -->\r\n\r\n    </div>\r\n\r\n    <div class=\"subhead d-flex justify-content-between mt-20\">\r\n      <div>\r\n        <h3>Payment</h3>\r\n      </div>\r\n    </div>\r\n    <div class=\"card cardfilter\">\r\n\r\n      <div class=\"studentlist\">\r\n        <div class=\"tab-content\" id=\"pills-tabContent\">\r\n          <div class=\"tab-pane fade show active\" id=\"pills-appstudent\" role=\"tabpanel\" aria-labelledby=\"appStudent\">\r\n\r\n            <div class=\"innertable studentListSearch\">\r\n              <div class=\"table-responsive\">\r\n                <table class=\"table \">\r\n                  <thead class=\"thead-light\">\r\n                    <tr>\r\n                      <th class=\"text-center\" scope=\"col\">Ledger</th>\r\n                      <th class=\"text-center\" scope=\"col\">Posting Date</th>\r\n                      <th class=\"text-center\" scope=\"col\">Check #</th>\r\n                      <th class=\"text-center\" scope=\"col\">Description - Comment</th>\r\n                      <th class=\"text-center\" scope=\"col\">Billing Period</th>\r\n                      <th class=\"text-center\" scope=\"col\">Child Name</th>\r\n                      <th class=\"text-center\" scope=\"col\">Charges</th>\r\n                      <th class=\"text-center\" scope=\"col\">Credit</th>\r\n                      <th class=\"text-center\" scope=\"col\">Balance</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr *ngFor=\"let ledger of studentReportList\">\r\n                      <td class=\"text-center\">Sponsor</td>\r\n                      <td class=\"text-center\" *ngIf=\"ledger.invoicesDate != null\">{{ledger.invoicesDate| date}}</td>\r\n                      <td class=\"text-center\" *ngIf=\"ledger.invoicesDate == null\">{{ledger.paymentsDate| date}}</td>\r\n\r\n                      <td class=\"text-center\" *ngIf=\"ledger.cardNo != 0\">{{ledger.cardNo}}</td>\r\n                      <td class=\"text-center\" *ngIf=\"ledger.chequeNo != 0\">{{ledger.chequeNo}}</td>\r\n                      <td class=\"text-center\" *ngIf=\"ledger.chequeNo == 0 && ledger.cardNo == 0\">-</td>\r\n\r\n                      <!-- <td class=\"text-center\">{{ledger.description}} <br> {{ledger.coment}}</td> -->\r\n\r\n                      <td class=\"text-center\" *ngIf=\"ledger.description == null && ledger.coment == null\">-</td>\r\n                      <td class=\"text-center\" *ngIf=\"ledger.description != null && ledger.coment == null\">\r\n                        {{ledger.description}}</td>\r\n                      <td class=\"text-center\" *ngIf=\"ledger.description == null && ledger.coment != null\">\r\n                        {{ledger.coment}}</td>\r\n                      <td class=\"text-center\" *ngIf=\"ledger.description != null && ledger.coment != null\">\r\n                        {{ledger.description}}\r\n                        <br> {{ledger.coment}}\r\n                      </td>\r\n\r\n                      <td class=\"text-center\" *ngIf=\"ledger.invoicesFromDate != null\">{{ledger.invoicesFromDate| date}}\r\n                        <br> {{ledger.invoicesToDate| date}}</td>\r\n                      <td class=\"text-center\" *ngIf=\"ledger.invoicesFromDate == null\">-</td>\r\n                      <td class=\"text-center\">{{ledger.studentName}}</td>\r\n                      <td class=\"text-center\" *ngIf=\"ledger.creditAmount != '0'\">$ {{ledger.creditAmount}}</td>\r\n                      <td class=\"text-center\" *ngIf=\"ledger.creditAmount == '0'\">-</td>\r\n                      <td class=\"text-center\" *ngIf=\"ledger.debitAmount != '0'\">$ {{ledger.debitAmount}}</td>\r\n                      <td class=\"text-center\" *ngIf=\"ledger.debitAmount == '0'\">-</td>\r\n                      <td class=\"text-center\">$ {{ledger.balanceAmount}}</td>\r\n                    </tr>\r\n                    <tr *ngIf=\"(pageNo+1) == totalPage\">\r\n                      <td></td>\r\n                      <td></td>\r\n                      <td></td>\r\n                      <td></td>\r\n                      <td></td>\r\n                      <td class=\"text-center\"><b>Today's Bal.</b></td>\r\n                      <td class=\"text-center\"><b>$ {{this.totalBalance}}</b></td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n                <div class=\"text-center\">\r\n                  <span *ngIf=\"studentReportList.length == 0 && !loader\" class=\"text-center\">No result found</span>\r\n                </div>\r\n              </div>\r\n              <!-- <p-paginator [alwaysShow]=\"false\" [rows]=\"limit\" [first] = \"totalRecord\" [totalRecords]=\"totalRecord\" [page]=\"totalPage\"\r\n                (onPageChange)=\"paginate($event,1)\"></p-paginator> -->\r\n\r\n              <!-- <jw-pagination [items]=\"totalRecord\" [initialPage]=\"totalPage\" (changePage)=\"onChangePage($event)\"></jw-pagination> -->\r\n              <!-- <nz-pagination  [(nzPageIndex)]=\"totalPage\" [nzPageSize]=\"limit\" (nzPageIndexChange)=\"paginate($event,1)\" \r\n      [nzTotal]=\"totalRecord\" ></nz-pagination> -->\r\n              <!-- <ngb-pagination [collectionSize]=\"totalRecord\" [pageSize]=\"limit\" [(page)]=\"page\"  (pageChange)=\"loadPage($event)\"></ngb-pagination> -->\r\n              <!-- <pagination-controls (pageChange)=\"paginate($event,1)\"></pagination-controls> -->\r\n\r\n              <p-paginator [alwaysShow]=\"false\" [rows]=\"limit\" [first]=\"totalRecord\" [totalRecords]=\"totalRecord\"\r\n                (onPageChange)=\"paginate($event)\">\r\n              </p-paginator>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"modal fade postLedger\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myLargeModalLabel\"\r\n      aria-hidden=\"true\">\r\n      <div class=\"modal-dialog modal-lg\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Post Ledger Item</h5>\r\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <form [formGroup]=\"ledgerItemForm\">\r\n              <div class=\"row \">\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Ledger</label>\r\n                    <input type=\"text \" disabled=\"true\" formControlName=\"ledger\" class=\"form-control\" id=\"\"\r\n                      aria-describedby=\"\" placeholder=\"Enter Ledger\">\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Posting Date*</label>\r\n                    <input type=\"text\" container=\"\" placeholder=\"Select posting date\" formControlName=\"postingdate\"\r\n                      showWeekNumbers=\"false\" [minDate]=\"today\" class=\"form-control\" [bsConfig]=\"dpConfig\" bsDatepicker>\r\n                    <div *ngIf=\"l.postingdate.invalid && (l.postingdate.dirty || l.postingdate.touched)\"\r\n                      class=\"text-left errormsg\">\r\n                      <span *ngIf=\"l.postingdate.errors.required\">\r\n                        <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\">Please select posting date</span>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"row\">\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Child*</label>\r\n                    <select class=\"form-control\" placeholder=\"Child\" formControlName=\"child\"\r\n                      id=\"exampleFormControlSelect1\" (change)=\"getClass($event.target.value);\">\r\n                      <option value=\"\">Select Child</option>\r\n                      <option *ngFor=\"let parentChild of parentChildList\" [value]=\"parentChild.value\">\r\n                        {{parentChild.label}}\r\n                    </select>\r\n                    <div *ngIf=\"l.child.invalid && (l.child.dirty || l.child.touched)\" class=\"text-left errormsg\">\r\n                      <span *ngIf=\"l.child.errors.required\">\r\n                        <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select child</span>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Transaction Type*</label>\r\n                    <select class=\"form-control\" placeholder=\"Transaction type\" formControlName=\"transactiontype\"\r\n                      id=\"exampleFormControlSelect1\"\r\n                      (change)=\"getDescriptionList($event.target.value); enableCheckTab($event.target.value);\">\r\n                      <option value=\"\">Select Transaction Type</option>\r\n                      <option value=\"1\">Tuition Charge</option>\r\n                      <option value=\"2\">Other Charge</option>\r\n                      <option value=\"3\">Credit</option>\r\n                      <option value=\"4\">Payment</option>\r\n                    </select>\r\n                    <div *ngIf=\"l.transactiontype.invalid && (l.transactiontype.dirty || l.transactiontype.touched)\"\r\n                      class=\"text-left errormsg\">\r\n                      <span *ngIf=\"l.transactiontype.errors.required\">\r\n                        <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select transaction type</span>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n              </div>\r\n\r\n              <div class=\"row\">\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Description*</label>\r\n                    <select class=\"form-control\" placeholder=\"Description\" formControlName=\"description\"\r\n                      id=\"exampleFormControlSelect1\"\r\n                      (change)=\"getAmount($event.target.value); enableNoteTab($event.target.value);\">\r\n                      <option value=\"\">Select Description</option>\r\n                      <option *ngFor=\"let description of descriptionList\" [value]=\"description.value\">\r\n                        {{description.name}}\r\n                    </select>\r\n                    <div *ngIf=\"l.description.invalid && (l.description.dirty || l.description.touched)\"\r\n                      class=\"text-left errormsg\">\r\n                      <span *ngIf=\"l.description.errors.required\">\r\n                        <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select description</span>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Check # <small>(Max 15 Chars)</small></label>\r\n                    <input type=\"text \" class=\"form-control\" formControlName=\"check\" id=\"\" aria-describedby=\"\"\r\n                      placeholder=\"Enter Check Number\">\r\n                  </div>\r\n                </div>\r\n\r\n\r\n              </div>\r\n\r\n              <div class=\"row\">\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Note <small>(Max 50 Chars)</small></label>\r\n                    <input type=\"text \" class=\"form-control\" formControlName=\"notes\" id=\"\" aria-describedby=\"\"\r\n                      placeholder=\"Enter Notes\">\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Amount*</label>\r\n                    <input type=\"text \" (keypress)=\"commonService.allowOnlyNumber($event)\" class=\"form-control\"\r\n                      formControlName=\"amount\" id=\"\" aria-describedby=\"\" placeholder=\"Enter amount\">\r\n                    <div *ngIf=\"l.amount.invalid && (l.amount.dirty || l.amount.touched)\" class=\"text-left errormsg\">\r\n                      <span *ngIf=\"l.amount.errors.required\">\r\n                        <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please enter amount</span>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n              </div>\r\n\r\n              <div class=\"row\">\r\n                <div class=\"col-lg-12\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Comments <small>(Max 100 Chars)</small></label>\r\n                    <input type=\"text \" class=\"form-control\" formControlName=\"comments\" id=\"\" aria-describedby=\"\"\r\n                      placeholder=\"Enter comments\">\r\n                  </div>\r\n                </div>\r\n\r\n              </div>\r\n\r\n            </form>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n            <button type=\"button\" *ngIf=\"isSubscriptionActive\" class=\"btn btn-primary\"\r\n              (click)=\"verifyledgerItemForm()\">Save\r\n              Changes</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n\r\n\r\n<ngx-spinner type=\"ball-atom\" size=\"medium\" color=\"#58A7FE\"></ngx-spinner>"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-payment-ledger/agency-admin-payment-ledger.component.ts":
/*!*********************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-payment-ledger/agency-admin-payment-ledger.component.ts ***!
  \*********************************************************************************************************************/
/*! exports provided: AgencyAdminPaymentLedgerComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AgencyAdminPaymentLedgerComponent", function() { return AgencyAdminPaymentLedgerComponent; });
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ngx-spinner */ "./node_modules/ngx-spinner/fesm5/ngx-spinner.js");
/* harmony import */ var _shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../shared/services/error-handler/error-handler.service */ "./src/app/shared/services/error-handler/error-handler.service.ts");
/* harmony import */ var _shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../shared/services/common/common.service */ "./src/app/shared/services/common/common.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var primeng_api__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! primeng/api */ "./node_modules/primeng/api.js");
/* harmony import */ var primeng_api__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(primeng_api__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../shared/services/notification-service/notification.service */ "./src/app/shared/services/notification-service/notification.service.ts");
/* harmony import */ var _shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../shared/services/agency-api-service/agency-api.service */ "./src/app/layout/agency-admin/components/shared/services/agency-api-service/agency-api.service.ts");
/* harmony import */ var _shared_constatant__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../shared/constatant */ "./src/app/layout/agency-admin/components/shared/constatant.ts");
/* harmony import */ var ngx_bootstrap__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ngx-bootstrap */ "./node_modules/ngx-bootstrap/esm5/ngx-bootstrap.js");
/* harmony import */ var src_environments_environment__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! src/environments/environment */ "./src/environments/environment.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};












var AgencyAdminPaymentLedgerComponent = /** @class */ (function () {
    function AgencyAdminPaymentLedgerComponent(apiService, error, spinner, notification, commonService, fb, route, confirmationService) {
        this.apiService = apiService;
        this.error = error;
        this.spinner = spinner;
        this.notification = notification;
        this.commonService = commonService;
        this.fb = fb;
        this.route = route;
        this.confirmationService = confirmationService;
        this.id = 0;
        this.parentId = 0;
        this.pageIndex = 1;
        this.reqParentId = 0;
        this.studentName = '';
        this.loader = true;
        this.searchByStudentName = '';
        this.studentReportList = [];
        this.pageNo = 0;
        this.limit = 10;
        this.totalRecord = 0;
        this.totalBalance = 0;
        this.totalPage = 0;
        this.myDate = new Date();
        this.descriptionList = [];
        this.parentChildList = [];
        this.ledgerVM = {};
        this.dpConfig = new ngx_bootstrap__WEBPACK_IMPORTED_MODULE_10__["BsDatepickerConfig"]();
        this.isSubscriptionActive = this.commonService.getSubscriptionStatus();
    }
    AgencyAdminPaymentLedgerComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.route.params.subscribe(function (params) {
            _this.reqParentId = params['parentid'];
        });
        //this.GetStudentLedger();
        this.GetLedgerFirstTime();
        this.createLedgerItemForm();
        //this.getAllClassList();
        this.getAllStudentOfParentList();
        this.dpConfig = Object.assign({}, { containerClass: 'theme-dark-blue' }, { showWeekNumbers: false });
    };
    AgencyAdminPaymentLedgerComponent.prototype.GetStudentLedger = function () {
        var _this = this;
        this.loader = true;
        this.studentReportList = [];
        this.spinner.show();
        var data = {
            'agencyID': this.commonService.getAgencyId(),
            'studentName': this.searchByStudentName,
            'parentID': this.reqParentId,
            'page': this.pageNo,
            'limit': this.limit,
            'fromDate': this.fromDate ? this.fromDate : this.blankDate,
            'toDate': this.toDate ? this.toDate : this.blankDate
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_9__["AgencyAPIURLs"].GetStudentLedger, data, null).subscribe(function (res) {
            _this.totalRecord = res.body.totalRows;
            _this.totalBalance = res.body.totalBalanceAmount;
            if (res.body.statusCode === 200) {
                _this.spinner.hide();
                _this.studentReportList = res.body.data;
                _this.parentName = res.body.parentName;
                _this.lastName = res.body.lastName;
                if (_this.totalRecord % _this.limit === 0) {
                    _this.totalPage = _this.totalRecord / _this.limit;
                    _this.totalRecord = _this.totalRecord - 1;
                }
                else {
                    _this.totalPage = Math.ceil(_this.totalRecord / _this.limit);
                }
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
            _this.loader = false;
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminPaymentLedgerComponent.prototype.GetLedgerFirstTime = function () {
        var _this = this;
        this.loader = true;
        this.studentReportList = [];
        this.spinner.show();
        var data = {
            'agencyID': this.commonService.getAgencyId(),
            'studentName': this.searchByStudentName,
            'parentID': this.reqParentId,
            'page': this.pageNo,
            'limit': this.limit,
            'fromDate': this.fromDate ? this.fromDate : this.blankDate,
            'toDate': this.toDate ? this.toDate : this.blankDate
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_9__["AgencyAPIURLs"].GetStudentLedger, data, null).subscribe(function (res) {
            _this.totalRecord = res.body.totalRows;
            console.log(_this.totalRecord, 'testttt');
            _this.totalBalance = res.body.totalBalanceAmount;
            if (res.body.statusCode === 200) {
                _this.spinner.hide();
                _this.studentReportList = res.body.data;
                _this.parentName = res.body.parentName;
                _this.lastName = res.body.lastName;
                if (_this.totalRecord % _this.limit === 0) {
                    _this.totalPage = _this.totalRecord / _this.limit;
                    _this.totalRecord = _this.totalRecord - 1;
                    _this.pageIndex = _this.totalPage;
                    _this.pageNo = _this.totalPage - 1;
                    _this.GetStudentLedger();
                }
                else {
                    _this.totalPage = Math.ceil(_this.totalRecord / _this.limit);
                    _this.pageIndex = _this.totalPage;
                    _this.pageNo = _this.totalPage - 1;
                    _this.GetStudentLedger();
                }
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
            _this.loader = false;
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    // getAllClassList() {
    //   this.classList = [];
    //   const req = {
    //     'AgencyID': this.commonService.getAgencyId(),
    //     'ParentID': this.reqParentId,
    //     'limit': 0,
    //     'page': this.pageNo
    //   };
    //   this.apiService.postData(AgencyAPIURLs.GetAllClassesForParent, req, null).subscribe(res => {
    //     if (res.body.statusCode === 200) {
    //       this.totalRecord = res.body.totalRows;
    //       this.classList = res.body.data;
    //       // this.spinner.hide();
    //     } else {
    //       this.spinner.hide();
    //       this.error.unknownError();
    //     }
    //   }, err => {
    //     this.spinner.hide();
    //     this.error.commonError(err);
    //   }
    //   );
    // }
    AgencyAdminPaymentLedgerComponent.prototype.getClass = function (type) {
        this.classList = [];
        this.descriptionList = [];
        this.ledgerItemForm.controls['transactiontype'].setValue('');
        this.ledgerItemForm.controls['description'].setValue('');
        if (type != 0) {
            this.getAllclassesByStudentId(type);
        }
    };
    AgencyAdminPaymentLedgerComponent.prototype.getAllclassesByStudentId = function (type) {
        var _this = this;
        this.loader = true;
        this.spinner.show();
        this.classList = [];
        var req = {
            'AgencyID': this.commonService.getAgencyId(),
            'studentID': type
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_9__["AgencyAPIURLs"].GetClassesByStudentID, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.totalRecord = res.body.totalRows;
                _this.classList = res.body.data;
                console.log(_this.classList, 'ccccccccccccccccccccccccc');
                _this.loader = false;
                _this.spinner.hide();
            }
            else {
                _this.spinner.hide();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminPaymentLedgerComponent.prototype.getAllStudentOfParentList = function () {
        var _this = this;
        this.spinner.show();
        this.parentChildList = [];
        var req = {
            'AgencyID': this.commonService.getAgencyId(),
            'ParentID': this.reqParentId
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_9__["AgencyAPIURLs"].GetAllStudentForParentDropdown, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.parentChildList = res.body.data;
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminPaymentLedgerComponent.prototype.SendInvoiceMail = function () {
        var _this = this;
        this.loader = true;
        this.spinner.show();
        var req = {
            'agencyID': this.commonService.getAgencyId(),
            'studentName': this.searchByStudentName,
            'parentID': this.reqParentId,
            'page': this.pageNo,
            'limit': this.limit,
            'fromDate': this.fromDate ? this.fromDate : this.blankDate,
            'toDate': this.toDate ? this.toDate : this.blankDate
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_9__["AgencyAPIURLs"].SendInvoiceMail, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.notification.success({ message: 'Mail sent to  registered parent email!', title: 'Sent' });
                _this.spinner.hide();
            }
            else {
                _this.notification.warning({ message: res.body.message, title: '' });
                _this.spinner.hide();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminPaymentLedgerComponent.prototype.paginate = function (event) {
        console.log(event);
        this.pageNo = event.page;
        this.GetStudentLedger();
    };
    AgencyAdminPaymentLedgerComponent.prototype.createLedgerItemForm = function () {
        this.ledgerItemForm = this.fb.group({
            ledger: ['Sponsor'],
            postingdate: [this.myDate, _angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required],
            transactiontype: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required],
            description: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required],
            check: [''],
            notes: [''],
            amount: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required],
            child: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required],
            comments: [''],
        });
        this.ledgerItemForm.controls['check'].disable();
        this.ledgerItemForm.controls['notes'].disable();
    };
    AgencyAdminPaymentLedgerComponent.prototype.cleareAllForm = function () {
        this.descriptionList = [];
        this.createLedgerItemForm();
    };
    Object.defineProperty(AgencyAdminPaymentLedgerComponent.prototype, "l", {
        get: function () { return this.ledgerItemForm.controls; },
        enumerable: true,
        configurable: true
    });
    AgencyAdminPaymentLedgerComponent.prototype.getDescriptionList = function (type) {
        this.descriptionList = [];
        this.ledgerItemForm.controls['amount'].setValue('0');
        this.ledgerItemForm.controls['description'].setValue('');
        // tslint:disable-next-line: triple-equals
        if (type == 1) {
            this.getTuitionChargesList();
            // tslint:disable-next-line: triple-equals
        }
        else if (type == 2) {
            this.getOtherChargesList();
            // tslint:disable-next-line: triple-equals
        }
        else if (type == 3) {
            this.getCreditList();
            // tslint:disable-next-line: triple-equals
        }
        else if (type == '') {
            this.ledgerItemForm.controls['description'].setValue('');
        }
        else {
            this.getPaymentList();
        }
    };
    AgencyAdminPaymentLedgerComponent.prototype.getTuitionChargesList = function () {
        var _this = this;
        this.classList.map(function (ele) {
            _this.descriptionList.push({ value: ele.classesID, name: ele.className });
        });
    };
    AgencyAdminPaymentLedgerComponent.prototype.getOtherChargesList = function () {
        this.descriptionList =
            [
                { value: 'Deposit Charge', name: 'Deposit Charge' },
                { value: 'Parent Refund', name: 'Parent Refund' },
                { value: 'Return Check', name: 'Return Check' },
                { value: 'Tuition Late Fee', name: 'Tuition Late Fee' },
                { value: 'Other', name: 'Other' }
            ];
    };
    AgencyAdminPaymentLedgerComponent.prototype.getCreditList = function () {
        this.descriptionList =
            [
                { value: 'Deposit Refund', name: 'Deposit Refund' },
                { value: 'Sibling Discount', name: 'Sibling Discount' },
                { value: 'Credit Forward', name: 'Credit Forward' },
                { value: 'Other', name: 'Other' }
            ];
    };
    AgencyAdminPaymentLedgerComponent.prototype.getPaymentList = function () {
        this.descriptionList =
            [
                { value: 'Payment - Cash', name: 'Payment - Cash' },
                { value: 'Payment - Check', name: 'Payment - Check' },
                { value: 'Payment - Credit Card', name: 'Payment - Credit Card' },
                { value: 'Other', name: 'Other' }
            ];
    };
    AgencyAdminPaymentLedgerComponent.prototype.enableCheckTab = function (type) {
        // tslint:disable-next-line: triple-equals
        if (type == 4) {
            this.ledgerItemForm.controls['check'].enable();
        }
        else {
            this.ledgerItemForm.controls['check'].setValue('');
            this.ledgerItemForm.controls['check'].disable();
        }
    };
    AgencyAdminPaymentLedgerComponent.prototype.enableNoteTab = function (type) {
        // tslint:disable-next-line: triple-equals
        if (type == 'Other') {
            this.ledgerItemForm.controls['notes'].enable();
        }
        else {
            this.ledgerItemForm.controls['notes'].setValue('');
            this.ledgerItemForm.controls['notes'].disable();
        }
    };
    AgencyAdminPaymentLedgerComponent.prototype.getAmount = function (type) {
        // tslint:disable-next-line: triple-equals
        if (type == 'Deposit Charge') {
            this.ledgerItemForm.controls['amount'].setValue('50');
            // tslint:disable-next-line: triple-equals
        }
        else if (type == 'Parent Refund') {
            this.ledgerItemForm.controls['amount'].setValue('0');
        }
        else if (type == 'Credit Forward') {
            this.ledgerItemForm.controls['amount'].setValue('0');
            // tslint:disable-next-line: triple-equals
        }
        else if (type == 'Return Check') {
            this.ledgerItemForm.controls['amount'].setValue('35');
            // tslint:disable-next-line: triple-equals
        }
        else if (type == 'Tuition Late Fee') {
            this.ledgerItemForm.controls['amount'].setValue('25');
            // tslint:disable-next-line: triple-equals
        }
        else if (type == 'Deposit Refund') {
            this.ledgerItemForm.controls['amount'].setValue('0');
            // tslint:disable-next-line: triple-equals
        }
        else if (type == 'Sibling Discount') {
            this.ledgerItemForm.controls['amount'].setValue('5');
        }
        else {
            for (var i = 0; i < this.classList.length; i++) {
                // tslint:disable-next-line: triple-equals
                if (this.classList[i].classesID == type) {
                    this.ledgerItemForm.controls['amount'].setValue(this.classList[i].fees);
                    break;
                }
                else {
                    this.ledgerItemForm.controls['amount'].setValue('');
                }
            }
        }
    };
    AgencyAdminPaymentLedgerComponent.prototype.verifyledgerItemForm = function () {
        if (this.ledgerItemForm.valid) {
            this.verifyLedgerAddForm();
        }
        else {
            this.spinner.hide();
            this.commonService.validateAllFields(this.ledgerItemForm);
        }
    };
    AgencyAdminPaymentLedgerComponent.prototype.verifyLedgerAddForm = function () {
        this.spinner.show();
        // tslint:disable-next-line: triple-equals
        if (this.ledgerItemForm.value.transactiontype == 1) {
            this.ledgerVM.ClassId = this.ledgerItemForm.value.description;
        }
        else {
            this.ledgerVM.ClassId = 0;
        }
        this.ledgerVM.AgencyID = this.commonService.getAgencyId();
        this.ledgerVM.ParentID = this.reqParentId;
        this.ledgerVM.StudentID = this.ledgerItemForm.value.child;
        this.ledgerVM.PostingDate = this.ledgerItemForm.value.postingdate;
        this.ledgerVM.InvoiceDescription = this.ledgerItemForm.value.description;
        this.ledgerVM.PaymentDescription = this.ledgerItemForm.value.description;
        this.ledgerVM.Amount = this.ledgerItemForm.value.amount;
        this.ledgerVM.ChequeNo = this.ledgerItemForm.value.check;
        this.ledgerVM.PaymentComment = this.ledgerItemForm.value.comments;
        this.ledgerVM.InvoiceComment = this.ledgerItemForm.value.comments;
        this.ledgerVM.Notes = this.ledgerItemForm.value.notes;
        // tslint:disable-next-line: triple-equals
        if (this.ledgerItemForm.value.transactiontype == 1 || this.ledgerItemForm.value.transactiontype == 2) {
            this.createInvoiceLedgerItem(this.ledgerVM);
        }
        else {
            this.createPaymentLedgerItem(this.ledgerVM);
        }
    };
    AgencyAdminPaymentLedgerComponent.prototype.createInvoiceLedgerItem = function (req) {
        var _this = this;
        this.spinner.show();
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_9__["AgencyAPIURLs"].CreateInvoiceLedgerItem, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.notification.success({ message: 'Invoice Generated Successfully', title: '' });
                $('.postLedger').modal('hide');
                _this.GetLedgerFirstTime();
                _this.spinner.hide();
            }
            else if (res.body.statusCode === 987) {
                _this.notification.warning({ message: 'Something went wrong.', title: '' });
                _this.spinner.hide();
            }
            else if (res.body.statusCode === 204) {
                _this.notification.warning({ message: 'Select Enroll Class.', title: '' });
                _this.spinner.hide();
            }
            else if (res.body.statusCode === 203) {
                _this.notification.warning({ message: 'No Recurring Billing', title: '' });
                _this.spinner.hide();
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminPaymentLedgerComponent.prototype.createPaymentLedgerItem = function (req) {
        var _this = this;
        this.spinner.show();
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_9__["AgencyAPIURLs"].CreatePaymentLedgerItem, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.notification.success({ message: 'Payment Generated Successfully', title: '' });
                $('.postLedger').modal('hide');
                _this.GetLedgerFirstTime();
                _this.spinner.hide();
            }
            else if (res.body.statusCode === 987) {
                _this.notification.warning({ message: 'Something went wrong.', title: '' });
                _this.spinner.hide();
            }
            else if (res.body.statusCode === 203) {
                _this.notification.warning({ message: 'No Recurring Billing', title: '' });
                _this.spinner.hide();
            }
            else if (res.body.statusCode === 204) {
                _this.notification.warning({ message: 'Select Enroll Class.', title: '' });
                _this.spinner.hide();
            }
            else if (res.body.statusCode === 209) {
                _this.notification.warning({ message: 'No Invoice for this student.', title: '' });
                _this.spinner.hide();
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminPaymentLedgerComponent.prototype.pdfReportForPaymentLedger = function () {
        var _this = this;
        this.loader = true;
        this.spinner.show();
        var req = {
            'agencyID': this.commonService.getAgencyId(),
            'studentName': this.searchByStudentName,
            'parentID': this.reqParentId,
            'page': this.pageNo,
            'limit': this.limit,
            'fromDate': this.fromDate ? this.fromDate : this.blankDate,
            'toDate': this.toDate ? this.toDate : this.blankDate
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_9__["AgencyAPIURLs"].GetPdfReportForPaymentLedger, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                var filename = src_environments_environment__WEBPACK_IMPORTED_MODULE_11__["environment"].baseUrl + res.body.fileName;
                var name_1 = res.body.fileName;
                window.open(filename);
                setTimeout(function () {
                    _this.deletePdFFromServer(name_1);
                }, 5000);
            }
            else {
                _this.error.unknownError();
            }
            _this.loader = false;
            _this.spinner.hide();
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    // Delete pdf after use from server
    AgencyAdminPaymentLedgerComponent.prototype.deletePdFFromServer = function (filename) {
        var req = {
            'fileName': filename,
            'agencyID': this.commonService.getAgencyId()
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_9__["AgencyAPIURLs"].DeleteExistingFile, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
            }
            else {
            }
        }, function (err) {
            console.log(err);
        });
    };
    AgencyAdminPaymentLedgerComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-agency-admin-payment-ledger',
            template: __webpack_require__(/*! ./agency-admin-payment-ledger.component.html */ "./src/app/layout/agency-admin/components/agency-admin-payment-ledger/agency-admin-payment-ledger.component.html"),
            styles: [__webpack_require__(/*! ./agency-admin-payment-ledger.component.css */ "./src/app/layout/agency-admin/components/agency-admin-payment-ledger/agency-admin-payment-ledger.component.css")]
        }),
        __metadata("design:paramtypes", [_shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_8__["AgencyApiService"], _shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_3__["ErrorHandlerService"],
            ngx_spinner__WEBPACK_IMPORTED_MODULE_2__["NgxSpinnerService"], _shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_7__["NotificationService"],
            _shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_4__["CommonService"], _angular_forms__WEBPACK_IMPORTED_MODULE_0__["FormBuilder"], _angular_router__WEBPACK_IMPORTED_MODULE_5__["ActivatedRoute"],
            primeng_api__WEBPACK_IMPORTED_MODULE_6__["ConfirmationService"]])
    ], AgencyAdminPaymentLedgerComponent);
    return AgencyAdminPaymentLedgerComponent;
}());



/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-payment/agency-admin-payment.component.css":
/*!********************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-payment/agency-admin-payment.component.css ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".wid26{ width: 26%;}\r\n.wid10{ width: 10%;}\r\n.verAligMiddle{  vertical-align: middle;}\r\n.plusIcon{ font-size: 28px; }\r\n.minusIcon{font-size: 28px; color: #FF6C6C;}\r\n/* #balncextra .ui-inputswitch {\r\n  width: 66px !important;\r\n  height: 29px !important;\r\n }\r\n\r\n #balncextra .ui-inputswitch-slider {\r\n    height: 21px !important;\r\n    width: 27px !important;\r\n} */\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L2FnZW5jeS1hZG1pbi9jb21wb25lbnRzL2FnZW5jeS1hZG1pbi1wYXltZW50L2FnZW5jeS1hZG1pbi1wYXltZW50LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsUUFBUSxVQUFVLENBQUM7QUFDbkIsUUFBUSxVQUFVLENBQUM7QUFDbkIsaUJBQWlCLHNCQUFzQixDQUFDO0FBQ3hDLFdBQVcsZUFBZSxFQUFFO0FBQzVCLFdBQVcsZUFBZSxFQUFFLGNBQWMsQ0FBQztBQUUzQzs7Ozs7Ozs7R0FRRyIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9hZ2VuY3ktYWRtaW4vY29tcG9uZW50cy9hZ2VuY3ktYWRtaW4tcGF5bWVudC9hZ2VuY3ktYWRtaW4tcGF5bWVudC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLndpZDI2eyB3aWR0aDogMjYlO31cclxuLndpZDEweyB3aWR0aDogMTAlO31cclxuLnZlckFsaWdNaWRkbGV7ICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO31cclxuLnBsdXNJY29ueyBmb250LXNpemU6IDI4cHg7IH1cclxuLm1pbnVzSWNvbntmb250LXNpemU6IDI4cHg7IGNvbG9yOiAjRkY2QzZDO31cclxuXHJcbi8qICNiYWxuY2V4dHJhIC51aS1pbnB1dHN3aXRjaCB7XHJcbiAgd2lkdGg6IDY2cHggIWltcG9ydGFudDtcclxuICBoZWlnaHQ6IDI5cHggIWltcG9ydGFudDtcclxuIH1cclxuXHJcbiAjYmFsbmNleHRyYSAudWktaW5wdXRzd2l0Y2gtc2xpZGVyIHtcclxuICAgIGhlaWdodDogMjFweCAhaW1wb3J0YW50O1xyXG4gICAgd2lkdGg6IDI3cHggIWltcG9ydGFudDtcclxufSAqLyJdfQ== */"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-payment/agency-admin-payment.component.html":
/*!*********************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-payment/agency-admin-payment.component.html ***!
  \*********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"wrapper\">\r\n  <div class=\"container-fluid\">\r\n\r\n    <div class=\"pagetitle\">\r\n      <div>\r\n        <h2>Dashboard\r\n          <span>/ Payment </span>\r\n        </h2>\r\n      </div>\r\n      <div>\r\n        <!-- <button type=\"submit\" class=\"btn btn-red\" [routerLink]=\"['../discount']\">Discount</button>\r\n        <button type=\"submit\" class=\"btn btn-red\" data-toggle=\"modal\" data-target=\".extracharge\"\r\n          (click)=\"clearFeesType()\">Add Fees Type</button> -->\r\n        <a href=\"https://connect.stripe.com/express/oauth/authorize?client_id={{stripClintID}}&state={STATE_VALUE}\"\r\n          *ngIf=\"showBtnCreateAcc\" target=\"_blank\">\r\n          <button type=\"submit\" class=\"btn btn-red\">Create Stripe Account</button></a>\r\n      </div>\r\n\r\n    </div>\r\n\r\n    <div class=\"subhead d-flex justify-content-between mt-20\">\r\n      <div>\r\n        <h3>Payment</h3>\r\n      </div>\r\n    </div>\r\n    <div class=\"Paymetlist\">\r\n      <ul class=\"nav nav-pills mb-3\" id=\"pills-tab\" role=\"tablist\">\r\n\r\n        <li class=\"nav-item\" (click)=\"onTabPaymentLedger($event);\">\r\n          <a class=\"nav-link active\" id=\"allStudent\" data-toggle=\"pill\" href=\"#pills-allstudent\" role=\"tab\"\r\n            aria-controls=\"pills-allstudent\" aria-selected=\"false\">Payments Ledger</a>\r\n        </li>\r\n        <!-- <li class=\"nav-item\" (click)=\"onTabChangeHistory($event);\">\r\n          <a class=\"nav-link\" id=\"appStudent\" data-toggle=\"pill\" href=\"#pills-appstudent\" role=\"tab\"\r\n            aria-controls=\"pills-appstudent\" aria-selected=\"false\">Payments</a>\r\n        </li> -->\r\n        <!-- <li class=\"nav-item\" (click)=\"onTabChangeDue($event)\">\r\n          <a class=\"nav-link\" id=\"penstudent\" data-toggle=\"pill\" href=\"#pills-penstudent\" role=\"tab\"\r\n            aria-controls=\"pills-penstudent\" aria-selected=\"false\">Due Payments</a>\r\n        </li> -->\r\n        <!-- <li class=\"nav-item\" (click)=\"onTabChangeAddFees($event);\">\r\n          <a class=\"nav-link\" id=\"addfees\" data-toggle=\"pill\" href=\"#pills-AddFees\" role=\"tab\"\r\n            aria-controls=\"pills-penstudent\" aria-selected=\"false\">Add Fees</a>\r\n        </li> -->\r\n        <!-- <li class=\"nav-item\" (click)=\"onTabSendBalance($event);\">\r\n          <a class=\"nav-link\" id=\"sendbalance\" data-toggle=\"pill\" href=\"#pills-sendbalance\" role=\"tab\"\r\n            aria-controls=\"pills-penstudent\" aria-selected=\"false\">Send Balance by Email</a>\r\n        </li> -->\r\n      </ul>\r\n      <div class=\"tab-content\" id=\"pills-tabContent\">\r\n\r\n        <!-- Payment Ledger Tab -->\r\n        <div class=\"tab-pane fade active show\" id=\"pills-allstudent\" role=\"tabpanel\" aria-labelledby=\"allstudent\">\r\n          <div class=\"leftfilter searchwitoutcard\">\r\n            <div class=\"row algcenter\">\r\n              <div class=\"search-date\">\r\n                <div class=\"pr15 label-text\">Search Name : </div>\r\n                <input type=\"text\" placeholder=\"Search parent name\" [(ngModel)]=\"searchByParentName\"\r\n                  class=\"form-control mr15\" id=\"\" (keydown)=\"keyDownFunction($event,1)\">\r\n              </div>\r\n              <div class=\"filter-buttons\">\r\n                <button type=\"submit\" class=\"btn btn-send\"\r\n                  (click)=\"getLedgerReport()\">Search</button>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n          <div class=\"innertable\">\r\n            <div class=\"table-responsive\">\r\n              <table class=\"table\">\r\n                <thead class=\"thead-light\">\r\n                  <tr>\r\n                    <th scope=\"col\">Family Account</th>\r\n                    <th scope=\"col\">Children</th>\r\n                    <th scope=\"col\">Parent/Sponsor</th>\r\n                    <th scope=\"col\">Balance</th>\r\n                    <th scope=\"col\" class=\"text-center\">Action</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr *ngFor=\"let report of reportList\">\r\n                    <td>{{report.parentLastName}}</td>\r\n                    <td>{{report.studentNames}}</td>\r\n                    <td>{{report.parentName}}</td>\r\n                    <td>${{report.amount - report.debitAmount}}</td>\r\n                    <td class=\"text-center\">\r\n                      <a [routerLink]=\"['../paymentledger', report.parentID]\">\r\n                        <i class=\"fa fa-eye\" aria-hidden=\"true\"></i>\r\n                      </a>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n              <div class=\"text-center\">\r\n                <span *ngIf=\"paymentHistoryList.length === 0 && !loader\">No record found</span>\r\n              </div>\r\n            </div>\r\n            <!-- <p-paginator  #pagiHistory [alwaysShow]=\"false\" [rows]=\"limit\" [totalRecords]=\"totalRecord\"\r\n              (onPageChange)=\"paginate($event,1)\"></p-paginator> -->\r\n\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <!-- Payments Tab-->\r\n        <!-- <div class=\"tab-pane fade\" id=\"pills-appstudent\" role=\"tabpanel\" aria-labelledby=\"appStudent\">\r\n          <div class=\"leftfilter searchwitoutcard\">\r\n            <div class=\"row algcenter\">\r\n              <div class=\"search-date\">\r\n                <div class=\"pr15 label-text\">Search Name : </div>\r\n                <input type=\"text\" placeholder=\"Search student name\" [(ngModel)]=\"searchByStudentName\"\r\n                  class=\"form-control mr15\" id=\"\" (keydown)=\"keyDownFunction($event,1)\">\r\n              </div>\r\n             \r\n            </div>\r\n          </div>\r\n          <div class=\"innertable\">\r\n            <div class=\"table-responsive\">\r\n              <table class=\"table\">\r\n                <thead class=\"thead-light\">\r\n                  <tr>\r\n                    <th scope=\"col\">Student Name</th>\r\n                    <th scope=\"col\">Class</th>\r\n                    <th scope=\"col\">Parent Name</th>\r\n                    <th scope=\"col\">Amount</th>\r\n                    <th scope=\"col\">Amount Paid</th>\r\n                    <th scope=\"col\">From Date </th>\r\n                    <th scope=\"col\">To Date</th>\r\n                    <th scope=\"col\">Paid on</th>\r\n                    <th scope=\"col\">Payment Mode</th>\r\n                    <th scope=\"col\" class=\"text-center\">Action</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr *ngFor=\"let payment of paymentHistoryList\">\r\n                    <td>{{payment.studentName}}</td>\r\n                    <td>{{payment.className}}</td>\r\n                    <td>{{payment.parentName}}</td>\r\n                    <td>${{payment.totalAmount}}</td>                   \r\n                    <td>${{payment.amoutPaid}}</td>\r\n                    <td>{{payment.paymentFromDate| date}} </td>\r\n                    <td>{{payment.paymentToDate| date}} </td>\r\n                    <td>{{payment.paymentDate| date}}</td>\r\n                    <td> {{payment.isOffline ? 'Offline' : 'Online' }}</td>\r\n                    <td class=\"text-center\" title=\"Offline Payment Details\" style=\"cursor: pointer\">\r\n                      <a *ngIf=\"payment.isOffline\" data-target=\".paidfeesdetails\" data-toggle=\"modal\"\r\n                        (click)=\"getPaymentHistoryDetails(payment)\"><i class=\"fa fa-eye\"> </i></a>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n              <div class=\"text-center\">\r\n                <span *ngIf=\"paymentHistoryList.length === 0 && !loader\">No record found</span>\r\n              </div>\r\n            </div>\r\n            <p-paginator  #pagiHistory [alwaysShow]=\"false\" [rows]=\"limit\" [totalRecords]=\"totalRecord\"\r\n              (onPageChange)=\"paginate($event,2)\"></p-paginator>\r\n\r\n          </div>\r\n        </div> -->\r\n\r\n        <!--  Due Payments Tab-->\r\n        <!-- <div class=\"tab-pane fade\" id=\"pills-penstudent\" role=\"tabpanel\" aria-labelledby=\"penstudent\">\r\n          <div class=\"leftfilter searchwitoutcard\">\r\n            <div class=\"row algcenter\">\r\n              <div class=\"search-date\">\r\n                <div class=\"pr15 label-text\">Search Name : </div>\r\n                <input type=\"text\" placeholder=\"Search student name\" [(ngModel)]=\"searchByStudentName\"\r\n                  class=\"form-control mr15\" id=\"\" (keydown)=\"keyDownFunction($event,2)\">\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"innertable\">\r\n            <div class=\"table-responsive\">\r\n              <table class=\"table\">\r\n                <thead class=\"thead-light\">\r\n                  <tr>\r\n                    <th scope=\"col\">Student Name</th>\r\n                    <th scope=\"col\">Class</th>\r\n                    <th scope=\"col\">Parent Name</th>\r\n                    <th scope=\"col\">Amount</th>\r\n                    <th scope=\"col\">From Date </th>\r\n                    <th scope=\"col\">To Date</th>                    \r\n                    <th class=\"text-center\" scope=\"col\">Pay Offline</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr *ngFor=\"let payment of paymentDueList \">\r\n                    <td>{{payment.studentName}}</td>\r\n                    <td>{{payment.className}}</td>\r\n                    <td>{{payment.parentName}}</td>\r\n                    <td>${{payment.totalAmount}}</td>\r\n                    <td>{{payment.invoiceFromDate| date}} </td>\r\n                    <td>{{payment.invoiceToDate| date}} </td>                    \r\n                    <td class=\"text-center\">                    \r\n                      <button (click)=\"clearPaymentForm();getStudentDetails(payment);\" type=\"submit\"\r\n                        class=\"btn btn-send\" data-toggle=\"modal\" data-target=\".paymentmethod\">Pay</button>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n              <div class=\"text-center\">\r\n                <span *ngIf=\"paymentDueList.length === 0 && !loader\">No record found</span>\r\n              </div>\r\n            </div>\r\n            <p-paginator #DueList [alwaysShow]=\"false\" [rows]=\"limit\" [totalRecords]=\"totalRecord\"\r\n              (onPageChange)=\"paginate($event,3)\"></p-paginator>\r\n          </div>\r\n        </div> -->\r\n        <!-- Add Fees tab -->\r\n        <div class=\"tab-pane fade\" id=\"pills-AddFees\" role=\"tabpanel\" aria-labelledby=\"penstudent\">\r\n          <div class=\"leftfilter searchwitoutcard\">\r\n            <div class=\"row algcenter\">\r\n              <div class=\"search-date\">\r\n                <div class=\"pr15 label-text\">Search Name : </div>\r\n                <input type=\"text\" placeholder=\"Search student name\" [(ngModel)]=\"searchByStudentName\"\r\n                  class=\"form-control mr15\" id=\"\" (keydown)=\"keyDownFunction($event,3)\">\r\n              </div>\r\n              <div class=\"filter-buttons\">\r\n                <button type=\"button\" class=\"btn btn-send\" (click)=\"openBultCalForm()\">Calculate Fees</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"innertable\">\r\n            <div class=\"table-responsive\">\r\n              <table class=\"table\">\r\n                <thead class=\"thead-light\">\r\n                  <tr>\r\n                    <th class=\"text-center\">\r\n                      <label class=\"checkboxcustom\" title=\"Mark/Unmark all \">\r\n                        <input type=\"checkbox\" [(ngModel)]=\"markAllStudents\"\r\n                          (click)=\"getAllMarkedStudents($event,studentList)\">\r\n                        <span class=\"checkmark\"></span>\r\n                      </label>\r\n                    </th>\r\n                    <th scope=\"col\">Student Name</th>\r\n                    <th scope=\"col\">Parent Name</th>\r\n                    <th scope=\"col\">Category</th>\r\n                    <th scope=\"col\">Class Name</th>\r\n                    <th class=\"text-center\" scope=\"col\">Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr *ngFor=\"let student of studentList\">\r\n                    <td>\r\n                      <label class=\"checkboxcustom\">\r\n                        <input type=\"checkbox\" [checked]=\"student.isMarked == true\"\r\n                          (click)=\"getSingleMarkedStudent(student,$event)\">\r\n                        <span class=\"checkmark\"></span>\r\n                      </label>\r\n                    </td>\r\n                    <td>{{student.studentName}}</td>\r\n                    <td>{{student.parentName}}</td>\r\n                    <td>{{student.categoryName}}</td>\r\n                    <td>{{student.className}}</td>\r\n                    <td class=\"text-center\">\r\n                      <a (click)=\"goToAddFees(student)\" title=\"Calculate Fees\">\r\n                        <img class=\"flat_icon\" src=\"../../../../../assets/calculator.png\" alt=\"Add Fees\">\r\n                      </a>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n              <div class=\"text-center\" *ngIf=\"studentList.length == 0 && !loader\">\r\n                <span>No record found!</span>\r\n              </div>\r\n            </div>\r\n            <p-paginator #addfees [alwaysShow]=\"false\" [rows]=\"limit\" [totalRecords]=\"totalRecord\"\r\n              (onPageChange)=\"paginate($event,4)\"></p-paginator>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Send Balance Tab -->\r\n        <!-- <div class=\"tab-pane fade\" id=\"pills-sendbalance\" role=\"tabpanel\" aria-labelledby=\"penstudent\">\r\n          <div class=\"leftfilter searchwitoutcard\">\r\n            <div class=\"row algcenter\">\r\n              <div class=\"search-date\">\r\n                <div class=\"pr15 label-text\">Search Name : </div>\r\n                <input type=\"text\" placeholder=\"Search Parent name\" [(ngModel)]=\"searchByParentName\"\r\n                  class=\"form-control mr15\" id=\"\" (keydown)=\"keyDownFunction($event,4)\">\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"innertable\">\r\n            <div class=\"table-responsive\">\r\n              <table class=\"table\">\r\n                <thead class=\"thead-light\">\r\n                  <tr>\r\n                    <th scope=\"col\">Parent Name</th>\r\n                    <th scope=\"col\">Email</th>\r\n                    <th class=\"text-center\" scope=\"col\">Send Balance(Due) By Email</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr *ngFor=\"let payment of parentListToSendBalance \">\r\n                    <td>{{payment.parentName}}</td>\r\n                    <td>{{payment.email}}</td>\r\n                    <td class=\"text-center\">\r\n                      <button (click)=\"sendDueBalanceByMail(payment);\" type=\"submit\"\r\n                        class=\"btn btn-send\">Send</button>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n              <div class=\"text-center\">\r\n                <span *ngIf=\"parentListToSendBalance.length === 0 && !loader\">No record found</span>\r\n              </div>\r\n            </div>\r\n            <p-paginator #sndbalancList [alwaysShow]=\"false\" [rows]=\"limit\" [totalRecords]=\"totalRecord\"\r\n              (onPageChange)=\"paginate($event,5)\"></p-paginator>\r\n          </div>\r\n        </div> -->\r\n\r\n\r\n\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n\r\n    <!--Edit Payment Modal  -->\r\n    <div class=\"modal fade editpayment\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myLargeModalLabel\"\r\n      aria-hidden=\"true\">\r\n      <div class=\"modal-dialog modal-lg\">\r\n        <div class=\"modal-content  white_box_table\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Edit Payment</h5>\r\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <div style=\"margin-bottom: 10px\">\r\n\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6\">\r\n                  <B>Invoice Number:</B>&nbsp; {{invoiceNo}} </div>\r\n                <div class=\"col-md-6\">\r\n                  <B>Generated fees:</B>&nbsp; $ {{generatedTutionFee}} </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"table-responsive\">\r\n              <table class=\"table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th scope=\"col\" class=\"wid26\">Transaction Type</th>\r\n                    <th scope=\"col\" class=\"wid26\">Description</th>\r\n                    <th scope=\"col\" class=\"wid26\">Amount</th>\r\n                    <th scope=\"col\" class=\"wid10\">Add</th>\r\n                    <th scope=\"col\" class=\"wid10\">Remove</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody [formGroup]=\"editTransForm\">\r\n                  <tr\r\n                    *ngFor=\"let disp of displayTransList;let item of editTransForm.get('transArraycollection').controls; let i = index;\"\r\n                    formArrayName=\"transArraycollection\">\r\n                    <td [formGroupName]=\"i\">\r\n                      <select class=\"form-control\" formControlName=\"transactionTypeID\" placeholder=\"Transcation Type\"\r\n                        id=\"exampleFormControlSelect1\" (change)=\"getTrasactionMasterList($event.target.value,i)\">\r\n                        <option value=\"\">Select Transcation Type</option>\r\n                        <option *ngFor=\"let transtype of trasactionTypeList\" [value]=\"transtype.transactionTypeID\">\r\n                          {{transtype.transactionTypeName}}</option>\r\n                      </select>\r\n                    </td>\r\n                    <td [formGroupName]=\"i\">\r\n                      <select class=\"form-control\" formControlName=\"description\" placeholder=\"Transcation Description\"\r\n                        id=\"exampleFormControlSelect1\">\r\n                        <option *ngFor=\"let transMasObj of trasactionMasterList[i]\" [value]=\"transMasObj.description\">\r\n                          {{transMasObj.description}}</option>\r\n\r\n                      </select>\r\n                    </td>\r\n                    <td [formGroupName]=\"i\">\r\n                      <input type=\"text \" formControlName=\"amount\" (input)=\"calculateTotleAmount()\" class=\"form-control\"\r\n                        id=\"\" aria-describedby=\"\" placeholder=\"Amount\">\r\n\r\n                    </td>\r\n                    <td class=\"verAligMiddle\">\r\n                      <a href=\"javascript:void(0);\">\r\n                        <i class=\"fa fa-plus-circle plusIcon\" (click)=\"addTrans()\" aria-hidden=\"true\"></i></a>\r\n\r\n                    </td>\r\n                    <td class=\"verAligMiddle\">\r\n                      <a href=\"javascript:void(0);\" *ngIf=\"displayTransList.length > 1\">\r\n                        <i class=\"fa fa-minus-circle minusIcon\" (click)=\"removeFood(disp)\" aria-hidden=\"true\"></i></a>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n\r\n            </div>\r\n\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <div style=\"margin-right:40px\"><b>Total Amount:</b> ${{totalAmount}} </div>\r\n            <button type=\"submit\" class=\"btn btn-primary\" (click)=\"saveHeadTransaction()\">Save</button> &nbsp;\r\n            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <!-- OLD Transaction type -->\r\n    <div class=\"modal fade addtransactiontype\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myLargeModalLabel\"\r\n      aria-hidden=\"true\">\r\n      <div class=\"modal-dialog modal-lg\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Add Transaction Master</h5>\r\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <div class=\"table-responsive\">\r\n              <form [formGroup]=\"transactionForm\">\r\n                <table class=\"table\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th scope=\"col\" class=\"wid26\">Transaction Type *</th>\r\n                      <th scope=\"col\" class=\"wid26\">Description *</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>\r\n                        <select class=\"form-control\" placeholder=\"Transcation Type\" formControlName=\"transcationtype\"\r\n                          id=\"exampleFormControlSelect1\">\r\n                          <option value=\"\">Select Transcation Type</option>\r\n                          <option *ngFor=\"let transtype of trasactionTypeList\" [value]=\"transtype.transactionTypeID\">\r\n                            {{transtype.transactionTypeName}}</option>\r\n                        </select>\r\n                        <div *ngIf=\"f.transcationtype.invalid && (f.transcationtype.dirty || f.transcationtype.touched)\"\r\n                          class=\"text-left errormsg\">\r\n                          <span *ngIf=\"f.transcationtype.errors.required\">\r\n                            <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select Type</span>\r\n                          </span>\r\n                        </div>\r\n                      </td>\r\n                      <td>\r\n                        <input type=\"text \" formControlName=\"transdescription\" class=\"form-control\" aria-describedby=\"\"\r\n                          placeholder=\"Description\">\r\n                        <div\r\n                          *ngIf=\"f.transdescription.invalid && (f.transdescription.dirty || f.transdescription.touched)\"\r\n                          class=\"text-left errormsg\">\r\n                          <span *ngIf=\"f.transdescription.errors.required\">\r\n                            <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please enter description</span>\r\n                          </span>\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </form>\r\n            </div>\r\n\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-primary\" (click)=\"saveTransMasterInformation()\">Save</button> &nbsp;\r\n            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n    <!-- Payment type  Modal-->\r\n    <div class=\"modal fade paymentmethod\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myLargeModalLabel\"\r\n      aria-hidden=\"true\">\r\n      <div class=\"modal-dialog modal-lg\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Payment</h5>\r\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <form [formGroup]=\"paymentMethodForm\">\r\n\r\n              <div class=\"row mb-20\">\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Payment Type*</label>\r\n                    <select class=\"form-control\" placeholder=\"Transcation Type\" formControlName=\"paymenttype\"\r\n                      id=\"exampleFormControlSelect1\" (change)=\"getPaymentType()\">\r\n                      <option value=\"\">Select Payment Type</option>\r\n                      <option value=\"Cash\"> Cash</option>\r\n                      <option value=\"Check\"> Check</option>\r\n                      <option [value]=\"DebitCard\"> Debit Card</option>\r\n                      <option [value]=\"CreditCard\"> Credit Card</option>\r\n                    </select>\r\n                    <div *ngIf=\"p.paymenttype.invalid && (p.paymenttype.dirty || p.paymenttype.touched)\"\r\n                      class=\"text-left errormsg\">\r\n                      <span *ngIf=\"p.paymenttype.errors.required\">\r\n                        <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select Type</span>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\" *ngIf=\"(showFildName == 'cheque')\">\r\n                    <label for=\"\">Check Number</label>\r\n                    <input type=\"text \" formControlName=\"chequeno\" maxlength=\"20\"\r\n                      (keypress)=\"commonService.allowOnlyNumber($event)\" class=\"form-control\" aria-describedby=\"\"\r\n                      placeholder=\"Check Number\">\r\n                  </div>\r\n                  <div class=\"form-group\" *ngIf=\"(showFildName == 'card' )\">\r\n                    <label for=\"\">Card Number</label>\r\n                    <input type=\"text \" formControlName=\"cardno\" maxlength=\"20\"\r\n                      (keypress)=\"commonService.allowOnlyNumber($event)\" maxlength=\"20\" class=\"form-control\"\r\n                      aria-describedby=\"\" placeholder=\"Card Number\">\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"row mb-20\">\r\n                <div class=\"col-lg-{{colm}}\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Fees Amount($)</label>\r\n                    <p style=\"background: #ededed\" class=\"form-control\">{{originalFee}}</p>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-{{colm}}\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Subsidy Amount($)</label>\r\n                    <p style=\"background: #ededed\" class=\"form-control\">{{subsidyAmount}}</p>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-{{colm}}\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Amount After Subsidy Applied ($)</label>\r\n                    <p style=\"background: #ededed\" class=\"form-control\">{{generatedTutionFee}}</p>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-{{colm}}\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Credit Amount($)</label>\r\n                    <p style=\"background: #ededed\" class=\"form-control\">{{actualBalanceAmount}}</p>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-{{colm}}\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Total Amount($)</label>\r\n                    <input type=\"text\" [attr.disabled]=\"disabledTotlAmount? '': null\" maxlength=\"8\"\r\n                      (input)=\"calculateAmountToPay()\" (keypress)=\"commonService.allowOnlyNumberWithDecimal($event)\"\r\n                      formControlName=\"amount\" class=\"form-control\" aria-describedby=\"\"\r\n                      placeholder=\"Enter Amount to pay\">\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-{{colm}} \" *ngIf=\"(actualBalanceAmount > 0 && !noNeedAdvancebalence)\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Use Credit Amount ?</label>\r\n                    <div id=\"balncextra\">\r\n                      <p-inputSwitch (onChange)=\"moveBalance()\" [(ngModel)]=\"useBalanceAmount\"\r\n                        [ngModelOptions]=\"{standalone: true}\"></p-inputSwitch>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </form>\r\n            <div class=\"row mb-20\">\r\n\r\n              <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n                <b>Amount you are paying: <p>${{amountToPay}}</p> </b>\r\n                <b>Applied Subsidy Amount: <p>${{subsidyAmount}}</p> </b>\r\n                <b>Current Credit Amount: <p>${{balanceAmount}}</p></b>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button> &nbsp;\r\n            <button type=\"button\" class=\"btn btn-primary\" (click)=\"payFinalAmount()\">Pay</button>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Paid Fees Details -->\r\n    <div class=\"modal fade paidfeesdetails\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myLargeModalLabel\"\r\n      aria-hidden=\"true\">\r\n      <div class=\"modal-dialog modal-lg\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Payment Details</h5>\r\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <div class=\"row mb-20\">\r\n              <div class=\"col-lg-4\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"\">Payment Type</label>\r\n                  <p>{{paymentHistoryDetails.paymentType}}</p>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-lg-4\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"\">Total Amount</label>\r\n                  <p>${{paymentHistoryDetails.totalAmount}}</p>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-lg-4\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"\">Applied Subsidy Amount($)</label>\r\n                  <p>${{paymentHistoryDetails.subsidyAmount}}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"row mb-20\">\r\n              <div class=\"col-lg-4\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"\">Paid Amount</label>\r\n                  <p>${{paymentHistoryDetails.amoutPaid}}</p>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-lg-4\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"\">Check Number</label>\r\n                  <p>{{paymentHistoryDetails.chequeNo}}</p>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-lg-4\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"\">Card Number</label>\r\n                  <p>{{paymentHistoryDetails.cardNo}}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button> &nbsp;\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Add new Extra Fees Master item modal -->\r\n    <div class=\"modal fade extracharge\" data-backdrop=\"static\" style=\"z-index: 1100;\" id=\"breakout\" tabindex=\"-1\"\r\n      role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n      <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"exampleModalLabel\">Add Fees Type</h5>\r\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <div class=\"form-group\">\r\n              <label>Extra Fees type Name</label>\r\n              <input type=\"text\" class=\"form-control\" (keypress)=\"commonService.allowAlphabetOnly($event)\"\r\n                placeholder=\"Extra Fees type Name\" [(ngModel)]=\"extraChargeName\">\r\n            </div>\r\n\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n            <button type=\"button\" class=\"btn btn-primary\" (click)=\"saveExtraFeesInfoInformation()\">Add</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!--NEW  Extra fees Details Add model  -->\r\n    <div class=\"modal fade addextrafees\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myLargeModalLabel\"\r\n      aria-hidden=\"true\">\r\n      <div class=\"modal-dialog modal-lg\">\r\n        <div class=\"modal-content  white_box_table\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Extra Fees</h5>\r\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <div style=\"margin-bottom: 10px\">\r\n\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6\">\r\n                  <B>Invoice Number:</B>&nbsp; {{invoiceNo}} </div>\r\n                <div class=\"col-md-6\">\r\n                  <B>Generated fees:</B>&nbsp; $ {{generatedTutionFee}} </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"table-responsive\">\r\n              <table class=\"table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th scope=\"col\" class=\"wid26\">Fees type</th>\r\n                    <th scope=\"col\" class=\"wid26\">Amount</th>\r\n                    <th scope=\"col\" class=\"wid10\">Add</th>\r\n                    <th scope=\"col\" class=\"wid10\">Remove</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody [formGroup]=\"editTransForm\">\r\n                  <tr\r\n                    *ngFor=\"let disp of displayTransList;let item of editTransForm.get('transArraycollection').controls; let i = index;\"\r\n                    formArrayName=\"transArraycollection\">\r\n                    <td [formGroupName]=\"i\">\r\n                      <select class=\"form-control\" formControlName=\"transactionTypeID\" placeholder=\"Fees Type\"\r\n                        id=\"exampleFormControlSelect1\" (change)=\"getTrasactionMasterList($event.target.value,i)\">\r\n                        <option value=\"\">Select Fees Type</option>\r\n                        <option *ngFor=\"let transtype of getExtraFeesChargeList\" [value]=\"transtype.id\">\r\n                          {{transtype.extraChargeName}}</option>\r\n                      </select>\r\n                    </td>\r\n                    <td [formGroupName]=\"i\">\r\n                      <input type=\"text \" formControlName=\"amount\" (input)=\"calculateTotleAmount()\" class=\"form-control\"\r\n                        id=\"\" aria-describedby=\"\" placeholder=\"Amount\">\r\n\r\n                    </td>\r\n                    <td class=\"verAligMiddle\">\r\n                      <a href=\"javascript:void(0);\" *ngIf=\"( displayTransList.length < getExtraFeesChargeList.length )\">\r\n                        <i class=\"fa fa-plus-circle plusIcon\" (click)=\"addTrans()\" aria-hidden=\"true\"></i></a>\r\n\r\n                    </td>\r\n                    <td class=\"verAligMiddle\">\r\n                      <a href=\"javascript:void(0);\" *ngIf=\"displayTransList.length > 1\">\r\n                        <i class=\"fa fa-minus-circle minusIcon\" (click)=\"removeFood(disp)\" aria-hidden=\"true\"></i></a>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n\r\n\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <div style=\"margin-right:40px\"><b>Total Amount:</b> ${{totalAmount}} </div>\r\n            <button type=\"submit\" class=\"btn btn-primary\" (click)=\"saveHeadTransaction()\">Save</button> &nbsp;\r\n            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Fees Calculation Form -->\r\n    <div class=\"modal fade feescalculation\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myLargeModalLabel\"\r\n      aria-hidden=\"true\">\r\n      <div class=\"modal-dialog modal-lg\">\r\n        <div class=\"modal-content  white_box_table\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Calculate Fees</h5>\r\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <div style=\"margin-bottom: 10px\">\r\n\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6\">\r\n                  <B>Invoice Number:</B>&nbsp; {{invoiceNo}} </div>\r\n                <div class=\"col-md-6\">\r\n                  <B>Generated fees:</B>&nbsp; $ {{generatedTutionFee}} </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"table-responsive\">\r\n              <table class=\"table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th scope=\"col\" class=\"wid26\">Fees type</th>\r\n                    <th scope=\"col\" class=\"wid26\">Amount</th>\r\n                    <th scope=\"col\" class=\"wid10\">Add</th>\r\n                    <th scope=\"col\" class=\"wid10\">Remove</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody [formGroup]=\"editTransForm\">\r\n                  <tr\r\n                    *ngFor=\"let disp of displayTransList;let item of editTransForm.get('transArraycollection').controls; let i = index;\"\r\n                    formArrayName=\"transArraycollection\">\r\n                    <td [formGroupName]=\"i\">\r\n                      <select class=\"form-control\" formControlName=\"transactionTypeID\" placeholder=\"Fees Type\"\r\n                        id=\"exampleFormControlSelect1\" (change)=\"getTrasactionMasterList($event.target.value,i)\">\r\n                        <option value=\"\">Select Fees Type</option>\r\n                        <option *ngFor=\"let transtype of getExtraFeesChargeList\" [value]=\"transtype.id\">\r\n                          {{transtype.extraChargeName}}</option>\r\n                      </select>\r\n                    </td>\r\n                    <td [formGroupName]=\"i\">\r\n                      <input type=\"text \" formControlName=\"amount\" (input)=\"calculateTotleAmount()\" class=\"form-control\"\r\n                        id=\"\" aria-describedby=\"\" placeholder=\"Amount\">\r\n\r\n                    </td>\r\n                    <td class=\"verAligMiddle\">\r\n                      <a href=\"javascript:void(0);\" *ngIf=\"( displayTransList.length < getExtraFeesChargeList.length )\">\r\n                        <i class=\"fa fa-plus-circle plusIcon\" (click)=\"addTrans()\" aria-hidden=\"true\"></i></a>\r\n\r\n                    </td>\r\n                    <td class=\"verAligMiddle\">\r\n                      <a href=\"javascript:void(0);\" *ngIf=\"displayTransList.length > 1\">\r\n                        <i class=\"fa fa-minus-circle minusIcon\" (click)=\"removeFood(disp)\" aria-hidden=\"true\"></i></a>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n\r\n\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <div style=\"margin-right:40px\"><b>Total Amount:</b> ${{totalAmount}} </div>\r\n            <button type=\"submit\" class=\"btn btn-primary\" (click)=\"saveHeadTransaction()\">Save</button> &nbsp;\r\n            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <!-- Modal for Bulk Calculation -->\r\n    <div class=\"modal fade bulkCal\" data-backdrop=\"static\" id=\"discount\" tabindex=\"-1\" role=\"dialog\"\r\n      aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n      <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"exampleModalLabel\">Calculate Fees</h5>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <div class=\"row\">\r\n              <div class=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\r\n                <div class=\"form-group\">\r\n                  <label>From Date</label>\r\n                  <input type=\"text\" placeholder=\"To Date\" [(ngModel)]=\"fromCalDate\" class=\"form-control\"\r\n                    [bsConfig]=\"dpConfig\" bsDatepicker>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\r\n                <div class=\"form-group\">\r\n                  <label>To Date</label>\r\n                  <input type=\"text\" placeholder=\"To Date\" [(ngModel)]=\"toCalDate\" class=\"form-control\"\r\n                    [bsConfig]=\"dpConfig\" bsDatepicker>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n            <button type=\"submit\" class=\"btn btn-primary\" (click)=\"saveBulkCalculation()\">Calculate</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <app-confirm-box></app-confirm-box>\r\n  <ngx-spinner type=\"ball-atom\" size=\"medium\" color=\"#58A7FE\"></ngx-spinner>"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-payment/agency-admin-payment.component.ts":
/*!*******************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-payment/agency-admin-payment.component.ts ***!
  \*******************************************************************************************************/
/*! exports provided: AgencyAdminPaymentComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AgencyAdminPaymentComponent", function() { return AgencyAdminPaymentComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../shared/services/agency-api-service/agency-api.service */ "./src/app/layout/agency-admin/components/shared/services/agency-api-service/agency-api.service.ts");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ngx-spinner */ "./node_modules/ngx-spinner/fesm5/ngx-spinner.js");
/* harmony import */ var _shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../shared/services/notification-service/notification.service */ "./src/app/shared/services/notification-service/notification.service.ts");
/* harmony import */ var _shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../shared/services/common/common.service */ "./src/app/shared/services/common/common.service.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var primeng_api__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! primeng/api */ "./node_modules/primeng/api.js");
/* harmony import */ var primeng_api__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(primeng_api__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _shared_constatant__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../shared/constatant */ "./src/app/layout/agency-admin/components/shared/constatant.ts");
/* harmony import */ var _shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../shared/services/error-handler/error-handler.service */ "./src/app/shared/services/error-handler/error-handler.service.ts");
/* harmony import */ var _parent_shared_constant__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../parent/shared/constant */ "./src/app/layout/parent/shared/constant.ts");
/* harmony import */ var src_app_layout_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! src/app/layout/teacher/shared/constant */ "./src/app/layout/teacher/shared/constant.ts");
/* harmony import */ var ngx_bootstrap__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ngx-bootstrap */ "./node_modules/ngx-bootstrap/esm5/ngx-bootstrap.js");
/* harmony import */ var src_app_shared_constdata__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! src/app/shared/constdata */ "./src/app/shared/constdata.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};














var AgencyAdminPaymentComponent = /** @class */ (function () {
    // @ViewChild('pagiHistory') paginator: Paginator;
    // @ViewChild('DueList') duePagintor: Paginator;
    //@ViewChild('addfees') addfeesPaginator: Paginator;
    // @ViewChild('sndbalancList') sndbalancePaginator: Paginator;
    function AgencyAdminPaymentComponent(activatedRoute, apiService, error, spinner, notification, commonService, fb, confirmationService, router) {
        var _this = this;
        this.activatedRoute = activatedRoute;
        this.apiService = apiService;
        this.error = error;
        this.spinner = spinner;
        this.notification = notification;
        this.commonService = commonService;
        this.fb = fb;
        this.confirmationService = confirmationService;
        this.router = router;
        this.showBtnCreateAcc = false;
        this.paymentHistoryList = [];
        this.paymentDueList = [];
        this.trasactionTypeList = [];
        this.trasactionMasterList = []; // for dropdown
        this.transMasterList = []; // for listing
        this.count = 0;
        this.pageNo = 0;
        this.limit = 10;
        this.totalRecord = 0;
        this.typeid = 0;
        this.loader = true;
        this.transactionTypeID = 0;
        this.transFieldCount = 0;
        this.tempTransArry = [];
        this.displayTransList = [];
        this.showFildName = 'cash';
        this.discountAmount = 0;
        this.paymentHistoryDetails = {};
        this.DebitCard = 'Debit Card';
        this.CreditCard = 'Credit Card';
        this.extraChargeName = '';
        this.getExtraFeesChargeList = [];
        this.showExtraFeesForm = false;
        this.searchByClass = '';
        this.searchByStudentName = '';
        this.extraFeesDetailsArray = [];
        this.studentList = [];
        this.studentListId = [];
        this.markAllStudents = false;
        this.balanceAmount = 0;
        this.actualBalanceAmount = 0;
        this.useBalanceAmount = false;
        this.colm = 4;
        this.variablePayAmoount = 0;
        this.debitAdvanceAmount = 0;
        this.isPartialpayment = false;
        this.partialAmount = 0;
        this.subsidyAmount = 0;
        this.originalFee = 0; // fee without subsidy added
        this.dpConfig = new ngx_bootstrap__WEBPACK_IMPORTED_MODULE_12__["BsDatepickerConfig"]();
        this.noNeedAdvancebalence = false;
        this.disabledTotlAmount = false;
        this.subsidyDetailsID = 0;
        this.searchByParentName = '';
        this.parentListToSendBalance = [];
        this.reportList = [];
        this.studentReportList = [];
        this.activatedRoute.queryParams.subscribe(function (params) {
            _this.authCode = params['code'];
        });
        this.agencyId = this.commonService.getAgencyId();
        this.stripClintID = src_app_shared_constdata__WEBPACK_IMPORTED_MODULE_13__["StripClintID"].ClientID;
    }
    AgencyAdminPaymentComponent.prototype.ngOnInit = function () {
        this.dpConfig = Object.assign({}, { containerClass: 'theme-dark-blue' }, { showWeekNumbers: false });
        this.searchByParentName = '';
        this.getLedgerReport();
        this.pushSingleArryForTransHead();
        this.createPaymentMethodForm();
        this.getPaymentDetails();
        this.getPaymentHistory();
        this.getTrasactionTypeList();
        this.getTransactionMasterDetails();
        this.getExtraFeesChargeMaster();
        this.newEditFormBuild();
        this.createTransMaster();
    };
    AgencyAdminPaymentComponent.prototype.getParentsListForSendBalance = function () {
        var _this = this;
        this.loader = true;
        this.paymentDueList = [];
        this.spinner.show();
        var model = {
            'agencyID': this.commonService.getAgencyId(),
            'limit': this.limit,
            'page': this.pageNo,
            'ParentName': this.searchByParentName
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_8__["AgencyAPIURLs"].GetParentsListForSendBalance, model, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.totalRecord = res.body.totalRows;
                if (res.body.data !== null && res.body.data !== [] && res.body.data !== []) {
                    res.body.data.forEach(function (x) {
                        x.invoiceFromDate = new Date(x.invoiceFromDate);
                        x.invoiceToDate = new Date(x.invoiceToDate);
                    });
                    _this.parentListToSendBalance = res.body.data;
                }
                _this.spinner.hide();
                _this.loader = false;
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    // method to send due payment (balance) by email to parent
    AgencyAdminPaymentComponent.prototype.sendDueBalanceByMail = function (data) {
        var _this = this;
        this.paymentDueList = [];
        this.spinner.show();
        var model = {
            'agencyID': this.commonService.getAgencyId(),
            'parentID': data.parentID
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_8__["AgencyAPIURLs"].GetDuePaymentAccordingToParentAgency, model, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.notification.success({ message: 'Mail sent to your registered email!', title: 'Sent' });
                _this.spinner.hide();
            }
            else {
                _this.notification.warning({ message: res.body.message, title: '' });
                _this.spinner.hide();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminPaymentComponent.prototype.pushSingleArryForTransHead = function () {
        this.tempTransArry = [
            {
                'id': 1,
                'transactionTypeID': '',
                'studentID': '',
                'description': '',
                'amount': ''
            }
        ];
        this.displayTransList.push(this.tempTransArry);
    };
    AgencyAdminPaymentComponent.prototype.createTransMaster = function () {
        this.transactionForm = this.fb.group({
            transcationtype: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].required],
            transdescription: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].required]
        });
    };
    AgencyAdminPaymentComponent.prototype.createPaymentMethodForm = function () {
        this.paymentMethodForm = this.fb.group({
            paymenttype: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].required],
            chequeno: [''],
            cardno: [''],
            amount: [''],
            subsidy: ['']
        });
    };
    AgencyAdminPaymentComponent.prototype.newEditFormBuild = function () {
        this.editTransForm = this.fb.group({
            transArraycollection: this.fb.array([this.createItem()])
        });
    };
    Object.defineProperty(AgencyAdminPaymentComponent.prototype, "f", {
        get: function () { return this.transactionForm.controls; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AgencyAdminPaymentComponent.prototype, "p", {
        get: function () { return this.paymentMethodForm.controls; },
        enumerable: true,
        configurable: true
    });
    /** method for Form array for transaction items */
    AgencyAdminPaymentComponent.prototype.createItem = function () {
        return this.fb.group({
            transactionTypeID: [''],
            studentID: [''],
            description: [''],
            amount: ['']
        });
    };
    /** Method to add new transaction into form array while edit payment*/
    AgencyAdminPaymentComponent.prototype.addTrans = function () {
        this.transFieldCount++;
        this.tempTransArry.push({ 'id': this.transFieldCount });
        this.items = this.editTransForm.get('transArraycollection');
        this.items.push(this.createItem());
        this.displayTransList = this.tempTransArry;
    };
    /**Remove trans heads on minus button */
    AgencyAdminPaymentComponent.prototype.removeFood = function (data) {
        var index = this.displayTransList.findIndex(function (r) { return r.id === data.id; });
        this.items = this.editTransForm.get('transArraycollection');
        this.items.removeAt(index);
        this.displayTransList.splice(index, 1);
    };
    AgencyAdminPaymentComponent.prototype.verifyEditTransaction = function () {
        this.saveHeadTransaction();
    };
    /**To create dynamic trasaction master list for discription drop down */
    AgencyAdminPaymentComponent.prototype.pushValues = function () {
        var tempArray = [];
        this.trasactionMasterList.push(tempArray);
    };
    /** Get master transaction  master list for dropdown by API */
    AgencyAdminPaymentComponent.prototype.getTrasactionMasterList = function (value, i) {
        var _this = this;
        this.trasactionMasterList[i] = [];
        this.pushValues();
        var req = {
            'TransactionTypeID': value,
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_8__["AgencyAPIURLs"].GetTransactionMaster, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.trasactionMasterList[i] = res.body.data;
                _this.spinner.hide();
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    /** Save Payment heads and subheads for perticuler student */
    AgencyAdminPaymentComponent.prototype.saveHeadTransaction = function () {
        var _this = this;
        var transArrayReq = [];
        this.spinner.show();
        if (this.validateEditPaymentForm()) {
            this.spinner.hide();
            this.notification.warning({ message: 'Please enter valid data', title: '' });
        }
        else {
            if (this.items.value.length !== 0 && this.items !== undefined) {
                this.items.value.forEach(function (element) {
                    transArrayReq.push({
                        'id': 0,
                        'transactionTypeID': element.transactionTypeID,
                        'studentID': _this.selectedStudentId,
                        'description': element.description,
                        'amount': element.amount,
                        'agencyID': _this.agencyId,
                        'invoiceFromDate': _this.invoiceFromDate,
                        'invoiceToDate': _this.invoiceToDate,
                        'invoiceNo': _this.invoiceNo,
                        'totalAmount': _this.totalAmount
                    });
                });
            }
            this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_8__["AgencyAPIURLs"].SaveTransactionDetailsInfo, transArrayReq, null).subscribe(function (res) {
                if (res.body.statusCode === 200) {
                    _this.notification.success({ message: 'Transaction Details has been saved', title: '' });
                    _this.getDuePaymentAccordingToAgency();
                    $('.editpayment').modal('hide');
                    _this.spinner.hide();
                }
                else {
                    _this.spinner.hide();
                    _this.error.unknownError();
                }
            }, function (err) {
                _this.spinner.hide();
                _this.error.commonError(err);
            });
        }
    };
    /**Method to check validation for edit payment form */
    AgencyAdminPaymentComponent.prototype.validateEditPaymentForm = function () {
        var status = false;
        if (this.items.value.length !== 0 && this.items !== undefined) {
            this.items.value.forEach(function (element) {
                if (element.transactionTypeID !== '' && element.amount !== '') {
                    status = false;
                }
                else {
                    status = true;
                }
            });
        }
        return status;
    };
    AgencyAdminPaymentComponent.prototype.getPaymentDetails = function () {
        var _this = this;
        //this.spinner.show();
        debugger;
        var model = {
            'agencyID': this.commonService.getAgencyId()
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_8__["AgencyAPIURLs"].GetStripeDetailsForAgency, model, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                if (res.body.data === [] || res.body.data === null || res.body.data.length === 0) {
                    _this.showBtnCreateAcc = true;
                    if (_this.authCode) {
                        _this.confirm();
                    }
                }
                else {
                    _this.showBtnCreateAcc = false;
                }
                //this.spinner.hide();
            }
            else {
                //this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            //this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminPaymentComponent.prototype.confirm = function () {
        var _this = this;
        this.spinner.show();
        var model = {
            'code': this.authCode,
            'agencyID': this.commonService.getAgencyId(),
            'currentUserId': this.commonService.getReleventUserId('userdetails')
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_8__["AgencyAPIURLs"].CreateStripeAccount, model, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.showBtnCreateAcc = false;
                _this.notification.success({ message: 'Strip account has been created successfully!', title: '' });
                _this.spinner.hide();
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminPaymentComponent.prototype.getDuePaymentAccordingToAgency = function () {
        var _this = this;
        this.loader = true;
        this.paymentDueList = [];
        this.spinner.show();
        var model = {
            'agencyID': this.commonService.getAgencyId(),
            'limit': this.limit,
            'page': this.pageNo,
            'studentName': this.searchByStudentName
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_8__["AgencyAPIURLs"].GetDuePaymentAccordingToAgency, model, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.totalRecord = res.body.totalRows;
                if (res.body.data !== null && res.body.data !== [] && res.body.data !== []) {
                    res.body.data.forEach(function (x) {
                        x.invoiceFromDate = new Date(x.invoiceFromDate);
                        x.invoiceToDate = new Date(x.invoiceToDate);
                    });
                    _this.paymentDueList = res.body.data;
                }
                _this.spinner.hide();
                _this.loader = false;
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminPaymentComponent.prototype.getLedgerReport = function () {
        var _this = this;
        this.loader = true;
        this.reportList = [];
        this.spinner.show();
        var data = {
            'agencyID': this.commonService.getAgencyId(),
            'ParentName': this.searchByParentName,
            'page': this.pageNo,
            'limit': this.limit,
            'fromDate': this.fromDate ? this.fromDate : this.blankDate,
            'toDate': this.toDate ? this.toDate : this.blankDate,
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_8__["AgencyAPIURLs"].GetParentLedger, data, null).subscribe(function (res) {
            _this.totalRecord = res.body.totalRows;
            if (res.body.statusCode === 200) {
                _this.spinner.hide();
                _this.reportList = res.body.data;
                console.log(_this.reportList, '  testtttttttt');
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
            _this.loader = false;
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminPaymentComponent.prototype.getPaymentHistory = function () {
        var _this = this;
        this.loader = true;
        this.paymentHistoryList = [];
        //this.spinner.show();
        var model = {
            'agencyID': this.commonService.getAgencyId(),
            'limit': this.limit,
            'page': this.pageNo,
            'studentName': this.searchByStudentName,
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_8__["AgencyAPIURLs"].GetPaymentDetailsForAgency, model, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.totalRecord = res.body.totalRows;
                if (res.body.data !== null && res.body.data !== [] && res.body.data !== []) {
                    res.body.data.forEach(function (x) {
                        x.paymentFromDate = new Date(x.paymentFromDate);
                        x.paymentToDate = new Date(x.paymentToDate);
                        x.paymentDate = new Date(x.paymentDate);
                    });
                    _this.paymentHistoryList = res.body.data;
                }
                //this.spinner.hide();
                _this.loader = false;
            }
        }, function (err) {
            //this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminPaymentComponent.prototype.invoiceSchedular = function () {
        var model = {
            'Frequency': 'Weekly'
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_8__["AgencyAPIURLs"].InvoiceSchedular, model, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
            }
        }, function (err) {
        });
    };
    AgencyAdminPaymentComponent.prototype.paginate = function (event, tab) {
        this.markAllStudents = false;
        this.studentListId = [];
        this.pageNo = event.page;
        if (tab === 1) {
            this.getLedgerReport();
        }
        else if (tab === 2) {
            this.getPaymentHistory();
        }
        else if (tab === 3) {
            this.getDuePaymentAccordingToAgency();
        }
        else if (tab === 4) {
            this.getStudentsList();
        }
        else {
            this.getParentsListForSendBalance();
        }
    };
    // onTabChangeHistory(event) {
    //   this.studentListId = [];
    //   this.markAllStudents = false;
    //   this.searchByStudentName = '';
    //   this.totalRecord = 0;
    //   this.pageNo = 0;
    //   this.paginator.changePageToFirst(event);
    //   this.duePagintor.changePageToFirst(event);
    //   this.addfeesPaginator.changePageToFirst(event);
    //   this.sndbalancePaginator.changePageToFirst(event);
    //   this.getPaymentDetails();
    //   this.getPaymentHistory();
    // }
    // onTabChangeDue(event) {
    //   this.studentListId = [];
    //   this.markAllStudents = false;
    //   this.searchByStudentName = '';
    //   this.searchByParentName = '';
    //   this.totalRecord = 0;
    //   this.pageNo = 0;
    //   this.paginator.changePageToFirst(event);
    //   this.duePagintor.changePageToFirst(event);
    //   this.addfeesPaginator.changePageToFirst(event);
    //   this.sndbalancePaginator.changePageToFirst(event);
    //   this.getDuePaymentAccordingToAgency();
    // }
    // onTabChangeAddFees(event) {
    //   console.log(event , 'Add Fees');
    //   this.studentListId = [];
    //   this.markAllStudents = false;
    //   this.searchByStudentName = '';
    //   this.searchByParentName = '';
    //   this.totalRecord = 0;
    //   this.pageNo = 0;
    //   // this.paginator.changePageToFirst(event);
    //   // this.duePagintor.changePageToFirst(event);
    //   this.addfeesPaginator.changePageToFirst(event);
    //   // this.sndbalancePaginator.changePageToFirst(event);
    //   this.getStudentsList();
    // }
    // onTabSendBalance(event) {
    //   this.studentListId = [];
    //   this.markAllStudents = false;
    //   this.searchByStudentName = '';
    //   this.searchByParentName = '';
    //   this.totalRecord = 0;
    //   this.pageNo = 0;
    //   this.paginator.changePageToFirst(event);
    //   this.duePagintor.changePageToFirst(event);
    //   this.addfeesPaginator.changePageToFirst(event);
    //   this.sndbalancePaginator.changePageToFirst(event);
    //   this.getParentsListForSendBalance();
    // }
    AgencyAdminPaymentComponent.prototype.onTabPaymentLedger = function (event) {
        this.studentListId = [];
        this.markAllStudents = false;
        this.searchByStudentName = '';
        this.searchByParentName = '';
        this.totalRecord = 0;
        this.pageNo = 0;
        this.searchByParentName = '';
        // this.paginator.changePageToFirst(event);
        // this.duePagintor.changePageToFirst(event);
        //this.addfeesPaginator.changePageToFirst(event);
        // this.sndbalancePaginator.changePageToFirst(event);
        this.getLedgerReport();
    };
    // this method use to check validation before paymnet done.
    AgencyAdminPaymentComponent.prototype.payFinalAmount = function () {
        var value = +this.paymentMethodForm.controls.amount.value;
        if (this.paymentMethodForm.valid) {
            if (!isNaN(value)) {
                this.isPartialpayment = false;
                // if balance amount is used START
                if (this.useBalanceAmount && (this.actualBalanceAmount < this.generatedTutionFee)) {
                    var amountAfterBalanceUsed = +(this.generatedTutionFee - this.actualBalanceAmount).toFixed(2);
                    this.debitAdvanceAmount = this.actualBalanceAmount;
                    if (value > amountAfterBalanceUsed) {
                        this.notification.warning({
                            message: 'You have enter more amount than required ',
                            title: 'Required amount:' + amountAfterBalanceUsed
                        });
                    }
                    else if (value <= 0 || value > this.generatedTutionFee) {
                        this.notification.warning({ message: 'Amount should be less than payment Amount or greater than 0', title: '' });
                    }
                    else if (amountAfterBalanceUsed > value) {
                        this.isPartialpayment = true; // this is partial payment
                        this.partialAmount = this.generatedTutionFee - (value + this.actualBalanceAmount);
                        this.payOffline(this.paymentDetails);
                    }
                    else {
                        this.payOffline(this.paymentDetails);
                    }
                }
                else if (this.useBalanceAmount && (this.actualBalanceAmount >= this.generatedTutionFee)) {
                    this.isPartialpayment = false;
                    this.debitAdvanceAmount = this.generatedTutionFee;
                    this.paymentMethodForm.controls['amount'].setValue(0);
                    this.paymentMethodForm.controls['amount'].updateValueAndValidity();
                    this.payOffline(this.paymentDetails);
                }
                else {
                    this.isPartialpayment = false;
                    this.debitAdvanceAmount = 0;
                    if (this.disabledTotlAmount) {
                        this.payOffline(this.paymentDetails);
                    }
                    else {
                        if ((value > this.generatedTutionFee
                            || value < 1)) {
                            this.notification.warning({ message: 'Amount should be less than Payment Amount or greater than 0', title: '' });
                        }
                        else if (value < this.generatedTutionFee) {
                            this.isPartialpayment = true;
                            this.partialAmount = this.generatedTutionFee - value;
                            this.payOffline(this.paymentDetails);
                        }
                        else {
                            this.payOffline(this.paymentDetails);
                        }
                    }
                }
            }
            else {
                this.spinner.hide();
                this.notification.warning({ message: 'Please enter valid amount ', title: '' });
            }
        }
        else {
            this.spinner.hide();
            this.commonService.validateAllFields(this.paymentMethodForm);
        }
    };
    AgencyAdminPaymentComponent.prototype.payOffline = function (value) {
        var _this = this;
        this.confirmationService.confirm({
            message: 'Do you want to proceed for this offline payment?',
            accept: function () {
                _this.paymentSuccess(value);
            }
        });
    };
    AgencyAdminPaymentComponent.prototype.paymentSuccess = function (value) {
        var _this = this;
        this.spinner.show();
        var model = {
            'tokenID': 0,
            'agencyID': this.commonService.getAgencyId(),
            'parentID': value.parentID,
            'studentID': value.studentID,
            'SourceToken': 0,
            'CreatedBy': this.commonService.getReleventUserId('userdetails'),
            'paymentFromDate': value.invoiceFromDate.toDateString(),
            'paymentToDate': value.invoiceToDate.toDateString(),
            'totalAmount': value.totalAmount,
            'InvoiceDetailsID': value.id,
            'IsOffline': true,
            'ChequeNo': this.paymentMethodForm.controls.chequeno.value,
            'CardNo': this.paymentMethodForm.controls.cardno.value,
            'AmoutPaid': this.paymentMethodForm.controls.amount.value,
            'BalanceAmount': 0,
            'DiscountAmount': value.discountAmount,
            'PaymentType': this.paymentMethodForm.controls.paymenttype.value,
            'DebitAdvanceAmount': this.debitAdvanceAmount,
            'CreditAdvanceAmount': 0,
            'BalanceAdvanceAmount': this.balanceAmount,
            'IsBalaceAmountused': this.useBalanceAmount,
            'IsPartialPayment': this.isPartialpayment,
            'PartialAmount': this.partialAmount,
            'SubsidyAmount': this.subsidyAmount,
            'SubsidyDetailsID': this.subsidyDetailsID ? this.subsidyDetailsID : 0
        };
        this.apiService.postData(_parent_shared_constant__WEBPACK_IMPORTED_MODULE_10__["ParentAPIURLs"].PaymentDetails, model, null).subscribe(function (result) {
            if (result.body.statusCode === 200) {
                $('.paymentmethod').modal('hide');
                _this.getDuePaymentAccordingToAgency();
                _this.notification.success({ message: 'Payment Successfull!', title: '' });
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.error.commonError(err);
            _this.spinner.hide();
        });
    };
    AgencyAdminPaymentComponent.prototype.getTrasactionTypeList = function () {
        var _this = this;
        this.trasactionTypeList = [];
        var req = {
            'AgencyID': 0,
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_8__["AgencyAPIURLs"].GetTransactionType, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.trasactionTypeList = res.body.data;
                //this.spinner.hide();
            }
            else {
                //this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            //this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminPaymentComponent.prototype.saveTransMasterInformation = function () {
        var _this = this;
        this.spinner.show();
        if (this.transactionForm.valid) {
            var data = {
                'agencyID': this.commonService.getAgencyId(),
                'TransactionTypeID': this.transactionForm.controls.transcationtype.value,
                'Description': this.transactionForm.controls.transdescription.value
            };
            this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_8__["AgencyAPIURLs"].SaveTransactionMasterInfo, data, null).subscribe(function (res) {
                if (res.body.statusCode === 200) {
                    $('.addtransactiontype').modal('hide');
                    _this.notification.success({ message: 'Transaction master added successfully', title: '' });
                    _this.spinner.hide();
                }
                else if (res.body.statusCode === 987) {
                    _this.notification.warning({ message: 'Already Exist', title: '' });
                    _this.spinner.hide();
                }
                else {
                    _this.spinner.hide();
                    _this.error.unknownError();
                }
            }, function (err) {
                _this.spinner.hide();
                _this.error.commonError(err);
            });
        }
        else {
            this.spinner.hide();
            this.notification.warning({ message: 'Please enter valid data', title: '' });
        }
    };
    AgencyAdminPaymentComponent.prototype.getTransactionMasterDetails = function () {
        var _this = this;
        this.transMasterList = [];
        var req = {
            'AgencyID': 0,
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_8__["AgencyAPIURLs"].GetTransactionMasterDetails, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.transMasterList = res.body.data;
                //this.spinner.hide();
            }
            else {
                //this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            //this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    /**To clear Transition master form */
    AgencyAdminPaymentComponent.prototype.clearTransMasterForm = function () {
        this.createTransMaster();
    };
    /**Clear Trans head form method */
    AgencyAdminPaymentComponent.prototype.clearTranHeadForm = function () {
        this.totalAmount = 0;
        this.displayTransList = [];
        this.items = this.clearItems;
        this.newEditFormBuild();
        this.items = this.editTransForm.get('transArraycollection');
        this.pushSingleArryForTransHead();
    };
    AgencyAdminPaymentComponent.prototype.clearPaymentForm = function () {
        this.isPartialpayment = false;
        this.useBalanceAmount = false;
        this.totalAmount = 0;
        this.displayTransList = [];
        this.items = this.clearItems;
        this.newEditFormBuild();
        this.items = this.editTransForm.get('transArraycollection');
        this.pushSingleArryForTransHead();
        this.createPaymentMethodForm();
    };
    AgencyAdminPaymentComponent.prototype.getPaymentType = function () {
        if (this.paymentMethodForm.controls.paymenttype.value === 'Check') {
            this.showFildName = 'cheque';
        }
        else if (this.paymentMethodForm.controls.paymenttype.value === 'Debit Card' ||
            this.paymentMethodForm.controls.paymenttype.value === 'Credit Card') {
            this.showFildName = 'card';
        }
        else {
            this.showFildName = 'cash';
        }
    };
    /**Methos to calculate discount amount  */
    AgencyAdminPaymentComponent.prototype.addDiscount = function () {
        this.discountAmount = 0;
        this.totalAmount = this.generatedTutionFee;
        if (this.paymentMethodForm.controls.subsidy.value) {
            var discountpercentage = +this.paymentMethodForm.controls.subsidy.value;
            var totlFee = +this.generatedTutionFee;
            this.discountAmount = (totlFee * (discountpercentage / 100));
            this.discountAmount = +this.discountAmount.toFixed(2);
            this.totalAmount = this.totalAmount - this.discountAmount;
            this.paymentMethodForm.controls['amount'].setValue(this.totalAmount);
            this.paymentMethodForm.controls['amount'].updateValueAndValidity();
        }
        else {
            this.totalAmount = this.generatedTutionFee;
            this.paymentMethodForm.controls['amount'].setValue(this.totalAmount);
            this.paymentMethodForm.controls['amount'].updateValueAndValidity();
        }
    };
    AgencyAdminPaymentComponent.prototype.getStudentDetails = function (data) {
        this.paymentDetails = data;
        if (data) {
            this.subsidyDetailsID = data.subsidyDetailsID;
            this.actualBalanceAmount = data.advancePaymentBalanceAmount;
            this.originalFee = data.totalAmount;
            this.balanceAmount = data.advancePaymentBalanceAmount;
            this.amountToPay = data.totalAmount;
            this.subsidyAmount = data.subsidyAmount;
            if (this.originalFee <= this.subsidyAmount) {
                this.disabledTotlAmount = true;
                this.noNeedAdvancebalence = true;
            }
            else {
                this.disabledTotlAmount = false;
                this.noNeedAdvancebalence = false;
            }
            if (data.totalAmount <= data.subsidyAmount) {
                this.variablePayAmoount = 0; // data.subsidyAmount - data.totalAmount;
                this.generatedTutionFee = 0; // data.subsidyAmount - data.totalAmount;
                this.amountToPay = 0;
            }
            else {
                this.variablePayAmoount = data.totalAmount - data.subsidyAmount;
                this.generatedTutionFee = data.totalAmount - data.subsidyAmount;
                this.amountToPay = this.variablePayAmoount;
            }
            this.selectedStudentId = data.studentID;
            this.invoiceNo = data.invoiceNo;
            this.paymentMethodForm.controls['amount'].setValue(this.variablePayAmoount);
            this.paymentMethodForm.controls['amount'].updateValueAndValidity();
            this.invoiceFromDate = new Date(data.invoiceFromDate).toDateString();
            this.invoiceToDate = new Date(data.invoiceToDate).toDateString();
        }
    };
    AgencyAdminPaymentComponent.prototype.getPaymentHistoryDetails = function (data) {
        if (data) {
            this.paymentHistoryDetails.amoutPaid = data.amoutPaid;
            this.paymentHistoryDetails.discountAmount = data.discountAmount;
            this.paymentHistoryDetails.totalAmount = data.totalAmount;
            this.paymentHistoryDetails.paymentType = data.paymentType;
            this.paymentHistoryDetails.chequeNo = data.chequeNo;
            this.paymentHistoryDetails.cardNo = data.cardNo;
            this.paymentHistoryDetails.subsidyAmount = data.subsidyAmount;
        }
    };
    AgencyAdminPaymentComponent.prototype.saveExtraFeesInfoInformation = function () {
        var _this = this;
        this.extraChargeName = this.extraChargeName.trim();
        if (this.extraChargeName === '' || this.extraChargeName === undefined && this.extraChargeName === null) {
            this.notification.warning({ message: 'Please enter valid data', title: '' });
        }
        else {
            this.spinner.show();
            var data = {
                'agencyID': this.commonService.getAgencyId(),
                'ExtraChargeName': this.extraChargeName
            };
            this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_8__["AgencyAPIURLs"].SaveExtraChargeFeeMasterInfo, data, null).subscribe(function (res) {
                if (res.body.statusCode === 200) {
                    $('.extracharge').modal('hide');
                    _this.notification.success({ message: 'New Fees Type added successfully', title: '' });
                    _this.spinner.hide();
                }
                else {
                    _this.spinner.hide();
                    _this.error.unknownError();
                }
            }, function (err) {
                _this.spinner.hide();
                _this.error.commonError(err);
            });
        }
    };
    AgencyAdminPaymentComponent.prototype.clearFeesType = function () {
        this.extraChargeName = '';
    };
    AgencyAdminPaymentComponent.prototype.getExtraFeesChargeMaster = function () {
        var _this = this;
        this.getExtraFeesChargeList = [];
        var req = {
            'AgencyID': this.commonService.getAgencyId(),
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_8__["AgencyAPIURLs"].GetExtraFeeChargeMasterList, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.getExtraFeesChargeList = res.body.data;
                //this.spinner.hide();
            }
            else {
                //this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            //this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminPaymentComponent.prototype.showHideExtraCharge = function () {
        this.showExtraFeesForm = !this.showExtraFeesForm;
    };
    AgencyAdminPaymentComponent.prototype.calculateTotleAmount = function () {
    };
    AgencyAdminPaymentComponent.prototype.addExtraFees = function () {
    };
    /**  Add fees Tab */
    /** method to go add fees page */
    AgencyAdminPaymentComponent.prototype.goToAddFees = function (values) {
        var navigationExtras = {
            queryParams: {
                'parentId': values.parentID,
                'studentId': values.studentId,
                'studentName': values.studentName,
                'parentName': values.parentName,
                'clasessId': values.classesId,
                'categoryId': values.categoryID,
                'categoryname': values.categoryName,
            }
        };
        this.router.navigate(['./home/agencydashboard/addfees'], navigationExtras);
    };
    AgencyAdminPaymentComponent.prototype.getStudentsList = function () {
        var _this = this;
        this.loader = true;
        this.markAllStudents = false;
        this.studentList = [];
        this.spinner.show();
        var data = {
            'agencyID': this.commonService.getAgencyId(),
            'classID': this.searchByClass,
            'studentID': 0,
            'studentName': this.searchByStudentName,
            'page': this.pageNo,
            'limit': this.limit,
        };
        this.apiService.postData(src_app_layout_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_11__["TeacherAPIURLs"].GetAllStudents, data, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.totalRecord = res.body.totalRows;
                _this.spinner.hide();
                _this.studentList = res.body.data;
                _this.loader = false;
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminPaymentComponent.prototype.keyDownFunction = function (event, no) {
        debugger;
        if (event.keyCode === 13) {
            if (no === 2) {
                this.getDuePaymentAccordingToAgency();
            }
            else if (no === 3) {
                this.getStudentsList();
            }
            else if (no === 1) {
                this.getLedgerReport();
            }
            else {
                this.getParentsListForSendBalance();
            }
            // rest of your code
        }
    };
    AgencyAdminPaymentComponent.prototype.getSingleMarkedStudent = function (value, event) {
        var classarr = this.convertClassArray(value.classesId);
        this.markAllStudents = false;
        if (event.target.checked === true) {
            if (this.studentListId.length === 0) {
                this.studentListId.push({
                    StudentID: value.studentId, ClassesID: classarr, CategoryID: value.categoryID, AgencyID: this.agencyId,
                    ParentID: value.parentID
                });
                var no = this.studentList.findIndex(function (r) { return r.studentId === value.studentId; });
                if (no !== -1) {
                    this.studentList[no].isMarked = true;
                }
            }
            else {
                var index = this.studentListId.findIndex(function (r) { return r === value.studentId; });
                if (index === -1) {
                    this.studentListId.push({
                        StudentID: value.studentId, ClassesID: classarr, CategoryID: value.categoryID, AgencyID: this.agencyId,
                        ParentID: value.parentID
                    });
                    var no = this.studentList.findIndex(function (r) { return r.studentId === value.studentId; });
                    if (no !== -1) {
                        this.studentList[no].isMarked = true;
                    }
                }
            }
        }
        else if (event.target.checked === false) {
            if (this.studentListId.length > 0) {
                var index = this.studentListId.findIndex(function (r) { return r.StudentID === value.studentId; });
                this.studentListId.splice(index, 1);
                var no = this.studentList.findIndex(function (r) { return r.studentId === value.studentId; });
                if (no !== -1) {
                    this.studentList[no].isMarked = false;
                }
            }
        }
    };
    /**Get student id using checkbox */
    AgencyAdminPaymentComponent.prototype.getAllMarkedStudents = function (event, students) {
        var _this = this;
        if (event.target.checked === true) {
            this.studentListId = [];
            students.forEach(function (data) {
                var classarr = [];
                classarr = _this.convertClassArray(data.classesId);
                _this.studentListId.push({
                    StudentID: data.studentId, ClassesID: classarr,
                    CategoryID: data.categoryID, AgencyID: _this.agencyId, ParentID: data.parentID
                });
                data.isMarked = true;
            });
        }
        else {
            this.studentListId = [];
            students.forEach(function (element) {
                element.isMarked = false;
            });
        }
    };
    // method to convert string to number array
    AgencyAdminPaymentComponent.prototype.convertClassArray = function (str) {
        if (str) {
            var intArray = [];
            intArray = str.split(',');
            var temparr_1 = [];
            intArray.forEach(function (res) {
                temparr_1.push(parseInt(res, 10));
            });
            return temparr_1;
        }
    };
    AgencyAdminPaymentComponent.prototype.openBultCalForm = function () {
        this.fromCalDate = this.clearDate;
        this.toCalDate = this.clearDate;
        if (this.studentListId.length < 1) {
            this.notification.warning({ message: 'please select student', title: '' });
        }
        else {
            $('.bulkCal').modal('show');
        }
    };
    AgencyAdminPaymentComponent.prototype.saveBulkCalculation = function () {
        if (this.fromCalDate && this.toCalDate) {
            if (this.fromCalDate.setHours(0, 0, 0) > this.toCalDate.setHours(0, 0, 0)) {
                this.notification.warning({ message: 'From Date should be less than To Date', title: '' });
            }
            else {
                this.successSaveBulkCalculation();
            }
        }
        else {
            this.notification.warning({ message: 'Please select date(s)', title: '' });
        }
    };
    AgencyAdminPaymentComponent.prototype.successSaveBulkCalculation = function () {
        var _this = this;
        this.studentListId.forEach(function (data) {
            data.FromDate = _this.fromCalDate.toDateString();
            data.ToDate = _this.toCalDate.toDateString();
        });
        var bulk = {
            'BulkCalVM': this.studentListId
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_8__["AgencyAPIURLs"].BulkFeeCalculation, bulk, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.markAllStudents = false;
                $('.bulkCal').modal('hide');
                _this.getStudentsList();
                _this.spinner.hide();
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    // Method to use  balace amount (credit amount) for payment
    AgencyAdminPaymentComponent.prototype.moveBalance = function () {
        if (this.useBalanceAmount === true) {
            if (this.actualBalanceAmount >= this.generatedTutionFee) {
                this.disabledTotlAmount = true;
                this.balanceAmount = this.actualBalanceAmount - this.generatedTutionFee;
                this.amountToPay = 0; // no need to pay because balance amount is enough to pay
                this.paymentMethodForm.controls['amount'].setValue(this.amountToPay);
                this.paymentMethodForm.controls['amount'].updateValueAndValidity();
            }
            else {
                this.disabledTotlAmount = false;
                this.amountToPay = (this.generatedTutionFee - this.actualBalanceAmount).toFixed(2);
                this.balanceAmount = 0;
                this.paymentMethodForm.controls['amount'].setValue(this.amountToPay);
                this.paymentMethodForm.controls['amount'].updateValueAndValidity();
            }
        }
        else {
            this.disabledTotlAmount = false;
            this.paymentMethodForm.controls['amount'].setValue(this.generatedTutionFee);
            this.paymentMethodForm.controls['amount'].updateValueAndValidity();
            this.amountToPay = this.generatedTutionFee;
            this.balanceAmount = this.actualBalanceAmount;
        }
    };
    AgencyAdminPaymentComponent.prototype.calculateAmountToPay = function () {
        this.amountToPay = +this.paymentMethodForm.controls.amount.value;
    };
    AgencyAdminPaymentComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-agency-admin-payment',
            template: __webpack_require__(/*! ./agency-admin-payment.component.html */ "./src/app/layout/agency-admin/components/agency-admin-payment/agency-admin-payment.component.html"),
            styles: [__webpack_require__(/*! ./agency-admin-payment.component.css */ "./src/app/layout/agency-admin/components/agency-admin-payment/agency-admin-payment.component.css")]
        }),
        __metadata("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_1__["ActivatedRoute"], _shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_2__["AgencyApiService"], _shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_9__["ErrorHandlerService"],
            ngx_spinner__WEBPACK_IMPORTED_MODULE_3__["NgxSpinnerService"], _shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_4__["NotificationService"],
            _shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_5__["CommonService"], _angular_forms__WEBPACK_IMPORTED_MODULE_6__["FormBuilder"],
            primeng_api__WEBPACK_IMPORTED_MODULE_7__["ConfirmationService"], _angular_router__WEBPACK_IMPORTED_MODULE_1__["Router"]])
    ], AgencyAdminPaymentComponent);
    return AgencyAdminPaymentComponent;
}());



/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-plan-page/agency-admin-plan-page.component.css":
/*!************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-plan-page/agency-admin-plan-page.component.css ***!
  \************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".card-pricing {\r\n    z-index: 1;\r\n    border: 3px solid transparent;\r\n}\r\n.card-pricing .list-unstyled li {\r\n    padding: .5rem 0;\r\n    color: #6c757d;\r\n}\r\n.bg-primary{background:#58A7FE!important;font-size: 14px;}\r\n.card-pricing:hover {\r\n    z-index: 1;\r\n    border: 3px solid #58A7FE;\r\n    box-shadow:0 0.5rem 1rem rgba(0, 0, 0, 0.15) !important;\r\n}\r\n.active-plan {\r\n    color: black;\r\n    font-size: 14px;\r\n   font-weight: bold;\r\n}\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L2FnZW5jeS1hZG1pbi9jb21wb25lbnRzL2FnZW5jeS1hZG1pbi1wbGFuLXBhZ2UvYWdlbmN5LWFkbWluLXBsYW4tcGFnZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksVUFBVTtJQUNWLDZCQUE2QjtBQUNqQztBQUNBO0lBQ0ksZ0JBQWdCO0lBQ2hCLGNBQWM7QUFDbEI7QUFHQSxZQUFZLDRCQUE0QixDQUFDLGVBQWUsQ0FBQztBQUV6RDtJQUNJLFVBQVU7SUFDVix5QkFBeUI7SUFDekIsdURBQXVEO0FBQzNEO0FBQ0E7SUFDSSxZQUFZO0lBQ1osZUFBZTtHQUNoQixpQkFBaUI7QUFDcEIiLCJmaWxlIjoic3JjL2FwcC9sYXlvdXQvYWdlbmN5LWFkbWluL2NvbXBvbmVudHMvYWdlbmN5LWFkbWluLXBsYW4tcGFnZS9hZ2VuY3ktYWRtaW4tcGxhbi1wYWdlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2FyZC1wcmljaW5nIHtcclxuICAgIHotaW5kZXg6IDE7XHJcbiAgICBib3JkZXI6IDNweCBzb2xpZCB0cmFuc3BhcmVudDtcclxufVxyXG4uY2FyZC1wcmljaW5nIC5saXN0LXVuc3R5bGVkIGxpIHtcclxuICAgIHBhZGRpbmc6IC41cmVtIDA7XHJcbiAgICBjb2xvcjogIzZjNzU3ZDtcclxufVxyXG5cclxuXHJcbi5iZy1wcmltYXJ5e2JhY2tncm91bmQ6IzU4QTdGRSFpbXBvcnRhbnQ7Zm9udC1zaXplOiAxNHB4O31cclxuXHJcbi5jYXJkLXByaWNpbmc6aG92ZXIge1xyXG4gICAgei1pbmRleDogMTtcclxuICAgIGJvcmRlcjogM3B4IHNvbGlkICM1OEE3RkU7XHJcbiAgICBib3gtc2hhZG93OjAgMC41cmVtIDFyZW0gcmdiYSgwLCAwLCAwLCAwLjE1KSAhaW1wb3J0YW50O1xyXG59XHJcbi5hY3RpdmUtcGxhbiB7XHJcbiAgICBjb2xvcjogYmxhY2s7XHJcbiAgICBmb250LXNpemU6IDE0cHg7XHJcbiAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG59Il19 */"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-plan-page/agency-admin-plan-page.component.html":
/*!*************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-plan-page/agency-admin-plan-page.component.html ***!
  \*************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"wrapper\">\r\n    <div class=\"container-fluid\">\r\n  \r\n      <div class=\"pagetitle\">\r\n        <div>\r\n          <h2>Admin\r\n            <span>/ PlanPage </span>\r\n          </h2>\r\n        </div>\r\n      </div>\r\n  \r\n      <div class=\"d-flex justify-content-between align-items-center mt-20 subhead mb-20\">\r\n        <div>\r\n          <h3>Pricing Plan</h3>\r\n        </div>\r\n        <div>         \r\n        </div>\r\n      </div>  \r\n            \r\n\r\n            <div class=\"pricing card-deck card_section mt-20\" >\r\n              <div class=\"row\">\r\n                <div class=\"col-lg-3\" *ngFor=\"let plan of pricingPlanList\">\r\n                  <div   class=\"card card-pricing text-center px-3 mb-4\" >\r\n                    <span class=\"h6 w-60 mx-auto px-4 py-1 rounded-bottom bg-primary text-white shadow-sm\">{{plan.planName}}</span>\r\n                              \r\n                    <span class=\"active-plan\" *ngIf=\"plan.isActive\"> Plan Currently Active</span>\r\n                    \r\n                    <div class=\"bg-transparent card-header pt-4 border-0\">\r\n                      <h1 class=\"h1 font-weight-normal text-primary text-center mb-0\" data-pricing-value=\"1200\">$<span class=\"price\">{{plan.planPrice}}</span>\r\n                        <span class=\"h6 text-muted ml-2\" *ngIf=\"plan.frequency == 'month'\">/ per month</span>\r\n                        <span class=\"h6 text-muted ml-2\" *ngIf=\"plan.frequency == 'year'\">/ per year</span>\r\n                      </h1>\r\n                    </div>\r\n                    <div class=\"card-body pt-0\">\r\n                      <ul class=\"list-unstyled mb-4\">\r\n                        <li>Up to {{plan.numberofUsers}} users</li>\r\n                        <li class=\"listing\">{{plan.remark}}</li>                       \r\n                      </ul>                                        \r\n                      \r\n                      <button type=\"button\"  data-toggle=\"modal\" (click)=\"openCheckout(plan)\" class=\"btn btn-primary mb-3\">Purchase Plan</button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>   \r\n          </div>     \r\n    </div>\r\n  \r\n    \r\n  <div class=\"modal fade addplan\"  role=\"dialog\" aria-labelledby=\"myLargeModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-lg\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Logout</h5>\r\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n         <b>Please logout and login again to activate your subscription!</b>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <button type=\"button\"  class=\"btn btn-primary\" (click)=\"logout()\">Logout</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div> \r\n  </div>\r\n  <ngx-spinner type=\"ball-atom\" size=\"medium\" color=\"#58A7FE\"></ngx-spinner>"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-plan-page/agency-admin-plan-page.component.ts":
/*!***********************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-plan-page/agency-admin-plan-page.component.ts ***!
  \***********************************************************************************************************/
/*! exports provided: AgencyAdminPlanPageComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AgencyAdminPlanPageComponent", function() { return AgencyAdminPlanPageComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _admin_shared_constant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../admin/shared/constant */ "./src/app/layout/admin/shared/constant.ts");
/* harmony import */ var _shared_constdata__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../shared/constdata */ "./src/app/shared/constdata.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../shared/services/error-handler/error-handler.service */ "./src/app/shared/services/error-handler/error-handler.service.ts");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ngx-spinner */ "./node_modules/ngx-spinner/fesm5/ngx-spinner.js");
/* harmony import */ var _shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../shared/services/notification-service/notification.service */ "./src/app/shared/services/notification-service/notification.service.ts");
/* harmony import */ var _shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../shared/services/common/common.service */ "./src/app/shared/services/common/common.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var primeng_api__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! primeng/api */ "./node_modules/primeng/api.js");
/* harmony import */ var primeng_api__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(primeng_api__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var _shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../shared/services/agency-api-service/agency-api.service */ "./src/app/layout/agency-admin/components/shared/services/agency-api-service/agency-api.service.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};











var AgencyAdminPlanPageComponent = /** @class */ (function () {
    function AgencyAdminPlanPageComponent(apiService, error, spinner, notification, commonService, fb, route, confirmationService, renderer, router) {
        this.apiService = apiService;
        this.error = error;
        this.spinner = spinner;
        this.notification = notification;
        this.commonService = commonService;
        this.fb = fb;
        this.route = route;
        this.confirmationService = confirmationService;
        this.renderer = renderer;
        this.router = router;
        this.pricingPlanList = [];
        this.planId = 0;
    }
    AgencyAdminPlanPageComponent.prototype.ngOnInit = function () {
        this.getAllPricingPlan();
        this.createPlanForm();
    };
    AgencyAdminPlanPageComponent.prototype.getAllPricingPlan = function () {
        var _this = this;
        this.spinner.show();
        this.pricingPlanList = [];
        var req = {
            'limit': 0,
            'page': 0,
            'agencyID': this.commonService.getAgencyId(),
        };
        this.apiService.postData(_admin_shared_constant__WEBPACK_IMPORTED_MODULE_1__["AdminAPIURLs"].GetAllPricingPlanDetails, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.pricingPlanList = res.body.data;
                _this.spinner.hide();
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminPlanPageComponent.prototype.createPlanForm = function () {
        this.planForm = this.fb.group({
            agencyid: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required],
        });
    };
    AgencyAdminPlanPageComponent.prototype.getPlanDetails = function (plan) {
        this.createPlanForm();
        this.planId = plan.id;
    };
    Object.defineProperty(AgencyAdminPlanPageComponent.prototype, "f", {
        get: function () { return this.planForm.controls; },
        enumerable: true,
        configurable: true
    });
    AgencyAdminPlanPageComponent.prototype.subscribePlan = function () {
        var _this = this;
        this.spinner.show();
        if (this.planForm.valid) {
            var req = {
                'id': 0,
                'agencyID': this.planForm.value.agencyid,
                'planID': this.planId,
                'isOffline': true,
                'createdBy': 1
            };
            this.apiService.postData(_admin_shared_constant__WEBPACK_IMPORTED_MODULE_1__["AdminAPIURLs"].SaveSubscriptionInformation, req, null).subscribe(function (res) {
                if (res.body.statusCode === 200) {
                    $('.addplan').modal('hide');
                    _this.notification.success({ message: 'Subscription done', title: '' });
                    _this.spinner.hide();
                }
                else {
                    _this.error.unknownError();
                }
            }, function (err) {
                _this.error.commonError(err);
            });
        }
        else {
            this.spinner.hide();
            this.commonService.validateAllFields(this.planForm);
        }
    };
    AgencyAdminPlanPageComponent.prototype.openCheckout = function (value) {
        var _this = this;
        var amounttopay = value.planPrice;
        var handler = window.StripeCheckout.configure({
            key: _shared_constdata__WEBPACK_IMPORTED_MODULE_2__["AdminStripKey"].publishableKey,
            locale: 'auto',
            token: function (token) {
                _this.spinner.show();
                console.log(token);
                var model = {
                    'agencyID': _this.commonService.getAgencyId(),
                    'SourceToken': token.id,
                    'CreatedBy': _this.commonService.getReleventUserId('userdetails'),
                    'IsOffline': false,
                    'PlanID': value.id
                };
                console.log(model);
                _this.apiService.postData(_admin_shared_constant__WEBPACK_IMPORTED_MODULE_1__["AdminAPIURLs"].SaveSubscriptionInformation, model, null).subscribe(function (result) {
                    if (result.body.statusCode === 200) {
                        _this.spinner.hide();
                        _this.notification.success({ message: 'Subscription Successfull!', title: '' });
                        $('.addplan').modal('show');
                        console.log('data', result.body.data);
                    }
                    else if (result.body.statusCode === 205) {
                        _this.notification.warning({ message: 'Your previous subscription plan still active', title: '' });
                        _this.spinner.hide();
                    }
                    else {
                        _this.spinner.hide();
                        _this.error.unknownError();
                        console.log('err');
                    }
                }, function (err) {
                    _this.error.commonError(err);
                    _this.spinner.hide();
                });
            }
        });
        handler.open({
            name: 'Classroom Panda',
            description: 'Child Day Care',
            amount: amounttopay * 100,
            email: this.commonService.getAgencyemailid(),
        });
        this.globalListener = this.renderer.listenGlobal('window', 'popstate', function () {
            handler.close();
        });
    };
    AgencyAdminPlanPageComponent.prototype.logout = function () {
        $('.addplan').modal('hide');
        localStorage.removeItem('isauthenticated');
        localStorage.removeItem('usertype');
        localStorage.removeItem('path');
        localStorage.removeItem('userdetails');
        localStorage.removeItem('imagepath');
        this.router.navigate(['/']);
    };
    AgencyAdminPlanPageComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-agency-admin-plan-page',
            template: __webpack_require__(/*! ./agency-admin-plan-page.component.html */ "./src/app/layout/agency-admin/components/agency-admin-plan-page/agency-admin-plan-page.component.html"),
            styles: [__webpack_require__(/*! ./agency-admin-plan-page.component.css */ "./src/app/layout/agency-admin/components/agency-admin-plan-page/agency-admin-plan-page.component.css")]
        }),
        __metadata("design:paramtypes", [_shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_10__["AgencyApiService"], _shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_4__["ErrorHandlerService"],
            ngx_spinner__WEBPACK_IMPORTED_MODULE_5__["NgxSpinnerService"], _shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_6__["NotificationService"],
            _shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_7__["CommonService"], _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"], _angular_router__WEBPACK_IMPORTED_MODULE_8__["ActivatedRoute"],
            primeng_api__WEBPACK_IMPORTED_MODULE_9__["ConfirmationService"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["Renderer"], _angular_router__WEBPACK_IMPORTED_MODULE_8__["Router"]])
    ], AgencyAdminPlanPageComponent);
    return AgencyAdminPlanPageComponent;
}());



/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-post-activity/agency-admin-post-activity.component.css":
/*!********************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-post-activity/agency-admin-post-activity.component.css ***!
  \********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\r\ninput[type=\"radio\"]:checked + span {\r\n    color: #fff;\r\n    background-color: #58A7FE;\r\n    border-radius: 5px;\r\n    height: 28px;\r\n    padding: 0 20px;\r\n    line-height: 28px;\r\n    width: 100%;\r\n  }\r\n  \r\n  input[type=\"radio\"] + span{\r\n    color: #333;\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n    border-radius: 5px;\r\n    height: 28px;\r\n    line-height: 28px;\r\n    padding: 0 20px;\r\n    width: 100%;\r\n  }\r\n  \r\n  .ongo{    font-size: 14px;\r\n    font-weight: 400;\r\n    margin: 20px 0;}\r\n  \r\n  .info-icon{\r\n      margin-left: 300px;\r\n      font-size: 20px; \r\n      color: #383333;\r\n  }\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L2FnZW5jeS1hZG1pbi9jb21wb25lbnRzL2FnZW5jeS1hZG1pbi1wb3N0LWFjdGl2aXR5L2FnZW5jeS1hZG1pbi1wb3N0LWFjdGl2aXR5LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0lBQ0ksV0FBVztJQUNYLHlCQUF5QjtJQUN6QixrQkFBa0I7SUFDbEIsWUFBWTtJQUNaLGVBQWU7SUFDZixpQkFBaUI7SUFDakIsV0FBVztFQUNiOztFQUVBO0lBQ0UsV0FBVztFQUNiLGVBQWU7RUFDZixnQkFBZ0I7SUFDZCxrQkFBa0I7SUFDbEIsWUFBWTtJQUNaLGlCQUFpQjtJQUNqQixlQUFlO0lBQ2YsV0FBVztFQUNiOztFQUVBLFVBQVUsZUFBZTtJQUN2QixnQkFBZ0I7SUFDaEIsY0FBYyxDQUFDOztFQUVmO01BQ0Usa0JBQWtCO01BQ2xCLGVBQWU7TUFDZixjQUFjO0VBQ2xCIiwiZmlsZSI6InNyYy9hcHAvbGF5b3V0L2FnZW5jeS1hZG1pbi9jb21wb25lbnRzL2FnZW5jeS1hZG1pbi1wb3N0LWFjdGl2aXR5L2FnZW5jeS1hZG1pbi1wb3N0LWFjdGl2aXR5LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuaW5wdXRbdHlwZT1cInJhZGlvXCJdOmNoZWNrZWQgKyBzcGFuIHtcclxuICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzU4QTdGRTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgIGhlaWdodDogMjhweDtcclxuICAgIHBhZGRpbmc6IDAgMjBweDtcclxuICAgIGxpbmUtaGVpZ2h0OiAyOHB4O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgfVxyXG4gIFxyXG4gIGlucHV0W3R5cGU9XCJyYWRpb1wiXSArIHNwYW57XHJcbiAgICBjb2xvcjogIzMzMztcclxuICBmb250LXNpemU6IDE0cHg7XHJcbiAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgIGhlaWdodDogMjhweDtcclxuICAgIGxpbmUtaGVpZ2h0OiAyOHB4O1xyXG4gICAgcGFkZGluZzogMCAyMHB4O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgfVxyXG5cclxuICAub25nb3sgICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICAgIG1hcmdpbjogMjBweCAwO31cclxuXHJcbiAgICAuaW5mby1pY29ue1xyXG4gICAgICBtYXJnaW4tbGVmdDogMzAwcHg7XHJcbiAgICAgIGZvbnQtc2l6ZTogMjBweDsgXHJcbiAgICAgIGNvbG9yOiAjMzgzMzMzO1xyXG4gIH0iXX0= */"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-post-activity/agency-admin-post-activity.component.html":
/*!*********************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-post-activity/agency-admin-post-activity.component.html ***!
  \*********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"wrapper\">\r\n  <div class=\"container-fluid\">\r\n\r\n    <div class=\"pagetitle\">\r\n      <div>\r\n        <h2> Post Activity\r\n        </h2>\r\n      </div>\r\n\r\n      <div>\r\n        <button class=\"btn btn-red\" title=\"Click to apply approval\" (click)=\"checkReceiver()\">Approval Type</button>\r\n      </div>\r\n\r\n    </div>\r\n\r\n\r\n\r\n    <div class=\"subhead d-flex justify-content-between \">\r\n      <div>\r\n        <h3>Post Activity</h3>\r\n      </div>\r\n      <div class=\"info-icon\">\r\n        <i class=\"fa fa-info-circle\" (click)=\"OpenInfoVideo()\" data-toggle=\"modal\" aria-hidden=\"true\"\r\n          title=\"Information Video\"></i>\r\n      </div>\r\n    </div>\r\n\r\n    <ul class=\"nav nav-pills mt-20\" style=\"margin-bottom: 5px;\" id=\"pills-tab\" role=\"tablist\">\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link active\" id=\"approveimages\" data-toggle=\"pill\" href=\"#pills-approveimages\" role=\"tab\"\r\n          (click)=\"this.GetUnApprovedImages();\" aria-controls=\"pills-approveimages\" aria-selected=\"false\">Posted\r\n          Images</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" id=\"postactivity\" data-toggle=\"pill\" href=\"#pills-postactivity\"\r\n          (click)=\"this.getAllClassess();\" role=\"tab\" aria-controls=\"pills-postactivity\" aria-selected=\"true\">Post\r\n          Activities</a>\r\n      </li>\r\n    </ul>\r\n\r\n    <div class=\"tab-content\" id=\"pills-tabContent\">\r\n      <div class=\"tab-pane fade show active\" id=\"pills-approveimages\" role=\"tabpanel\" aria-labelledby=\"approveimages\">\r\n        <div class=\"innertable studentListSearch\">\r\n          <div class=\"table-responsive\">\r\n            <table class=\"table\">\r\n              <thead class=\"thead-light\">\r\n                <tr>\r\n                  <th scope=\"col\">Post Title</th>\r\n                  <th scope=\"col\">Student Name</th>\r\n                  <th scope=\"col\">Sender</th>\r\n                  <th scope=\"col\">Date</th>\r\n                  <th scope=\"col\" class=\"text-center\">Gallery</th>\r\n                  <th scope=\"col\">Action</th>\r\n                  <th scope=\"col\">Approve</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr *ngFor=\"let image of unApprovedImagesList\">\r\n                  <td>{{image.postTitle}}</td>\r\n                  <td>{{image.studentName}}</td>\r\n                  <td>{{image.sender}}</td>\r\n                  <td>{{image.postedDate| date}}</td>\r\n                  <td class=\"text-center\">\r\n                    <img *ngIf=\"image.imageServerPath != ''\" src=\"{{image.imageServerPath}}\" alt=\"\" class=\"galrythumb\">\r\n                  </td>\r\n                  <td>\r\n                    <a (click)=\"OpenImage(image)\">\r\n                      <i class=\"fa fa-eye\" aria-hidden=\"true\"></i>\r\n                    </a>\r\n                    <a (click)=\"DeleteImage(image)\">\r\n                      <i class=\"fa fa-trash\" aria-hidden=\"true\"></i>\r\n                    </a>\r\n                  </td>\r\n                  <td><button class=\"form-control\" class=\"btn btn-success\" (click)=\"ApprovalImage(image)\">Approve\r\n                      Image</button></td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n            <div class=\"text-center\">\r\n              <span *ngIf=\"unApprovedImagesList.length == 0 && !loader\" class=\"text-center\">No result found</span>\r\n            </div>\r\n          </div>\r\n          <!-- <p-paginator [alwaysShow]=\"false\" [rows]=\"limit\" [totalRecords]=\"totalRecord\"\r\n            (onPageChange)=\"paginate($event)\"></p-paginator> -->\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"tab-pane fade \" id=\"pills-postactivity\" role=\"tabpanel\" aria-labelledby=\"postactivity\">\r\n        <div class=\"leftfilter searchwitoutcard\">\r\n          <div class=\"row algcenter\">\r\n            <div class=\"search-date\">\r\n              <div class=\" label-text\">Search Date:</div>\r\n              <div class=\"pr15\">\r\n                <div class=\"form-group\">\r\n                  <input type=\"text\" placeholder=\"Serch by Date\" [(ngModel)]=\"searchByDate\" showWeekNumbers=\"false\"\r\n                    [maxDate]=\"today\" class=\"form-control mr15\" [bsConfig]=\"dpConfig\"\r\n                    (bsValueChange)=\"getSerchDate($event)\" bsDatepicker>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"search-class\">\r\n              <div class=\" label-text\">Search Class:</div>\r\n              <div class=\"pr15\">\r\n                <div class=\"form-group\">\r\n                  <select class=\"form-control\" placeholder=\"Serch\" (change)=\"getPostActivityList()\"\r\n                    [(ngModel)]=\"serchByClass\" id=\"exampleFormControlSelect1\">\r\n                    <option value=\"\">Select class</option>\r\n                    <option *ngFor=\"let classes of classList\" [value]=\"classes.classesID\">{{classes.className}}</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"filter-buttons\">\r\n              <button type=\"submit\" class=\"btn btn-send\" (click)=\"getPostActivityList()\">Search</button>\r\n            </div>\r\n\r\n          </div>\r\n\r\n        </div>\r\n        <div class=\"innertable studentListSearch\">\r\n          <div class=\"table-responsive\">\r\n            <table class=\"table\">\r\n              <thead class=\"thead-light\">\r\n                <tr>\r\n                  <th scope=\"col\">Post Title</th>\r\n                  <th scope=\"col\">Student Name</th>\r\n                  <th scope=\"col\">Sender</th>\r\n                  <th scope=\"col\">Date</th>\r\n                  <th scope=\"col\" class=\"text-center\">Gallery</th>\r\n                  <th scope=\"col\">Action</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr *ngFor=\"let post of postActivityList\">\r\n                  <td>{{post.postTitle}}</td>\r\n                  <td>{{post.studentName}}</td>\r\n                  <td>{{post.sender}}</td>\r\n                  <td>{{post.postedDate| date}}</td>\r\n                  <td class=\"text-center\">\r\n                    <div *ngIf=\"post.postActivityImages\">\r\n                      <img *ngFor=\"let img of post.postActivityImages  | slice:0:3\" src=\"{{img.imageServerPath}}\"\r\n                        onError=\"this.src='assets/img/user.png'\" alt=\"\" class=\"galrythumb\">\r\n                    </div>\r\n                    <div *ngIf=\"post.postActivityVideos\">\r\n                      <img *ngFor=\"let img of post.postActivityVideos\" src=\"assets/img/video.jpg\" alt=\"\"\r\n                        class=\"galrythumb\">\r\n                    </div>\r\n                    <a *ngIf=\"post.postActivityImages.length > 3\" class=\"defltthumb\" style=\"color:#FF6C6C\">3+</a>\r\n                  </td>\r\n                  <td>\r\n                    <a [routerLink]=\"['../activitydetails',post.id,post.classesID]\">\r\n                      <i class=\"fa fa-eye\" aria-hidden=\"true\"></i>\r\n                    </a>\r\n                    <a (click)=\"deletePost(post)\">\r\n                      <i class=\"fa fa-trash\" aria-hidden=\"true\"></i>\r\n                    </a>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n            <div class=\"text-center\">\r\n              <span *ngIf=\"postActivityList.length == 0 && !loader\" class=\"text-center\">No result found</span>\r\n            </div>\r\n          </div>\r\n          <p-paginator [alwaysShow]=\"false\" [rows]=\"limit\" [totalRecords]=\"totalRecord\"\r\n            (onPageChange)=\"paginate($event)\"></p-paginator>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <!-- For Auto Image Approval  -->\r\n\r\n    <div class=\"modal fade imageapproval\" data-backdrop=\"static\" style=\"z-index: 1100;\" id=\"breakout\" tabindex=\"-1\"\r\n      role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n      <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"exampleModalLabel\">Add/Update Image Approval Type</h5>\r\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <form [formGroup]=\"ImageApprovalForm\">\r\n              <div class=\"row mb-20 mt-20\">\r\n                <div class=\"col-lg-12\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"exampleInputEmail1\">Image Approval Type*</label>\r\n                    <select class=\"form-control\" placeholder=\"Approval Type\" formControlName=\"approvaltype\"\r\n                      id=\"exampleFormControlSelect1\">\r\n                      <option value=\"\">Select Approval Type</option>\r\n                      <option value=\"Manual\">Manual</option>\r\n                      <option value=\"Auto\">Auto</option>\r\n                    </select>\r\n                    <div *ngIf=\"f.approvaltype.invalid && (f.approvaltype.dirty || f.approvaltype.touched)\"\r\n                      class=\"text-left errormsg\">\r\n                      <span *ngIf=\"f.approvaltype.errors.required\">\r\n                        <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select approval type</span>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n            <button type=\"button\" class=\"btn btn-primary\" (click)=\"saveImageApprovalType()\">Add </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n\r\n    <!-- For Posted Image -->\r\n    <div class=\"modal fade\" id=\"unapproveimage\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"checkoutLabel\"\r\n      aria-hidden=\"true\">\r\n      <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"checkoutLabel\">Posted Image</h5>\r\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <div class=\"cont\" *ngIf=\"imagePath\">\r\n              <img *ngIf=\"imagePath\" [src]=\"imagePath\" alt=\"\" class=\"img-fluiud\" style=\"height: 300px; width: 480px;\">\r\n            </div>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- For Information Video -->\r\n    <div class=\"modal fade\" id=\"infovideo\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"checkoutLabel\"\r\n      aria-hidden=\"true\">\r\n      <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"checkoutLabel\">Information Video</h5>\r\n            <button type=\"button\" *ngIf=\"videoPath\" class=\"close\" (click)=\"PauseInfoVideo()\" data-dismiss=\"modal\"\r\n              aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n            <button type=\"button\" *ngIf=\"!videoPath\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <div class=\"cont video_section_pop\" *ngIf=\"videoPath\">\r\n              <video controls id=\"pausevideo\">\r\n                <source *ngIf=\"videoPath\" [src]=\"videoPath\" type=\"video/mp4\" />\r\n                <source *ngIf=\"videoPath\" [src]=\"videoPath\" type=\"video/ogg\" />\r\n                <source *ngIf=\"videoPath\" [src]=\"videoPath\" type=\"video/webm\" />\r\n                Browser not supported\r\n              </video>\r\n            </div>\r\n\r\n            <div class=\"cont video_section_pop\" *ngIf=\"!videoPath\">\r\n              Video Not Found\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n  </div>\r\n\r\n</div>\r\n<ngx-spinner type=\"ball-atom\" size=\"medium\" color=\"#58A7FE\"></ngx-spinner>\r\n<app-confirm-box></app-confirm-box>"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-post-activity/agency-admin-post-activity.component.ts":
/*!*******************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-post-activity/agency-admin-post-activity.component.ts ***!
  \*******************************************************************************************************************/
/*! exports provided: AgencyAdminPostActivityComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AgencyAdminPostActivityComponent", function() { return AgencyAdminPostActivityComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var ngx_bootstrap__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ngx-bootstrap */ "./node_modules/ngx-bootstrap/esm5/ngx-bootstrap.js");
/* harmony import */ var _shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../shared/services/error-handler/error-handler.service */ "./src/app/shared/services/error-handler/error-handler.service.ts");
/* harmony import */ var _shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../shared/services/notification-service/notification.service */ "./src/app/shared/services/notification-service/notification.service.ts");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ngx-spinner */ "./node_modules/ngx-spinner/fesm5/ngx-spinner.js");
/* harmony import */ var _shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../shared/services/common/common.service */ "./src/app/shared/services/common/common.service.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var primeng_api__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! primeng/api */ "./node_modules/primeng/api.js");
/* harmony import */ var primeng_api__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(primeng_api__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _teacher_shared_constant__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../teacher/shared/constant */ "./src/app/layout/teacher/shared/constant.ts");
/* harmony import */ var _shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../shared/services/agency-api-service/agency-api.service */ "./src/app/layout/agency-admin/components/shared/services/agency-api-service/agency-api.service.ts");
/* harmony import */ var _shared_constatant__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../shared/constatant */ "./src/app/layout/agency-admin/components/shared/constatant.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};











var AgencyAdminPostActivityComponent = /** @class */ (function () {
    function AgencyAdminPostActivityComponent(apiService, error, spinner, notification, fb, confirmationService, commonService) {
        this.apiService = apiService;
        this.error = error;
        this.spinner = spinner;
        this.notification = notification;
        this.fb = fb;
        this.confirmationService = confirmationService;
        this.commonService = commonService;
        this.classList = [];
        this.postActivityList = [];
        this.unApprovedImagesList = [];
        this.today = new Date();
        this.count = 0;
        this.pageNo = 0;
        this.limit = 10;
        this.totalRecord = 0;
        this.loader = true;
        this.videoPath = '';
        this.approvalType = '';
        this.imagePath = '';
        this.dpConfig = new ngx_bootstrap__WEBPACK_IMPORTED_MODULE_1__["BsDatepickerConfig"]();
    }
    AgencyAdminPostActivityComponent.prototype.ngOnInit = function () {
        this.searchByDate = new Date();
        this.dpConfig = Object.assign({}, { containerClass: 'theme-dark-blue' }, { showWeekNumbers: false });
        // this.getAllClassess();
        this.GetUnApprovedImages();
        this.getSectionVideo();
        this.GetApprovalType();
        this.createImageApprovalForm();
    };
    AgencyAdminPostActivityComponent.prototype.OpenInfoVideo = function (data) {
        $('#infovideo').modal('show');
    };
    AgencyAdminPostActivityComponent.prototype.getSectionVideo = function () {
        var _this = this;
        var req = {
            'SectionID': 10
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_8__["TeacherAPIURLs"].GetVideoForSection, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.videoPath = res.body.filePath;
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminPostActivityComponent.prototype.PauseInfoVideo = function () {
        var myVideo = document.getElementById('pausevideo');
        myVideo.pause();
        myVideo.currentTime = 0;
    };
    // For Image Approval
    AgencyAdminPostActivityComponent.prototype.checkReceiver = function () {
        $('.imageapproval').modal('show');
    };
    AgencyAdminPostActivityComponent.prototype.createImageApprovalForm = function () {
        this.ImageApprovalForm = this.fb.group({
            approvaltype: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].required]
        });
    };
    Object.defineProperty(AgencyAdminPostActivityComponent.prototype, "f", {
        get: function () { return this.ImageApprovalForm.controls; },
        enumerable: true,
        configurable: true
    });
    AgencyAdminPostActivityComponent.prototype.clearForm = function () {
        this.createImageApprovalForm();
    };
    AgencyAdminPostActivityComponent.prototype.GetApprovalType = function () {
        var _this = this;
        var req = {
            'IsDeleted': false,
            'agencyID': this.commonService.getAgencyId(),
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_10__["AgencyAPIURLs"].GetImageApprovalType, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.approvalType = res.body.filePath;
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminPostActivityComponent.prototype.saveImageApprovalType = function () {
        var _this = this;
        if (this.ImageApprovalForm.valid) {
            var data = {
                'id': 0,
                'ApproveType': this.ImageApprovalForm.value.approvaltype,
                'agencyID': this.commonService.getAgencyId(),
                'createdBy': this.commonService.getLoggedInUserId()
            };
            this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_10__["AgencyAPIURLs"].SaveImageApprovalType, data, null).subscribe(function (res) {
                if (res.body.statusCode === 200) {
                    $('.imageapproval').modal('hide');
                    _this.spinner.hide();
                    _this.notification.success({ message: 'Image Approval type updated successfully', title: '' });
                    _this.GetApprovalType();
                }
                else {
                    _this.spinner.hide();
                    _this.error.unknownError();
                }
            }, function (err) {
                _this.spinner.hide();
                _this.error.commonError(err);
            });
        }
        else {
            this.spinner.hide();
            this.commonService.validateAllFields(this.ImageApprovalForm);
        }
    };
    AgencyAdminPostActivityComponent.prototype.GetUnApprovedImages = function () {
        var _this = this;
        this.loader = true;
        this.spinner.show();
        var data = {
            'agencyID': this.commonService.getAgencyId(),
            'id': 0,
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_10__["AgencyAPIURLs"].GetUnApproveImages, data, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.totalRecord = res.body.totalRows;
                _this.unApprovedImagesList = res.body.data;
                _this.spinner.hide();
                _this.loader = false;
            }
            else {
                _this.spinner.hide();
                _this.notification.warning({ message: 'Something went wrong', title: '' });
            }
        }, function (err) {
            _this.spinner.hide();
            _this.notification.warning({ message: 'Something went wrong', title: '' });
        });
    };
    AgencyAdminPostActivityComponent.prototype.OpenImage = function (data) {
        this.imagePath = data.imageServerPath;
        $('#unapproveimage').modal('show');
    };
    AgencyAdminPostActivityComponent.prototype.DeleteImage = function (value) {
        var _this = this;
        this.confirmationService.confirm({
            message: 'Do you want to delete this Image?',
            accept: function () {
                _this.spinner.show();
                console.log(value);
                var data = {
                    'id': value.id,
                    'IsDeleted': true,
                    'PostActivityImagesID': value.postActivityImagesID,
                    'agencyID': value.agencyID,
                    'DeletedBy': value.deletedBy
                };
                _this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_10__["AgencyAPIURLs"].ApproveImages, data, null).subscribe(function (res) {
                    if (res.body.statusCode === 200) {
                        _this.spinner.hide();
                        _this.notification.success({ message: 'Image deleted successfully', title: '' });
                        _this.GetUnApprovedImages();
                    }
                    else {
                        _this.spinner.hide();
                        _this.error.unknownError();
                    }
                }, function (err) {
                    _this.spinner.hide();
                    _this.error.commonError(err);
                });
            }
        });
    };
    AgencyAdminPostActivityComponent.prototype.ApprovalImage = function (value) {
        var _this = this;
        this.confirmationService.confirm({
            message: 'Do you want to approve this Image?',
            accept: function () {
                _this.spinner.show();
                console.log(value);
                var data = {
                    'id': value.id,
                    'IsDeleted': false,
                    'PostActivityImagesID': value.postActivityImagesID,
                    'agencyID': value.agencyID,
                    'DeletedBy': value.deletedBy
                };
                _this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_10__["AgencyAPIURLs"].ApproveImages, data, null).subscribe(function (res) {
                    if (res.body.statusCode === 200) {
                        _this.spinner.hide();
                        _this.notification.success({ message: 'Image approved successfully', title: '' });
                        _this.GetUnApprovedImages();
                    }
                    else {
                        _this.spinner.hide();
                        _this.error.unknownError();
                    }
                }, function (err) {
                    _this.spinner.hide();
                    _this.error.commonError(err);
                });
            }
        });
    };
    /**Get All class list */
    AgencyAdminPostActivityComponent.prototype.getAllClassess = function () {
        var _this = this;
        this.spinner.show();
        var data = {
            'agencyID': this.commonService.getAgencyId()
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_8__["TeacherAPIURLs"].GetAllClasses, data, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.classList = res.body.data;
                if (_this.classList.length !== 0) {
                    _this.serchByClass = _this.classList[0].classesID;
                }
                _this.getPostActivityList();
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    /**Get post activity list */
    AgencyAdminPostActivityComponent.prototype.getPostActivityList = function () {
        var _this = this;
        this.loader = true;
        this.spinner.show();
        var data = {
            'agencyID': this.commonService.getAgencyId(),
            'id': 0,
            'classesID': this.serchByClass,
            'postedDate': this.searchByDate,
            'limit': this.limit,
            'page': this.pageNo
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_10__["AgencyAPIURLs"].GetAllPostActivitiesForAgencyAdmin, data, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.totalRecord = res.body.totalRows;
                _this.postActivityList = res.body.data;
                _this.spinner.hide();
                _this.loader = false;
            }
            else {
                _this.spinner.hide();
                // this.error.unknownError();
                _this.notification.warning({ message: 'Please Select Class', title: '' });
            }
        }, function (err) {
            _this.spinner.hide();
            _this.notification.warning({ message: 'Please Select Class', title: '' });
            //this.error.commonError(err);
        });
    };
    AgencyAdminPostActivityComponent.prototype.deletePost = function (value) {
        var _this = this;
        this.confirmationService.confirm({
            message: 'Do you want to delete this Post?',
            accept: function () {
                _this.spinner.show();
                console.log(value);
                value.deletedBy = _this.commonService.getReleventUserId('userdetails');
                value.deletedDate = new Date();
                value.isDeleted = true;
                if (value.postActivityImages.length !== 0) {
                    value.postActivityImages.forEach(function (element) {
                        element.deletedBy = _this.commonService.getReleventUserId('userdetails');
                        element.deletedDate = new Date();
                        element.isDeleted = true;
                    });
                }
                else if (value.postActivityVideos.length !== 0) {
                    value.postActivityVideos.forEach(function (element) {
                        element.deletedBy = _this.commonService.getReleventUserId('userdetails');
                        element.deletedDate = new Date();
                        element.isDeleted = true;
                    });
                }
                else {
                }
                _this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_8__["TeacherAPIURLs"].SavePostActivites, value, null).subscribe(function (res) {
                    if (res.body.statusCode === 200) {
                        _this.deletePostSuccess(value);
                    }
                    else {
                        _this.spinner.hide();
                        _this.error.unknownError();
                    }
                }, function (err) {
                    _this.spinner.hide();
                    _this.error.commonError(err);
                });
            }
        });
    };
    AgencyAdminPostActivityComponent.prototype.deletePostSuccess = function (data) {
        var index = this.postActivityList.findIndex(function (r) { return r.id === data.id; });
        this.postActivityList.splice(index, 1);
        this.spinner.hide();
        this.notification.success({ message: 'Post deleted successfully', title: '' });
    };
    AgencyAdminPostActivityComponent.prototype.getTeacherOperationalClasses = function () {
        var _this = this;
        this.classList = [];
        this.spinner.show();
        var data = {
            'agencyID': this.commonService.getAgencyId(),
            'askingDate': this.searchByDate,
            'teacherID': this.commonService.getReleventUserId('userdetails'),
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_8__["TeacherAPIURLs"].GetTeacherOperationalClasses, data, null).subscribe(function (res) {
            _this.spinner.hide();
            if (res.body.statusCode === 200) {
                _this.classList = res.body.data;
                if (_this.classList.length !== 0) {
                    _this.serchByClass = _this.classList[0].value;
                }
                else {
                    _this.serchByClass = 0;
                }
                _this.getPostActivityList();
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminPostActivityComponent.prototype.getSerchDate = function (event) {
        this.count++;
        if (this.count > 2) {
            this.searchByDate = event;
            this.classList = [];
            this.getAllClassess();
        }
    };
    AgencyAdminPostActivityComponent.prototype.paginate = function (event) {
        this.pageNo = event.page;
        this.getPostActivityList();
    };
    AgencyAdminPostActivityComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-agency-admin-post-activity',
            template: __webpack_require__(/*! ./agency-admin-post-activity.component.html */ "./src/app/layout/agency-admin/components/agency-admin-post-activity/agency-admin-post-activity.component.html"),
            styles: [__webpack_require__(/*! ./agency-admin-post-activity.component.css */ "./src/app/layout/agency-admin/components/agency-admin-post-activity/agency-admin-post-activity.component.css")]
        }),
        __metadata("design:paramtypes", [_shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_9__["AgencyApiService"], _shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_2__["ErrorHandlerService"],
            ngx_spinner__WEBPACK_IMPORTED_MODULE_4__["NgxSpinnerService"], _shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_3__["NotificationService"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_6__["FormBuilder"], primeng_api__WEBPACK_IMPORTED_MODULE_7__["ConfirmationService"], _shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_5__["CommonService"]])
    ], AgencyAdminPostActivityComponent);
    return AgencyAdminPostActivityComponent;
}());



/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-profile/agency-admin-profile.component.css":
/*!********************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-profile/agency-admin-profile.component.css ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9hZ2VuY3ktYWRtaW4vY29tcG9uZW50cy9hZ2VuY3ktYWRtaW4tcHJvZmlsZS9hZ2VuY3ktYWRtaW4tcHJvZmlsZS5jb21wb25lbnQuY3NzIn0= */"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-profile/agency-admin-profile.component.html":
/*!*********************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-profile/agency-admin-profile.component.html ***!
  \*********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"wrapper\">\r\n  <div class=\"container-fluid\">\r\n\r\n    <div class=\"pagetitle\">\r\n      <div>\r\n        <h2> Profile         \r\n        </h2>\r\n      </div>     \r\n    \r\n    </div>  \r\n\r\n    <div class=\"modal-container\">\r\n      <div class=\"modal-body profileupdate\">\r\n          <div class=\"upload-profile\">\r\n              <div *ngIf=\"image == ''\"> <img src=\"assets/img/user.png\"  alt=\"\" class=\"img-fluid img-circle\"> </div>\r\n              <div *ngIf=\"image !=''\"> <img src=\"{{image}}\" (click)=\"rotateImage();\" alt=\"image\" id=\"myimage\" class=\"img-fluid img-circle\" onError=\"this.src='assets/img/user.png'\">\r\n              </div>\r\n        \r\n              <div class=\"upload-btn-wrapper\">\r\n                <button class=\"btn btn-send\">Upload a photo</button>\r\n                <input type=\"file\" #input (change)=\"processFile($event)\">\r\n              </div>\r\n            </div>\r\n        <form [formGroup]=\"agencyForm\">\r\n          <div class=\"row mb-20 mt-20\">\r\n            <div class=\"col-lg-12\">\r\n              <div class=\"form-group\">\r\n                <label for=\"\">Agency Name*</label>\r\n                <input type=\"text \" (keypress)=\"commonService.allowAlphabetOnly($event)\" class=\"form-control\" id=\"\"\r\n                  aria-describedby=\"\" formControlName=\"agencyname\" placeholder=\"Agency Name\">\r\n                <div *ngIf=\"f.agencyname.invalid && (f.agencyname.dirty || f.agencyname.touched)\"\r\n                  class=\"text-left errormsg\">\r\n                  <span *ngIf=\"f.agencyname.errors.required\">\r\n                    <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please enter agency name</span>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <div class=\"row mb-20\">\r\n            <div class=\"col-lg-6\">\r\n              <div class=\"form-group\">\r\n                <label for=\"\">Agency Email*</label>\r\n                <input type=\"email \" class=\"form-control\" *ngIf=\"addMode\" id=\"\" aria-describedby=\"\"\r\n                  formControlName=\"email\" placeholder=\"Email Address\">\r\n                <input type=\"email \" class=\"form-control\" *ngIf=\"!addMode\" id=\"\" disabled aria-describedby=\"\"\r\n                  formControlName=\"email\" placeholder=\"Email Address\">\r\n                <div *ngIf=\"f.email.invalid && (f.email.dirty || f.email.touched)\" class=\"text-left errormsg\">\r\n                  <span *ngIf=\"f.email.errors.required\">\r\n                    <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please enter email</span>\r\n                  </span>\r\n                  <span *ngIf=\"f.email.errors.pattern\">\r\n                    <i class=\"fa fa-exclamation-circle errtext\"></i> <span class=\"errtext\"> Please enter valid email\r\n                      address</span>\r\n                  </span>\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n            <div class=\"col-lg-6\">\r\n              <div class=\"form-group\">\r\n                <label for=\"\">Agency Phone*</label>\r\n                <input type=\"text\" maxlength=\"10\" (keypress)=\"commonService.allowOnlyNumber($event)\"\r\n                  class=\"form-control\" id=\"\" aria-describedby=\"\" formControlName=\"phone\" placeholder=\"Agency Phone\">\r\n                <div *ngIf=\"f.phone.invalid && (f.phone.dirty || f.phone.touched)\" class=\"text-left errormsg\">\r\n                  <span *ngIf=\"f.phone.errors.required\">\r\n                    <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please enter phone number</span>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"row mb-20\">\r\n            <div class=\"col-lg-6\">\r\n              <div class=\"form-group\">\r\n                <label for=\"\">First Name*</label>\r\n                <input type=\"text \" (keypress)=\"commonService.allowAlphabetOnly($event)\" class=\"form-control\" id=\"\"\r\n                  aria-describedby=\"\" formControlName=\"firstname\" placeholder=\"First Name\">\r\n                <div *ngIf=\"f.firstname.invalid && (f.firstname.dirty || f.firstname.touched)\"\r\n                  class=\"text-left errormsg\">\r\n                  <span *ngIf=\"f.firstname.errors.required\">\r\n                    <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please enter name</span>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-lg-6\">\r\n              <div class=\"form-group\">\r\n                <label for=\"\">Last Name*</label>\r\n                <input type=\"text\" class=\"form-control\" (keypress)=\"commonService.allowAlphabetOnly($event)\" id=\"\"\r\n                  aria-describedby=\"\" formControlName=\"lastname\" placeholder=\"Last Name\">\r\n                <div *ngIf=\"f.lastname.invalid && (f.lastname.dirty || f.lastname.touched)\" class=\"text-left errormsg\">\r\n                  <span *ngIf=\"f.lastname.errors.required\">\r\n                    <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please enter last name</span>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"row mb-20\">\r\n            <div class=\"col-lg-12\">\r\n              <div class=\"form-group\">\r\n                <label for=\"\">Address*</label>\r\n                <input type=\"text \" class=\"form-control\" id=\"\" aria-describedby=\"\" formControlName=\"address\"\r\n                  placeholder=\"Address\">\r\n                <div *ngIf=\"f.address.invalid && (f.address.dirty || f.address.touched)\" class=\"text-left errormsg\">\r\n                  <span *ngIf=\"f.address.errors.required\">\r\n                    <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please enter address</span>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"row mb-20\">\r\n            <div class=\"col-lg-6\">\r\n              <div class=\"form-group\">\r\n                <label for=\"exampleInputEmail1\">Country*</label>               \r\n                <select class=\"form-control\" placeholder=\"Country\" formControlName=\"country\"\r\n                  id=\"exampleFormControlSelect1\" (change)=\"getStatesList();clearStateCity()\">\r\n                  <option value=\"\">Select Country</option>\r\n                  <option *ngFor=\"let countries of countryList\" [value]=\"countries.id\">{{countries.countryName}}\r\n                  </option>\r\n                </select>\r\n                <div *ngIf=\"f.country.invalid && (f.country.dirty || f.country.touched)\" class=\"text-left errormsg\">\r\n                  <span *ngIf=\"f.country.errors.required\">\r\n                    <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select country</span>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-lg-6\">\r\n              <div class=\"form-group\">\r\n                <label for=\"exampleFormControlSelect1\">State*</label>\r\n                <select class=\"form-control\" placeholder=\"State\" formControlName=\"state\" id=\"exampleFormControlSelect1\"\r\n                  (change)=\"getCitiesList();clearCity()\">\r\n                  <option value=\"\">Select State</option>\r\n                  <option *ngFor=\"let states of stateList\" [value]=\"states.id\">{{states.stateName}}</option>\r\n                </select>\r\n                <div *ngIf=\"f.state.invalid && (f.state.dirty || f.state.touched)\" class=\"text-left errormsg\">\r\n                  <span *ngIf=\"f.state.errors.required\">\r\n                    <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select state</span>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"row mb-20\">\r\n            <div class=\"col-lg-6\">\r\n              <div class=\"form-group\">\r\n                <label for=\"\">City*</label>               \r\n                <select class=\"form-control\" placeholder=\"City\" formControlName=\"city\" id=\"exampleFormControlSelect1\">\r\n                  <option value=\"\">Select City</option>\r\n                  <option *ngFor=\"let cities of cityList\" [value]=\"cities.id\">{{cities.cityName}}</option>\r\n                </select>\r\n                <div *ngIf=\"f.city.invalid && (f.city.dirty || f.city.touched)\" class=\"text-left errormsg\">\r\n                  <span *ngIf=\"f.city.errors.required\">\r\n                    <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select city</span>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-lg-6\">\r\n              <div class=\"form-group\">\r\n                <label for=\"\">Zip Code</label>\r\n                <input type=\"text \" (keypress)=\"commonService.allowOnlyNumber($event)\" maxlength=\"6\" class=\"form-control\" id=\"\" formControlName=\"zipcode\"\r\n                  aria-describedby=\"\" placeholder=\"Enter Zip Code\">\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n\r\n        </form>\r\n      </div>\r\n      <div class=\"modal-footer profileupdate\">\r\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"SaveProfileDetails()\">Update Profile</button>\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n  </div>\r\n</div>\r\n\r\n<ngx-spinner type=\"ball-atom\" size=\"medium\" color=\"#58A7FE\"></ngx-spinner>\r\n"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-profile/agency-admin-profile.component.ts":
/*!*******************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-profile/agency-admin-profile.component.ts ***!
  \*******************************************************************************************************/
/*! exports provided: AgencyAdminProfileComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AgencyAdminProfileComponent", function() { return AgencyAdminProfileComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../shared/services/agency-api-service/agency-api.service */ "./src/app/layout/agency-admin/components/shared/services/agency-api-service/agency-api.service.ts");
/* harmony import */ var _shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../shared/services/error-handler/error-handler.service */ "./src/app/shared/services/error-handler/error-handler.service.ts");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ngx-spinner */ "./node_modules/ngx-spinner/fesm5/ngx-spinner.js");
/* harmony import */ var _shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../shared/services/notification-service/notification.service */ "./src/app/shared/services/notification-service/notification.service.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _teacher_shared_constant__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../teacher/shared/constant */ "./src/app/layout/teacher/shared/constant.ts");
/* harmony import */ var _admin_shared_constant__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../admin/shared/constant */ "./src/app/layout/admin/shared/constant.ts");
/* harmony import */ var _shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../shared/services/common/common.service */ "./src/app/shared/services/common/common.service.ts");
/* harmony import */ var _shared_constatant__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../shared/constatant */ "./src/app/layout/agency-admin/components/shared/constatant.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};










var AgencyAdminProfileComponent = /** @class */ (function () {
    function AgencyAdminProfileComponent(apiService, error, spinner, notification, fb, commonService) {
        this.apiService = apiService;
        this.error = error;
        this.spinner = spinner;
        this.notification = notification;
        this.fb = fb;
        this.commonService = commonService;
        this.today = new Date();
        this.agencyVM = {};
        this.totalRecord = 0;
        this.agencyList = [];
        this.pageNo = 0;
        this.limit = 10;
        this.loader = true;
        this.status = 1;
        this.addMode = true;
        this.flag = false;
        this.formData = new FormData();
        this.agencyID = 0;
        this.emailPattern = /^([\w-\.]+\u0040([\w-]+\.)+[\w-]{2,4})?$/;
    }
    AgencyAdminProfileComponent.prototype.ngOnInit = function () {
        this.spinner.show();
        this.getAgencyDetials();
        this.countryList = [];
        this.cityList = [];
        this.stateList = [];
        this.createAgencyForm();
        this.getAllCountries();
    };
    AgencyAdminProfileComponent.prototype.rotateImage = function () {
        var img = document.getElementById('myimage');
        img.style.transform = 'rotate(90deg)';
        console.log(img);
    };
    AgencyAdminProfileComponent.prototype.createAgencyForm = function () {
        this.agencyForm = this.fb.group({
            agencyname: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
            firstname: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
            lastname: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
            email: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].pattern(this.emailPattern)]],
            phone: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
            address: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
            city: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
            state: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
            zipcode: [''],
            country: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
            photo: ['']
        });
    };
    AgencyAdminProfileComponent.prototype.updateAgencyForm = function () {
        this.agencyForm = this.fb.group({
            agencyname: [this.agencyVM.AgencyName, _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
            firstname: [this.agencyVM.OwnerFirstName, _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
            lastname: [this.agencyVM.OwnerLastName, _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
            email: [this.agencyVM.EmailId],
            phone: [this.agencyVM.Mobile, _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
            address: [this.agencyVM.Address, _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
            city: [this.agencyVM.CityId, _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
            state: [this.agencyVM.StateId, _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
            zipcode: [this.agencyVM.PostalCode],
            country: [this.agencyVM.CountryId, _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
            photo: [''],
        });
    };
    Object.defineProperty(AgencyAdminProfileComponent.prototype, "f", {
        get: function () { return this.agencyForm.controls; },
        enumerable: true,
        configurable: true
    });
    AgencyAdminProfileComponent.prototype.getAllCountries = function () {
        var _this = this;
        this.countryList = [];
        var req = {
            'AgencyID': 4
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_6__["TeacherAPIURLs"].GetAllCountry, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.countryList = res.body.data;
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminProfileComponent.prototype.getCitiesList = function () {
        var _this = this;
        this.cityList = [];
        var req = {
            'StateId': this.agencyForm.value.state,
            'AgencyID': 4
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_6__["TeacherAPIURLs"].GetAllCities, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.cityList = res.body.data;
                console.log('city', _this.cityList);
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminProfileComponent.prototype.clearStateCity = function () {
        this.agencyForm.controls['state'].setValue('');
        this.agencyForm.controls['city'].setValue('');
    };
    AgencyAdminProfileComponent.prototype.clearCity = function () {
        this.agencyForm.controls['city'].setValue('');
    };
    AgencyAdminProfileComponent.prototype.getStatesList = function () {
        var _this = this;
        this.stateList = [];
        this.cityList = [];
        var req = {
            'CountryId': this.agencyForm.value.country,
            'AgencyID': 4
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_6__["TeacherAPIURLs"].GetAllStates, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.stateList = res.body.data;
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminProfileComponent.prototype.verifyAgency = function () {
        this.spinner.show();
        if (this.agencyForm.valid) {
            this.agencyVM.Id = this.addMode ? 0 : this.agencyID;
            this.agencyVM.AgencyName = this.agencyForm.value.agencyname;
            this.agencyVM.EmailId = this.agencyForm.value.email;
            this.agencyVM.Mobile = this.agencyForm.value.phone;
            this.agencyVM.OwnerFirstName = this.agencyForm.value.firstname;
            this.agencyVM.OwnerLastName = this.agencyForm.value.lastname;
            this.agencyVM.StateId = this.agencyForm.value.state;
            this.agencyVM.CityId = this.agencyForm.value.city;
            this.agencyVM.PostalCode = this.agencyForm.value.zipcode;
            this.agencyVM.Address = this.agencyForm.value.address;
            this.agencyVM.CountryId = this.agencyForm.value.country;
            this.agencyVM.status = this.status;
            this.agencyVM.ImagePath = this.image;
            this.image = this.profileimage;
            var msg = 'Profile details has been updated successfully';
            this.creteNewAgency(this.agencyVM, msg);
        }
        else {
            this.spinner.hide();
            this.commonService.validateAllFields(this.agencyForm);
        }
    };
    AgencyAdminProfileComponent.prototype.creteNewAgency = function (req, msg) {
        var _this = this;
        this.apiService.postData(_admin_shared_constant__WEBPACK_IMPORTED_MODULE_7__["AdminAPIURLs"].SaveAgencyInformation, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.getAgencyDetials();
                _this.notification.success({ message: msg, title: '' });
                _this.spinner.hide();
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminProfileComponent.prototype.getAgencyDetials = function () {
        var _this = this;
        this.spinner.show();
        var req = {
            'agencyID': this.commonService.getReleventUserId('userdetails')
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_9__["AgencyAPIURLs"].GetParticularAgencyDetails, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                if (res.body.data) {
                    _this.agencyID = res.body.data[0].id;
                    _this.addMode = false;
                    _this.agencyVM.AgencyName = res.body.data[0].agencyName;
                    _this.agencyVM.EmailId = res.body.data[0].emailId;
                    _this.agencyVM.Mobile = res.body.data[0].mobile;
                    _this.agencyVM.OwnerFirstName = res.body.data[0].ownerFirstName;
                    _this.agencyVM.OwnerLastName = res.body.data[0].ownerLastName;
                    _this.agencyVM.StateId = res.body.data[0].stateId;
                    _this.agencyVM.CityId = res.body.data[0].cityId;
                    _this.agencyVM.PostalCode = res.body.data[0].postalCode;
                    _this.agencyVM.Address = res.body.data[0].address;
                    _this.agencyVM.CountryId = res.body.data[0].countryId;
                    _this.image = res.body.data[0].imagePath;
                    _this.commonService.saveUserProfileImage(_this.image);
                    _this.agencyVM.status = 1;
                    _this.updateAgencyForm();
                    _this.getAllCountries();
                    _this.getStatesList();
                    _this.getCitiesList();
                }
                _this.spinner.hide();
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminProfileComponent.prototype.processFile = function (event) {
        var _this = this;
        this.formData = new FormData();
        var self = this;
        if (event.target.files && event.target.files[0]) {
            if (event.target.files[0].type !== 'image/png' && event.target.files[0].type !== 'image/jpeg' &&
                event.target.files[0].type !== 'image/jpg') {
                self.fileData = null;
                self.profileimage = '';
                return false;
            }
            var reader_1 = new FileReader();
            this.formData.append('fileData', event.target.files[0], event.target.files[0].name);
            self.fileData = this.formData;
            reader_1.readAsDataURL(event.target.files[0]); // read file as data url
            setTimeout(function () {
                _this.image = reader_1.result;
            }, 100);
            this.flag = true;
        }
    };
    AgencyAdminProfileComponent.prototype.UploadImage = function () {
        var _this = this;
        this.apiService.uploadImage(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_6__["TeacherAPIURLs"].UploadImage, this.fileData, null).subscribe(function (res) {
            if (res.status === 200) {
                _this.image = res.body.data;
                _this.verifyAgency();
            }
        }, function (err) {
            _this.error.commonError(err);
        });
    };
    AgencyAdminProfileComponent.prototype.SaveProfileDetails = function () {
        this.spinner.show();
        if (this.flag === true) {
            this.UploadImage();
            this.flag = false;
        }
        else {
            this.verifyAgency();
        }
    };
    AgencyAdminProfileComponent.prototype.getUserStatus = function (value) {
        this.status = value;
    };
    AgencyAdminProfileComponent.prototype.paginate = function (event) {
        this.status = 1;
        this.pageNo = event.page;
    };
    AgencyAdminProfileComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-agency-admin-profile',
            template: __webpack_require__(/*! ./agency-admin-profile.component.html */ "./src/app/layout/agency-admin/components/agency-admin-profile/agency-admin-profile.component.html"),
            styles: [__webpack_require__(/*! ./agency-admin-profile.component.css */ "./src/app/layout/agency-admin/components/agency-admin-profile/agency-admin-profile.component.css")]
        }),
        __metadata("design:paramtypes", [_shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_1__["AgencyApiService"], _shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_2__["ErrorHandlerService"],
            ngx_spinner__WEBPACK_IMPORTED_MODULE_3__["NgxSpinnerService"], _shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_4__["NotificationService"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormBuilder"], _shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_8__["CommonService"]])
    ], AgencyAdminProfileComponent);
    return AgencyAdminProfileComponent;
}());



/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-report/agency-admin-report.component.css":
/*!******************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-report/agency-admin-report.component.css ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".headingg {font-size: 18px;\r\n    color: #eb547c;\r\n    font-weight: bold;}\r\n\r\n    .mainrow{\r\n        /* margin-top: 25px; */\r\n        padding-top: 25px;\r\n    }\r\n\r\n    .whitebox1 {\r\n        height: auto;\r\n        background: #fff;\r\n        border-radius: 10px;\r\n        min-height: 450px;\r\n        /* max-height: 340px; */\r\n        margin-bottom: 0px;\r\n        box-shadow: 0 4px 14px 0px rgba(0, 0, 0, 0.09);\r\n    }\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L2FnZW5jeS1hZG1pbi9jb21wb25lbnRzL2FnZW5jeS1hZG1pbi1yZXBvcnQvYWdlbmN5LWFkbWluLXJlcG9ydC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFdBQVcsZUFBZTtJQUN0QixjQUFjO0lBQ2QsaUJBQWlCLENBQUM7O0lBRWxCO1FBQ0ksc0JBQXNCO1FBQ3RCLGlCQUFpQjtJQUNyQjs7SUFDQTtRQUNJLFlBQVk7UUFDWixnQkFBZ0I7UUFDaEIsbUJBQW1CO1FBQ25CLGlCQUFpQjtRQUNqQix1QkFBdUI7UUFDdkIsa0JBQWtCO1FBQ2xCLDhDQUE4QztJQUNsRCIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9hZ2VuY3ktYWRtaW4vY29tcG9uZW50cy9hZ2VuY3ktYWRtaW4tcmVwb3J0L2FnZW5jeS1hZG1pbi1yZXBvcnQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5oZWFkaW5nZyB7Zm9udC1zaXplOiAxOHB4O1xyXG4gICAgY29sb3I6ICNlYjU0N2M7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDt9XHJcblxyXG4gICAgLm1haW5yb3d7XHJcbiAgICAgICAgLyogbWFyZ2luLXRvcDogMjVweDsgKi9cclxuICAgICAgICBwYWRkaW5nLXRvcDogMjVweDtcclxuICAgIH1cclxuICAgIC53aGl0ZWJveDEge1xyXG4gICAgICAgIGhlaWdodDogYXV0bztcclxuICAgICAgICBiYWNrZ3JvdW5kOiAjZmZmO1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XHJcbiAgICAgICAgbWluLWhlaWdodDogNDUwcHg7XHJcbiAgICAgICAgLyogbWF4LWhlaWdodDogMzQwcHg7ICovXHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMHB4O1xyXG4gICAgICAgIGJveC1zaGFkb3c6IDAgNHB4IDE0cHggMHB4IHJnYmEoMCwgMCwgMCwgMC4wOSk7XHJcbiAgICB9Il19 */"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-report/agency-admin-report.component.html":
/*!*******************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-report/agency-admin-report.component.html ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"wrapper\">\n  <div class=\"container-fluid\">\n\n    <div class=\"pagetitle\">\n      <div>\n        <h2>Reports\n        </h2>\n      </div>\n    </div>\n\n    <!-- Digital Directior Section -->\n    <div class=\" subhead d-flex justify-content-between mt-20\">\n      <div>\n        <h3>Reports</h3>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-lg-12 col-md-12\">\n        <div class=\"whitebox1 white_box_table\">\n\n          <div class=\"row mainrow\">\n            <div class=\"col-lg-5\" style=\"margin-left: 80px;\">\n              <p class=\"headingg\">Student Report</p>\n              <ul>\n                <li><a class=\"\" [routerLink]=\"['../birthreport']\">Birthday</a></li>\n                <li><a class=\"\" [routerLink]=\"['../medicationreport']\">Medication</a></li>\n                <li><a class=\"\" [routerLink]=\"['../givenmedicationreport']\">Given Medication</a></li>\n                <li><a class=\"\" [routerLink]=\"['../allergyreport']\">Allergy</a></li>\n              </ul>\n            </div>\n            <div class=\"col-lg-5\">\n              <p class=\"headingg\">Accounting Report</p>\n              <ul>\n                <li><a class=\"\" [routerLink]=\"['../paymentreport']\"> Due Payment</a></li>\n                <li><a class=\"\" [routerLink]=\"['../ledgerreport']\">Payment</a></li>\n                <li><a class=\"\" [routerLink]=\"['../accountledger']\">Ledger</a></li>\n                <li><a class=\"\" [routerLink]=\"['../bankdepositreport']\">Bank Deposit Report</a></li>\n                <li><a class=\"\" [routerLink]=\"['../taxstatement']\">Tax Statement Report</a></li>\n              </ul>\n            </div>\n          </div>\n\n          <div class=\"row mainrow\">\n            <div class=\"col-lg-5\" style=\"margin-left: 80px;\">\n              <p class=\"headingg\">Family Report</p>\n              <ul>\n                <li><a class=\"\" [routerLink]=\"['../familyreport']\">Family Details</a></li>\n              </ul>\n            </div>\n\n            <div class=\"col-lg-5\">\n              <p class=\"headingg\">Staff Report</p>\n              <ul>\n                <li><a class=\"\" [routerLink]=\"['../teacherattendancereport']\">Teacher Attendance</a></li>\n                <li><a class=\"\" [routerLink]=\"['../teacherhours']\">Teachers Total Hours</a></li>\n                <li><a class=\"\" [routerLink]=\"['../staffbirthreport']\">Teachers Birthday</a></li>\n              </ul>\n            </div>\n          </div>\n\n          <div class=\"row mainrow\">\n            <div class=\"col-lg-5\" style=\"margin-left: 80px;\">\n              <p class=\"headingg\">Attendance Report</p>\n              <ul>\n                <li><a class=\"\" [routerLink]=\"['../attendancereport']\">Attendance</a></li>\n                <li><a class=\"\" [routerLink]=\"['../kioskidreport']\">Kiosk ID Details</a></li>\n                <li><a class=\"\" [routerLink]=\"['../kioskereport']\">Update Kiosk Details</a></li>\n\n              </ul>\n            </div>\n\n            <div class=\"col-lg-5\">\n              <p class=\"headingg\">Center Report</p>\n              <ul>\n                <li><a class=\"\" [routerLink]=\"['../enrollmentreport']\">Enrollment</a></li>\n                <li><a class=\"\" [routerLink]=\"['../classtransferreport']\">Class Transfer Report</a></li>\n                <li>\n                  <a class=\"\" [routerLink]=\"['../mealservereport']\">Meal Serve Report</a>\n                </li>\n                <li>\n                  <a class=\"\" [routerLink]=\"['../deactivatestudentreport']\">Deactivated Student Report</a>\n                </li>\n                <li>\n                  <a class=\"\" [routerLink]=\"['../busreport']\">Student Bus Report</a>\n                </li>\n              </ul>\n            </div>\n          </div>\n\n        </div>\n      </div>\n    </div>\n\n\n\n\n\n\n  </div>\n</div>\n<ngx-spinner type=\"ball-atom\" size=\"medium\" color=\"#58A7FE\"></ngx-spinner>\n<app-confirm-box></app-confirm-box>"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-report/agency-admin-report.component.ts":
/*!*****************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-report/agency-admin-report.component.ts ***!
  \*****************************************************************************************************/
/*! exports provided: AgencyAdminReportComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AgencyAdminReportComponent", function() { return AgencyAdminReportComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var AgencyAdminReportComponent = /** @class */ (function () {
    function AgencyAdminReportComponent() {
    }
    AgencyAdminReportComponent.prototype.ngOnInit = function () {
    };
    AgencyAdminReportComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-agency-admin-report',
            template: __webpack_require__(/*! ./agency-admin-report.component.html */ "./src/app/layout/agency-admin/components/agency-admin-report/agency-admin-report.component.html"),
            styles: [__webpack_require__(/*! ./agency-admin-report.component.css */ "./src/app/layout/agency-admin/components/agency-admin-report/agency-admin-report.component.css")]
        }),
        __metadata("design:paramtypes", [])
    ], AgencyAdminReportComponent);
    return AgencyAdminReportComponent;
}());



/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-settings/agency-admin-settings.component.css":
/*!**********************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-settings/agency-admin-settings.component.css ***!
  \**********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".info-icon{\r\n    margin-left: 243px;\r\n    font-size: 20px; \r\n    color: #383333;\r\n}\r\n\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L2FnZW5jeS1hZG1pbi9jb21wb25lbnRzL2FnZW5jeS1hZG1pbi1zZXR0aW5ncy9hZ2VuY3ktYWRtaW4tc2V0dGluZ3MuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGtCQUFrQjtJQUNsQixlQUFlO0lBQ2YsY0FBYztBQUNsQiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9hZ2VuY3ktYWRtaW4vY29tcG9uZW50cy9hZ2VuY3ktYWRtaW4tc2V0dGluZ3MvYWdlbmN5LWFkbWluLXNldHRpbmdzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaW5mby1pY29ue1xyXG4gICAgbWFyZ2luLWxlZnQ6IDI0M3B4O1xyXG4gICAgZm9udC1zaXplOiAyMHB4OyBcclxuICAgIGNvbG9yOiAjMzgzMzMzO1xyXG59XHJcbiJdfQ== */"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-settings/agency-admin-settings.component.html":
/*!***********************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-settings/agency-admin-settings.component.html ***!
  \***********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"wrapper\">\r\n  <div class=\"container-fluid\">\r\n\r\n    <div class=\"pagetitle\">\r\n      <div>\r\n        <h2>Settings\r\n        </h2>\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\" class=\"btn btn-send btn_current\" (click)=\"getAllParentList()\">\r\n          Download Parents CSV</button>\r\n        <button type=\"submit\" class=\"btn btn-send btn_current\" (click)=\"getAllStudentList()\">\r\n          Download Students CSV</button>\r\n        <button type=\"submit\" class=\"btn btn-send btn_current\" (click)=\"getAllTeacherList()\">\r\n          Download Teacher CSV</button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Digital Directior Section -->\r\n    <div class=\" subhead d-flex justify-content-between mt-20\">\r\n      <div>\r\n        <h3>Digital Director Settings</h3>\r\n      </div>\r\n\r\n      <div class=\"info-icon\">\r\n        <i class=\"fa fa-info-circle\" (click)=\"OpenInfoVideo()\" data-toggle=\"modal\" aria-hidden=\"true\"\r\n          title=\"Information Video\"></i>\r\n      </div>\r\n\r\n    </div>\r\n\r\n    <div class=\"innertable studentListSearch\">\r\n      <div class=\"table-responsive\">\r\n        <table class=\"table \">\r\n          <thead class=\"thead-light\">\r\n            <tr>\r\n              <th scope=\"col\">Activity Name</th>\r\n              <th scope=\"col\">Set Time Interval</th>\r\n\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td> <b>Toileting </b> </td>\r\n              <td>\r\n                <select name=\"\" style=\"width:300px\" [(ngModel)]=\"toiletingTimeIntervalId\"\r\n                  (change)=\"saveToiletNotyInterval()\" class=\"form-control\" id=\"\">\r\n                  <option value=\"\">Select</option>\r\n                  <option value=\"20\">20 Minutes</option>\r\n                  <option value=\"1\">1 Hour</option>\r\n                  <option value=\"2\">2 Hour</option>\r\n                  <option value=\"3\">3 Hour</option>\r\n                  <option value=\"4\">4 Hour</option>\r\n                  <option value=\"5\">5 Hour</option>\r\n                  <option value=\"6\">6 Hour</option>\r\n                  <option value=\"7\">7 Hour</option>\r\n                  <option value=\"8\">8 Hour</option>\r\n                  <option value=\"9\">9 Hour</option>\r\n                  <option value=\"10\">10 Hour</option>\r\n                </select>\r\n              </td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td> <b>Nap </b> </td>\r\n              <td>\r\n                <select name=\"\" style=\"width:300px\" [(ngModel)]=\"NapminIntervalId\" (change)=\"saveNapNotyInterval()\"\r\n                  class=\"form-control\" id=\"\">\r\n                  <option value=\"0\">Select</option>\r\n                  <option value=\"5\">5 Minutes</option>\r\n                  <option value=\"10\">10 Minutes</option>\r\n                  <option value=\"15\">15 Minutes</option>\r\n                  <option value=\"20\">20 Minutes</option>\r\n                  <option value=\"25\">25 Minutes</option>\r\n                  <option value=\"30\">30 Minutes</option>\r\n                  <option value=\"35\">35 Minutes</option>\r\n                  <option value=\"40\">40 Minutes</option>\r\n                  <option value=\"45\">45 Minutes</option>\r\n                  <option value=\"50\">50 Minutes</option>\r\n                  <option value=\"55\">55 Minutes</option>\r\n                </select>\r\n              </td>\r\n\r\n              <td>\r\n                <select name=\"\" style=\"width:300px\" [(ngModel)]=\"NapIntervalId\" (change)=\"saveNapNotyInterval()\"\r\n                  class=\"form-control\" id=\"\">\r\n                  <option value=\"0\">Select</option>\r\n                  <option value=\"1\">1 Hour</option>\r\n                  <option value=\"2\">2 Hour</option>\r\n                  <option value=\"3\">3 Hour</option>\r\n                  <option value=\"4\">4 Hour</option>\r\n                  <option value=\"5\">5 Hour</option>\r\n                  <option value=\"6\">6 Hour</option>\r\n                  <option value=\"7\">7 Hour</option>\r\n                  <option value=\"8\">8 Hour</option>\r\n                  <option value=\"9\">9 Hour</option>\r\n                  <option value=\"10\">10 Hour</option>\r\n                </select>\r\n              </td>\r\n\r\n            </tr>\r\n\r\n            <tr>\r\n              <td> <b>Meal </b> </td>\r\n              <td>\r\n                <select name=\"\" style=\"width:300px\" [(ngModel)]=\"mealIntervalId\" (change)=\"saveMealNotyInterval()\"\r\n                  class=\"form-control\" id=\"\">\r\n                  <option value=\"\">Select</option>\r\n                  <option value=\"1\">1 Hour</option>\r\n                  <option value=\"2\">2 Hour</option>\r\n                  <option value=\"3\">3 Hour</option>\r\n                  <option value=\"4\">4 Hour</option>\r\n                  <option value=\"5\">5 Hour</option>\r\n                  <option value=\"6\">6 Hour</option>\r\n                  <option value=\"7\">7 Hour</option>\r\n                  <option value=\"8\">8 Hour</option>\r\n                  <option value=\"9\">9 Hour</option>\r\n                  <option value=\"10\">10 Hour</option>\r\n                </select>\r\n              </td>\r\n            </tr>\r\n\r\n\r\n          </tbody>\r\n\r\n\r\n        </table>\r\n      </div>\r\n\r\n    </div>\r\n\r\n    <!-- For Information Video -->\r\n    <div class=\"modal fade\" id=\"infovideo\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"checkoutLabel\"\r\n      aria-hidden=\"true\">\r\n      <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"checkoutLabel\">Information Video</h5>\r\n            <button type=\"button\" *ngIf=\"videoPath\" class=\"close\" (click)=\"PauseInfoVideo()\" data-dismiss=\"modal\"\r\n              aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n            <button type=\"button\" *ngIf=\"!videoPath\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <div class=\"cont video_section_pop\" *ngIf=\"videoPath\">\r\n              <video controls id=\"pausevideo\">\r\n                <source *ngIf=\"videoPath\" [src]=\"videoPath\" type=\"video/mp4\" />\r\n                <source *ngIf=\"videoPath\" [src]=\"videoPath\" type=\"video/ogg\" />\r\n                <source *ngIf=\"videoPath\" [src]=\"videoPath\" type=\"video/webm\" />\r\n                Browser not supported\r\n              </video>\r\n            </div>\r\n\r\n            <div class=\"cont video_section_pop\" *ngIf=\"!videoPath\">\r\n              Video Not Found\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <!-- Subsidy Section -->\r\n    <!-- <div class=\"subhead d-flex justify-content-between mt-20\">\r\n      <div>\r\n        <h3>Subsidy List</h3>\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\" *ngIf=\"isSubscriptionActive\" class=\"btn btn-red btn_current\" data-toggle=\"modal\"\r\n          data-target=\".addsub\" (click)=\"clearAddSubForm()\">\r\n          Add Subsidy</button>\r\n        <button type=\"submit\" class=\"btn btn-red btn_current\" [routerLink]=\"['../subsidy']\">\r\n          Apply Subsidy</button>\r\n      </div>\r\n    </div>\r\n    <div class=\"innertable studentListSearch\">\r\n      <div class=\"table-responsive\">\r\n        <table class=\"table\">\r\n          <thead class=\"thead-light\">\r\n            <tr>\r\n              <th scope=\"col\">Subsidy Name</th>\r\n              <th scope=\"col\" class=\"text-center\">Amount($)</th>\r\n              <th scope=\"col\">Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr *ngFor=\"let sub of subsidyList\">\r\n              <td>\r\n                {{sub.subsidyName}}\r\n              </td>\r\n              <td class=\"text-center\">\r\n                ${{sub.subsidyAmount}}\r\n              </td>\r\n              <td>\r\n                <a data-toggle=\"modal\" data-target=\".addsub\" class=\"attedit\" title=\"Edit/details (Subsidy)\"\r\n                  (click)=\"getSubsidyDetails(sub)\"><i class=\"fa fa-pencil attend1\"></i></a>\r\n                <a>\r\n                  <i class=\"fa fa-trash\" aria-hidden=\"true\" (click)=\"deleteSubsidy(sub)\"></i>\r\n                </a>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div> -->\r\n\r\n    <!-- <div class=\"modal fade addsub\" id=\"checkout\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"checkOutLabel\"\r\n      aria-hidden=\"true\">\r\n      <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"checkoutLabel\">Add Subsidy</h5>\r\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <form [formGroup]=\"addSubsidyForm\">\r\n              <div class=\"row mb-20 mt-20\">\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Subsidy Name*</label>\r\n                    <input type=\"text\" maxlength=\"50\" formControlName=\"name\" class=\"form-control\">\r\n                    <div *ngIf=\"f.name.invalid && (f.name.dirty || f.name.touched)\" class=\"text-left errormsg\">\r\n                      <span *ngIf=\"f.name.errors.required\">\r\n                        <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please enter subsidy name</span>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Amount($)* </label>\r\n                    <input type=\"text\" maxlength=\"5\" formControlName=\"amount\"\r\n                      (keypress)=\"commonService.allowOnlyNumberWithDecimal($event)\" class=\"form-control\" id=\"\"\r\n                      aria-describedby=\"\">\r\n                    <div *ngIf=\"f.amount.invalid && (f.amount.dirty || f.amount.touched)\" class=\"text-left errormsg\">\r\n                      <span *ngIf=\"f.amount.errors.required\">\r\n                        <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please enter amount</span>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n\r\n\r\n              <div class=\"row mb-20 mt-20\">\r\n                <div class=\"col-lg-12\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Description</label>\r\n                    <textarea class=\"form-control\" maxlength=\"200\" formControlName=\"description\" cols=\"30\"\r\n                      rows=\"10\"></textarea>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </form>\r\n\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n            <button type=\"button\" *ngIf=\"isSubscriptionActive\" class=\"btn btn-primary\" (click)=\"addNewSubsidy()\">Save\r\n              changes</button>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div> -->\r\n  </div>\r\n</div>\r\n<ngx-spinner type=\"ball-atom\" size=\"medium\" color=\"#58A7FE\"></ngx-spinner>\r\n<app-confirm-box></app-confirm-box>"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-settings/agency-admin-settings.component.ts":
/*!*********************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-settings/agency-admin-settings.component.ts ***!
  \*********************************************************************************************************/
/*! exports provided: AgencyAdminSettingsComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AgencyAdminSettingsComponent", function() { return AgencyAdminSettingsComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../shared/services/agency-api-service/agency-api.service */ "./src/app/layout/agency-admin/components/shared/services/agency-api-service/agency-api.service.ts");
/* harmony import */ var _shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../shared/services/error-handler/error-handler.service */ "./src/app/shared/services/error-handler/error-handler.service.ts");
/* harmony import */ var _shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../shared/services/notification-service/notification.service */ "./src/app/shared/services/notification-service/notification.service.ts");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ngx-spinner */ "./node_modules/ngx-spinner/fesm5/ngx-spinner.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../shared/services/common/common.service */ "./src/app/shared/services/common/common.service.ts");
/* harmony import */ var _shared_constatant__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../shared/constatant */ "./src/app/layout/agency-admin/components/shared/constatant.ts");
/* harmony import */ var primeng_api__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! primeng/api */ "./node_modules/primeng/api.js");
/* harmony import */ var primeng_api__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(primeng_api__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var angular2_csv_Angular2_csv__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! angular2-csv/Angular2-csv */ "./node_modules/angular2-csv/Angular2-csv.js");
/* harmony import */ var angular2_csv_Angular2_csv__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(angular2_csv_Angular2_csv__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var src_app_layout_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! src/app/layout/teacher/shared/constant */ "./src/app/layout/teacher/shared/constant.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};











var AgencyAdminSettingsComponent = /** @class */ (function () {
    function AgencyAdminSettingsComponent(confirmationService, apiService, error, spinner, notification, fb, commonService) {
        this.confirmationService = confirmationService;
        this.apiService = apiService;
        this.error = error;
        this.spinner = spinner;
        this.notification = notification;
        this.fb = fb;
        this.commonService = commonService;
        this.agencyId = this.commonService.getAgencyId();
        this.currentDDSeting = [];
        this.toiletingActiviId = 0;
        this.napActiviId = 0;
        this.mealActiviId = 0;
        this.subsidyList = [];
        this.subsidyId = 0;
        this.loader = true;
        this.activationType = 'Activated';
        this.totalRecord = 0;
        this.nameSearch = '';
        this.videoPath = '';
        this.parentList = [];
        this.studentList = [];
        this.teacherList = [];
        this.csvFileNameForParent = 'ParentList';
        this.csvFileNameForStudent = 'StudentList';
        this.csvFileNameForTeacher = 'TeacherList';
        this.ParentDataForCsv = [];
        this.StudentDataForCsv = [];
        this.TeacherDataForCsv = [];
        this.csvOptionsForParent = {
            fieldSeparator: ',',
            quoteStrings: '"',
            decimalseparator: '.',
            showLabels: false,
            headers: [
                'FirstName',
                'LastName',
                'EmailId',
                'Contact Phone',
                'Address',
                'DateofBirth',
                'Profession',
                'Gender',
                'EmployeeName',
                'EmployerNumber'
            ],
            showTitle: false,
            title: [
                'FirstName',
                'LastName',
                'EmailId',
                'Contact Phone',
                'Address',
                'DateofBirth',
                'Profession',
                'Gender',
                'EmployeeName',
                'EmployerNumber'
            ],
            useBom: false,
            removeNewLines: true,
            keys: [
                'FirstName',
                'LastName',
                'EmailId',
                'ContactPhone',
                'Address',
                'DateofBirth',
                'Profession',
                'Gender',
                'EmployeeName',
                'EmployerNumber'
            ],
        };
        this.csvOptionsForStudent = {
            fieldSeparator: ',',
            quoteStrings: '"',
            decimalseparator: '.',
            showLabels: false,
            headers: [
                'FirstName',
                'LastName',
                'EmailId',
                'Contact Phone',
                'DateofBirth',
                'Gender',
                'Address',
                'Physician Name',
                'Preferred Hospital',
                'Physician ContactNumber',
                'SPFirstName',
                'SPLastName',
                'SPEmailId',
                'SPContactNumber',
                'SPAddress',
                'SPDateOfBirth',
                'SPProfession',
                'SPGender',
                'SPEmployerName',
                'SPEmployerNumber'
            ],
            showTitle: false,
            title: [
                'FirstName',
                'LastName',
                'EmailId',
                'Contact Phone',
                'DateofBirth',
                'Gender',
                'Address',
                'Physician Name',
                'Preferred Hospital',
                'Physician ContactNumber',
                'SPFirstName',
                'SPLastName',
                'SPEmailId',
                'SPContactNumber',
                'SPAddress',
                'SPDateOfBirth',
                'SPProfession',
                'SPGender',
                'SPEmployerName',
                'SPEmployerNumber'
            ],
            useBom: false,
            removeNewLines: true,
            keys: [
                'FirstName',
                'LastName',
                'EmailId',
                'ContactPhone',
                'DateofBirth',
                'Gender',
                'Address',
                'PhysicianName',
                'PreferredHospital',
                'PhysicianContactNumber',
                'SPFirstName',
                'SPLastName',
                'SPEmailId',
                'SPContactNumber',
                'SPAddress',
                'SPDateOfBirth',
                'SPProfession',
                'SPGender',
                'SPEmployerName',
                'SPEmployerNumber'
            ],
        };
        this.csvOptionsForTeacher = {
            fieldSeparator: ',',
            quoteStrings: '"',
            decimalseparator: '.',
            showLabels: false,
            headers: [
                'FirstName',
                'LastName',
                'EmailId',
                'Contact Phone',
                'Address',
                'DateofBirth',
                'DateofHiring',
                'GrossPay',
                'Certification'
            ],
            showTitle: false,
            title: [
                'FirstName',
                'LastName',
                'EmailId',
                'Contact Phone',
                'Address',
                'DateofBirth',
                'DateofHiring',
                'GrossPay',
                'Certification'
            ],
            useBom: false,
            removeNewLines: true,
            keys: [
                'FirstName',
                'LastName',
                'EmailId',
                'Contact Phone',
                'Address',
                'DateofBirth',
                'DateofHiring',
                'GrossPay',
                'Certification'
            ],
        };
        this.isSubscriptionActive = this.commonService.getSubscriptionStatus();
    }
    AgencyAdminSettingsComponent.prototype.ngOnInit = function () {
        this.spinner.show();
        this.getCuurentSettingForDD();
        this.getSubsidyList();
        this.createAddSubsidyForm();
        this.getSectionVideo();
    };
    AgencyAdminSettingsComponent.prototype.OpenInfoVideo = function (data) {
        $('#infovideo').modal('show');
    };
    AgencyAdminSettingsComponent.prototype.getSectionVideo = function () {
        var _this = this;
        var req = {
            'SectionID': 16
        };
        this.apiService.postData(src_app_layout_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_10__["TeacherAPIURLs"].GetVideoForSection, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.videoPath = res.body.filePath;
                console.log(_this.videoPath, 'bbbbbbbbbbbbbbb');
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminSettingsComponent.prototype.PauseInfoVideo = function () {
        var myVideo = document.getElementById('pausevideo');
        myVideo.pause();
        myVideo.currentTime = 0;
    };
    AgencyAdminSettingsComponent.prototype.saveToiletNotyInterval = function () {
        var _this = this;
        this.spinner.show();
        if (this.toiletingTimeIntervalId) {
            var req = {
                'agencyID': this.agencyId,
                'ActivityTypeID': 7,
                'interval': this.toiletingTimeIntervalId,
                'id': this.toiletingActiviId
            };
            this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_7__["AgencyAPIURLs"].SaveDDMasterInformation, req, null).subscribe(function (res) {
                if (res.body.statusCode === 200) {
                    _this.getCuurentSettingForDD();
                    _this.notification.success({ message: 'Time interval updated', title: '' });
                }
                else {
                    _this.spinner.hide();
                    _this.error.unknownError();
                }
            }, function (err) {
                _this.spinner.hide();
                _this.error.commonError(err);
            });
        }
        else {
            this.spinner.hide();
            this.notification.warning({ message: 'Please select time interval', title: '' });
        }
    };
    AgencyAdminSettingsComponent.prototype.saveNapNotyInterval = function () {
        var _this = this;
        this.spinner.show();
        if (this.NapIntervalId || this.NapminIntervalId) {
            if (this.NapIntervalId == "") {
                this.NapIntervalId = 0;
            }
            if (this.NapminIntervalId == "") {
                this.NapminIntervalId = 0;
            }
            var req = {
                'agencyID': this.agencyId,
                'ActivityTypeID': 6,
                'interval': this.NapIntervalId,
                'minInterval': this.NapminIntervalId,
                'id': this.napActiviId
            };
            this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_7__["AgencyAPIURLs"].SaveDDMasterInformation, req, null).subscribe(function (res) {
                if (res.body.statusCode === 200) {
                    _this.getCuurentSettingForDD();
                    _this.notification.success({ message: 'Time interval updated', title: '' });
                }
                else {
                    _this.spinner.hide();
                    _this.error.unknownError();
                }
            }, function (err) {
                _this.spinner.hide();
                _this.error.commonError(err);
            });
        }
        else {
            this.spinner.hide();
            this.notification.warning({ message: 'Please select time interval', title: '' });
        }
    };
    AgencyAdminSettingsComponent.prototype.saveMealNotyInterval = function () {
        var _this = this;
        this.spinner.show();
        if (this.mealIntervalId) {
            var req = {
                'agencyID': this.agencyId,
                'ActivityTypeID': 3,
                'interval': this.mealIntervalId,
                'id': this.mealActiviId
            };
            this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_7__["AgencyAPIURLs"].SaveDDMasterInformation, req, null).subscribe(function (res) {
                if (res.body.statusCode === 200) {
                    _this.getCuurentSettingForDD();
                    _this.notification.success({ message: 'Time interval updated', title: '' });
                }
                else {
                    _this.spinner.hide();
                    _this.error.unknownError();
                }
            }, function (err) {
                _this.spinner.hide();
                _this.error.commonError(err);
            });
        }
        else {
            this.spinner.hide();
            this.notification.warning({ message: 'Please select time interval', title: '' });
        }
    };
    AgencyAdminSettingsComponent.prototype.getCuurentSettingForDD = function () {
        var _this = this;
        var req = {
            'agencyID': this.agencyId
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_7__["AgencyAPIURLs"].getCurrentDDActivityIntervalSetting, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                if (res.body.data.length > 0) {
                    res.body.data.forEach(function (element) {
                        if (element.activityID === 7) {
                            _this.toiletingTimeIntervalId = element.timeIntervalId;
                            _this.toiletingActiviId = element.id;
                        }
                        if (element.activityID === 6) {
                            _this.NapIntervalId = element.timeIntervalId;
                            _this.NapminIntervalId = element.minIntervalId;
                            _this.napActiviId = element.id;
                        }
                        if (element.activityID === 3) {
                            _this.mealIntervalId = element.timeIntervalId;
                            _this.mealActiviId = element.id;
                        }
                    });
                }
                _this.spinner.hide();
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    /** Add subsidy section */
    AgencyAdminSettingsComponent.prototype.createAddSubsidyForm = function () {
        this.addSubsidyForm = this.fb.group({
            name: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
            amount: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
            description: [''],
        });
    };
    Object.defineProperty(AgencyAdminSettingsComponent.prototype, "f", {
        get: function () { return this.addSubsidyForm.controls; },
        enumerable: true,
        configurable: true
    });
    AgencyAdminSettingsComponent.prototype.clearAddSubForm = function () {
        this.subsidyId = 0;
        this.createAddSubsidyForm();
    };
    AgencyAdminSettingsComponent.prototype.addNewSubsidy = function () {
        if (this.addSubsidyForm.valid) {
            var val = +this.addSubsidyForm.controls.amount.value;
            if (isNaN(val) || val <= 0) {
                this.notification.warning({ message: 'Amount should be valid number or greater than zero ', title: '' });
            }
            else {
                var req = {
                    'subsidyName': this.addSubsidyForm.controls.name.value,
                    'subsidyAmount': this.addSubsidyForm.controls.amount.value,
                    'subsidyDescription': this.addSubsidyForm.controls.description.value,
                    'agencyID': this.agencyId,
                    'id': this.subsidyId,
                };
                this.successAddNewSubsidy(req);
            }
        }
        else {
            this.spinner.hide();
            this.commonService.validateAllFields(this.addSubsidyForm);
        }
    };
    AgencyAdminSettingsComponent.prototype.successAddNewSubsidy = function (data) {
        var _this = this;
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_7__["AgencyAPIURLs"].SaveSubsidyDetails, data, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                $('.addsub').modal('hide');
                _this.getSubsidyList();
                _this.notification.success({ message: res.body.message, title: 'Success' });
            }
            else {
            }
        });
    };
    AgencyAdminSettingsComponent.prototype.getSubsidyList = function () {
        var _this = this;
        var data = {
            'AgencyId': this.agencyId
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_7__["AgencyAPIURLs"].GetSubsidyDetails, data, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.subsidyList = res.body.data.data;
            }
            else {
                _this.notification.warning({ message: res.body.message, title: '' });
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminSettingsComponent.prototype.getSubsidyDetails = function (data) {
        this.subsidyId = data.id;
        this.addSubsidyForm.controls['name'].setValue(data.subsidyName);
        this.addSubsidyForm.controls['name'].updateValueAndValidity();
        this.addSubsidyForm.controls['amount'].setValue(data.subsidyAmount);
        this.addSubsidyForm.controls['amount'].updateValueAndValidity();
        this.addSubsidyForm.controls['description'].setValue(data.subsidyDescription);
        this.addSubsidyForm.controls['description'].updateValueAndValidity();
        $('.addsub').modal('show');
    };
    AgencyAdminSettingsComponent.prototype.deleteSubsidy = function (value) {
        var _this = this;
        this.confirmationService.confirm({
            message: 'Do you want to delete this subsidy record?',
            accept: function () {
                _this.spinner.show();
                var req = {
                    'AgencyID': _this.commonService.getAgencyId(),
                    'id': value.id,
                    'DeletedBy': _this.commonService.getReleventUserId('userdetails')
                };
                _this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_7__["AgencyAPIURLs"].DeleteSubsidyType, req, null).subscribe(function (res) {
                    if (res.body.statusCode === 200) {
                        _this.spinner.hide();
                        _this.notification.success({ message: res.body.message, title: '' });
                        _this.getSubsidyList();
                    }
                    else {
                        _this.spinner.hide();
                        _this.notification.warning({ message: res.body.message, title: '' });
                    }
                }, function (err) {
                    _this.spinner.hide();
                    _this.error.commonError(err);
                });
            }
        });
    };
    AgencyAdminSettingsComponent.prototype.getAllParentList = function () {
        var _this = this;
        this.spinner.show();
        this.isDownloading = true;
        this.loader = true;
        this.parentList = [];
        var req = {
            'AgencyID': this.commonService.getAgencyId(),
            'ActivationType': this.activationType,
            'ParentName': this.nameSearch
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_7__["AgencyAPIURLs"].GetAllParentInformationForCSV, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.totalRecord = res.body.totalRows;
                _this.parentList = res.body.data;
                console.log(_this.parentList);
                _this.generateParentCsvFile(_this.parentList);
                _this.loader = false;
                _this.spinner.hide();
                _this.notification.success({ message: 'Parents details CSV downloaded successfully', title: '' });
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminSettingsComponent.prototype.generateParentCsvFile = function (data) {
        var csvArrayForParent = [];
        console.log(data);
        data.forEach(function (element) {
            csvArrayForParent.push({
                FirstName: element.firstName,
                LastName: element.lastName,
                EmailId: element.email,
                ContactPhone: element.mobile,
                Address: element.address,
                DateofBirth: element.dateOfBirth,
                Profession: element.profession,
                Gender: element.genderName,
                EmployeeName: element.employerName,
                EmployerNumber: element.employerNumber,
            });
        });
        this.ParentDataForCsv = csvArrayForParent;
        // tslint:disable-next-line: no-unused-expression
        new angular2_csv_Angular2_csv__WEBPACK_IMPORTED_MODULE_9__["Angular2Csv"](this.ParentDataForCsv, this.csvFileNameForParent, this.csvOptionsForParent);
        this.isDownloading = false;
    };
    AgencyAdminSettingsComponent.prototype.getAllStudentList = function () {
        var _this = this;
        this.spinner.show();
        this.isDownloading = true;
        this.loader = true;
        this.studentList = [];
        var req = {
            'studentName': this.nameSearch,
            'agencyID': this.commonService.getAgencyId(),
            'ActivationType': this.activationType,
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_7__["AgencyAPIURLs"].GetAllStudentInformationForCSV, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.totalRecord = res.body.totalRows;
                _this.studentList = res.body.data;
                console.log(_this.studentList);
                _this.generateStudentCsvFile(_this.studentList);
                _this.loader = false;
                _this.spinner.hide();
                _this.notification.success({ message: 'Students details CSV downloaded successfully', title: '' });
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminSettingsComponent.prototype.generateStudentCsvFile = function (data) {
        var csvArrayForStudent = [];
        console.log(data);
        data.forEach(function (element) {
            csvArrayForStudent.push({
                FirstName: element.firstName,
                LastName: element.lastName,
                EmailId: element.email,
                ContactPhone: element.childsContactNumber,
                DateofBirth: element.dateOfBirth,
                Gender: element.genderName,
                Address: element.address,
                PhysicianName: element.physicianName,
                PreferredHospital: element.preferredHospital,
                PhysicianContactNumber: element.physicianNumber,
                SPFirstName: element.parentFirstName,
                SPLastName: element.parentLastName,
                SPEmailId: element.parentEmailAddress,
                SPContactNumber: element.parentContactNumber,
                SPAddress: element.parentAddress,
                SPDateOfBirth: element.parentDateOfBirth,
                SPProfession: element.parentProfession,
                SPGender: element.parentGenderName,
                SPEmployerName: element.employerName,
                SPEmployerNumber: element.employerNumber,
            });
        });
        console.log(csvArrayForStudent, ' final data for CSV Parent list');
        this.StudentDataForCsv = csvArrayForStudent;
        // tslint:disable-next-line: no-unused-expression
        new angular2_csv_Angular2_csv__WEBPACK_IMPORTED_MODULE_9__["Angular2Csv"](this.StudentDataForCsv, this.csvFileNameForStudent, this.csvOptionsForStudent);
        this.isDownloading = false;
    };
    AgencyAdminSettingsComponent.prototype.getAllTeacherList = function () {
        var _this = this;
        this.spinner.show();
        this.isDownloading = true;
        this.loader = true;
        this.teacherList = [];
        var req = {
            'agencyID': this.commonService.getAgencyId(),
            'ActivationType': 'activated',
            'limit': 0,
            'page': 0,
            'TeacherName': this.nameSearch
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_7__["AgencyAPIURLs"].GetAllTeacherForAgency, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.totalRecord = res.body.totalRows;
                _this.teacherList = res.body.data;
                console.log(_this.teacherList);
                _this.generateTeacherCsvFile(_this.teacherList);
                _this.loader = false;
                _this.spinner.hide();
                _this.notification.success({ message: 'Teacher details CSV downloaded successfully', title: '' });
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminSettingsComponent.prototype.generateTeacherCsvFile = function (data) {
        var csvArrayForTeacher = [];
        console.log(data);
        data.forEach(function (element) {
            csvArrayForTeacher.push({
                FirstName: element.firstName,
                LastName: element.lastName,
                EmailId: element.email,
                ContactPhone: element.mPhoneNumber,
                Address: element.address,
                DateofBirth: element.dateOfBirth,
                DateofHiring: element.dateHired,
                GrossPay: element.grossPayPerHour,
                Certification: element.certification
            });
        });
        this.TeacherDataForCsv = csvArrayForTeacher;
        // tslint:disable-next-line: no-unused-expression
        new angular2_csv_Angular2_csv__WEBPACK_IMPORTED_MODULE_9__["Angular2Csv"](this.TeacherDataForCsv, this.csvFileNameForTeacher, this.csvOptionsForTeacher);
        this.isDownloading = false;
    };
    AgencyAdminSettingsComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-agency-admin-settings',
            template: __webpack_require__(/*! ./agency-admin-settings.component.html */ "./src/app/layout/agency-admin/components/agency-admin-settings/agency-admin-settings.component.html"),
            styles: [__webpack_require__(/*! ./agency-admin-settings.component.css */ "./src/app/layout/agency-admin/components/agency-admin-settings/agency-admin-settings.component.css")]
        }),
        __metadata("design:paramtypes", [primeng_api__WEBPACK_IMPORTED_MODULE_8__["ConfirmationService"], _shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_1__["AgencyApiService"], _shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_2__["ErrorHandlerService"],
            ngx_spinner__WEBPACK_IMPORTED_MODULE_4__["NgxSpinnerService"], _shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_3__["NotificationService"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormBuilder"], _shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_6__["CommonService"]])
    ], AgencyAdminSettingsComponent);
    return AgencyAdminSettingsComponent;
}());



/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-staff-birth-report/agency-admin-staff-birth-report.component.css":
/*!******************************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-staff-birth-report/agency-admin-staff-birth-report.component.css ***!
  \******************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9hZ2VuY3ktYWRtaW4vY29tcG9uZW50cy9hZ2VuY3ktYWRtaW4tc3RhZmYtYmlydGgtcmVwb3J0L2FnZW5jeS1hZG1pbi1zdGFmZi1iaXJ0aC1yZXBvcnQuY29tcG9uZW50LmNzcyJ9 */"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-staff-birth-report/agency-admin-staff-birth-report.component.html":
/*!*******************************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-staff-birth-report/agency-admin-staff-birth-report.component.html ***!
  \*******************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"wrapper\">\n  <div class=\"container-fluid\">\n\n    <div class=\"pagetitle\">\n      <div>\n        <h2>Reports\n        </h2>\n      </div>\n    </div>\n\n    <div class=\"subhead d-flex justify-content-between mt-20 mb-20\">\n      <div>\n        <h3>Staff Birth Report</h3>\n      </div>\n      <div style=\"cursor:pointer\" (click)=\"pdfReportForBirthday()\" title=\"Download report\"><i class=\"fa fa-download\"\n          aria-hidden=\"true\"></i>\n      </div>\n    </div>\n    <div class=\"card cardfilter\">\n      <div class=\"leftfilter\">\n        <div class=\"row algcenter\">\n          <div class=\"search-date\">\n            <input type=\"text\" placeholder=\"Search name\" [(ngModel)]=\"searchName\" class=\"form-control mr15\" id=\"\">\n          </div>\n          <div class=\"search-date\">\n            <select name=\"\" id=\"\" [(ngModel)]=\"searchMonth\" class=\"form-control mr15\">\n              <option value=\"0\">Search By Month</option>\n              <option value=\"1\">January</option>\n              <option value=\"2\">February</option>\n              <option value=\"3\">March</option>\n              <option value=\"4\">April</option>\n              <option value=\"5\">May</option>\n              <option value=\"6\">June</option>\n              <option value=\"7\">July</option>\n              <option value=\"8\">August</option>\n              <option value=\"9\">September</option>\n              <option value=\"10\">October</option>\n              <option value=\"11\">November</option>\n              <option value=\"12\">December</option>\n            </select>\n          </div>\n          <div class=\"search-date\" style=\"width: 150px\">\n            <input type=\"text\" placeholder=\"From Date\" [(ngModel)]=\"fromDate\" showWeekNumbers=\"false\"\n              class=\"form-control mr15\" [bsConfig]=\"dpConfig\" bsDatepicker>\n          </div>\n          <div class=\"search-date\" style=\"width: 150px\">\n            <input type=\"text\" placeholder=\"To Date\" [(ngModel)]=\"toDate\" showWeekNumbers=\"false\"\n              class=\"form-control mr15\" [bsConfig]=\"dpConfig\" bsDatepicker>\n          </div>\n          <div class=\"filter-buttons\">\n            <button type=\"submit\" class=\"btn btn-send\" *ngIf=\"!showClearBtn\" (click)=\"search()\">Search</button>\n            <button type=\"submit\" class=\"btn btn-secondary\" *ngIf=\"showClearBtn\" (click)=\"clearSearch()\">Clear</button>\n          </div>\n        </div>\n      </div>\n\n\n      <div class=\"innertable\">\n        <div class=\"table-responsive\">\n          <table class=\"table\">\n            <thead class=\"thead-light\">\n              <tr>\n                <th scope=\"col\">Teacher Name</th>\n                <th scope=\"col\">Date of Birth</th>\n                <th scope=\"col\">Age</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let staff of staffList\">\n                <td>{{staff.teacherName}}</td>\n                <td>{{staff.dateofBirth | date: 'longDate'}}</td>\n                <td>{{staff.age}}</td>\n              </tr>\n            </tbody>\n          </table>\n          <div class=\"text-center\" *ngIf=\"staffList.length == 0 && !loader\">\n            <span>No record found!</span>\n          </div>\n        </div>\n        <p-paginator [alwaysShow]=\"false\" [rows]=\"limit\" [totalRecords]=\"totalRecord\" (onPageChange)=\"paginate($event)\">\n        </p-paginator>\n      </div>\n    </div>\n\n  </div>\n</div>\n<ngx-spinner type=\"ball-atom\" size=\"medium\" color=\"#58A7FE\"></ngx-spinner>"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-staff-birth-report/agency-admin-staff-birth-report.component.ts":
/*!*****************************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-staff-birth-report/agency-admin-staff-birth-report.component.ts ***!
  \*****************************************************************************************************************************/
/*! exports provided: AgencyAdminStaffBirthReportComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AgencyAdminStaffBirthReportComponent", function() { return AgencyAdminStaffBirthReportComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../shared/services/agency-api-service/agency-api.service */ "./src/app/layout/agency-admin/components/shared/services/agency-api-service/agency-api.service.ts");
/* harmony import */ var _shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../shared/services/error-handler/error-handler.service */ "./src/app/shared/services/error-handler/error-handler.service.ts");
/* harmony import */ var _shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../shared/services/notification-service/notification.service */ "./src/app/shared/services/notification-service/notification.service.ts");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ngx-spinner */ "./node_modules/ngx-spinner/fesm5/ngx-spinner.js");
/* harmony import */ var _shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../shared/services/common/common.service */ "./src/app/shared/services/common/common.service.ts");
/* harmony import */ var _shared_constatant__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./../shared/constatant */ "./src/app/layout/agency-admin/components/shared/constatant.ts");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../../environments/environment */ "./src/environments/environment.ts");
/* harmony import */ var ngx_bootstrap__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ngx-bootstrap */ "./node_modules/ngx-bootstrap/esm5/ngx-bootstrap.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









var AgencyAdminStaffBirthReportComponent = /** @class */ (function () {
    function AgencyAdminStaffBirthReportComponent(apiService, error, spinner, notification, commonService) {
        this.apiService = apiService;
        this.error = error;
        this.spinner = spinner;
        this.notification = notification;
        this.commonService = commonService;
        this.searchName = '';
        this.staffList = [];
        this.loader = true;
        this.pageNo = 0;
        this.limit = 10;
        this.totalRecord = 0;
        this.showClearBtn = false;
        this.searchMonth = 0;
        this.classList = [];
        this.dpConfig = new ngx_bootstrap__WEBPACK_IMPORTED_MODULE_8__["BsDatepickerConfig"]();
    }
    AgencyAdminStaffBirthReportComponent.prototype.ngOnInit = function () {
        this.dpConfig = Object.assign({}, { containerClass: 'theme-dark-blue' }, { showWeekNumbers: false });
        this.getBirthdayReport();
    };
    AgencyAdminStaffBirthReportComponent.prototype.getBirthdayReport = function () {
        var _this = this;
        this.loader = true;
        this.staffList = [];
        this.spinner.show();
        var req = {
            'TeacherName': this.searchName,
            'agencyID': this.commonService.getAgencyId(),
            'page': this.pageNo,
            'limit': this.limit,
            'fromDate': this.fromDate ? this.fromDate : this.blankDate,
            'toDate': this.toDate ? this.toDate : this.blankDate,
            'month': this.searchMonth
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_6__["AgencyAPIURLs"].GetStaffBirthDateReport, req, null).subscribe(function (res) {
            _this.totalRecord = res.body.totalRows;
            if (res.body.statusCode === 200) {
                _this.staffList = res.body.data;
            }
            else {
                _this.error.unknownError();
            }
            _this.loader = false;
            _this.spinner.hide();
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminStaffBirthReportComponent.prototype.pdfReportForBirthday = function () {
        var _this = this;
        this.loader = true;
        this.spinner.show();
        var req = {
            'TeacherName': this.searchName,
            'agencyID': this.commonService.getAgencyId(),
            'fromDate': this.fromDate ? this.fromDate : this.blankDate,
            'toDate': this.toDate ? this.toDate : this.blankDate,
            'month': this.searchMonth
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_6__["AgencyAPIURLs"].PdfReportForStaffBirthday, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                var filename = _environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].baseUrl + res.body.fileName;
                var name_1 = res.body.fileName;
                window.open(filename);
                setTimeout(function () {
                    _this.deletePdFFromServer(name_1);
                }, 5000);
            }
            else {
                _this.error.unknownError();
            }
            _this.loader = false;
            _this.spinner.hide();
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminStaffBirthReportComponent.prototype.getRecords = function () {
        console.log('data', this.staffList);
    };
    // Delete pdf after use from server
    AgencyAdminStaffBirthReportComponent.prototype.deletePdFFromServer = function (filename) {
        var req = {
            'fileName': filename,
            'agencyID': this.commonService.getAgencyId()
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_6__["AgencyAPIURLs"].DeleteExistingFile, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
            }
            else {
            }
        }, function (err) {
            console.log(err);
        });
    };
    AgencyAdminStaffBirthReportComponent.prototype.paginate = function (event) {
        this.pageNo = event.page;
        this.getBirthdayReport();
    };
    AgencyAdminStaffBirthReportComponent.prototype.search = function () {
        this.showClearBtn = true;
        this.getBirthdayReport();
    };
    AgencyAdminStaffBirthReportComponent.prototype.clearSearch = function () {
        this.searchName = '';
        this.searchMonth = 0;
        this.fromDate = null;
        this.toDate = null;
        this.showClearBtn = false;
        this.getBirthdayReport();
    };
    AgencyAdminStaffBirthReportComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-agency-admin-staff-birth-report',
            template: __webpack_require__(/*! ./agency-admin-staff-birth-report.component.html */ "./src/app/layout/agency-admin/components/agency-admin-staff-birth-report/agency-admin-staff-birth-report.component.html"),
            styles: [__webpack_require__(/*! ./agency-admin-staff-birth-report.component.css */ "./src/app/layout/agency-admin/components/agency-admin-staff-birth-report/agency-admin-staff-birth-report.component.css")]
        }),
        __metadata("design:paramtypes", [_shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_1__["AgencyApiService"], _shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_2__["ErrorHandlerService"],
            ngx_spinner__WEBPACK_IMPORTED_MODULE_4__["NgxSpinnerService"], _shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_3__["NotificationService"],
            _shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_5__["CommonService"]])
    ], AgencyAdminStaffBirthReportComponent);
    return AgencyAdminStaffBirthReportComponent;
}());



/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-student-list/agency-admin-student-list.component.css":
/*!******************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-student-list/agency-admin-student-list.component.css ***!
  \******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".upload-btn-wrapper{ top: 10px !important}\r\n\r\n.checkbox_address\r\n{\r\nheight: 34px;\r\nwidth: 18px;\r\nmargin-left: 30px;\r\nmargin-top: 1px;\r\n}\r\n\r\n.info-icon{\r\n    margin-left: 264px;\r\n    font-size: 20px; \r\n    color: #383333;\r\n}\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L2FnZW5jeS1hZG1pbi9jb21wb25lbnRzL2FnZW5jeS1hZG1pbi1zdHVkZW50LWxpc3QvYWdlbmN5LWFkbWluLXN0dWRlbnQtbGlzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHFCQUFxQixvQkFBb0I7O0FBRXpDOztBQUVBLFlBQVk7QUFDWixXQUFXO0FBQ1gsaUJBQWlCO0FBQ2pCLGVBQWU7QUFDZjs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixlQUFlO0lBQ2YsY0FBYztBQUNsQiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9hZ2VuY3ktYWRtaW4vY29tcG9uZW50cy9hZ2VuY3ktYWRtaW4tc3R1ZGVudC1saXN0L2FnZW5jeS1hZG1pbi1zdHVkZW50LWxpc3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi51cGxvYWQtYnRuLXdyYXBwZXJ7IHRvcDogMTBweCAhaW1wb3J0YW50fVxyXG5cclxuLmNoZWNrYm94X2FkZHJlc3Ncclxue1xyXG5oZWlnaHQ6IDM0cHg7XHJcbndpZHRoOiAxOHB4O1xyXG5tYXJnaW4tbGVmdDogMzBweDtcclxubWFyZ2luLXRvcDogMXB4O1xyXG59XHJcblxyXG4uaW5mby1pY29ue1xyXG4gICAgbWFyZ2luLWxlZnQ6IDI2NHB4O1xyXG4gICAgZm9udC1zaXplOiAyMHB4OyBcclxuICAgIGNvbG9yOiAjMzgzMzMzO1xyXG59Il19 */"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-student-list/agency-admin-student-list.component.html":
/*!*******************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-student-list/agency-admin-student-list.component.html ***!
  \*******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"wrapper\">\r\n  <div class=\"container-fluid\">\r\n\r\n    <div class=\"pagetitle\">\r\n      <div>\r\n        <h2>Student List\r\n        </h2>\r\n      </div>\r\n\r\n      <div *ngIf=\"isSubscriptionActive\">\r\n\r\n        <div *ngIf=\"isSubscriptionActive\" class=\"upload-btn-wrapper\">\r\n          <button class=\"btn btn-send\">Upload CSV</button>\r\n          <input type=\"file\" #input (change)=\"processCSVFile($event)\">\r\n\r\n        </div>\r\n        <button type=\"submit\" class=\"btn btn-red\" data-toggle=\"modal\" data-target=\".addchild\" (click)=\"clearForm()\">Add\r\n          Student</button>\r\n        <button type=\"submit\" class=\"btn btn-red\" [routerLink]=\"['../adminclasses']\">Enroll Student</button>\r\n      </div>\r\n\r\n    </div>\r\n\r\n    <div class=\"subhead d-flex justify-content-between\">\r\n      <div>\r\n        <h3>Student List</h3>\r\n      </div>\r\n\r\n      <div class=\"info-icon\">\r\n        <i class=\"fa fa-info-circle\" (click)=\"OpenInfoVideo()\" data-toggle=\"modal\" aria-hidden=\"true\"\r\n          title=\"Information Video\"></i>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"studentlist \">\r\n      <ul class=\"nav nav-pills mb-3\" id=\"pills-tab\" role=\"tablist\">\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link active\" id=\"appStudent\" data-toggle=\"pill\" href=\"#pills-allstudent\" role=\"tab\"\r\n            aria-controls=\"pills-appstudent\" aria-selected=\"true\"\r\n            (click)=\"clearOnTabChange($event);getActivatedAndDeactivatedStudents()\">All\r\n            Students</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link \" id=\"appStudent\" data-toggle=\"pill\" href=\"#pills-appstudent\" role=\"tab\"\r\n            aria-controls=\"pills-appstudent\" aria-selected=\"true\"\r\n            (click)=\"clearOnTabChange($event);getStudentsList();\">Enrolled Students</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" id=\"penstudent\" data-toggle=\"pill\"\r\n            (click)=\"clearOnTabChange($event);getAllUnApprovedStudent()\" href=\"#pills-penstudent\" role=\"tab\"\r\n            aria-controls=\"pills-penstudent\" aria-selected=\"true\">Unapproved\r\n            Student</a>\r\n        </li>\r\n\r\n      </ul>\r\n\r\n      <div class=\"tab-content\" id=\"pills-tabContent\">\r\n        <!-- All student Tab -->\r\n        <div class=\"tab-pane fade show active\" id=\"pills-allstudent\" role=\"tabpanel\" aria-labelledby=\"appStudent\">\r\n          <div class=\"leftfilter searchwitoutcard\">\r\n            <div class=\"row algcenter\">\r\n              <div class=\"search-date\">\r\n                <div class=\"pr15 label-text\">Search Name : </div>\r\n                <input type=\"text\" placeholder=\"Search student name\" (keydown)=\"keyDownFunction($event,1)\"\r\n                  [(ngModel)]=\"nameSearch\" class=\"form-control mr15\" id=\"\">\r\n              </div>\r\n              <div class=\"search-date\">\r\n                <div class=\"label-text\">Search By Activation</div>\r\n                <div class=\"pr15\">\r\n                  <div class=\"form-group\">\r\n                    <select name=\"\" id=\"\" [(ngModel)]=\"activationType\">\r\n                      <option value=\"\">All</option>\r\n                      <option value=\"Activated\">Activated</option>\r\n                      <option value=\"Deactivated\">Deactivated</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"filter-buttons\">\r\n                <button type=\"submit\" class=\"btn btn-send\"\r\n                  (click)=\"getActivatedAndDeactivatedStudents()\">Search</button>\r\n              </div>\r\n\r\n\r\n            </div>\r\n\r\n          </div>\r\n          <div class=\"innertable\">\r\n            <div class=\"table-responsive\">\r\n              <table class=\"table\">\r\n                <thead class=\"thead-light\">\r\n                  <tr>\r\n                    <th scope=\"col\">Photo</th>\r\n                    <th scope=\"col\">Student Name</th>\r\n                    <th scope=\"col\">Parent Name</th>\r\n                    <th scope=\"col\">Gender</th>\r\n                    <th class=\"text-center\" scope=\"col\">Change Status</th>\r\n                    <th class=\"text-center\" scope=\"col\">Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr *ngFor=\"let student of activeAndDeactiveStudentList\">\r\n                    <td>\r\n                      <img src=\"{{student.imagePath}}\" onError=\"this.src='assets/img/user.png'\" alt=\"\"\r\n                        class=\"img-circle childimg\">\r\n                    </td>\r\n                    <td>{{student.studentName}}</td>\r\n                    <td>{{student.parentName}}</td>\r\n                    <td>{{student.genderName}}</td>\r\n                    <td class=\"text-center\" *ngIf=\"isSubscriptionActive\">\r\n                      <button *ngIf=\"!student.isDeleted\" class=\"form-control\" class=\"btn btn-warning\"\r\n                        data-toggle=\"modal\" (click)=\"deleteStudentReason(student)\"\r\n                        data-target=\".addreason\">Deactivate</button>\r\n                      <button *ngIf=\"student.isDeleted\" class=\"form-control\" class=\"btn btn-success\"\r\n                        (click)=\"activateStudent(student)\">Activate</button>\r\n                    </td>\r\n                    <td class=\"text-center\">\r\n                      <a *ngIf=\"!student.isDeleted\"\r\n                        [routerLink]=\"['../studentdetails', student.studentId, student.parentID]\">\r\n                        <i class=\"fa fa-eye\" aria-hidden=\"true\"></i>\r\n                      </a>\r\n                      <a *ngIf=\"student.isDeleted\" style=\"cursor: not-allowed\">\r\n                        <i class=\"fa fa-eye\" aria-hidden=\"true\"></i>\r\n                      </a>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n              <div class=\"text-center\" *ngIf=\"activeAndDeactiveStudentList.length == 0 && !loader\">\r\n                <span>No record found!</span>\r\n              </div>\r\n            </div>\r\n            <p-paginator #allstudent [alwaysShow]=\"false\" [rows]=\"limit\" [totalRecords]=\"totalRecord\"\r\n              (onPageChange)=\"paginate($event, 1)\"></p-paginator>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Enrolled student tab -->\r\n        <div class=\"tab-pane fade \" id=\"pills-appstudent\" role=\"tabpanel\" aria-labelledby=\"appStudent\">\r\n          <div class=\"leftfilter searchwitoutcard\">\r\n            <div class=\"row algcenter\">\r\n              <div class=\"search-date\">\r\n                <div class=\"pr15 label-text\">Search Name : </div>\r\n                <input type=\"text\" placeholder=\"Search student name\" (keydown)=\"keyDownFunction($event,2)\"\r\n                  [(ngModel)]=\"searchByStudentName\" class=\"form-control mr15\" id=\"\">\r\n              </div>\r\n              <div class=\"search-class\">\r\n                <div class=\"pr15 label-text\">Search Class : </div>\r\n                <div class=\"pr15\">\r\n                  <div class=\"form-group\">\r\n                    <select class=\"form-control\" placeholder=\"Serch\" [(ngModel)]=\"searchByClass\"\r\n                      (change)=\"getSerchClass($event)\" id=\"exampleFormControlSelect1\">\r\n                      <option value=\"\">All</option>\r\n                      <option *ngFor=\"let classes of classList\" [value]=\"classes.classesID\">{{classes.className}}\r\n                      </option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"filter-buttons\">\r\n                <button type=\"submit\" class=\"btn btn-send\" (click)=\"getStudentsList()\">Search</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"innertable\">\r\n            <div class=\"table-responsive\">\r\n              <table class=\"table\">\r\n                <thead class=\"thead-light\">\r\n                  <tr>\r\n                    <th scope=\"col\">Photo</th>\r\n                    <th scope=\"col\">Student Name</th>\r\n                    <th scope=\"col\">Class Name</th>\r\n                    <th scope=\"col\">Parent Name</th>\r\n                    <th scope=\"col\">Gender</th>\r\n                    <th scope=\"col\">Current Status</th>\r\n                    <th scope=\"col\">Status</th>\r\n                    <th class=\"text-center\" scope=\"col\">Actions</th>\r\n                    <th scope=\"col\">DD Settings</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr *ngFor=\"let student of studentList\">\r\n                    <td>\r\n                      <img src=\"{{student.imagePath}}\" onError=\"this.src='assets/img/user.png'\" alt=\"\"\r\n                        class=\"img-circle childimg\">\r\n                    </td>\r\n                    <td>{{student.studentName}}</td>\r\n                    <td>{{student.className}}</td>\r\n                    <td>{{student.parentName}}</td>\r\n                    <td>{{student.genderName}}</td>\r\n                    <td *ngIf=\"student.enrolledStatus == 0\">Not Enrolled</td>\r\n                    <td *ngIf=\"student.enrolledStatus == 1\">Requested</td>\r\n                    <td *ngIf=\"student.enrolledStatus == 2\">Enrolled</td>\r\n                    <td *ngIf=\"student.enrolledStatus == 3\">Request Cancelled by Parent</td>\r\n                    <td *ngIf=\"student.enrolledStatus == 4\">Denied by Agency</td>\r\n                    <td *ngIf=\"student.enrolledStatus == 5\">Completed</td>\r\n                    <td>\r\n                      <button class=\"form-control\" *ngIf=\"isSubscriptionActive\" [disabled]=\"student.enrolledStatus != 2\"\r\n                        class=\"btn btn-info\"\r\n                        [ngStyle]=\"{'cursor': student.enrolledStatus != 2 ? 'not-allowed' : 'pointer'}\"\r\n                        (click)=\"completeStatus($event,student)\">Complete class </button>\r\n\r\n                    </td>\r\n                    <td class=\"text-center\">\r\n                      <a [routerLink]=\"['../studentdetails', student.studentId, student.parentID]\">\r\n                        <i class=\"fa fa-eye\" aria-hidden=\"true\"></i>\r\n                      </a>\r\n                    </td>\r\n                    <td class=\"text-center\">\r\n                      <a (click)=\"getDetails(student.studentId)\" title=\"View/Update\"><i class=\"fa fa-pencil\"></i> </a>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n              <div class=\"text-center\" *ngIf=\"studentList.length == 0 && !loader\">\r\n                <span>No record found!</span>\r\n              </div>\r\n            </div>\r\n            <p-paginator [alwaysShow]=\"false\" #enrollstd [rows]=\"limit\" [totalRecords]=\"totalRecord\"\r\n              (onPageChange)=\"paginate($event,2)\"></p-paginator>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"tab-pane fade\" id=\"pills-penstudent\" role=\"tabpanel\" aria-labelledby=\"penstudent\">\r\n          <div class=\"innertable\">\r\n            <div class=\"table-responsive\">\r\n              <table class=\"table\">\r\n                <thead class=\"thead-light\">\r\n                  <tr>\r\n                    <th scope=\"col\">Photo</th>\r\n                    <th scope=\"col\">Student Name</th>\r\n                    <th scope=\"col\">For Class</th>\r\n                    <th scope=\"col\">Parent Name</th>\r\n                    <th class=\"text-center\" scope=\"col\">Current Status</th>\r\n                    <th scope=\"col\">Change Status</th>\r\n                    <th scope=\"col\" class=\"text-center\">Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n\r\n                  <tr *ngFor=\"let student of unApprovedStudentList\">\r\n                    <td>\r\n                      <img src=\"{{student.imagePath}}\" onError=\"this.src='assets/img/user.png'\" alt=\"\"\r\n                        class=\"img-circle childimg\">\r\n                    </td>\r\n                    <td>{{student.studentName}}</td>\r\n                    <td>{{student.className}}</td>\r\n                    <td>{{student.parentName}}</td>\r\n\r\n                    <td class=\"text-center\">\r\n                      <div *ngIf=\"student.enrolledStatus == 1\"> Requested</div>\r\n                      <div *ngIf=\"student.enrolledStatus == 4\" style=\"color: #eb547c\"> Denied</div>\r\n                    </td>\r\n\r\n                    <td>\r\n                      <div class=\"form-group\" *ngIf=\"isSubscriptionActive\">\r\n                        <select class=\"form-control\" id=\"exampleFormControlSelect1\"\r\n                          (change)=\"approvedDenyRequest($event,student)\">\r\n                          <option value=\"\">Select </option>\r\n                          <option value=\"2\">Approved request</option>\r\n                          <option value=\"4\">Deny request</option>\r\n                        </select>\r\n                      </div>\r\n                    </td>\r\n                    <td class=\"text-center\">\r\n                      <a [routerLink]=\"['../studentdetails', student.studentID, student.parentID]\">\r\n                        <i class=\"fa fa-eye\" aria-hidden=\"true\"></i>\r\n                      </a>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n              <div class=\"text-center\">\r\n                <span *ngIf=\"unApprovedStudentList.length == 0 && !loader\">No record found</span>\r\n              </div>\r\n            </div>\r\n            <p-paginator #unenrolstd [alwaysShow]=\"false\" [rows]=\"limit\" [totalRecords]=\"totalRecord\"\r\n              (onPageChange)=\"paginate($event, 3)\"></p-paginator>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      <!-- Add new Student Modal -->\r\n      <div class=\"modal fade addchild\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myLargeModalLabel\"\r\n        aria-hidden=\"true\">\r\n        <div class=\"modal-dialog modal-lg\">\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n              <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Save Changes</h5>\r\n              <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n              <div class=\"upload-profile\">\r\n                <div>\r\n                  <img src=\"{{image}}\" onError=\"this.src='assets/img/user.png'\" alt=\"\" class=\"img-fluid img-circle\">\r\n                </div>\r\n\r\n                <div class=\"upload-btn-wrapper\">\r\n                  <button class=\"btn btn-send\">Upload a file</button>\r\n                  <input type=\"file\" name=\"myfile\" #input (change)=\"processFile($event)\" />\r\n                </div>\r\n              </div>\r\n              <form [formGroup]=\"addChildForm\">\r\n                <div class=\"row  mt-20\">\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">First name*</label>\r\n                      <input type=\"text \" (keypress)=\"commonService.allowAlphabetOnly($event)\"\r\n                        formControlName=\"firstname\" class=\"form-control\" id=\"\" aria-describedby=\"\"\r\n                        placeholder=\"Enter First Name\">\r\n                      <div *ngIf=\"a.firstname.invalid && (a.firstname.dirty || a.firstname.touched)\"\r\n                        class=\"text-left errormsg\">\r\n                        <span *ngIf=\"a.firstname.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please enter first name</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Last name*</label>\r\n                      <input type=\"text \" (keypress)=\"commonService.allowAlphabetOnly($event)\"\r\n                        formControlName=\"lastname\" class=\"form-control\" id=\"\" aria-describedby=\"\"\r\n                        placeholder=\"Enter Last Name\">\r\n                      <div *ngIf=\"a.lastname.invalid && (a.lastname.dirty || a.lastname.touched)\"\r\n                        class=\"text-left errormsg\">\r\n                        <span *ngIf=\"a.lastname.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please enter last name</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n\r\n                <div class=\"row \">\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Contact Number*</label>\r\n                      <input type=\"text\" maxlength=\"10\" (keypress)=\"commonService.allowOnlyNumber($event)\"\r\n                        formControlName=\"mobile\" class=\"form-control\" id=\"\" aria-describedby=\"\" placeholder=\"Phone\">\r\n                      <div *ngIf=\"a.mobile.invalid && (a.mobile.dirty || a.mobile.touched)\" class=\"text-left errormsg\">\r\n                        <span *ngIf=\"a.mobile.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please enter contact number</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"exampleFormControlSelect1\">Gender*</label>\r\n                      <select class=\"form-control\" formControlName=\"gender\" id=\"exampleFormControlSelect1\">\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"1\">Male</option>\r\n                        <option value=\"2\">Female</option>\r\n                      </select>\r\n                      <div *ngIf=\"a.gender.invalid && (a.gender.dirty || a.gender.touched)\" class=\"text-left errormsg\">\r\n                        <span *ngIf=\"a.gender.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select gender</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"row \">\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Date of Birth*</label>\r\n                      <input type=\"text\" placeholder=\"Select date\" formControlName=\"birthdate\" showWeekNumbers=\"false\"\r\n                        [maxDate]=\"today\" class=\"form-control\" [bsConfig]=\"dpConfig\" bsDatepicker>\r\n                      <div *ngIf=\"a.birthdate.invalid && (a.birthdate.dirty || a.birthdate.touched)\"\r\n                        class=\"text-left errormsg\">\r\n                        <span *ngIf=\"a.birthdate.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select birthdate</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Select Parent*</label>\r\n                      <select class=\"form-control\" placeholder=\"State\" formControlName=\"parentid\"\r\n                        id=\"exampleFormControlSelect1\" (change)=\"getParentAddress($event.target.value)\">\r\n                        <option value=\"\">Select Parent</option>\r\n                        <option *ngFor=\"let parent of parentList\" [value]=\"parent.id\">\r\n                          {{parent.parentName}}</option>\r\n                      </select>\r\n                      <div *ngIf=\"a.parentid.invalid && (a.parentid.dirty || a.parentid.touched)\"\r\n                        class=\"text-left errormsg\">\r\n                        <span *ngIf=\"a.parentid.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select parent </span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                </div>\r\n\r\n\r\n\r\n                <div class=\"row \">\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"exampleFormControlSelect1\">Country*</label>\r\n                      <select class=\"form-control\" placeholder=\"Country\" formControlName=\"country\"\r\n                        id=\"exampleFormControlSelect1\" (change)=\"getStatesList()\">\r\n                        <option value=\"\">Select Country</option>\r\n                        <option *ngFor=\"let countries of countryList\" [value]=\"countries.id\">\r\n                          {{countries.countryName}}</option>\r\n                      </select>\r\n                      <div *ngIf=\"a.country.invalid && (a.country.dirty || a.country.touched)\"\r\n                        class=\"text-left errormsg\">\r\n                        <span *ngIf=\"a.country.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select country</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"exampleFormControlSelect1\">State*</label>\r\n                      <select class=\"form-control\" placeholder=\"State\" formControlName=\"state\"\r\n                        id=\"exampleFormControlSelect1\" (change)=\"getCitiesList()\">\r\n                        <option value=\"\">Select State</option>\r\n                        <option *ngFor=\"let states of stateList\" [value]=\"states.id\">{{states.stateName}}\r\n                        </option>\r\n                      </select>\r\n                      <div *ngIf=\"a.state.invalid && (a.state.dirty || a.state.touched)\" class=\"text-left errormsg\">\r\n                        <span *ngIf=\"a.state.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select state</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"row \">\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">City*</label>\r\n                      <select class=\"form-control\" placeholder=\"City\" formControlName=\"city\"\r\n                        id=\"exampleFormControlSelect1\">\r\n                        <option value=\"\">Select City</option>\r\n                        <option *ngFor=\"let cities of cityList\" [value]=\"cities.id\">{{cities.cityName}}</option>\r\n                      </select>\r\n                      <div *ngIf=\"a.city.invalid && (a.city.dirty || a.city.touched)\" class=\"text-left errormsg\">\r\n                        <span *ngIf=\"a.city.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select city</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Child Start Date*</label>\r\n                      <input type=\"text\" placeholder=\"Select Start date\" formControlName=\"childstartdate\"\r\n                        showWeekNumbers=\"false\" class=\"form-control\" [bsConfig]=\"dpConfig\"\r\n                        bsDatepicker>\r\n                      <div *ngIf=\"a.childstartdate.invalid && (a.childstartdate.dirty || a.childstartdate.touched)\"\r\n                        class=\"text-left errormsg\">\r\n                        <span *ngIf=\"a.childstartdate.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select child start date</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                </div>\r\n\r\n                <div class=\"row \">\r\n\r\n                  <div class=\"col-lg-4\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Address*</label>\r\n                      <input type=\"text \" formControlName=\"address\" class=\"form-control\" id=\"\" aria-describedby=\"\"\r\n                        placeholder=\"Address\">\r\n                      <!-- <div *ngIf=\"a.address.invalid && (a.address.dirty || a.address.touched)\"\r\n                        class=\"text-left errormsg\">\r\n                        <span *ngIf=\"a.address.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please enter address</span>\r\n                        </span>\r\n                      </div> -->\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-lg-2\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Same as Parent</label>\r\n                      <input type=\"checkbox\" id=\"checkbox-in\" class=\"checkbox_address\" (change)=\"addAddress()\"\r\n                        formControlName=\"addressasparent\">\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Bus</label>\r\n                      <select class=\"form-control\" placeholder=\"Bus\" formControlName=\"bus\"\r\n                        id=\"exampleFormControlSelect1\">\r\n                        <option value=\"0\">Select Bus</option>\r\n                        <option *ngFor=\"let bus of busList\" [value]=\"bus.id\">{{bus.busName}}</option>\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n\r\n                </div>\r\n\r\n                <div class=\"row mb-20\">\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Physician name</label>\r\n                      <input type=\"text\" class=\"form-control\" (keypress)=\"commonService.allowAlphabetOnly($event)\"\r\n                        formControlName=\"physicianname\" id=\"\" aria-describedby=\"\" placeholder=\"Physician name\">\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"exampleFormControlSelect1\">Physician Contact Number</label>\r\n                      <input type=\"text \" maxlength=\"10\" (keypress)=\"commonService.allowOnlyNumber($event)\"\r\n                        class=\"form-control\" formControlName=\"physicianContactNumber\" id=\"\" aria-describedby=\"\"\r\n                        placeholder=\"Physician Contact Number\">\r\n                    </div>\r\n                  </div>\r\n\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Physician Address</label>\r\n                      <input type=\"text \" formControlName=\"physicianaddress\" class=\"form-control\" id=\"\"\r\n                        aria-describedby=\"\" placeholder=\"Physician address\">\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Zip Code</label>\r\n                      <input type=\"text \" maxlength=\"6\" (keypress)=\"commonService.allowOnlyNumber($event)\"\r\n                        formControlName=\"zipcode\" class=\"form-control\" id=\"\" aria-describedby=\"\"\r\n                        placeholder=\"Enter Zip Code\">\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"exampleFormControlSelect1\">Preferred hospital</label>\r\n                      <input type=\"text \" class=\"form-control\" formControlName=\"preferredhospital\" id=\"\"\r\n                        aria-describedby=\"\" placeholder=\"Preferred hospital\">\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"row mb-20\">\r\n                  <div class=\"col-lg-12\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Child Notes</label>\r\n                      <textarea class=\"form-control\" maxlength=\"200\" formControlName=\"childnotes\" aria-describedby=\"\"\r\n                        placeholder=\"Enter Child Notes\"></textarea>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n              </form>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n              <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n              <button type=\"button\" class=\"btn btn-primary\" (click)=\"saveChildDetails()\">Save Changes</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Rejected User List -->\r\n      <div class=\"modal fade rejectedUsr\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myLargeModalLabel\"\r\n        aria-hidden=\"true\">\r\n        <div class=\"modal-dialog modal-lg\">\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n              <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Rejected Student List</h5>\r\n              <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n              <div class=\"innertable\">\r\n                <div class=\"table-responsive\">\r\n                  <table class=\"table\">\r\n                    <thead class=\"thead-light\">\r\n                      <tr>\r\n                        <th scope=\"col\">Student First Name</th>\r\n                        <th scope=\"col\">Student Last Name</th>\r\n                        <th scope=\"col\">Parent Email Address</th>\r\n                        <th scope=\"col\">Reason</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n\r\n                      <tr *ngFor=\"let student of rejectedUserList\">\r\n                        <td>{{student.firstName}}</td>\r\n                        <td>{{student.lastName}}</td>\r\n                        <td>{{student.parentEmailAddress}}</td>\r\n                        <td>{{student.msg}}</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n              <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n\r\n\r\n    <div class=\"modal fade \" id=\"authpermodal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myLargeModalLabel\"\r\n      aria-hidden=\"true\">\r\n      <div class=\"modal-dialog modal-lg\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\">Digital Director Settings</h5>\r\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <div class=\"table-responsive\">\r\n              <table class=\"table \">\r\n                <thead class=\"thead-light\">\r\n                  <tr>\r\n                    <th scope=\"col\">Activity Name</th>\r\n                    <th scope=\"col\">Set Time Interval</th>\r\n\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr>\r\n                    <td> <b>Toileting </b> </td>\r\n                    <td>\r\n                      <select name=\"\" style=\"width:300px\" [(ngModel)]=\"toiletingTimeIntervalId\"\r\n                        (change)=\"saveToiletNotyInterval()\" class=\"form-control\" id=\"\">\r\n                        <option value=\"0\">Select</option>\r\n                        <option value=\"20\">20 Minutes</option>\r\n                        <option value=\"1\">1 Hour</option>\r\n                        <option value=\"2\">2 Hour</option>\r\n                        <option value=\"3\">3 Hour</option>\r\n                        <option value=\"4\">4 Hour</option>\r\n                        <option value=\"5\">5 Hour</option>\r\n                        <option value=\"6\">6 Hour</option>\r\n                        <option value=\"7\">7 Hour</option>\r\n                        <option value=\"8\">8 Hour</option>\r\n                        <option value=\"9\">9 Hour</option>\r\n                        <option value=\"10\">10 Hour</option>\r\n                      </select>\r\n                    </td>\r\n                  </tr>\r\n\r\n                  <tr>\r\n                    <td> <b>Nap </b> </td>\r\n                    <td>\r\n                      <select name=\"\" style=\"width:300px\" [(ngModel)]=\"NapminIntervalId\"\r\n                        (change)=\"saveNapNotyInterval()\" class=\"form-control\" id=\"\">\r\n                        <option value=\"0\">Select</option>\r\n                        <option value=\"5\">5 Minutes</option>\r\n                        <option value=\"10\">10 Minutes</option>\r\n                        <option value=\"15\">15 Minutes</option>\r\n                        <option value=\"20\">20 Minutes</option>\r\n                        <option value=\"25\">25 Minutes</option>\r\n                        <option value=\"30\">30 Minutes</option>\r\n                        <option value=\"35\">35 Minutes</option>\r\n                        <option value=\"40\">40 Minutes</option>\r\n                        <option value=\"45\">45 Minutes</option>\r\n                        <option value=\"50\">50 Minutes</option>\r\n                        <option value=\"55\">55 Minutes</option>\r\n                      </select>\r\n                    </td>\r\n\r\n                    <td>\r\n                      <select name=\"\" style=\"width:300px\" [(ngModel)]=\"NapIntervalId\" (change)=\"saveNapNotyInterval()\"\r\n                        class=\"form-control\" id=\"\">\r\n                        <option value=\"0\">Select</option>\r\n                        <option value=\"1\">1 Hour</option>\r\n                        <option value=\"2\">2 Hour</option>\r\n                        <option value=\"3\">3 Hour</option>\r\n                        <option value=\"4\">4 Hour</option>\r\n                        <option value=\"5\">5 Hour</option>\r\n                        <option value=\"6\">6 Hour</option>\r\n                        <option value=\"7\">7 Hour</option>\r\n                        <option value=\"8\">8 Hour</option>\r\n                        <option value=\"9\">9 Hour</option>\r\n                        <option value=\"10\">10 Hour</option>\r\n                      </select>\r\n                    </td>\r\n\r\n                  </tr>\r\n\r\n                  <tr>\r\n                    <td> <b>Meal </b> </td>\r\n                    <td>\r\n                      <select name=\"\" style=\"width:300px\" [(ngModel)]=\"mealIntervalId\" (change)=\"saveMealNotyInterval()\"\r\n                        class=\"form-control\" id=\"\">\r\n                        <option value=\"0\">Select</option>\r\n                        <option value=\"1\">1 Hour</option>\r\n                        <option value=\"2\">2 Hour</option>\r\n                        <option value=\"3\">3 Hour</option>\r\n                        <option value=\"4\">4 Hour</option>\r\n                        <option value=\"5\">5 Hour</option>\r\n                        <option value=\"6\">6 Hour</option>\r\n                        <option value=\"7\">7 Hour</option>\r\n                        <option value=\"8\">8 Hour</option>\r\n                        <option value=\"9\">9 Hour</option>\r\n                        <option value=\"10\">10 Hour</option>\r\n                      </select>\r\n                    </td>\r\n                  </tr>\r\n\r\n\r\n                </tbody>\r\n\r\n\r\n              </table>\r\n            </div>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- For Information Video -->\r\n    <div class=\"modal fade\" id=\"infovideo\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"checkoutLabel\"\r\n      aria-hidden=\"true\">\r\n      <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"checkoutLabel\">Information Video</h5>\r\n            <button type=\"button\" *ngIf=\"videoPath\" class=\"close\" (click)=\"PauseInfoVideo()\" data-dismiss=\"modal\"\r\n              aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n            <button type=\"button\" *ngIf=\"!videoPath\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <div class=\"cont video_section_pop\" *ngIf=\"videoPath\">\r\n              <video controls id=\"pausevideo\">\r\n                <source *ngIf=\"videoPath\" [src]=\"videoPath\" type=\"video/mp4\" />\r\n                <source *ngIf=\"videoPath\" [src]=\"videoPath\" type=\"video/ogg\" />\r\n                <source *ngIf=\"videoPath\" [src]=\"videoPath\" type=\"video/webm\" />\r\n                Browser not supported\r\n              </video>\r\n            </div>\r\n\r\n            <div class=\"cont video_section_pop\" *ngIf=\"!videoPath\">\r\n              Video Not Found\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Add Deactivate Reason-->\r\n    <div class=\"modal fade addreason\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myLargeModalLabel\"\r\n      aria-hidden=\"true\">\r\n      <div class=\"modal-dialog modal-lg\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Add Deactivate Reason</h5>\r\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <form [formGroup]=\"deactivateReasonForm\">\r\n              <div class=\"row mb-20\">\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Deactivate Reason*</label>\r\n                    <select class=\"form-control\" placeholder=\"Allergy type\" formControlName=\"reason\"\r\n                      id=\"exampleFormControlSelect1\">\r\n                      <option value=\"\">Select Deactivate Reason*</option>\r\n                      <option *ngFor=\"let reason of deactivateReasonList\" [value]=\"reason.reason\">{{reason.reason}}\r\n                      </option>\r\n                    </select>\r\n                    <div *ngIf=\"d.reason.invalid && (d.reason.dirty || d.reason.touched)\" class=\"text-left errormsg\">\r\n                      <span *ngIf=\"d.reason.errors.required\">\r\n                        <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select deactivate reason</span>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Deactivate Date*</label>\r\n                    <input type=\"text\" placeholder=\"Select end date\" formControlName=\"deletedate\"\r\n                      showWeekNumbers=\"false\" [maxDate]=\"today\" class=\"form-control\" [bsConfig]=\"dpConfig\" bsDatepicker>\r\n                    <div *ngIf=\"d.deletedate.invalid && (d.deletedate.dirty || d.deletedate.touched)\"\r\n                      class=\"text-left errormsg\">\r\n                      <span *ngIf=\"d.deletedate.errors.required\">\r\n                        <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select student deactivate\r\n                          date</span>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n            <button type=\"button\" class=\"btn btn-primary\" (click)=\"deleteStudent()\">Deactivate </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n\r\n\r\n  </div>\r\n\r\n  <app-confirm-box></app-confirm-box>\r\n  <ngx-spinner type=\"ball-atom\" size=\"medium\" color=\"#58A7FE\"></ngx-spinner>"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-student-list/agency-admin-student-list.component.ts":
/*!*****************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-student-list/agency-admin-student-list.component.ts ***!
  \*****************************************************************************************************************/
/*! exports provided: AgencyAdminStudentListComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AgencyAdminStudentListComponent", function() { return AgencyAdminStudentListComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../shared/services/error-handler/error-handler.service */ "./src/app/shared/services/error-handler/error-handler.service.ts");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ngx-spinner */ "./node_modules/ngx-spinner/fesm5/ngx-spinner.js");
/* harmony import */ var _shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../shared/services/notification-service/notification.service */ "./src/app/shared/services/notification-service/notification.service.ts");
/* harmony import */ var src_app_shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/shared/services/common/common.service */ "./src/app/shared/services/common/common.service.ts");
/* harmony import */ var _shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../shared/services/agency-api-service/agency-api.service */ "./src/app/layout/agency-admin/components/shared/services/agency-api-service/agency-api.service.ts");
/* harmony import */ var _teacher_shared_constant__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../teacher/shared/constant */ "./src/app/layout/teacher/shared/constant.ts");
/* harmony import */ var primeng_api__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! primeng/api */ "./node_modules/primeng/api.js");
/* harmony import */ var primeng_api__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(primeng_api__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _parent_shared_constant__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../parent/shared/constant */ "./src/app/layout/parent/shared/constant.ts");
/* harmony import */ var _shared_constatant__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../shared/constatant */ "./src/app/layout/agency-admin/components/shared/constatant.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var ngx_bootstrap__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ngx-bootstrap */ "./node_modules/ngx-bootstrap/esm5/ngx-bootstrap.js");
/* harmony import */ var primeng_paginator__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! primeng/paginator */ "./node_modules/primeng/paginator.js");
/* harmony import */ var primeng_paginator__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(primeng_paginator__WEBPACK_IMPORTED_MODULE_12__);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};













var AgencyAdminStudentListComponent = /** @class */ (function () {
    function AgencyAdminStudentListComponent(apiService, error, spinner, notification, commonService, confirmationService, fb) {
        this.apiService = apiService;
        this.error = error;
        this.spinner = spinner;
        this.notification = notification;
        this.commonService = commonService;
        this.confirmationService = confirmationService;
        this.fb = fb;
        this.toiletingActiviId = 0;
        this.studentList = [];
        this.classList = [];
        this.activeAndDeactiveStudentList = [];
        this.parentList = [];
        this.flag = false;
        this.childVM = {};
        this.unApprovedStudentList = [];
        this.cityList = [];
        this.stateList = [];
        this.countryList = [];
        this.rejectedUserList = [];
        this.agencyId = 0;
        this.studentID = 0;
        this.today = new Date();
        this.activationType = 'Activated';
        this.pageNo = 0;
        this.limit = 10;
        this.totalRecord = 0;
        this.loader = true;
        this.mealActiviId = 0;
        this.napActiviId = 0;
        this.videoPath = '';
        this.busList = [];
        this.dpConfig = new ngx_bootstrap__WEBPACK_IMPORTED_MODULE_11__["BsDatepickerConfig"]();
        this.isSubscriptionActive = this.commonService.getSubscriptionStatus();
    }
    AgencyAdminStudentListComponent.prototype.ngOnInit = function () {
        this.dpConfig = Object.assign({}, { containerClass: 'theme-dark-blue' }, { showWeekNumbers: false });
        this.agencyId = this.commonService.getAgencyId();
        this.searchByClass = '';
        this.nameSearch = '';
        this.searchByStudentName = '';
        this.getAllClassess();
        this.childAddForm();
        this.getActivatedAndDeactivatedStudents();
        this.getAllParentList();
        this.getAllCountries();
        this.GetAgencyCountryStateID();
        this.getDeactivateReason();
        this.getSectionVideo();
        this.createReasonForm();
        this.getAllBusList();
    };
    AgencyAdminStudentListComponent.prototype.OpenInfoVideo = function (data) {
        $('#infovideo').modal('show');
    };
    AgencyAdminStudentListComponent.prototype.getSectionVideo = function () {
        var _this = this;
        var req = {
            'SectionID': 2
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_6__["TeacherAPIURLs"].GetVideoForSection, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.videoPath = res.body.filePath;
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminStudentListComponent.prototype.PauseInfoVideo = function () {
        var myVideo = document.getElementById('pausevideo');
        myVideo.pause();
        myVideo.currentTime = 0;
    };
    // Get All Deactivated Reasons
    AgencyAdminStudentListComponent.prototype.getDeactivateReason = function () {
        var _this = this;
        var req = {
            'isDeleted': false,
            'RoleID': 5 // For Student
        };
        this.apiService.postData(_parent_shared_constant__WEBPACK_IMPORTED_MODULE_8__["ParentAPIURLs"].GetDeactivateReason, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.deactivateReasonList = res.body.data;
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminStudentListComponent.prototype.childAddForm = function () {
        this.addChildForm = this.fb.group({
            firstname: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_10__["Validators"].required],
            lastname: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_10__["Validators"].required],
            mobile: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_10__["Validators"].required],
            address: [''],
            country: [this.agencyCountryID, _angular_forms__WEBPACK_IMPORTED_MODULE_10__["Validators"].required],
            city: [''],
            state: [this.agencyStateID, _angular_forms__WEBPACK_IMPORTED_MODULE_10__["Validators"].required],
            childstartdate: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_10__["Validators"].required],
            zipcode: [''],
            birthdate: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_10__["Validators"].required],
            parentid: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_10__["Validators"].required],
            photo: [''],
            gender: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_10__["Validators"].required],
            physicianname: [''],
            physicianaddress: [''],
            preferredhospital: [''],
            physicianContactNumber: [''],
            childnotes: [''],
            addressasparent: [false],
            bus: [0],
        });
        this.getStatesList();
        this.getCitiesList();
    };
    Object.defineProperty(AgencyAdminStudentListComponent.prototype, "a", {
        get: function () { return this.addChildForm.controls; },
        enumerable: true,
        configurable: true
    });
    AgencyAdminStudentListComponent.prototype.getSerchClass = function (event) { };
    AgencyAdminStudentListComponent.prototype.getStudentsList = function () {
        var _this = this;
        this.loader = true;
        this.studentList = [];
        if (this.searchByClass === '') {
            this.spinner.show();
            var data = {
                'agencyID': this.agencyId,
                'classID': this.searchByClass,
                'studentID': 0,
                'studentName': this.searchByStudentName,
                'page': this.pageNo,
                'limit': this.limit,
            };
            this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_6__["TeacherAPIURLs"].GetAllStudents, data, null).subscribe(function (res) {
                if (res.body.statusCode === 200) {
                    _this.totalRecord = res.body.totalRows;
                    _this.spinner.hide();
                    _this.studentList = res.body.data;
                    _this.loader = false;
                }
                else {
                    _this.spinner.hide();
                    _this.error.unknownError();
                }
            }, function (err) {
                _this.spinner.hide();
                _this.error.commonError(err);
            });
        }
        else {
            this.getAllStudentsListByClass();
        }
    };
    AgencyAdminStudentListComponent.prototype.getAllStudentsListByClass = function () {
        var _this = this;
        this.studentList = [];
        this.spinner.show();
        var data = {
            'agencyID': this.agencyId,
            'classID': this.searchByClass,
            'studentID': 0,
            'studentName': this.searchByStudentName,
            'page': this.pageNo,
            'limit': this.limit,
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_6__["TeacherAPIURLs"].GetAllStudentsByClass, data, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.totalRecord = res.body.totalRows;
                _this.spinner.hide();
                _this.studentList = res.body.data;
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminStudentListComponent.prototype.getAllClassess = function () {
        var _this = this;
        this.classList = [];
        this.spinner.show();
        var data = {
            'agencyID': this.agencyId
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_6__["TeacherAPIURLs"].GetAllClasses, data, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.spinner.hide();
                _this.classList = res.body.data;
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminStudentListComponent.prototype.addAddress = function () {
        if (this.addChildForm.value.addressasparent === true) {
            this.addChildForm.get('address').setValue(this.parentAddress);
            this.addChildForm.controls['address'].disable();
        }
        else {
            this.addChildForm.get('address').setValue('');
            this.addChildForm.controls['address'].enable();
        }
    };
    // Method to delete/deactivate student
    AgencyAdminStudentListComponent.prototype.createReasonForm = function () {
        this.deactivateReasonForm = this.fb.group({
            reason: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_10__["Validators"].required],
            deletedate: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_10__["Validators"].required]
        });
    };
    Object.defineProperty(AgencyAdminStudentListComponent.prototype, "d", {
        get: function () { return this.deactivateReasonForm.controls; },
        enumerable: true,
        configurable: true
    });
    AgencyAdminStudentListComponent.prototype.deleteStudentReason = function (value) {
        this.studentValue = value;
        this.createReasonForm();
    };
    AgencyAdminStudentListComponent.prototype.deleteStudent = function () {
        var _this = this;
        this.confirmationService.confirm({
            message: 'Do you want to deactivate this student?',
            accept: function () {
                _this.spinner.show();
                _this.studentValue.DeletedReason = _this.deactivateReasonForm.value.reason;
                _this.studentValue.IsDeleted = true;
                _this.studentValue.DeletedDate = new Date();
                _this.studentValue.DeletedBy = _this.commonService.getReleventUserId('userdetails');
                _this.apiService.postDataV2(_parent_shared_constant__WEBPACK_IMPORTED_MODULE_8__["ParentAPIURLs"].SaveStudent, _this.studentValue, null).subscribe(function (res) {
                    if (res.body.statusCode === 200) {
                        $('.addreason').modal('hide');
                        _this.deleteStudentSuccess(_this.studentValue);
                    }
                    else {
                        _this.spinner.hide();
                        _this.error.unknownError();
                    }
                }, function (err) {
                    _this.spinner.hide();
                    _this.error.commonError(err);
                });
            }
        });
    };
    AgencyAdminStudentListComponent.prototype.deleteStudentSuccess = function (data) {
        this.getActivatedAndDeactivatedStudents();
        this.spinner.hide();
        this.notification.success({ message: 'This Student has been deactivated', title: '' });
    };
    AgencyAdminStudentListComponent.prototype.activateStudent = function (value) {
        var _this = this;
        this.confirmationService.confirm({
            message: 'Do you want to Activate this student?',
            accept: function () {
                _this.spinner.show();
                value.IsDeleted = false;
                value.updatedBy = _this.commonService.getReleventUserId('userdetails');
                _this.apiService.postData(_parent_shared_constant__WEBPACK_IMPORTED_MODULE_8__["ParentAPIURLs"].ActivateStudent, value, null).subscribe(function (res) {
                    if (res.body.statusCode === 200) {
                        _this.notification.success({ message: 'This Student has been activated', title: '' });
                        _this.getActivatedAndDeactivatedStudents();
                    }
                    else {
                        _this.spinner.hide();
                        _this.error.unknownError();
                    }
                }, function (err) {
                    _this.spinner.hide();
                    _this.error.commonError(err);
                });
            }
        });
    };
    AgencyAdminStudentListComponent.prototype.getAllUnApprovedStudent = function () {
        var _this = this;
        this.loader = true;
        this.unApprovedStudentList = [];
        this.spinner.show();
        var data = {
            'agencyID': this.commonService.getAgencyId(),
            'page': this.pageNo,
            'limit': this.limit,
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_9__["AgencyAPIURLs"].GetAllUnaaprovedStudents, data, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.totalRecord = res.body.totalRows;
                _this.spinner.hide();
                if (res.body.data) {
                    _this.loader = false;
                    _this.unApprovedStudentList = res.body.data;
                }
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminStudentListComponent.prototype.getActivatedAndDeactivatedStudents = function () {
        var _this = this;
        this.loader = true;
        this.activeAndDeactiveStudentList = [];
        this.spinner.show();
        var data = {
            'studentName': this.nameSearch,
            'agencyID': this.agencyId,
            'ActivationType': this.activationType,
            'limit': this.limit,
            'page': this.pageNo
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_9__["AgencyAPIURLs"].GetActivatedAndDeactivatedStudents, data, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.totalRecord = res.body.totalRows;
                _this.spinner.hide();
                if (res.body.data) {
                    _this.activeAndDeactiveStudentList = res.body.data;
                }
                _this.loader = false;
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminStudentListComponent.prototype.approvedDenyRequest = function (event, student) {
        var _this = this;
        if (event.target.value === '2') {
            this.confirmationService.confirm({
                message: 'Do you want to enroll this child ?',
                accept: function () {
                    _this.spinner.show();
                    var req = {
                        'id': student.enrollmentID,
                        'agencyID': student.agencyID,
                        'classesID': student.classID,
                        'studentID': student.studentID,
                        'classEnrollStartDate': student.classEnrollStartDate,
                        'classEnrollEndDate': student.classEnrollEndDate,
                        'enrollmentStatus': 2,
                        'feeTypeId': student.feeTypeId,
                        'fees': student.fees
                    };
                    var msg = 'This student has been enrroled successfully!';
                    _this.saveEnrollment(req, msg, 1);
                }
            });
        }
        else if (event.target.value === '4') {
            this.confirmationService.confirm({
                message: 'Do you want to deny this request?',
                accept: function () {
                    _this.spinner.show();
                    var req = {
                        'id': student.enrollmentID,
                        'agencyID': student.agencyID,
                        'classesID': student.classID,
                        'studentID': student.studentID,
                        'classEnrollStartDate': student.classEnrollStartDate,
                        'classEnrollEndDate': student.classEnrollEndDate,
                        'enrollmentStatus': 4,
                    };
                    var msg = 'This request has been denied!';
                    _this.saveEnrollment(req, msg, 1);
                }
            });
        }
    };
    AgencyAdminStudentListComponent.prototype.saveEnrollment = function (req, msg, type) {
        var _this = this;
        this.apiService.postData(_parent_shared_constant__WEBPACK_IMPORTED_MODULE_8__["ParentAPIURLs"].SaveStudentEnrollment, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                if (type === 2) {
                    if (_this.searchByClass === '') {
                        _this.getStudentsList();
                    }
                    else {
                        _this.getAllStudentsListByClass();
                    }
                }
                else {
                    _this.getAllUnApprovedStudent();
                }
                _this.notification.success({ message: msg, title: '' });
            }
            else if (res.body.statusCode === 205) {
                _this.spinner.hide();
                _this.notification.warning({ message: 'Already enrolled for this class', title: '' });
            }
            else if (res.body.statusCode === 206) {
                _this.spinner.hide();
                _this.notification.warning({ message: res.body.message, title: '' });
            }
            else if (res.body.statusCode === 207) {
                _this.spinner.hide();
                _this.notification.warning({ message: 'This student is part of regular class , you cant enroll for drop in class', title: '' });
            }
            else if (res.body.statusCode === 208) {
                _this.spinner.hide();
                _this.notification.warning({ message: 'This student is part of drop in class , you cant enroll for regular class', title: '' });
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminStudentListComponent.prototype.completeStatus = function (event, student) {
        var _this = this;
        this.confirmationService.confirm({
            message: 'Do you want to complete this class enrollment for the student ?',
            accept: function () {
                _this.spinner.show();
                var req = {
                    'id': student.classEnnrollmentID,
                    'agencyID': student.agencyID,
                    'classesID': student.classId,
                    'studentID': student.studentId,
                    'classEnrollStartDate': student.classEnrollStartDate,
                    'classEnrollEndDate': student.classEnrollEndDate,
                    'enrollmentStatus': 5,
                };
                var msg = 'Change status successfully!';
                _this.saveEnrollment(req, msg, 2);
            }
        });
    };
    AgencyAdminStudentListComponent.prototype.getAllParentList = function () {
        var _this = this;
        this.parentList = [];
        var req = {
            'AgencyID': this.agencyId,
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_9__["AgencyAPIURLs"].GetMasterParentForDropdown, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.parentList = res.body.data;
                _this.spinner.hide();
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminStudentListComponent.prototype.clearForm = function () {
        this.image = '';
        this.childAddForm();
    };
    AgencyAdminStudentListComponent.prototype.saveChildDetails = function () {
        if (this.flag === true) {
            this.UploadImage();
            this.flag = false;
        }
        else {
            this.verifyChildAddForm();
        }
    };
    AgencyAdminStudentListComponent.prototype.UploadImage = function () {
        var _this = this;
        this.apiService.uploadImage(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_6__["TeacherAPIURLs"].UploadImage, this.fileData, null).subscribe(function (res) {
            if (res.status === 200) {
                _this.image = res.body.data;
                _this.verifyChildAddForm();
            }
        }, function (err) {
            _this.error.commonError(err);
        });
    };
    AgencyAdminStudentListComponent.prototype.verifyChildAddForm = function () {
        if (this.addChildForm.valid) {
            this.spinner.show();
            this.childVM.firstName = this.addChildForm.value.firstname;
            this.childVM.lastName = this.addChildForm.value.lastname;
            this.childVM.parentEmailAddress = this.addChildForm.value.email;
            this.childVM.ChildsContactNumber = this.addChildForm.value.mobile;
            this.childVM.address = this.addChildForm.value.address;
            this.childVM.cityId = this.addChildForm.value.city;
            this.childVM.stateId = this.addChildForm.value.state;
            this.childVM.countryId = this.addChildForm.value.country;
            this.childVM.postalCode = this.addChildForm.value.zipcode;
            this.childVM.dateOfBirth = this.addChildForm.value.birthdate;
            this.childVM.genderID = this.addChildForm.value.gender;
            this.childVM.PhysicianName = this.addChildForm.value.physicianname;
            this.childVM.PhysicianAddress = this.addChildForm.value.physicianaddress;
            this.childVM.childStartDate = this.addChildForm.value.childstartdate;
            this.childVM.ChildNotes = this.addChildForm.value.childnotes;
            this.childVM.PreferredHospital = this.addChildForm.value.preferredhospital;
            this.childVM.parentID = this.addChildForm.value.parentid;
            this.childVM.transportationID = 1; // change this static value
            this.childVM.feePaymentTypeID = 1; // change this static value
            this.childVM.studentId = 0;
            this.childVM.imagePath = this.image;
            this.childVM.physicianContactNumber = this.addChildForm.value.physicianContactNumber === '' ? 0 :
                this.addChildForm.value.physicianContactNumber;
            this.childVM.agencyID = this.agencyId;
            this.childVM.id = 0;
            this.childVM.addressasparent = this.addChildForm.value.addressasparent;
            this.childVM.busID = this.addChildForm.value.bus;
            this.addUpdateChildDateUsingAPI(this.childVM);
        }
        else {
            this.spinner.hide();
            this.commonService.validateAllFields(this.addChildForm);
        }
    };
    AgencyAdminStudentListComponent.prototype.addUpdateChildDateUsingAPI = function (req) {
        var _this = this;
        this.apiService.postDataV2(_parent_shared_constant__WEBPACK_IMPORTED_MODULE_8__["ParentAPIURLs"].SaveStudent, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.flag = false;
                _this.notification.success({ message: 'Student added successfully', title: '' });
                $('#pills-allstudent').tab('show');
                $('.addchild').modal('hide');
                _this.getActivatedAndDeactivatedStudents();
            }
            else if (res.body.statusCode === 205) {
                _this.spinner.hide();
                _this.notification.warning({ message: 'Please enter valid name', title: '' });
            }
            else if (res.body.statusCode === 206) {
                _this.spinner.hide();
                _this.notification.warning({ message: 'Student already exists with same name', title: '' });
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminStudentListComponent.prototype.processFile = function (event) {
        var _this = this;
        this.formData = new FormData();
        var self = this;
        if (event.target.files && event.target.files[0]) {
            if (event.target.files[0].type !== 'image/png' && event.target.files[0].type !== 'image/jpeg' &&
                event.target.files[0].type !== 'image/jpg') {
                self.fileData = null;
                this.notification.warning({ message: 'File not format not supported', title: '' });
                return false;
            }
            var reader_1 = new FileReader();
            this.formData = new FormData();
            this.formData.append('fileData', event.target.files[0], event.target.files[0].name);
            self.fileData = this.formData;
            reader_1.readAsDataURL(event.target.files[0]); // read file as data url
            setTimeout(function () {
                _this.image = reader_1.result;
                _this.childVM.imagePath = _this.image;
            }, 100);
            this.flag = true;
        }
    };
    AgencyAdminStudentListComponent.prototype.getParentAddress = function (value) {
        var _this = this;
        this.spinner.show();
        var req = {
            'AgencyID': this.commonService.getAgencyId(),
            'ParentId': value
        };
        this.apiService.postData(_parent_shared_constant__WEBPACK_IMPORTED_MODULE_8__["ParentAPIURLs"].GetParentAddress, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.parentAddress = res.body.data.address;
                console.log(_this.parentAddress);
                _this.spinner.hide();
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminStudentListComponent.prototype.getAllCountries = function () {
        var _this = this;
        this.spinner.show();
        this.countryList = [];
        var req = {
            'AgencyID': this.commonService.getAgencyId(),
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_6__["TeacherAPIURLs"].GetAllCountry, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.countryList = res.body.data;
                _this.addChildForm.controls['state'].setValue('');
                _this.addChildForm.controls['state'].updateValueAndValidity();
                _this.spinner.hide();
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    // For Get School Bus
    AgencyAdminStudentListComponent.prototype.getAllBusList = function () {
        var _this = this;
        this.busList = [];
        var data = {
            'agencyID': this.commonService.getAgencyId()
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_9__["AgencyAPIURLs"].GetAllBus, data, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.busList = res.body.data;
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    /**Method to get state list */
    AgencyAdminStudentListComponent.prototype.getStatesList = function () {
        var _this = this;
        this.spinner.show();
        this.stateList = [];
        this.cityList = [];
        var req = {
            'AgencyID': this.commonService.getAgencyId(),
            'CountryId': this.addChildForm.value.country
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_6__["TeacherAPIURLs"].GetAllStates, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.stateList = res.body.data;
                _this.spinner.hide();
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminStudentListComponent.prototype.getCitiesList = function () {
        var _this = this;
        this.spinner.show();
        this.addChildForm.controls['city'].setValue('');
        this.cityList = [];
        var req = {
            'AgencyID': this.commonService.getAgencyId(),
            'StateId': this.addChildForm.value.state
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_6__["TeacherAPIURLs"].GetAllCities, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.cityList = res.body.data;
                _this.spinner.hide();
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminStudentListComponent.prototype.GetAgencyCountryStateID = function () {
        var _this = this;
        this.spinner.show();
        var req = {
            'AgencyID': this.commonService.getAgencyId(),
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_9__["AgencyAPIURLs"].GetAgencyCountryStateID, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                console.log(res.body.data);
                _this.agencyCountryID = res.body.data.countryId;
                _this.agencyStateID = res.body.data.stateId;
                console.log(_this.agencyCountryID, _this.agencyStateID, 'AAAAAAAAAA');
                _this.spinner.hide();
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminStudentListComponent.prototype.clearOnTabChange = function (event) {
        this.allStudPaginator.changePageToFirst(event);
        this.enrollstdPaginator.changePageToFirst(event);
        this.unenrolstdPaginator.changePageToFirst(event);
        this.searchByClass = '';
        this.activationType = '';
        this.searchByStudentName = '';
        this.nameSearch = '';
        this.pageNo = 0;
        this.limit = 10;
        this.totalRecord = 0;
    };
    AgencyAdminStudentListComponent.prototype.paginate = function (event, tab) {
        this.pageNo = event.page;
        if (tab === 1) {
            this.getActivatedAndDeactivatedStudents();
        }
        else if (tab === 2) {
            this.getStudentsList();
        }
        else {
            this.getAllUnApprovedStudent();
        }
    };
    AgencyAdminStudentListComponent.prototype.processCSVFile = function (event) {
        var _this = this;
        this.spinner.show();
        this.formData = new FormData();
        this.agencyId = this.commonService.getAgencyId();
        if (event.target.files && event.target.files[0] && event.target.files[0].name.includes('.csv')) {
            this.formData.append('FileName', event.target.files[0], event.target.files[0].name);
            this.formData.append('AgencyId', this.commonService.getAgencyId().toString());
            this.formData.append('CreatedBy', this.commonService.getLoggedInUserId().toString());
            this.apiService.uploadImage(_shared_constatant__WEBPACK_IMPORTED_MODULE_9__["AgencyAPIURLs"].UploadStudentUserWithFile, this.formData, null).subscribe(function (res) {
                if (res.body.statusCode === 200) {
                    _this.spinner.hide();
                    event.target.value = '';
                    _this.getActivatedAndDeactivatedStudents();
                    _this.notification.success({ message: 'File uploaded successfully', title: 'Success' });
                }
                else if (res.body.statusCode === 987) {
                    _this.spinner.hide();
                    _this.getActivatedAndDeactivatedStudents();
                    _this.rejectedUserList = res.body.data;
                    $('.rejectedUsr').modal('show');
                }
                else {
                    _this.spinner.hide();
                    _this.error.unknownError();
                }
            }, function (err) {
                _this.spinner.hide();
                _this.error.commonError(err);
                _this.notification.error({ message: 'Something went wrong', title: 'Error' });
            });
        }
        else {
            this.spinner.hide();
            this.notification.warning({ message: 'Unsupported file type', title: 'Warning' });
        }
    };
    AgencyAdminStudentListComponent.prototype.keyDownFunction = function (event, no) {
        if (event.keyCode === 13) {
            if (no === 2) {
                this.getStudentsList();
            }
            else {
                this.getActivatedAndDeactivatedStudents();
            }
        }
    };
    AgencyAdminStudentListComponent.prototype.saveToiletNotyInterval = function () {
        var _this = this;
        this.spinner.show();
        if (this.toiletingTimeIntervalId) {
            var req = {
                'agencyID': this.agencyId,
                'ActivityTypeID': 7,
                'hrsinterval': this.toiletingTimeIntervalId,
                'id': this.toiletingActiviId,
                'studentID': this.studentID
            };
            this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_9__["AgencyAPIURLs"].SaveDDMasterInformationIndStudent, req, null).subscribe(function (res) {
                if (res.body.statusCode === 200) {
                    _this.spinner.hide();
                    _this.notification.success({ message: 'Time interval updated', title: '' });
                }
                else {
                    _this.spinner.hide();
                    _this.error.unknownError();
                }
            }, function (err) {
                _this.spinner.hide();
                _this.error.commonError(err);
            });
        }
        else {
            this.spinner.hide();
            this.notification.warning({ message: 'Please select time interval', title: '' });
        }
    };
    AgencyAdminStudentListComponent.prototype.saveNapNotyInterval = function () {
        var _this = this;
        this.spinner.show();
        if (this.NapIntervalId || this.NapminIntervalId) {
            if (this.NapIntervalId === '') {
                this.NapIntervalId = 0;
            }
            if (this.NapminIntervalId === '') {
                this.NapminIntervalId = 0;
            }
            var req = {
                'agencyID': this.agencyId,
                'ActivityTypeID': 6,
                'hrsinterval': this.NapIntervalId,
                'minInterval': this.NapminIntervalId,
                'id': this.napActiviId,
                'studentID': this.studentID
            };
            this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_9__["AgencyAPIURLs"].SaveDDMasterInformationIndStudent, req, null).subscribe(function (res) {
                if (res.body.statusCode === 200) {
                    _this.spinner.hide();
                    _this.notification.success({ message: 'Time interval updated', title: '' });
                }
                else {
                    _this.spinner.hide();
                    _this.error.unknownError();
                }
            }, function (err) {
                _this.spinner.hide();
                _this.error.commonError(err);
            });
        }
        else {
            this.spinner.hide();
            this.notification.warning({ message: 'Please select time interval', title: '' });
        }
    };
    AgencyAdminStudentListComponent.prototype.saveMealNotyInterval = function () {
        var _this = this;
        this.spinner.show();
        if (this.mealIntervalId) {
            var req = {
                'agencyID': this.agencyId,
                'ActivityTypeID': 3,
                'hrsinterval': this.mealIntervalId,
                'studentID': this.studentID,
                'id': this.mealActiviId
            };
            this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_9__["AgencyAPIURLs"].SaveDDMasterInformationIndStudent, req, null).subscribe(function (res) {
                if (res.body.statusCode === 200) {
                    _this.spinner.hide();
                    _this.notification.success({ message: 'Time interval updated', title: '' });
                }
                else {
                    _this.spinner.hide();
                    _this.error.unknownError();
                }
            }, function (err) {
                _this.spinner.hide();
                _this.error.commonError(err);
            });
        }
        else {
            this.spinner.hide();
            this.notification.warning({ message: 'Please select time interval', title: '' });
        }
    };
    // get perticuler student details
    AgencyAdminStudentListComponent.prototype.getDetails = function (data) {
        var _this = this;
        this.toiletingTimeIntervalId = 0;
        this.toiletingActiviId = 0;
        this.NapIntervalId = 0;
        this.NapminIntervalId = 0;
        this.napActiviId = 0;
        this.mealIntervalId = 0;
        this.mealActiviId = 0;
        this.spinner.show();
        this.studentID = data;
        if (this.studentID) {
            var req = {
                'agencyID': this.agencyId,
                'studentID': this.studentID
            };
            this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_9__["AgencyAPIURLs"].GetDDMasterInformationIndStudent, req, null).subscribe(function (res) {
                if (res.body.statusCode === 200) {
                    if (res.body.data.length > 0) {
                        res.body.data.forEach(function (element) {
                            if (element.activityTypeID === 7) {
                                _this.toiletingTimeIntervalId = element.hrsInterval;
                                _this.toiletingActiviId = element.id;
                            }
                            if (element.activityTypeID === 6) {
                                _this.NapIntervalId = element.hrsInterval;
                                _this.NapminIntervalId = element.minInterval;
                                _this.napActiviId = element.id;
                            }
                            if (element.activityTypeID === 3) {
                                _this.mealIntervalId = element.hrsInterval;
                                _this.mealActiviId = element.id;
                            }
                        });
                    }
                    $('#authpermodal').modal('show');
                    _this.spinner.hide();
                }
                else {
                    _this.toiletingTimeIntervalId = 0;
                    _this.toiletingActiviId = 0;
                    _this.NapIntervalId = 0;
                    _this.NapminIntervalId = 0;
                    _this.napActiviId = 0;
                    _this.mealIntervalId = 0;
                    _this.mealActiviId = 0;
                    $('#authpermodal').modal('show');
                    _this.spinner.hide();
                }
            }, function (err) {
                _this.spinner.hide();
                _this.error.commonError(err);
            });
        }
        else {
            this.spinner.hide();
            this.notification.warning({ message: 'Please select time interval', title: '' });
        }
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('allstudent'),
        __metadata("design:type", primeng_paginator__WEBPACK_IMPORTED_MODULE_12__["Paginator"])
    ], AgencyAdminStudentListComponent.prototype, "allStudPaginator", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('enrollstd'),
        __metadata("design:type", primeng_paginator__WEBPACK_IMPORTED_MODULE_12__["Paginator"])
    ], AgencyAdminStudentListComponent.prototype, "enrollstdPaginator", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('unenrolstd'),
        __metadata("design:type", primeng_paginator__WEBPACK_IMPORTED_MODULE_12__["Paginator"])
    ], AgencyAdminStudentListComponent.prototype, "unenrolstdPaginator", void 0);
    AgencyAdminStudentListComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-agency-admin-student-list',
            template: __webpack_require__(/*! ./agency-admin-student-list.component.html */ "./src/app/layout/agency-admin/components/agency-admin-student-list/agency-admin-student-list.component.html"),
            styles: [__webpack_require__(/*! ./agency-admin-student-list.component.css */ "./src/app/layout/agency-admin/components/agency-admin-student-list/agency-admin-student-list.component.css")]
        }),
        __metadata("design:paramtypes", [_shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_5__["AgencyApiService"], _shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_1__["ErrorHandlerService"],
            ngx_spinner__WEBPACK_IMPORTED_MODULE_2__["NgxSpinnerService"], _shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_3__["NotificationService"],
            src_app_shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_4__["CommonService"], primeng_api__WEBPACK_IMPORTED_MODULE_7__["ConfirmationService"], _angular_forms__WEBPACK_IMPORTED_MODULE_10__["FormBuilder"]])
    ], AgencyAdminStudentListComponent);
    return AgencyAdminStudentListComponent;
}());



/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-students-deactivated-report/agency-admin-students-deactivated-report.component.css":
/*!************************************************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-students-deactivated-report/agency-admin-students-deactivated-report.component.css ***!
  \************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9hZ2VuY3ktYWRtaW4vY29tcG9uZW50cy9hZ2VuY3ktYWRtaW4tc3R1ZGVudHMtZGVhY3RpdmF0ZWQtcmVwb3J0L2FnZW5jeS1hZG1pbi1zdHVkZW50cy1kZWFjdGl2YXRlZC1yZXBvcnQuY29tcG9uZW50LmNzcyJ9 */"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-students-deactivated-report/agency-admin-students-deactivated-report.component.html":
/*!*************************************************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-students-deactivated-report/agency-admin-students-deactivated-report.component.html ***!
  \*************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"wrapper\">\n  <div class=\"container-fluid\">\n\n    <div class=\"pagetitle\">\n      <div>\n        <h2>Report\n          <span>/ Deactivated Students Report </span>\n        </h2>\n      </div>\n    </div>\n    <div class=\"subhead d-flex justify-content-between mt-20\">\n      <div>\n        <h3>Deactivated Students List</h3>\n      </div>\n      <div style=\"cursor:pointer\" title=\"Download report\" (click)=\"pdfReportForDeactivatedStudent()\"><i class=\"fa fa-download\"\n          aria-hidden=\"true\"></i>\n      </div>\n    </div>\n    <div class=\"card cardfilter\">\n      <!-- <div class=\"col-lg-10\"> -->\n      <div class=\"leftfilter\">\n        <div class=\"row algcenter\">\n          <div class=\"search-date\">\n            <div class=\"pr15 label-text\">From Date : </div>\n            <input type=\"text\" placeholder=\"Search by Date\" [(ngModel)]=\"fromDate\" showWeekNumbers=\"false\"\n              [maxDate]=\"today\" class=\"form-control mr15\" [bsConfig]=\"dpConfig\"\n              bsDatepicker>\n          </div>\n          <div class=\"search-date\">\n            <div class=\"pr15 label-text\">To Date : </div>\n            <input type=\"text\" placeholder=\"Search by Date\" [(ngModel)]=\"toDate\" showWeekNumbers=\"false\"\n              [maxDate]=\"today\" class=\"form-control mr15\" [bsConfig]=\"dpConfig\"\n              bsDatepicker>\n          </div>\n          <div class=\"filter-buttons\">\n            <button type=\"submit\" class=\"btn btn-send\" *ngIf=\"!showClearBtn\" (click)=\"search()\">Search</button>\n            <button type=\"submit\" class=\"btn btn-secondary\" *ngIf=\"showClearBtn\" (click)=\"clearSearch()\">Clear</button>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"studentlist\">\n        <div class=\"tab-content\" id=\"pills-tabContent\">\n          <div class=\"tab-pane fade show active\" id=\"pills-appstudent\" role=\"tabpanel\" aria-labelledby=\"appStudent\">\n\n            <div class=\"innertable studentListSearch\">\n              <div class=\"table-responsive\">\n                <table class=\"table \">\n                  <thead class=\"thead-light\">\n                    <tr>\n                      <th scope=\"col\">Student Name</th>\n                      <th scope=\"col\">From Date</th>\n                      <th scope=\"col\">Deactivated Reason</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr *ngFor=\"let report of reportList\">\n                      <td>{{report.studentName}}</td>\n                      <td>{{report.deletedDate | date}}</td>\n                      <td>{{report.deletedReason}}</td>\n                    </tr>\n                    <tr *ngIf=\"reportList.length != 0 && !loader\">\n                      <td><b>Non-Payment: {{nonPaymentCount}}</b></td>\n                      <td><b>Relocation: {{relocationCount}}</b></td>\n                      <td><b>State Certificate Expried: {{certificateCount}}</b></td>\n                    </tr>\n                    <tr *ngIf=\"reportList.length != 0 && !loader\">\n                      <td><b>Health: {{healthCount}}</b></td>\n                      <td><b>Graduated: {{graduatedCount}}</b></td>\n                      <td><b>Change in Living Situation: {{livingCount}}</b></td>\n                    </tr>\n                    <tr *ngIf=\"reportList.length != 0 && !loader\">\n                      <td><b>Service Issue: {{serviceCount}}</b></td>  \n                      <td><b>Seasonal care: {{seasonalCount}}</b></td>     \n                      <td><b>Parent Lost Job: {{lostJobCount}}</b></td>\n                    </tr>\n                    <tr *ngIf=\"reportList.length != 0 && !loader\">\n                      <td><b>Child/Parent Behavior: {{behaviorCount}}</b></td>\n                      <td></td>\n                      <td></td>\n                    </tr>\n                    <tr *ngIf=\"reportList.length != 0 && !loader\">\n                      <td><b>Total Withdrawn This Term:</b></td>\n                      <td><b>{{totalRecord}}</b></td>\n                      <td></td>\n                    </tr>\n                  </tbody>\n                  <!-- </tbody> -->\n                </table>\n                <div class=\"text-center\">\n                  <span *ngIf=\"reportList.length == 0 && !loader\" class=\"text-center\">No result found</span>\n                </div>\n              </div>\n              <p-paginator [alwaysShow]=\"false\" [rows]=\"limit\" [totalRecords]=\"totalRecord\"\n                (onPageChange)=\"paginate($event)\"></p-paginator>\n\n            </div>\n\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <ngx-spinner type=\"ball-atom\" size=\"medium\" color=\"#58A7FE\"></ngx-spinner>"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-students-deactivated-report/agency-admin-students-deactivated-report.component.ts":
/*!***********************************************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-students-deactivated-report/agency-admin-students-deactivated-report.component.ts ***!
  \***********************************************************************************************************************************************/
/*! exports provided: AgencyAdminStudentsDeactivatedReportComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AgencyAdminStudentsDeactivatedReportComponent", function() { return AgencyAdminStudentsDeactivatedReportComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../shared/services/agency-api-service/agency-api.service */ "./src/app/layout/agency-admin/components/shared/services/agency-api-service/agency-api.service.ts");
/* harmony import */ var _shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../shared/services/error-handler/error-handler.service */ "./src/app/shared/services/error-handler/error-handler.service.ts");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ngx-spinner */ "./node_modules/ngx-spinner/fesm5/ngx-spinner.js");
/* harmony import */ var _shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../shared/services/notification-service/notification.service */ "./src/app/shared/services/notification-service/notification.service.ts");
/* harmony import */ var _shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../shared/services/common/common.service */ "./src/app/shared/services/common/common.service.ts");
/* harmony import */ var _shared_constatant__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../shared/constatant */ "./src/app/layout/agency-admin/components/shared/constatant.ts");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../../environments/environment */ "./src/environments/environment.ts");
/* harmony import */ var ngx_bootstrap__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ngx-bootstrap */ "./node_modules/ngx-bootstrap/esm5/ngx-bootstrap.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









var AgencyAdminStudentsDeactivatedReportComponent = /** @class */ (function () {
    function AgencyAdminStudentsDeactivatedReportComponent(apiService, error, spinner, notification, commonService) {
        this.apiService = apiService;
        this.error = error;
        this.spinner = spinner;
        this.notification = notification;
        this.commonService = commonService;
        this.reportList = [];
        this.pageNo = 0;
        this.limit = 10;
        this.totalRecord = 0;
        this.searchByStudentName = '';
        this.loader = true;
        this.nonPaymentCount = 0;
        this.relocationCount = 0;
        this.certificateCount = 0;
        this.graduatedCount = 0;
        this.serviceCount = 0;
        this.behaviorCount = 0;
        this.healthCount = 0;
        this.seasonalCount = 0;
        this.lostJobCount = 0;
        this.livingCount = 0;
        this.dpConfig = new ngx_bootstrap__WEBPACK_IMPORTED_MODULE_8__["BsDatepickerConfig"]();
    }
    AgencyAdminStudentsDeactivatedReportComponent.prototype.ngOnInit = function () {
        this.dpConfig = Object.assign({}, { containerClass: 'theme-dark-blue' }, { showWeekNumbers: false });
        this.getDuePaymentReport();
    };
    AgencyAdminStudentsDeactivatedReportComponent.prototype.getDuePaymentReport = function () {
        var _this = this;
        this.loader = true;
        this.reportList = [];
        this.spinner.show();
        var data = {
            'agencyID': this.commonService.getAgencyId(),
            'page': this.pageNo,
            'limit': this.limit,
            'fromDate': this.fromDate ? this.fromDate : this.blankDate,
            'toDate': this.toDate ? this.toDate : this.blankDate,
            'fromDateString': this.commonService.getStringLocalDateTimeFromUTC(this.fromDate),
            'toDateString': this.commonService.getStringLocalDateTimeFromUTC(this.toDate)
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_6__["AgencyAPIURLs"].GetDeactivatedStudentsReport, data, null).subscribe(function (res) {
            _this.totalRecord = res.body.totalRows;
            if (res.body.statusCode === 200) {
                _this.spinner.hide();
                _this.reportList = res.body.data;
                _this.nonPaymentCount = res.body.nonPaymentCount;
                _this.relocationCount = res.body.relocationCount;
                _this.certificateCount = res.body.certificateCount;
                _this.graduatedCount = res.body.graduatedCount;
                _this.serviceCount = res.body.serviceCount;
                _this.behaviorCount = res.body.behaviorCount;
                _this.healthCount = res.body.healthCount;
                _this.seasonalCount = res.body.seasonalCount;
                _this.lostJobCount = res.body.lostJobCount;
                _this.livingCount = res.body.livingCount;
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
            _this.loader = false;
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminStudentsDeactivatedReportComponent.prototype.paginate = function (event) {
        this.pageNo = event.page;
        this.getDuePaymentReport();
    };
    AgencyAdminStudentsDeactivatedReportComponent.prototype.pdfReportForDeactivatedStudent = function () {
        var _this = this;
        this.loader = true;
        this.spinner.show();
        var req = {
            'agencyID': this.commonService.getAgencyId(),
            'fromDate': this.fromDate ? this.fromDate : this.blankDate,
            'toDate': this.toDate ? this.toDate : this.blankDate,
            'fromDateString': this.commonService.getStringLocalDateTimeFromUTC(this.fromDate),
            'toDateString': this.commonService.getStringLocalDateTimeFromUTC(this.toDate)
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_6__["AgencyAPIURLs"].PdfReportForDeactivatedStudents, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                var filename = _environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].baseUrl + res.body.fileName;
                var name_1 = res.body.fileName;
                window.open(filename);
                setTimeout(function () {
                    _this.deletePdFFromServer(name_1);
                }, 5000);
            }
            else {
                _this.error.unknownError();
            }
            _this.loader = false;
            _this.spinner.hide();
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    // Delete pdf after use from server
    AgencyAdminStudentsDeactivatedReportComponent.prototype.deletePdFFromServer = function (filename) {
        var req = {
            'fileName': filename,
            'agencyID': this.commonService.getAgencyId()
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_6__["AgencyAPIURLs"].DeleteExistingFile, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
            }
            else {
            }
        }, function (err) {
            console.log(err);
        });
    };
    AgencyAdminStudentsDeactivatedReportComponent.prototype.search = function () {
        this.showClearBtn = true;
        this.getDuePaymentReport();
    };
    AgencyAdminStudentsDeactivatedReportComponent.prototype.clearSearch = function () {
        this.searchByStudentName = '';
        this.fromDate = null;
        this.toDate = null;
        this.showClearBtn = false;
        this.getDuePaymentReport();
    };
    AgencyAdminStudentsDeactivatedReportComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-agency-admin-students-deactivated-report',
            template: __webpack_require__(/*! ./agency-admin-students-deactivated-report.component.html */ "./src/app/layout/agency-admin/components/agency-admin-students-deactivated-report/agency-admin-students-deactivated-report.component.html"),
            styles: [__webpack_require__(/*! ./agency-admin-students-deactivated-report.component.css */ "./src/app/layout/agency-admin/components/agency-admin-students-deactivated-report/agency-admin-students-deactivated-report.component.css")]
        }),
        __metadata("design:paramtypes", [_shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_1__["AgencyApiService"], _shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_2__["ErrorHandlerService"],
            ngx_spinner__WEBPACK_IMPORTED_MODULE_3__["NgxSpinnerService"], _shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_4__["NotificationService"],
            _shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_5__["CommonService"]])
    ], AgencyAdminStudentsDeactivatedReportComponent);
    return AgencyAdminStudentsDeactivatedReportComponent;
}());



/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-subsidy/agency-admin-subsidy.component.css":
/*!********************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-subsidy/agency-admin-subsidy.component.css ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9hZ2VuY3ktYWRtaW4vY29tcG9uZW50cy9hZ2VuY3ktYWRtaW4tc3Vic2lkeS9hZ2VuY3ktYWRtaW4tc3Vic2lkeS5jb21wb25lbnQuY3NzIn0= */"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-subsidy/agency-admin-subsidy.component.html":
/*!*********************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-subsidy/agency-admin-subsidy.component.html ***!
  \*********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"wrapper\">\r\n  <div class=\"container-fluid\">\r\n\r\n    <div class=\"pagetitle\">\r\n      <div>\r\n        <h2> <a [routerLink]=\"['../setting']\">Settings</a>\r\n          <span>/ Subsidy</span>\r\n        </h2>\r\n      </div>\r\n      <div class=\"search-date\">\r\n        <div class=\"pr15 label-text\"> </div>\r\n        <button type=\"submit\" class=\"btn btn-red \" data-target=\".addsubsidy\" data-toggle=\"modal\" (click)=\"clearSubsidyForm()\">Apply Subsidy</button>\r\n      </div>\r\n    </div>\r\n   \r\n      <div class=\"innertable\">\r\n        <div class=\"table-responsive\">\r\n          <table class=\"table\">\r\n            <thead class=\"thead-light\">\r\n              <tr>\r\n                <th scope=\"col\">Student Name</th>\r\n                <th scope=\"col\">Class Name</th>\r\n                <th scope=\"col\">Parent Name</th>\r\n                <th scope=\"col\" class=\"text-center\">Subsidy Name</th>\r\n                <th scope=\"col\" class=\"text-center\">Subsidy Amount</th>\r\n                <th scope=\"col\" class=\"text-center\">Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr *ngFor=\"let student of studentList\">\r\n                <td>{{student.studentName}}</td>\r\n                <td>{{student.className}}</td>\r\n                <td>{{student.parentName}}</td>\r\n                <td class=\"text-center\">{{student.subsidyName}}</td>\r\n                <td class=\"text-center\">${{student.subsidyAmount}}</td>\r\n                <td> <button class=\"form-control\" *ngIf=\"student.subsidyName\" class=\"btn btn-warning\" (click)=\"deleteSubsidy(student)\">Remove</button></td>\r\n            </tbody>\r\n          </table>\r\n          <p-paginator [alwaysShow]=\"false\" [rows]=\"limit\" [totalRecords]=\"totalRecord\" (onPageChange)=\"paginate($event)\"></p-paginator>\r\n        </div>\r\n        \r\n      </div>\r\n  <!-- -------------Model to apply subsidy----------------- -->\r\n<div class=\"modal fade addsubsidy \" id=\"addsubsidy\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myLargeModalLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog modal-lg\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\">Add Subsidy</h5>\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <form [formGroup]=\"subsidyForm\">\r\n          <div class=\"form-fields\">\r\n            <div class=\"row mb-10 \">\r\n              <div class=\"col-lg-6\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"\">Select Subsidy *</label>\r\n                  <select class=\"form-control\" formControlName=\"subsidyName\">\r\n                    <option value=\"\">Select subsidy</option>\r\n                    <option *ngFor=\"let sub of subsidyList\" [value]=\"sub.value\">{{sub.label}}</option>\r\n                  </select>\r\n                  <div *ngIf=\"f.subsidyName.invalid && (f.subsidyName.dirty || f.subsidyName.touched)\" class=\"text-left errormsg\">\r\n                    <span *ngIf=\"f.subsidyName.errors.required\">\r\n                      <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select subsidy</span>\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-lg-6\">\r\n                <div class=\"form-group\">\r\n                  <label>Student Name*</label>\r\n                  <p-multiSelect [options]=\"studentDropdownList\" formControlName=\"studentName\" [panelStyle]=\"{minWidth:'200px'}\"\r\n                    [maxSelectedLabels]=\"15\"></p-multiSelect>\r\n                    <div *ngIf=\"f.studentName.invalid && (f.studentName.dirty || f.studentName.touched)\" class=\"text-left errormsg\">\r\n                      <span *ngIf=\"f.studentName.errors.required\">\r\n                        <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select student</span>\r\n                      </span>\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"row mb-10\">\r\n              <div class=\"col-lg-6\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"exampleFormControlSelect1\">Start Date</label>\r\n                  <input type=\"text\" placeholder=\"Select Start date\" (keypress)=\"commonService.allowOnlyNumber($event)\"\r\n                    showWeekNumbers=\"false\" formControlName=\"startDate\" class=\"form-control\" [bsConfig]=\"dpConfig\" bsDatepicker>\r\n                    <div *ngIf=\"f.startDate.invalid && (f.startDate.dirty || f.startDate.touched)\" class=\"text-left errormsg\">\r\n                      <span *ngIf=\"f.startDate.errors.required\">\r\n                        <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select date</span>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n              </div>\r\n              <div class=\"col-lg-6\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"exampleFormControlSelect1\">End Date</label>\r\n                  <input type=\"text\" formControlName=\"endDate\" placeholder=\"Select End date\" (keypress)=\"commonService.allowOnlyNumber($event)\"\r\n                    showWeekNumbers=\"false\" class=\"form-control\" [bsConfig]=\"dpConfig\" bsDatepicker>\r\n                    <div *ngIf=\"f.endDate.invalid && (f.endDate.dirty || f.endDate.touched)\" class=\"text-left errormsg\">\r\n                      <span *ngIf=\"f.endDate.errors.required\">\r\n                        <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select date</span>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n        <button type=\"button\" class=\"btn btn-primary\"  (click)=\"verifySubsidybeforApply()\">Save\r\n          Changes</button>\r\n      </div>\r\n      </div>\r\n      </div>\r\n      </div>\r\n      <!--end of modal  -->\r\n      </div>\r\n    </div>\r\n      \r\n  <app-confirm-box></app-confirm-box>\r\n  <ngx-spinner type=\"ball-atom\" size=\"medium\" color=\"#58A7FE\"></ngx-spinner>"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-subsidy/agency-admin-subsidy.component.ts":
/*!*******************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-subsidy/agency-admin-subsidy.component.ts ***!
  \*******************************************************************************************************/
/*! exports provided: AgencyAdminSubsidyComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AgencyAdminSubsidyComponent", function() { return AgencyAdminSubsidyComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var ngx_bootstrap__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ngx-bootstrap */ "./node_modules/ngx-bootstrap/esm5/ngx-bootstrap.js");
/* harmony import */ var _shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../shared/services/agency-api-service/agency-api.service */ "./src/app/layout/agency-admin/components/shared/services/agency-api-service/agency-api.service.ts");
/* harmony import */ var src_app_shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/shared/services/error-handler/error-handler.service */ "./src/app/shared/services/error-handler/error-handler.service.ts");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ngx-spinner */ "./node_modules/ngx-spinner/fesm5/ngx-spinner.js");
/* harmony import */ var src_app_shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/shared/services/notification-service/notification.service */ "./src/app/shared/services/notification-service/notification.service.ts");
/* harmony import */ var src_app_shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/app/shared/services/common/common.service */ "./src/app/shared/services/common/common.service.ts");
/* harmony import */ var _shared_constatant__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../shared/constatant */ "./src/app/layout/agency-admin/components/shared/constatant.ts");
/* harmony import */ var primeng_api__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! primeng/api */ "./node_modules/primeng/api.js");
/* harmony import */ var primeng_api__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(primeng_api__WEBPACK_IMPORTED_MODULE_9__);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};










var AgencyAdminSubsidyComponent = /** @class */ (function () {
    function AgencyAdminSubsidyComponent(confirmationService, apiService, fb, error, spinner, notification, commonService) {
        this.confirmationService = confirmationService;
        this.apiService = apiService;
        this.fb = fb;
        this.error = error;
        this.spinner = spinner;
        this.notification = notification;
        this.commonService = commonService;
        this.studentList = [];
        this.searchByStudentName = '';
        this.pageNo = 0;
        this.limit = 10;
        this.markAllStudents = false;
        this.studentListId = [];
        this.subsidyList = [];
        this.studentDropdownList = [];
        this.dpConfig = new ngx_bootstrap__WEBPACK_IMPORTED_MODULE_2__["BsDatepickerConfig"]();
        this.agencyId = this.commonService.getAgencyId();
        this.isSubscriptionActive = this.commonService.getSubscriptionStatus();
    }
    AgencyAdminSubsidyComponent.prototype.ngOnInit = function () {
        this.dpConfig = Object.assign({}, { containerClass: 'theme-dark-blue' }, { showWeekNumbers: false });
        this.createSubsidyForm();
        this.subsidyId = 0;
        this.getSubcityList();
        this.getAllStudentSubsidyList();
        this.getAllStudentDropDown();
    };
    AgencyAdminSubsidyComponent.prototype.createSubsidyForm = function () {
        this.subsidyForm = this.fb.group({
            studentName: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            subsidyName: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            startDate: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            endDate: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
        });
    };
    Object.defineProperty(AgencyAdminSubsidyComponent.prototype, "f", {
        get: function () { return this.subsidyForm.controls; },
        enumerable: true,
        configurable: true
    });
    AgencyAdminSubsidyComponent.prototype.getSubcityList = function () {
        var _this = this;
        this.subsidyList = [];
        this.spinner.show();
        var data = {
            'agencyID': this.agencyId
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_8__["AgencyAPIURLs"].GetSubsidyType, data, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.totalRecord = res.body.totalRows;
                _this.spinner.hide();
                _this.subsidyList = res.body.data;
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminSubsidyComponent.prototype.getSingleMarkedStudent = function (id, event) {
        this.markAllStudents = false;
        if (event.target.checked === true) {
            if (this.studentListId.length === 0) {
                this.studentListId.push(id.studentId);
                var no = this.studentList.findIndex(function (r) { return r.studentId === id.studentId; });
                if (no !== -1) {
                    this.studentList[no].isMarked = true;
                }
            }
            else {
                var index = this.studentListId.findIndex(function (r) { return r === id.studentId; });
                if (index === -1) {
                    this.studentListId.push(id.studentId);
                    var no = this.studentList.findIndex(function (r) { return r.studentId === id.studentId; });
                    if (no !== -1) {
                        this.studentList[no].isMarked = true;
                    }
                }
            }
        }
        else if (event.target.checked === false) {
            if (this.studentListId.length > 0) {
                var index = this.studentListId.findIndex(function (r) { return r === id.studentId; });
                this.studentListId.splice(index, 1);
                var no = this.studentList.findIndex(function (r) { return r.studentId === id.studentId; });
                if (no !== -1) {
                    this.studentList[no].isMarked = false;
                }
            }
        }
    };
    // Student list with applied subsidy
    AgencyAdminSubsidyComponent.prototype.getAllStudentSubsidyList = function () {
        var _this = this;
        this.spinner.show();
        this.studentList = [];
        var req = {
            'AgencyID': this.commonService.getAgencyId(),
            'studentID': 0,
            'studentName': '',
            'page': this.pageNo,
            'limit': this.limit,
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_8__["AgencyAPIURLs"].GetStudentSubsidyDetails, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.totalRecord = res.body.totalRows;
                if (res.body.data.length > 0 && res.body.data !== []) {
                    _this.studentList = res.body.data;
                    _this.spinner.hide();
                }
                else {
                    _this.spinner.hide();
                }
            }
            else {
                _this.spinner.hide();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    // Student list with no subsidy apply yet
    AgencyAdminSubsidyComponent.prototype.getAllStudentDropDown = function () {
        var _this = this;
        this.spinner.show();
        this.studentDropdownList = [];
        var req = {
            'AgencyID': this.commonService.getAgencyId()
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_8__["AgencyAPIURLs"].GetStudentSubsidyList, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                if (res.body.data.length > 0 && res.body.data !== []) {
                    _this.studentDropdownList = res.body.data;
                    _this.spinner.hide();
                }
                else {
                    _this.spinner.hide();
                }
            }
            else {
                _this.spinner.hide();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    /**Get student id using checkbox */
    AgencyAdminSubsidyComponent.prototype.getAllMarkedStudents = function (event, students) {
        var _this = this;
        if (event.target.checked === true) {
            this.studentListId = [];
            students.forEach(function (data) {
                _this.studentListId.push(data.studentId);
                data.isMarked = true;
            });
        }
        else {
            this.studentListId = [];
            students.forEach(function (element) {
                element.isMarked = false;
            });
        }
    };
    //  Check validation apply subsidy
    AgencyAdminSubsidyComponent.prototype.verifySubsidybeforApply = function () {
        this.spinner.show();
        if (this.subsidyForm.valid) {
            this.spinner.hide();
            if (this.subsidyForm.controls.startDate.value.setHours(0, 0, 0) >
                this.subsidyForm.controls.endDate.value.setHours(0, 0, 0)) {
                this.notification.warning({ message: 'End date should be greater than Start date', title: '' });
            }
            else {
                this.saveStudentSubsidyDetails();
            }
        }
        else {
            this.spinner.hide();
            this.commonService.validateAllFields(this.subsidyForm);
        }
    };
    AgencyAdminSubsidyComponent.prototype.saveStudentSubsidyDetails = function () {
        var _this = this;
        var data = {
            agencyID: this.agencyId,
            classID: '',
            studentID: 0,
            subsidyDetailsID: this.subsidyForm.controls.subsidyName.value,
            StudentIDs: this.subsidyForm.controls.studentName.value,
            FromDate: new Date(this.subsidyForm.controls.startDate.value).toDateString(),
            ToDate: new Date(this.subsidyForm.controls.endDate.value).toDateString()
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_8__["AgencyAPIURLs"].SaveStudentSubsidyDetails, data, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                $('.addsubsidy').modal('hide');
                _this.getAllStudentDropDown();
                _this.getAllStudentSubsidyList();
                _this.notification.success({ message: res.body.message, title: 'Success' });
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
                _this.studentListId = [];
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
            _this.studentListId = [];
        });
    };
    AgencyAdminSubsidyComponent.prototype.paginate = function (event) {
        this.pageNo = event.page;
        this.getAllStudentSubsidyList();
    };
    AgencyAdminSubsidyComponent.prototype.deleteSubsidy = function (value) {
        var _this = this;
        this.confirmationService.confirm({
            message: 'Do you want to deactivate this user?',
            accept: function () {
                _this.spinner.show();
                var req = {
                    'AgencyID': _this.commonService.getAgencyId(),
                    'id': value.id,
                    'DeletedBy': _this.commonService.getReleventUserId('userdetails')
                };
                _this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_8__["AgencyAPIURLs"].DeleteStudentSubsidyType, req, null).subscribe(function (res) {
                    if (res.body.statusCode === 200) {
                        _this.getAllStudentSubsidyList();
                        _this.getAllStudentDropDown();
                        _this.notification.success({ message: res.body.message, title: 'Success' });
                    }
                    else {
                        _this.spinner.hide();
                        _this.error.unknownError();
                    }
                }, function (err) {
                    _this.spinner.hide();
                    _this.error.commonError(err);
                });
            }
        });
    };
    AgencyAdminSubsidyComponent.prototype.clearSubsidyForm = function () {
        this.createSubsidyForm();
    };
    AgencyAdminSubsidyComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-agency-admin-subsidy',
            template: __webpack_require__(/*! ./agency-admin-subsidy.component.html */ "./src/app/layout/agency-admin/components/agency-admin-subsidy/agency-admin-subsidy.component.html"),
            styles: [__webpack_require__(/*! ./agency-admin-subsidy.component.css */ "./src/app/layout/agency-admin/components/agency-admin-subsidy/agency-admin-subsidy.component.css")]
        }),
        __metadata("design:paramtypes", [primeng_api__WEBPACK_IMPORTED_MODULE_9__["ConfirmationService"], _shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_3__["AgencyApiService"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormBuilder"],
            src_app_shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_4__["ErrorHandlerService"],
            ngx_spinner__WEBPACK_IMPORTED_MODULE_5__["NgxSpinnerService"], src_app_shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_6__["NotificationService"], src_app_shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_7__["CommonService"]])
    ], AgencyAdminSubsidyComponent);
    return AgencyAdminSubsidyComponent;
}());



/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-tax-statement-report/agency-admin-tax-statement-report.component.css":
/*!**********************************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-tax-statement-report/agency-admin-tax-statement-report.component.css ***!
  \**********************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9hZ2VuY3ktYWRtaW4vY29tcG9uZW50cy9hZ2VuY3ktYWRtaW4tdGF4LXN0YXRlbWVudC1yZXBvcnQvYWdlbmN5LWFkbWluLXRheC1zdGF0ZW1lbnQtcmVwb3J0LmNvbXBvbmVudC5jc3MifQ== */"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-tax-statement-report/agency-admin-tax-statement-report.component.html":
/*!***********************************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-tax-statement-report/agency-admin-tax-statement-report.component.html ***!
  \***********************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"wrapper\">\n  <div class=\"container-fluid\">\n\n    <div class=\"pagetitle\">\n      <div>\n        <h2>Report\n          <span>/ Tax Statement Report </span>\n        </h2>\n      </div>\n    </div>\n    <div class=\"subhead d-flex justify-content-between mt-20\">\n      <div>\n        <h3>Tax Statement List</h3>\n      </div>\n      <div style=\"cursor:pointer\" title=\"Download report\" (click)=\"pdfReportForBankStatement()\"><i class=\"fa fa-download\"\n          aria-hidden=\"true\"></i>\n      </div>\n    </div>\n    <div class=\"card cardfilter\">\n      <!-- <div class=\"col-lg-10\"> -->\n      <div class=\"leftfilter\">\n        <div class=\"row algcenter\">\n          <div class=\"search-date\">\n            <div class=\"pr15 label-text\">Search Year : </div>\n            <input type=\"text\" placeholder=\"Search by Date\" [(ngModel)]=\"searchByDate\" showWeekNumbers=\"false\"\n              [maxDate]=\"today\" class=\"form-control mr15\" [bsConfig]=\"dpConfig\" (bsValueChange)=\"getSerchDate($event)\"\n              bsDatepicker (onShown)=\"onOpenCalendar($event)\">\n          </div>\n          <div class=\"filter-buttons\">\n            <button type=\"submit\" class=\"btn btn-send\" *ngIf=\"!showClearBtn\"\n              (click)=\"getTaxStatementReport()\">Search</button>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"studentlist\">\n        <div class=\"tab-content\" id=\"pills-tabContent\">\n          <div class=\"tab-pane fade show active\" id=\"pills-appstudent\" role=\"tabpanel\" aria-labelledby=\"appStudent\">\n\n            <div class=\"innertable studentListSearch\">\n              <div class=\"table-responsive\">\n                <table class=\"table \">\n                  <thead class=\"thead-light\">\n                    <tr>\n                      <th scope=\"col\">Family Name</th>\n                      <th scope=\"col\">Amount</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr *ngFor=\"let report of reportList\">\n                      <td>{{report.parentLastName}}</td>\n                      <td>{{report.debitAmount}}</td>\n                    </tr>\n                    <tr *ngIf=\"reportList.length != 0 && !loader\">\n                      <td><b>Total</b></td>\n                      <td><b>$ {{totalAmount}}</b></td>\n                    </tr>\n                  </tbody>\n                  <!-- </tbody> -->\n                </table>\n                <div class=\"text-center\">\n                  <span *ngIf=\"reportList.length == 0 && !loader\" class=\"text-center\">No result found</span>\n                </div>\n              </div>\n              <p-paginator [alwaysShow]=\"false\" [rows]=\"limit\" [totalRecords]=\"totalRecord\"\n                (onPageChange)=\"paginate($event)\"></p-paginator>\n\n            </div>\n\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <ngx-spinner type=\"ball-atom\" size=\"medium\" color=\"#58A7FE\"></ngx-spinner>"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-tax-statement-report/agency-admin-tax-statement-report.component.ts":
/*!*********************************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-tax-statement-report/agency-admin-tax-statement-report.component.ts ***!
  \*********************************************************************************************************************************/
/*! exports provided: AgencyAdminTaxStatementReportComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AgencyAdminTaxStatementReportComponent", function() { return AgencyAdminTaxStatementReportComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../shared/services/agency-api-service/agency-api.service */ "./src/app/layout/agency-admin/components/shared/services/agency-api-service/agency-api.service.ts");
/* harmony import */ var _shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../shared/services/error-handler/error-handler.service */ "./src/app/shared/services/error-handler/error-handler.service.ts");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ngx-spinner */ "./node_modules/ngx-spinner/fesm5/ngx-spinner.js");
/* harmony import */ var _shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../shared/services/notification-service/notification.service */ "./src/app/shared/services/notification-service/notification.service.ts");
/* harmony import */ var _shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../shared/services/common/common.service */ "./src/app/shared/services/common/common.service.ts");
/* harmony import */ var _shared_constatant__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../shared/constatant */ "./src/app/layout/agency-admin/components/shared/constatant.ts");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../../environments/environment */ "./src/environments/environment.ts");
/* harmony import */ var ngx_bootstrap__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ngx-bootstrap */ "./node_modules/ngx-bootstrap/esm5/ngx-bootstrap.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









var AgencyAdminTaxStatementReportComponent = /** @class */ (function () {
    function AgencyAdminTaxStatementReportComponent(apiService, error, spinner, notification, commonService) {
        this.apiService = apiService;
        this.error = error;
        this.spinner = spinner;
        this.notification = notification;
        this.commonService = commonService;
        this.reportList = [];
        this.pageNo = 0;
        this.limit = 10;
        this.totalRecord = 0;
        this.checkAmount = 0;
        this.cashAmount = 0;
        this.totalCheck = 0;
        this.totalAmount = 0;
        this.today = new Date;
        this.loader = true;
        this.count = 0;
        this.dpConfig = new ngx_bootstrap__WEBPACK_IMPORTED_MODULE_8__["BsDatepickerConfig"]();
    }
    AgencyAdminTaxStatementReportComponent.prototype.ngOnInit = function () {
        this.searchByDate = new Date();
        this.searchByDateString = this.commonService.getStringLocalDateTimeFromUTC(this.searchByDate);
        this.dpConfig = Object.assign({}, { containerClass: 'theme-dark-blue' }, { showWeekNumbers: false, dateInputFormat: 'YYYY' });
        this.getTaxStatementReport();
    };
    AgencyAdminTaxStatementReportComponent.prototype.getTaxStatementReport = function () {
        var _this = this;
        this.loader = true;
        this.reportList = [];
        this.spinner.show();
        var data = {
            'agencyID': this.commonService.getAgencyId(),
            'page': this.pageNo,
            'limit': this.limit,
            'askedDate': this.searchByDate,
            'askedDateString': this.searchByDateString,
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_6__["AgencyAPIURLs"].GetTaxStatementReport, data, null).subscribe(function (res) {
            _this.totalRecord = res.body.totalRows;
            if (res.body.statusCode === 200) {
                _this.spinner.hide();
                _this.reportList = res.body.data;
                _this.totalAmount = res.body.totalPaidAmount;
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
            _this.loader = false;
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminTaxStatementReportComponent.prototype.paginate = function (event) {
        this.pageNo = event.page;
        this.getTaxStatementReport();
    };
    AgencyAdminTaxStatementReportComponent.prototype.pdfReportForBankStatement = function () {
        var _this = this;
        this.loader = true;
        this.spinner.show();
        var req = {
            'agencyID': this.commonService.getAgencyId(),
            'askedDate': this.searchByDate,
            'askedDateString': this.searchByDateString,
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_6__["AgencyAPIURLs"].PdfReportForTaxStatement, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                var filename = _environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].baseUrl + res.body.fileName;
                var name_1 = res.body.fileName;
                window.open(filename);
                setTimeout(function () {
                    _this.deletePdFFromServer(name_1);
                }, 5000);
            }
            else {
                _this.error.unknownError();
            }
            _this.loader = false;
            _this.spinner.hide();
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    // Delete pdf after use from server
    AgencyAdminTaxStatementReportComponent.prototype.deletePdFFromServer = function (filename) {
        var req = {
            'fileName': filename,
            'agencyID': this.commonService.getAgencyId()
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_6__["AgencyAPIURLs"].DeleteExistingFile, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
            }
            else {
            }
        }, function (err) {
            console.log(err);
        });
    };
    AgencyAdminTaxStatementReportComponent.prototype.getSerchDate = function (event) {
        this.count++;
        if (this.count > 2) {
            this.searchByDate = event;
            this.searchByDateString = this.commonService.getStringLocalDateTimeFromUTC(this.searchByDate);
        }
    };
    AgencyAdminTaxStatementReportComponent.prototype.onOpenCalendar = function (container) {
        container.yearSelectHandler = function (event) {
            container.value = event.date;
        };
        container.setViewMode('year');
    };
    AgencyAdminTaxStatementReportComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-agency-admin-tax-statement-report',
            template: __webpack_require__(/*! ./agency-admin-tax-statement-report.component.html */ "./src/app/layout/agency-admin/components/agency-admin-tax-statement-report/agency-admin-tax-statement-report.component.html"),
            styles: [__webpack_require__(/*! ./agency-admin-tax-statement-report.component.css */ "./src/app/layout/agency-admin/components/agency-admin-tax-statement-report/agency-admin-tax-statement-report.component.css")]
        }),
        __metadata("design:paramtypes", [_shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_1__["AgencyApiService"], _shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_2__["ErrorHandlerService"],
            ngx_spinner__WEBPACK_IMPORTED_MODULE_3__["NgxSpinnerService"], _shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_4__["NotificationService"],
            _shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_5__["CommonService"]])
    ], AgencyAdminTaxStatementReportComponent);
    return AgencyAdminTaxStatementReportComponent;
}());



/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-teacher-attendance-report/agency-admin-teacher-attendance-report.component.css":
/*!********************************************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-teacher-attendance-report/agency-admin-teacher-attendance-report.component.css ***!
  \********************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9hZ2VuY3ktYWRtaW4vY29tcG9uZW50cy9hZ2VuY3ktYWRtaW4tdGVhY2hlci1hdHRlbmRhbmNlLXJlcG9ydC9hZ2VuY3ktYWRtaW4tdGVhY2hlci1hdHRlbmRhbmNlLXJlcG9ydC5jb21wb25lbnQuY3NzIn0= */"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-teacher-attendance-report/agency-admin-teacher-attendance-report.component.html":
/*!*********************************************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-teacher-attendance-report/agency-admin-teacher-attendance-report.component.html ***!
  \*********************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"wrapper\">\r\n    <div class=\"container-fluid\">\r\n  \r\n      <div class=\"pagetitle\">\r\n        <div>\r\n          <h2>Report\r\n            <span>/Teacher Attendance Report </span>\r\n          </h2>\r\n        </div>\r\n      </div>\r\n      <div class=\"subhead d-flex justify-content-between mt-20\">\r\n        <div>\r\n          <h3>Teacher Attendance Report</h3>\r\n        </div>       \r\n      </div>\r\n      <div class=\"card cardfilter\">\r\n           <div class=\"leftfilter\">\r\n          <div class=\"row algcenter\">\r\n            <div class=\"search-date\">\r\n              <div class=\"pr15 label-text\">Search Name : </div>\r\n              <input type=\"text\" placeholder=\"Search teacher name\" [(ngModel)]=\"searchByTeacherName\" class=\"form-control mr15\" id=\"\">\r\n            </div>\r\n            <div class=\"search-date\">\r\n              <div class=\"pr15 label-text\">From Date : </div>\r\n              <input type=\"text\" placeholder=\"Search from date\" [(ngModel)]=\"fromDate\"  showWeekNumbers=\"false\"\r\n                class=\"form-control mr15\" [bsConfig]=\"dpConfig\" bsDatepicker>\r\n                </div>\r\n                <div class=\"search-date\">\r\n                  <div class=\"pr15 label-text\">To Date : </div>\r\n                  <input type=\"text\" placeholder=\"Search to date\" [(ngModel)]=\"toDate\"  showWeekNumbers=\"false\"\r\n                    class=\"form-control mr15\" [bsConfig]=\"dpConfig\" bsDatepicker>\r\n                    </div>\r\n            <div class=\"filter-buttons\">\r\n              <button type=\"submit\" class=\"btn btn-send\" *ngIf=\"!showClearBtn\" (click)=\"search()\">Search</button>\r\n              <button type=\"submit\" class=\"btn btn-secondary\" *ngIf=\"showClearBtn\" (click)=\"clearSearch()\">Clear</button>\r\n            </div>\r\n        </div> \r\n      </div>\r\n  \r\n      <div class=\"studentlist\">\r\n        <div class=\"tab-content\" id=\"pills-tabContent\">\r\n          <div class=\"tab-pane fade show active\" id=\"pills-appstudent\" role=\"tabpanel\" aria-labelledby=\"appStudent\">\r\n  \r\n            <div class=\"innertable studentListSearch\">\r\n              <div class=\"table-responsive\">\r\n                <table class=\"table \">\r\n                  <thead class=\"thead-light\">\r\n                    <tr>\r\n                      <th scope=\"col\" >Teacher Name</th>\r\n                      <th scope=\"col\" >Date</th>\r\n                      <th scope=\"col\" class=\"text-center\">Clock-In Time</th>\r\n                      <th scope=\"col\" class=\"text-center\">Clock-Out Time</th>\r\n                      <th scope=\"col\" class=\"text-center\">Update Clock-In Time</th>\r\n                      <th scope=\"col\" class=\"text-center\">Update Clock-Out Time</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody >\r\n                 <tr *ngFor=\"let report of reportList\">\r\n                  <td >{{report.teacherName}}</td>\r\n                  <td >{{report.teacherClockIN | date}}</td>\r\n                  <td class=\"text-center\">\r\n                      <p *ngIf=\"report.teacherClockIN != '0001-01-01T00:00:00'\">{{report.teacherClockIN| date: 'hh:mm a'}}</p>  \r\n                      <p *ngIf=\"report.teacherClockIN == '0001-01-01T00:00:00'\">---</p>\r\n                  </td>\r\n                  <td class=\"text-center\">\r\n                      <p *ngIf=\"report.teacherClockOut != '0001-01-01T00:00:00'\">{{report.teacherClockOut| date: 'hh:mm a'}}</p>  \r\n                      <p *ngIf=\"report.teacherClockOut == '0001-01-01T00:00:00'\">---</p>  \r\n                    </td>\r\n\r\n                    <td class=\"text-center\">\r\n                      <button class=\"btn btn-success attbtn\" title=\"Update clock-In time\" style=\"cursor: pointer\"\r\n                     (click)=\"openFormClockIn(report)\"> Update Time </button>\r\n                    </td>\r\n\r\n                    <td class=\"text-center\">\r\n                      <button class=\"btn btn-success attbtn\" title=\"Update clock-Out time\" style=\"cursor: pointer\"\r\n                     (click)=\"openFormClockout(report)\"> Update Time </button>\r\n                    </td>\r\n                    \r\n                 </tr>\r\n                  </tbody>\r\n                </table>\r\n                <div class=\"text-center\">\r\n                    <span  *ngIf=\"reportList.length == 0 && !loader\" class=\"text-center\">No result found</span>\r\n                  </div> \r\n              </div>\r\n              <p-paginator [alwaysShow]=\"false\" [rows]=\"10\" [totalRecords]=\"totalRecord\" (onPageChange)=\"paginate($event)\"></p-paginator>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n       <!-- Update clock In time -->\r\n  <div class=\"modal fade timeupdateclockIn\" data-backdrop=\"static\" style=\"z-index: 1100;\" id=\"breakout\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <h5 class=\"modal-title\" id=\"exampleModalLabel\">Update Clock-In Time</h5>\r\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <div class=\"form-group\">\r\n            <label>Time</label>\r\n            <p-calendar   class=\"custom-textbox-checkedin\" id=\"clkout\" styleClass=\"form-control\" [(ngModel)]=\"updatedTime\"  hourFormat=\"12\" [timeOnly]=\"true\" icon=\"pi pi-clock\"\r\n                    [showIcon]=\"true\"></p-calendar>\r\n          </div>\r\n          \r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n          <button type=\"button\" class=\"btn btn-primary\" (click)=\"UpdateClockInTime()\">Update</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Update clock out time -->\r\n  <div class=\"modal fade timeupdateclockout\" data-backdrop=\"static\" style=\"z-index: 1100;\" id=\"breakout\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <h5 class=\"modal-title\" id=\"exampleModalLabel\">Update Clock-out Time</h5>\r\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <div class=\"form-group\">\r\n            <label>Time</label>\r\n            <p-calendar   class=\"custom-textbox-checkedin\" id=\"clkout\" styleClass=\"form-control\" [(ngModel)]=\"updatedTime\"  hourFormat=\"12\" [timeOnly]=\"true\" icon=\"pi pi-clock\"\r\n                    [showIcon]=\"true\"></p-calendar>\r\n          </div>\r\n          \r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n          <button type=\"button\" class=\"btn btn-primary\" (click)=\"UpdateClockOutTime()\">Update</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n    \r\n    </div>\r\n  </div>\r\n  \r\n  <ngx-spinner type=\"ball-atom\" size=\"medium\" color=\"#58A7FE\"></ngx-spinner>\r\n  <app-confirm-box></app-confirm-box>\r\n  "

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-teacher-attendance-report/agency-admin-teacher-attendance-report.component.ts":
/*!*******************************************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-teacher-attendance-report/agency-admin-teacher-attendance-report.component.ts ***!
  \*******************************************************************************************************************************************/
/*! exports provided: AgencyAdminTeacherAttendanceReportComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AgencyAdminTeacherAttendanceReportComponent", function() { return AgencyAdminTeacherAttendanceReportComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var ngx_bootstrap__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ngx-bootstrap */ "./node_modules/ngx-bootstrap/esm5/ngx-bootstrap.js");
/* harmony import */ var _shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../shared/services/agency-api-service/agency-api.service */ "./src/app/layout/agency-admin/components/shared/services/agency-api-service/agency-api.service.ts");
/* harmony import */ var src_app_shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/shared/services/error-handler/error-handler.service */ "./src/app/shared/services/error-handler/error-handler.service.ts");
/* harmony import */ var src_app_shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/shared/services/notification-service/notification.service */ "./src/app/shared/services/notification-service/notification.service.ts");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ngx-spinner */ "./node_modules/ngx-spinner/fesm5/ngx-spinner.js");
/* harmony import */ var src_app_shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/shared/services/common/common.service */ "./src/app/shared/services/common/common.service.ts");
/* harmony import */ var _shared_constatant__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../shared/constatant */ "./src/app/layout/agency-admin/components/shared/constatant.ts");
/* harmony import */ var src_environments_environment__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/environments/environment */ "./src/environments/environment.ts");
/* harmony import */ var primeng_api__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! primeng/api */ "./node_modules/primeng/api.js");
/* harmony import */ var primeng_api__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(primeng_api__WEBPACK_IMPORTED_MODULE_9__);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};










var AgencyAdminTeacherAttendanceReportComponent = /** @class */ (function () {
    function AgencyAdminTeacherAttendanceReportComponent(apiService, error, spinner, notification, confirmationService, commonService) {
        this.apiService = apiService;
        this.error = error;
        this.spinner = spinner;
        this.notification = notification;
        this.confirmationService = confirmationService;
        this.commonService = commonService;
        this.reportList = [];
        this.pageNo = 0;
        this.limit = 10;
        this.totalRecord = 0;
        this.searchByTeacherName = '';
        this.loader = true;
        this.showClearBtn = false;
        this.updatedTime = new Date();
        this.recordId = 0;
        this.dpConfig = new ngx_bootstrap__WEBPACK_IMPORTED_MODULE_1__["BsDatepickerConfig"]();
    }
    AgencyAdminTeacherAttendanceReportComponent.prototype.ngOnInit = function () {
        this.dpConfig = Object.assign({}, { containerClass: 'theme-dark-blue' }, { showWeekNumbers: false });
        this.getTeacherAttendanceReport();
    };
    AgencyAdminTeacherAttendanceReportComponent.prototype.getTeacherAttendanceReport = function () {
        var _this = this;
        this.loader = true;
        this.reportList = [];
        this.spinner.show();
        var data = {
            'agencyID': this.commonService.getAgencyId(),
            'teacherName': this.searchByTeacherName,
            'page': this.pageNo,
            'limit': this.limit,
            'fromDate': this.fromDate ? this.fromDate : this.blankDate,
            'toDate': this.toDate ? this.toDate : this.blankDate
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_7__["AgencyAPIURLs"].TeacherClassAttendenceReport, data, null).subscribe(function (res) {
            _this.totalRecord = res.body.totalRows;
            if (res.body.statusCode === 200) {
                _this.spinner.hide();
                res.body.data.forEach(function (element) {
                    element.teacherClockIN = _this.commonService.getLocalDateTimeFromUTC(element.teacherClockIN);
                    if (element.teacherClockOut !== '0001-01-01T00:00:00') {
                        element.teacherClockOut = _this.commonService.getLocalDateTimeFromUTC(element.teacherClockOut);
                    }
                });
                _this.reportList = res.body.data;
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
            _this.loader = false;
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminTeacherAttendanceReportComponent.prototype.paginate = function (event) {
        this.pageNo = event.page;
        this.getTeacherAttendanceReport();
    };
    // Delete pdf after use from server
    AgencyAdminTeacherAttendanceReportComponent.prototype.deletePdFFromServer = function (filename) {
        var req = {
            'fileName': filename,
            'agencyID': this.commonService.getAgencyId()
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_7__["AgencyAPIURLs"].DeleteExistingFile, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
            }
            else {
            }
        }, function (err) {
            console.log(err);
        });
    };
    AgencyAdminTeacherAttendanceReportComponent.prototype.search = function () {
        this.pageNo = 0;
        this.showClearBtn = true;
        this.getTeacherAttendanceReport();
    };
    AgencyAdminTeacherAttendanceReportComponent.prototype.clearSearch = function () {
        this.searchByTeacherName = '';
        this.fromDate = null;
        this.toDate = null;
        this.showClearBtn = false;
        this.getTeacherAttendanceReport();
    };
    AgencyAdminTeacherAttendanceReportComponent.prototype.pdfReportForClassAttendence = function () {
        var _this = this;
        this.loader = true;
        this.spinner.show();
        var req = {
            'StudentName': this.searchByTeacherName,
            'agencyID': this.commonService.getAgencyId(),
            'fromDate': this.fromDate ? this.fromDate : this.blankDate,
            'toDate': this.toDate ? this.toDate : this.blankDate
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_7__["AgencyAPIURLs"].PDFTeacherClassAttendenceReport, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                var filename = src_environments_environment__WEBPACK_IMPORTED_MODULE_8__["environment"].baseUrl + res.body.fileName;
                var name_1 = res.body.fileName;
                window.open(filename);
                setTimeout(function () {
                    _this.deletePdFFromServer(name_1);
                }, 10000);
            }
            else {
                _this.error.unknownError();
            }
            _this.loader = false;
            _this.spinner.hide();
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminTeacherAttendanceReportComponent.prototype.openFormClockout = function (data) {
        this.timeDetail = data;
        this.recordId = data.id;
        if (data.teacherClockOut == '0001-01-01T00:00:00') {
            this.updatedTime = new Date();
        }
        else {
            this.updatedTime = data.teacherClockOut;
        }
        $('.timeupdateclockout').modal('show');
    };
    AgencyAdminTeacherAttendanceReportComponent.prototype.openFormClockIn = function (data) {
        this.timeDetail = data;
        this.recordId = data.id;
        this.updatedTime = data.teacherClockIN;
        $('.timeupdateclockIn').modal('show');
    };
    AgencyAdminTeacherAttendanceReportComponent.prototype.UpdateClockOutTime = function () {
        var _this = this;
        var t1 = new Date(this.timeDetail.teacherClockIN);
        var t2 = new Date(t1.getFullYear(), t1.getMonth(), t1.getDate(), this.updatedTime.getHours(), this.updatedTime.getMinutes(), this.updatedTime.getSeconds());
        if (t1 >= t2) {
            this.notification.warning({ message: 'Clock-out time should be greater than Clock-in time', title: '' });
        }
        else {
            $('.timeupdateclockout').modal('hide');
            this.confirmationService.confirm({
                message: 'Do you want to update clock out time?',
                accept: function () {
                    _this.loader = true;
                    _this.spinner.show();
                    var data = {
                        'agencyID': _this.commonService.getAgencyId(),
                        'id': _this.recordId,
                        'ClockOutTime': _this.updatedTime
                    };
                    _this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_7__["AgencyAPIURLs"].UpdateTeacherClockOutTime, data, null).subscribe(function (res) {
                        if (res.body.statusCode === 200) {
                            $('.timeupdateclockout').modal('hide');
                            _this.notification.success({ message: 'ClockOut Time Updated Successfully', title: '' });
                            _this.getTeacherAttendanceReport();
                        }
                        else {
                            _this.spinner.hide();
                            _this.error.unknownError();
                        }
                        _this.loader = false;
                    }, function (err) {
                        _this.spinner.hide();
                        _this.error.commonError(err);
                    });
                },
                reject: function () {
                    $('.timeupdateclockout').modal('show');
                }
            });
        }
    };
    AgencyAdminTeacherAttendanceReportComponent.prototype.UpdateClockInTime = function () {
        var _this = this;
        var t1 = new Date(this.timeDetail.teacherClockOut);
        var t2 = new Date(t1.getFullYear(), t1.getMonth(), t1.getDate(), this.updatedTime.getHours(), this.updatedTime.getMinutes(), this.updatedTime.getSeconds());
        if (t1 <= t2 && (!(this.timeDetail.teacherClockOut == '0001-01-01T00:00:00'))) {
            this.notification.warning({ message: 'Clock-In time should not be greater than Clock-Out time', title: '' });
        }
        else {
            $('.timeupdateclockIn').modal('hide');
            this.confirmationService.confirm({
                message: 'Do you want to update clock In time?',
                accept: function () {
                    _this.loader = true;
                    _this.spinner.show();
                    var data = {
                        'agencyID': _this.commonService.getAgencyId(),
                        'id': _this.recordId,
                        'ClockInTime': _this.updatedTime
                    };
                    _this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_7__["AgencyAPIURLs"].UpdateTeacherClockInTime, data, null).subscribe(function (res) {
                        if (res.body.statusCode === 200) {
                            $('.timeupdateclockIn').modal('hide');
                            _this.notification.success({ message: 'ClockIn Time Updated Successfully', title: '' });
                            _this.getTeacherAttendanceReport();
                        }
                        else {
                            _this.spinner.hide();
                            _this.error.unknownError();
                        }
                        _this.loader = false;
                    }, function (err) {
                        _this.spinner.hide();
                        _this.error.commonError(err);
                    });
                },
                reject: function () {
                    $('.timeupdateclockIn').modal('show');
                }
            });
        }
    };
    AgencyAdminTeacherAttendanceReportComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-agency-admin-teacher-attendance-report',
            template: __webpack_require__(/*! ./agency-admin-teacher-attendance-report.component.html */ "./src/app/layout/agency-admin/components/agency-admin-teacher-attendance-report/agency-admin-teacher-attendance-report.component.html"),
            styles: [__webpack_require__(/*! ./agency-admin-teacher-attendance-report.component.css */ "./src/app/layout/agency-admin/components/agency-admin-teacher-attendance-report/agency-admin-teacher-attendance-report.component.css")]
        }),
        __metadata("design:paramtypes", [_shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_2__["AgencyApiService"], src_app_shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_3__["ErrorHandlerService"],
            ngx_spinner__WEBPACK_IMPORTED_MODULE_5__["NgxSpinnerService"], src_app_shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_4__["NotificationService"],
            primeng_api__WEBPACK_IMPORTED_MODULE_9__["ConfirmationService"],
            src_app_shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_6__["CommonService"]])
    ], AgencyAdminTeacherAttendanceReportComponent);
    return AgencyAdminTeacherAttendanceReportComponent;
}());



/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-teacher-hours/agency-admin-teacher-hours.component.css":
/*!********************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-teacher-hours/agency-admin-teacher-hours.component.css ***!
  \********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9hZ2VuY3ktYWRtaW4vY29tcG9uZW50cy9hZ2VuY3ktYWRtaW4tdGVhY2hlci1ob3Vycy9hZ2VuY3ktYWRtaW4tdGVhY2hlci1ob3Vycy5jb21wb25lbnQuY3NzIn0= */"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-teacher-hours/agency-admin-teacher-hours.component.html":
/*!*********************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-teacher-hours/agency-admin-teacher-hours.component.html ***!
  \*********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"wrapper\">\r\n  <div class=\"container-fluid\">\r\n\r\n    <div class=\"pagetitle\">\r\n      <div>\r\n        <h2>Report\r\n          <span>/Teacher Attended  Hours </span>\r\n        </h2>\r\n      </div>\r\n    </div>\r\n    <div class=\"subhead d-flex justify-content-between mt-20\">\r\n      <div>\r\n        <h3>Teacher Attended  Hours Report</h3>\r\n      </div>\r\n      <div style=\"cursor:pointer\" title=\"Download report\" (click)=\"pdfReportForAttendedHours()\"><i class=\"fa fa-download\" aria-hidden=\"true\"></i>\r\n      </div>\r\n    </div>\r\n    <div class=\"card cardfilter\">\r\n         <div class=\"leftfilter\">\r\n        <div class=\"row algcenter\">\r\n          <div class=\"search-date\">\r\n            <div class=\"pr15 label-text\">Search Name : </div>\r\n            <input type=\"text\" placeholder=\"Search teacher name\" [(ngModel)]=\"searchByTeacherName\" class=\"form-control mr15\" id=\"\">\r\n          </div>\r\n          <div class=\"search-date\">\r\n            <div class=\"pr15 label-text\">From Date : </div>\r\n            <input type=\"text\" placeholder=\"Search from date\" [(ngModel)]=\"fromDate\"  showWeekNumbers=\"false\"\r\n              class=\"form-control mr15\" [bsConfig]=\"dpConfig\" bsDatepicker>\r\n              </div>\r\n              <div class=\"search-date\">\r\n                <div class=\"pr15 label-text\">To Date : </div>\r\n                <input type=\"text\" placeholder=\"Search to date\" [(ngModel)]=\"toDate\"  showWeekNumbers=\"false\"\r\n                  class=\"form-control mr15\" [bsConfig]=\"dpConfig\" bsDatepicker>\r\n                  </div>\r\n          <div class=\"filter-buttons\">\r\n            <button type=\"submit\" class=\"btn btn-send\" *ngIf=\"!showClearBtn\" (click)=\"search()\">Search</button>\r\n            <button type=\"submit\" class=\"btn btn-secondary\" *ngIf=\"showClearBtn\" (click)=\"clearSearch()\">Clear</button>\r\n          </div>\r\n      </div> \r\n    </div>\r\n\r\n    <div class=\"studentlist\">\r\n      <div class=\"tab-content\" id=\"pills-tabContent\">\r\n        <div class=\"tab-pane fade show active\" id=\"pills-appstudent\" role=\"tabpanel\" aria-labelledby=\"appStudent\">\r\n\r\n          <div class=\"innertable studentListSearch\">\r\n            <div class=\"table-responsive\">\r\n              <table class=\"table \">\r\n                <thead class=\"thead-light\">\r\n                  <tr>\r\n                    <th scope=\"col\" >Teacher Name</th>\r\n                    <th scope=\"col\" >Email</th>\r\n                    <th scope=\"col\" >Total Hours(HH:MM:SS)</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody >\r\n               <tr *ngFor=\"let report of reportList\">\r\n                <td >{{report.teacherName}}</td>\r\n                <td >{{report.email}}</td>\r\n                <td ><p [title]=\"report.totalHoursInAgency == '00:00:00'? 'Teacher forgot to clocked out': ''\">{{report.totalHoursInAgency}}</p></td>\r\n               </tr>\r\n               <tr *ngIf=\"reportList.length != 0 && !loader\">\r\n                <td></td>\r\n                <td><b> Total Hours (HH:MM:SS)</b></td>\r\n                <td><b>{{totalHrs}}</b></td>\r\n             \r\n              </tr>\r\n                </tbody>\r\n              </table>\r\n              <div class=\"text-center\">\r\n                  <span  *ngIf=\"reportList.length == 0 && !loader\" class=\"text-center\">No result found</span>\r\n                </div> \r\n            </div>\r\n            <p-paginator [alwaysShow]=\"false\" [rows]=\"10\" [totalRecords]=\"totalRecord\" (onPageChange)=\"paginate($event)\"></p-paginator>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  \r\n  </div>\r\n</div>\r\n\r\n<ngx-spinner type=\"ball-atom\" size=\"medium\" color=\"#58A7FE\"></ngx-spinner>\r\n"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-teacher-hours/agency-admin-teacher-hours.component.ts":
/*!*******************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-teacher-hours/agency-admin-teacher-hours.component.ts ***!
  \*******************************************************************************************************************/
/*! exports provided: AgencyAdminTeacherHoursComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AgencyAdminTeacherHoursComponent", function() { return AgencyAdminTeacherHoursComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var ngx_bootstrap__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ngx-bootstrap */ "./node_modules/ngx-bootstrap/esm5/ngx-bootstrap.js");
/* harmony import */ var _shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../shared/services/agency-api-service/agency-api.service */ "./src/app/layout/agency-admin/components/shared/services/agency-api-service/agency-api.service.ts");
/* harmony import */ var src_app_shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/shared/services/error-handler/error-handler.service */ "./src/app/shared/services/error-handler/error-handler.service.ts");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ngx-spinner */ "./node_modules/ngx-spinner/fesm5/ngx-spinner.js");
/* harmony import */ var src_app_shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/shared/services/notification-service/notification.service */ "./src/app/shared/services/notification-service/notification.service.ts");
/* harmony import */ var src_app_shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/shared/services/common/common.service */ "./src/app/shared/services/common/common.service.ts");
/* harmony import */ var _shared_constatant__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../shared/constatant */ "./src/app/layout/agency-admin/components/shared/constatant.ts");
/* harmony import */ var src_environments_environment__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/environments/environment */ "./src/environments/environment.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









var AgencyAdminTeacherHoursComponent = /** @class */ (function () {
    function AgencyAdminTeacherHoursComponent(apiService, error, spinner, notification, commonService) {
        this.apiService = apiService;
        this.error = error;
        this.spinner = spinner;
        this.notification = notification;
        this.commonService = commonService;
        this.reportList = [];
        this.pageNo = 0;
        this.limit = 10;
        this.totalRecord = 0;
        this.searchByTeacherName = '';
        this.loader = true;
        this.showClearBtn = false;
        this.updatedTime = new Date();
        this.recordId = 0;
        this.dpConfig = new ngx_bootstrap__WEBPACK_IMPORTED_MODULE_1__["BsDatepickerConfig"]();
    }
    AgencyAdminTeacherHoursComponent.prototype.ngOnInit = function () {
        this.dpConfig = Object.assign({}, { containerClass: 'theme-dark-blue' }, { showWeekNumbers: false });
        this.getTeacherAttendanceHoursReport();
    };
    AgencyAdminTeacherHoursComponent.prototype.getTeacherAttendanceHoursReport = function () {
        var _this = this;
        this.loader = true;
        this.reportList = [];
        this.spinner.show();
        var data = {
            'agencyID': this.commonService.getAgencyId(),
            'teacherName': this.searchByTeacherName,
            'page': this.pageNo,
            'limit': this.limit,
            'fromDate': this.fromDate ? this.fromDate : this.blankDate,
            'toDate': this.toDate ? this.toDate : this.blankDate
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_7__["AgencyAPIURLs"].GetTeacherSpentHoursReport, data, null).subscribe(function (res) {
            if (res.body.totalHours !== '00:00:00') {
                _this.totalHrs = res.body.totalHours;
            }
            _this.totalRecord = res.body.totalRows;
            if (res.body.statusCode === 200) {
                _this.spinner.hide();
                _this.totalHrs = res.body.totalHours;
                _this.reportList = res.body.data;
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
            _this.loader = false;
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminTeacherHoursComponent.prototype.paginate = function (event) {
        this.pageNo = event.page;
        this.getTeacherAttendanceHoursReport();
    };
    // Delete pdf after use from server
    AgencyAdminTeacherHoursComponent.prototype.deletePdFFromServer = function (filename) {
        var req = {
            'fileName': filename,
            'agencyID': this.commonService.getAgencyId()
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_7__["AgencyAPIURLs"].DeleteExistingFile, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
            }
            else {
            }
        }, function (err) {
            console.log(err);
        });
    };
    AgencyAdminTeacherHoursComponent.prototype.search = function () {
        this.pageNo = 0;
        this.showClearBtn = true;
        this.getTeacherAttendanceHoursReport();
    };
    AgencyAdminTeacherHoursComponent.prototype.clearSearch = function () {
        this.searchByTeacherName = '';
        this.fromDate = null;
        this.toDate = null;
        this.showClearBtn = false;
        this.getTeacherAttendanceHoursReport();
    };
    AgencyAdminTeacherHoursComponent.prototype.pdfReportForAttendedHours = function () {
        var _this = this;
        this.loader = true;
        this.spinner.show();
        var req = {
            'agencyID': this.commonService.getAgencyId(),
            'fromDate': this.fromDate ? this.fromDate : this.blankDate,
            'toDate': this.toDate ? this.toDate : this.blankDate,
            'teacherName': this.searchByTeacherName,
            'page': this.pageNo,
            'limit': this.limit,
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_7__["AgencyAPIURLs"].GetPDFTeacherSpenHoursReport, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                var filename = src_environments_environment__WEBPACK_IMPORTED_MODULE_8__["environment"].baseUrl + res.body.fileName;
                var name_1 = res.body.fileName;
                window.open(filename);
                setTimeout(function () {
                    _this.deletePdFFromServer(name_1);
                }, 10000);
            }
            else {
                _this.error.unknownError();
            }
            _this.loader = false;
            _this.spinner.hide();
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminTeacherHoursComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-agency-admin-teacher-hours',
            template: __webpack_require__(/*! ./agency-admin-teacher-hours.component.html */ "./src/app/layout/agency-admin/components/agency-admin-teacher-hours/agency-admin-teacher-hours.component.html"),
            styles: [__webpack_require__(/*! ./agency-admin-teacher-hours.component.css */ "./src/app/layout/agency-admin/components/agency-admin-teacher-hours/agency-admin-teacher-hours.component.css")]
        }),
        __metadata("design:paramtypes", [_shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_2__["AgencyApiService"], src_app_shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_3__["ErrorHandlerService"],
            ngx_spinner__WEBPACK_IMPORTED_MODULE_4__["NgxSpinnerService"], src_app_shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_5__["NotificationService"],
            src_app_shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_6__["CommonService"]])
    ], AgencyAdminTeacherHoursComponent);
    return AgencyAdminTeacherHoursComponent;
}());



/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-teacherstaff/agency-admin-teacherstaff.component.css":
/*!******************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-teacherstaff/agency-admin-teacherstaff.component.css ***!
  \******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".closepos{  position: absolute;  right: 170px;}\r\n\r\n.btn-send {\r\n    background: #58A7FE;\r\n    padding: 5px 20px;\r\n    color: #fff;\r\n    font-size: 15px !important;\r\n    border-radius: 30px;\r\n    \r\n}\r\n\r\n@media (max-width:767px){\r\n    .closepos {\r\n        position: absolute;\r\n        right: 40px;\r\n    }\r\n}\r\n\r\n.info-icon{\r\n    margin-left: 250px;\r\n    font-size: 20px; \r\n    color: #383333;\r\n}\r\n\r\n\r\n\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L2FnZW5jeS1hZG1pbi9jb21wb25lbnRzL2FnZW5jeS1hZG1pbi10ZWFjaGVyc3RhZmYvYWdlbmN5LWFkbWluLXRlYWNoZXJzdGFmZi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFlBQVksa0JBQWtCLEdBQUcsWUFBWSxDQUFDOztBQUU5QztJQUNJLG1CQUFtQjtJQUNuQixpQkFBaUI7SUFDakIsV0FBVztJQUNYLDBCQUEwQjtJQUMxQixtQkFBbUI7O0FBRXZCOztBQUVBO0lBQ0k7UUFDSSxrQkFBa0I7UUFDbEIsV0FBVztJQUNmO0FBQ0o7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsZUFBZTtJQUNmLGNBQWM7QUFDbEIiLCJmaWxlIjoic3JjL2FwcC9sYXlvdXQvYWdlbmN5LWFkbWluL2NvbXBvbmVudHMvYWdlbmN5LWFkbWluLXRlYWNoZXJzdGFmZi9hZ2VuY3ktYWRtaW4tdGVhY2hlcnN0YWZmLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2xvc2Vwb3N7ICBwb3NpdGlvbjogYWJzb2x1dGU7ICByaWdodDogMTcwcHg7fVxyXG5cclxuLmJ0bi1zZW5kIHtcclxuICAgIGJhY2tncm91bmQ6ICM1OEE3RkU7XHJcbiAgICBwYWRkaW5nOiA1cHggMjBweDtcclxuICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgZm9udC1zaXplOiAxNXB4ICFpbXBvcnRhbnQ7XHJcbiAgICBib3JkZXItcmFkaXVzOiAzMHB4O1xyXG4gICAgXHJcbn1cclxuXHJcbkBtZWRpYSAobWF4LXdpZHRoOjc2N3B4KXtcclxuICAgIC5jbG9zZXBvcyB7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIHJpZ2h0OiA0MHB4O1xyXG4gICAgfVxyXG59XHJcblxyXG4uaW5mby1pY29ue1xyXG4gICAgbWFyZ2luLWxlZnQ6IDI1MHB4O1xyXG4gICAgZm9udC1zaXplOiAyMHB4OyBcclxuICAgIGNvbG9yOiAjMzgzMzMzO1xyXG59XHJcblxyXG5cclxuIl19 */"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-teacherstaff/agency-admin-teacherstaff.component.html":
/*!*******************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-teacherstaff/agency-admin-teacherstaff.component.html ***!
  \*******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"wrapper\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"pagetitle\">\r\n      <div>\r\n        <h2>TeacherList\r\n        </h2>\r\n      </div>\r\n      <div *ngIf=\"isSubscriptionActive\" class=\"closepos\">\r\n        <button type=\"submit\" class=\"btn btn-red\" data-toggle=\"modal\" data-target=\".addstaff\"\r\n          (click)=\"cleareTeacherForm()\">Add Teacher</button>\r\n      </div>\r\n      <div *ngIf=\"isSubscriptionActive\" class=\"upload-btn-wrapper\">\r\n        <button class=\"btn btn-send\">Upload CSV</button>\r\n        <input type=\"file\" #input (change)=\"processCSVFile($event)\">\r\n      </div>\r\n    </div>\r\n    <div class=\"subhead d-flex justify-content-between mt-20\">\r\n      <div>\r\n        <h3>Teacher List</h3>\r\n      </div>\r\n      <div class=\"info-icon\">\r\n        <i class=\"fa fa-info-circle\" (click)=\"OpenInfoVideo()\" data-toggle=\"modal\"\r\n           aria-hidden=\"true\" title=\"Information Video\"></i>\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n    <div class=\"card cardfilter\">\r\n      <div class=\"row algcenter\">\r\n\r\n        <div class=\"leftfilter\">\r\n          <div class=\"search-date\">\r\n            <div class=\"pr15 label-text\">Search Name : </div>\r\n            <input type=\"text\" placeholder=\"Search teacher name\" (keydown)=\"keyDownFunction($event)\"\r\n              [(ngModel)]=\"nameSearch\" class=\"form-control mr15\" id=\"\">\r\n          </div>\r\n          <div class=\"search-date\">\r\n            <div class=\"label-text\">Search By Activation</div>\r\n            <div class=\"pr15\">\r\n              <div class=\"form-group\">\r\n                <select name=\"\" id=\"\" [(ngModel)]=\"activationType\">\r\n                  <option value=\"\">All</option>\r\n                  <option value=\"Activated\">Active</option>\r\n                  <option value=\"Deactivated\">Deactive</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"filter-buttons\">\r\n            <button type=\"submit\" class=\"btn btn-send\" (click)=\"getAllTeachers()\">Search</button>\r\n          </div>\r\n\r\n        </div>\r\n\r\n       \r\n\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"innertable\">\r\n      <div class=\"table-responsive\">\r\n        <table class=\"table\">\r\n          <thead class=\"thead-light\">\r\n            <tr>\r\n              <th scope=\"col\">Photo</th>\r\n              <th scope=\"col\">Teacher Name</th>\r\n              <th scope=\"col\">Email</th>\r\n              <th scope=\"col\" class=\"text-center\">Actions</th>\r\n              <th scope=\"col\" class=\"text-center\">Activation</th>\r\n              <th scope=\"col\" class=\"text-center\">Active ClockIn</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr *ngFor=\"let teacher of teacherList\">\r\n              <td>\r\n                <img src=\"{{teacher.imagePath}}\" alt=\"\" onError=\"this.src='assets/img/user.png'\"\r\n                  class=\"img-circle childimg\">\r\n              </td>\r\n              <td>{{teacher.teacherName}}</td>\r\n              <td>{{teacher.email}}</td>\r\n              <td class=\"text-center\">\r\n                <a title=\"view/edit details\">\r\n                  <i class=\"fa fa-eye\" data-target=\".addstaff\" *ngIf=\"!teacher.isDeleted\" data-toggle=\"modal\"\r\n                    (click)=\"getTeacherDetails(teacher)\" aria-hidden=\"true\"></i>\r\n                  <i class=\"fa fa-eye\" *ngIf=\"teacher.isDeleted\" aria-hidden=\"true\" style=\"cursor:not-allowed\"></i>\r\n                  <i class=\"fa fa-envelope\" style=\"cursor: pointer; color: #FF6C6C;\" title=\"update email\"\r\n                    aria-hidden=\"true\" data-target=\".mailupdate\"\r\n                    (click)=\"getteacherIdForEmailUpdate(teacher);clearEmailForm();\" data-toggle=\"modal\"></i>\r\n                </a>\r\n              </td>\r\n              <td class=\"text-center\">\r\n                <button class=\"form-control\" *ngIf=\"!teacher.isDeleted && isSubscriptionActive\" class=\"btn btn-warning\"\r\n                  (click)=\"deleteTeacher(teacher)\">Deactivate</button>\r\n                <button class=\"form-control\" *ngIf=\"teacher.isDeleted\" class=\"btn btn-success\"\r\n                  (click)=\"activateTeacher(teacher)\">Activate</button>\r\n              </td>\r\n\r\n              <td class=\"text-center\">\r\n                <button class=\"form-control\" *ngIf=\"teacher.clockOut && isSubscriptionActive\" class=\"btn btn-success\"\r\n                  title=\"This teacher is clocked out for today\" (click)=\"activateClockInTeacher(teacher)\">Enable\r\n                  Login</button>\r\n                <p *ngIf=\"!teacher.clockOut || !isSubscriptionActive\"> ---</p>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div class=\"text-center\">\r\n        <span *ngIf=\"teacherList.length == 0 && !loader\" class=\"text-center\">No result found</span>\r\n      </div>\r\n      <p-paginator [alwaysShow]=\"false\" [rows]=\"limit\" [totalRecords]=\"totalRecord\" (onPageChange)=\"paginate($event)\">\r\n      </p-paginator>\r\n    </div>\r\n\r\n\r\n\r\n    <div class=\"modal fade addstaff\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myLargeModalLabel\" aria-hidden=\"true\">\r\n      <div class=\"modal-dialog modal-lg\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">{{addMode == true ? 'Add Teacher' : 'Teacher Details'}}\r\n            </h5>\r\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <form [formGroup]=\"profileForm\">\r\n              <div class=\"upload-profile\">\r\n                <div *ngIf=\"image == ''\"> <img src=\"assets/img/user.png\" alt=\"\" class=\"img-fluid img-circle\"> </div>\r\n                <div *ngIf=\"image !=''\"> <img src=\"{{image}}\" alt=\"image\" class=\"img-fluid img-circle\"\r\n                    onError=\"this.src='assets/img/user.png'\"> </div>\r\n\r\n                <div class=\"upload-btn-wrapper\">\r\n                  <button class=\"btn btn-send\">Upload a photo</button>\r\n                  <input type=\"file\" #input (change)=\"processFile($event)\">\r\n                </div>\r\n              </div>\r\n              <div class=\"form-fields\">\r\n                <div class=\"row mb-10 \">\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">First name*</label>\r\n                      <input type=\"text \" (keypress)=\"commonService.allowAlphabetOnly($event)\" maxlength=\"35\"\r\n                        class=\"form-control\" formControlName=\"firstname\" id=\"\" aria-describedby=\"\"\r\n                        placeholder=\"Enter First Name\">\r\n                      <div *ngIf=\"f.firstname.invalid && (f.firstname.dirty || f.firstname.touched)\"\r\n                        class=\"text-left errormsg\">\r\n                        <span *ngIf=\"f.firstname.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please enter first name</span>\r\n                        </span>\r\n                        <span *ngIf=\"f.firstname.errors.minlength\">\r\n                          <i class=\"fa fa-exclamation-circle errtext\"></i> <span class=\"errtext\"> Minimum 3 characters\r\n                            required</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Last name*</label>\r\n                      <input type=\"text \" (keypress)=\"commonService.allowAlphabetOnly($event)\" maxlength=\"35\"\r\n                        class=\"form-control\" id=\"\" formControlName=\"lastname\" aria-describedby=\"\"\r\n                        placeholder=\"Enter Last Name\">\r\n                      <div *ngIf=\"f.lastname.invalid && (f.lastname.dirty || f.lastname.touched)\"\r\n                        class=\"text-left errormsg\">\r\n                        <span *ngIf=\"f.lastname.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please enter last name</span>\r\n                        </span>\r\n                        <span *ngIf=\"f.lastname.errors.minlength\">\r\n                          <i class=\"fa fa-exclamation-circle errtext\"></i> <span class=\"errtext\"> Minimum 3 characters\r\n                            required</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n\r\n\r\n                <div class=\"row mb-10\">\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Email Address*</label>\r\n                      <input type=\"email \" [readOnly]=\"disableEmail\" class=\"form-control\" formControlName=\"email\" id=\"\"\r\n                        aria-describedby=\"\" placeholder=\"Email address\">\r\n                      <div *ngIf=\"f.email.invalid && (f.email.dirty || f.email.touched)\" class=\"text-left errormsg\">\r\n                        <span *ngIf=\"f.email.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please enter email</span>\r\n                        </span>\r\n                        <span *ngIf=\"f.email.errors.pattern\">\r\n                          <i class=\"fa fa-exclamation-circle errtext\"></i> <span class=\"errtext\"> Please enter valid\r\n                            email address</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Mobile*</label>\r\n                      <input type=\"text \" maxlength=\"10\" class=\"form-control\" formControlName=\"mobile\" id=\"\"\r\n                        aria-describedby=\"\" (keypress)=\"allowOnlyNumber($event)\" placeholder=\"Mobile\">\r\n                      <div *ngIf=\"f.mobile.invalid && (f.mobile.dirty || f.mobile.touched)\" class=\"text-left errormsg\">\r\n                        <span *ngIf=\"f.mobile.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please enter phone number</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"row mb-10\">\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Address*</label>\r\n                      <input type=\"text \" maxlength=\"255\" class=\"form-control\" formControlName=\"address\" id=\"\"\r\n                        aria-describedby=\"\" placeholder=\"Address\">\r\n                      <div *ngIf=\"f.address.invalid && (f.address.dirty || f.address.touched)\"\r\n                        class=\"text-left errormsg\">\r\n                        <span *ngIf=\"f.address.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please enter address</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"exampleInputEmail1\">Country*</label>\r\n                      <select class=\"form-control\" placeholder=\"Country\" formControlName=\"country\"\r\n                        id=\"exampleFormControlSelect1\" (change)=\"getStatesList();clearStateCity()\">\r\n                        <option value=\"\">Select Country</option>\r\n                        <option *ngFor=\"let countries of countryList\" [value]=\"countries.id\">{{countries.countryName}}\r\n                        </option>\r\n                      </select>\r\n                      <div *ngIf=\"f.country.invalid && (f.country.dirty || f.country.touched)\"\r\n                        class=\"text-left errormsg\">\r\n                        <span *ngIf=\"f.country.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select country</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n\r\n                <div class=\"row mb-10\">\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"exampleFormControlSelect1\">State*</label>\r\n                      <select class=\"form-control\" placeholder=\"State\" formControlName=\"state\"\r\n                        id=\"exampleFormControlSelect1\" (change)=\"getCitiesList();clearCity()\">\r\n                        <option value=\"\">Select State</option>\r\n                        <option *ngFor=\"let states of stateList\" [value]=\"states.id\">{{states.stateName}}</option>\r\n                      </select>\r\n                      <div *ngIf=\"f.state.invalid && (f.state.dirty || f.state.touched)\" class=\"text-left errormsg\">\r\n                        <span *ngIf=\"f.state.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select state</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">City*</label>\r\n                      <select class=\"form-control\" placeholder=\"City\" formControlName=\"city\"\r\n                        id=\"exampleFormControlSelect1\">\r\n                        <option value=\"\">Select City</option>\r\n                        <option *ngFor=\"let cities of cityList\" [value]=\"cities.id\">{{cities.cityName}}</option>\r\n                      </select>\r\n                      <div *ngIf=\"f.city.invalid && (f.city.dirty || f.city.touched)\" class=\"text-left errormsg\">\r\n                        <span *ngIf=\"f.city.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select city</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"row mb-10\">\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Zip Code*</label>\r\n                      <input type=\"number \" maxlength=\"6\" (keypress)=\"commonService.allowOnlyNumber($event)\"\r\n                        class=\"form-control\" formControlName=\"zipcode\" id=\"\" aria-describedby=\"\" placeholder=\"Zip code\">\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Date of Birth*</label>\r\n                      <input type=\"text\" placeholder=\"Select date\" formControlName=\"birthdate\" showWeekNumbers=\"false\"\r\n                        [maxDate]=\"today\" class=\"form-control\" [bsConfig]=\"dpConfig\" bsDatepicker>\r\n                      <div *ngIf=\"f.birthdate.invalid && (f.birthdate.dirty || f.birthdate.touched)\"\r\n                        class=\"text-left errormsg\">\r\n                        <span *ngIf=\"f.birthdate.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select birth date</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n\r\n                <div class=\"row mb-10\">\r\n\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"exampleInputEmail1\">Date of Hiring*</label>\r\n                      <input type=\"text\" placeholder=\"Select date\" container=\"\" formControlName=\"hiringdate\"\r\n                        showWeekNumbers=\"false\" [maxDate]=\"today\" class=\"form-control\" [bsConfig]=\"dpConfig\"\r\n                        bsDatepicker>\r\n                      <div *ngIf=\"f.hiringdate.invalid && (f.hiringdate.dirty || f.hiringdate.touched)\"\r\n                        class=\"text-left errormsg\">\r\n                        <span *ngIf=\"f.hiringdate.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select hiring date</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Gross Pay($)</label>\r\n                      <input type=\"text\" class=\"form-control\" maxlength=\"5\"\r\n                        (keypress)=\"commonService.allowOnlyNumber($event)\" formControlName=\"grospay\" id=\"\"\r\n                        aria-describedby=\"\" placeholder=\"Gross pay($)\">\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"row mb-10\">\r\n\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Certification*</label>\r\n                      <input type=\"text\" class=\"form-control\" maxlength=\"200\" formControlName=\"certification\" id=\"\"\r\n                        aria-describedby=\"\" placeholder=\"Certification\">\r\n                      <div *ngIf=\"f.certification.invalid && (f.certification.dirty || f.certification.touched)\"\r\n                        class=\"text-left errormsg\">\r\n                        <span *ngIf=\"f.certification.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please enter certification</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Home phone</label>\r\n                      <input type=\"text\" maxlength=\"10\" class=\"form-control\" formControlName=\"homephone\" id=\"\"\r\n                        (keypress)=\"allowOnlyNumber($event)\" aria-describedby=\"\" placeholder=\"home phone\">\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n            <button type=\"button\" class=\"btn btn-primary\" *ngIf=\"isSubscriptionActive\"\r\n              (click)=\"SaveTeacherDetails()\">{{addMode == true ? 'Add Teacher' : 'Save Changes'}}</button>\r\n          </div>\r\n        </div>\r\n\r\n\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Rejected User List -->\r\n    <div class=\"modal fade rejectedUsr\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myLargeModalLabel\"\r\n      aria-hidden=\"true\">\r\n      <div class=\"modal-dialog modal-lg\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Rejected Teacher List</h5>\r\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <div class=\"innertable\">\r\n              <div class=\"table-responsive\">\r\n\r\n                <table class=\"table\">\r\n                  <thead class=\"thead-light\">\r\n                    <tr>\r\n                      <th scope=\"col\">Teacher First Name</th>\r\n                      <th scope=\"col\">Teacher Last Name</th>\r\n                      <th scope=\"col\">Teacher Email Address</th>\r\n                      <th scope=\"col\">Reason</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n\r\n                    <tr *ngFor=\"let teacher of rejectedUserList\">\r\n                      <td>{{teacher.firstName}}</td>\r\n                      <td>{{teacher.lastName}}</td>\r\n                      <td>{{teacher.email}}</td>\r\n                      <td>{{teacher.msg}}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n   <!-- For Information Video -->\r\n   <div class=\"modal fade\" id=\"infovideo\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"checkoutLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <h5 class=\"modal-title\" id=\"checkoutLabel\">Information Video</h5>\r\n          <button type=\"button\" *ngIf=\"videoPath\" class=\"close\" (click)= \"PauseInfoVideo()\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n          <button type=\"button\" *ngIf=\"!videoPath\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <div class=\"cont video_section_pop\" *ngIf=\"videoPath\">\r\n            <video controls id=\"pausevideo\">\r\n              <source *ngIf=\"videoPath\" [src] = \"videoPath\" type=\"video/mp4\" />\r\n              <source *ngIf=\"videoPath\" [src] = \"videoPath\" type=\"video/ogg\" />\r\n              <source *ngIf=\"videoPath\" [src] = \"videoPath\" type=\"video/webm\" />\r\n              Browser not supported\r\n            </video>\r\n          </div>\r\n\r\n          <div class=\"cont video_section_pop\" *ngIf=\"!videoPath\">\r\n              Video Not Found\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n    <!-- Form For Update Teacher Email-->\r\n\r\n    <div class=\"modal fade mailupdate\" data-backdrop=\"static\" style=\"z-index: 1100;\" id=\"breakout\" tabindex=\"-1\"\r\n      role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n      <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"exampleModalLabel\">Update Email</h5>\r\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <form [formGroup]=\"newEmailForm\">\r\n              <div class=\"form-group\">\r\n                <label>New Email</label>\r\n                <input type=\"text\" class=\"form-control\" placeholder=\"New Email\" formControlName=\"newemail\">\r\n                <div\r\n                  *ngIf=\"newEmailForm.controls.newemail.invalid && (newEmailForm.controls.newemail.dirty || newEmailForm.controls.newemail.touched)\"\r\n                  class=\"text-left errormsg\">\r\n                  <span *ngIf=\"newEmailForm.controls.newemail.errors.required\">\r\n                    <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please enter email</span>\r\n                  </span>\r\n                  <span *ngIf=\"newEmailForm.controls.newemail.errors.pattern\">\r\n                    <i class=\"fa fa-exclamation-circle errtext\"></i> <span class=\"errtext\"> Please enter valid\r\n                      email address</span>\r\n                  </span>\r\n                </div>\r\n\r\n              </div>\r\n            </form>\r\n\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <!-- data-dismiss=\"modal\" -->\r\n            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n            <button type=\"button\" class=\"btn btn-primary\" (click)=\"upateEmail()\">Update Email</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n\r\n\r\n    <!-- last  -->\r\n  </div>\r\n</div>\r\n\r\n\r\n<ngx-spinner type=\"ball-atom\" size=\"medium\" color=\"#58A7FE\"></ngx-spinner>\r\n<app-confirm-box></app-confirm-box>"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-teacherstaff/agency-admin-teacherstaff.component.ts":
/*!*****************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-teacherstaff/agency-admin-teacherstaff.component.ts ***!
  \*****************************************************************************************************************/
/*! exports provided: AgencyAdminTeacherstaffComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AgencyAdminTeacherstaffComponent", function() { return AgencyAdminTeacherstaffComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var ngx_bootstrap__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ngx-bootstrap */ "./node_modules/ngx-bootstrap/esm5/ngx-bootstrap.js");
/* harmony import */ var _teacher_shared_services_teacher_api_service_teacher_api_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../teacher/shared/services/teacher-api-service/teacher-api.service */ "./src/app/layout/teacher/shared/services/teacher-api-service/teacher-api.service.ts");
/* harmony import */ var _shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../shared/services/error-handler/error-handler.service */ "./src/app/shared/services/error-handler/error-handler.service.ts");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ngx-spinner */ "./node_modules/ngx-spinner/fesm5/ngx-spinner.js");
/* harmony import */ var _shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../shared/services/notification-service/notification.service */ "./src/app/shared/services/notification-service/notification.service.ts");
/* harmony import */ var _shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../shared/services/common/common.service */ "./src/app/shared/services/common/common.service.ts");
/* harmony import */ var _teacher_shared_constant__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../teacher/shared/constant */ "./src/app/layout/teacher/shared/constant.ts");
/* harmony import */ var primeng_api__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! primeng/api */ "./node_modules/primeng/api.js");
/* harmony import */ var primeng_api__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(primeng_api__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var _shared_constatant__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../shared/constatant */ "./src/app/layout/agency-admin/components/shared/constatant.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};











var AgencyAdminTeacherstaffComponent = /** @class */ (function () {
    function AgencyAdminTeacherstaffComponent(apiService, error, spinner, notification, commonService, fb, confirmationService) {
        this.apiService = apiService;
        this.error = error;
        this.spinner = spinner;
        this.notification = notification;
        this.commonService = commonService;
        this.fb = fb;
        this.confirmationService = confirmationService;
        this.today = new Date();
        this.flag = false;
        this.formData = new FormData();
        this.teacherList = [];
        this.disableEmail = false;
        this.activationType = 'Activated';
        this.pageNo = 0;
        this.limit = 10;
        this.totalRecord = 0;
        this.loader = true;
        this.nameSearch = '';
        this.emailPattern = /^([\w-\.]+\u0040([\w-]+\.)+[\w-]{2,4})?$/;
        this.rejectedUserList = [];
        this.videoPath = '';
        this.dpConfig = new ngx_bootstrap__WEBPACK_IMPORTED_MODULE_2__["BsDatepickerConfig"]();
        this.isSubscriptionActive = this.commonService.getSubscriptionStatus();
    }
    AgencyAdminTeacherstaffComponent.prototype.ngOnInit = function () {
        this.spinner.show();
        this.getAllTeachers();
        this.dpConfig = Object.assign({}, { containerClass: 'theme-dark-blue' }, { showWeekNumbers: false });
        this.image = '';
        this.countryList = [];
        this.cityList = [];
        this.stateList = [];
        this.teacherDetailsVM = {};
        this.createTeacherForm();
        this.getAllCountries();
        this.newEmailCrateForm();
        this.getSectionVideo();
    };
    AgencyAdminTeacherstaffComponent.prototype.OpenInfoVideo = function (data) {
        $('#infovideo').modal('show');
    };
    AgencyAdminTeacherstaffComponent.prototype.getSectionVideo = function () {
        var _this = this;
        var req = {
            'SectionID': 3
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_8__["TeacherAPIURLs"].GetVideoForSection, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.videoPath = res.body.filePath;
                console.log(_this.videoPath, 'bbbbbbbbbbbbbbb');
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminTeacherstaffComponent.prototype.PauseInfoVideo = function () {
        var myVideo = document.getElementById('pausevideo');
        myVideo.pause();
        myVideo.currentTime = 0;
    };
    AgencyAdminTeacherstaffComponent.prototype.detaildTeacherForm = function () {
        this.disableEmail = true;
        this.profileForm = this.fb.group({
            firstname: [this.teacherDetailsVM.FirstName, [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].minLength(3)]],
            lastname: [this.teacherDetailsVM.LastName, [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].minLength(3)]],
            email: [this.teacherDetailsVM.Email],
            mobile: [this.teacherDetailsVM.mPhoneNumber, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            address: [this.teacherDetailsVM.Address, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            country: [this.teacherDetailsVM.CountryId, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            city: [this.teacherDetailsVM.CityId, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            state: [this.teacherDetailsVM.StateId, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            zipcode: [this.teacherDetailsVM.PostalCode],
            birthdate: [this.teacherDetailsVM.DateOfBirth, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            hiringdate: [this.teacherDetailsVM.DateHired, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            grospay: [this.teacherDetailsVM.GrossPayPerHour],
            certification: [this.teacherDetailsVM.Certification, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            photo: [''],
            homephone: [this.teacherDetailsVM.mHomePhone]
        });
    };
    AgencyAdminTeacherstaffComponent.prototype.createTeacherForm = function () {
        this.profileForm = this.fb.group({
            firstname: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].minLength(3)]],
            lastname: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].minLength(3)]],
            email: ['',
                [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].pattern(this.emailPattern)]],
            mobile: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            address: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            country: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            city: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            state: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            zipcode: [''],
            birthdate: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            hiringdate: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            grospay: [''],
            certification: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            photo: [''],
            homephone: ['']
        });
    };
    Object.defineProperty(AgencyAdminTeacherstaffComponent.prototype, "f", {
        // convenience getter for easy access to form fields
        get: function () { return this.profileForm.controls; },
        enumerable: true,
        configurable: true
    });
    AgencyAdminTeacherstaffComponent.prototype.getTeacherDetails = function (value) {
        var _this = this;
        this.addMode = false;
        this.spinner.show();
        var req = {
            'AgencyID': this.commonService.getAgencyId(),
            'TeacherID': value.id,
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_8__["TeacherAPIURLs"].GetTeacherInformation, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.teacherDetailsVM.FirstName = res.body.data.firstName;
                _this.teacherDetailsVM.LastName = res.body.data.lastName;
                _this.teacherDetailsVM.Email = res.body.data.email;
                _this.teacherDetailsVM.PhoneNumber = res.body.data.phoneNumber;
                _this.teacherDetailsVM.mPhoneNumber = res.body.data.mPhoneNumber;
                _this.teacherDetailsVM.Address = res.body.data.address;
                _this.teacherDetailsVM.CityId = res.body.data.cityId;
                _this.teacherDetailsVM.StateId = res.body.data.stateId;
                _this.teacherDetailsVM.CountryId = res.body.data.countryId;
                _this.teacherDetailsVM.PostalCode = res.body.data.postalCode;
                _this.teacherDetailsVM.DateOfBirth = new Date(res.body.data.dateOfBirth);
                _this.teacherDetailsVM.DateHired = new Date(res.body.data.dateHired);
                _this.teacherDetailsVM.GrossPayPerHour = res.body.data.grossPayPerHour;
                _this.teacherDetailsVM.Certification = res.body.data.certification;
                _this.teacherDetailsVM.HomePhone = res.body.data.homePhone;
                _this.teacherDetailsVM.mHomePhone = res.body.data.mHomePhone;
                _this.id = res.body.data.id;
                _this.image = res.body.data.imagePath;
                if (_this.id === 0) {
                    _this.teacherDetailsVM.createdBy = _this.commonService.getReleventUserId('userdetails');
                }
                else {
                    _this.teacherDetailsVM.updatedBy = _this.commonService.getReleventUserId('userdetails');
                }
                _this.detaildTeacherForm();
                _this.getAllCountries();
                _this.getStatesList();
                _this.getCitiesList();
                _this.spinner.hide();
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminTeacherstaffComponent.prototype.getAllCountries = function () {
        var _this = this;
        this.countryList = [];
        var req = {
            'AgencyID': this.commonService.getAgencyId(),
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_8__["TeacherAPIURLs"].GetAllCountry, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.countryList = res.body.data;
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminTeacherstaffComponent.prototype.getStatesList = function () {
        var _this = this;
        this.spinner.show();
        this.stateList = [];
        this.cityList = [];
        var req = {
            'AgencyID': this.commonService.getAgencyId(),
            'CountryId': this.profileForm.value.country
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_8__["TeacherAPIURLs"].GetAllStates, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.stateList = res.body.data;
                _this.spinner.hide();
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminTeacherstaffComponent.prototype.getCitiesList = function () {
        var _this = this;
        this.spinner.show();
        this.cityList = [];
        var req = {
            'AgencyID': this.commonService.getAgencyId(),
            'StateId': this.profileForm.value.state
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_8__["TeacherAPIURLs"].GetAllCities, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.cityList = res.body.data;
                _this.spinner.hide();
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminTeacherstaffComponent.prototype.SaveTeacherDetails = function () {
        this.spinner.show();
        if (this.flag === true) {
            this.UploadImage();
            this.flag = false;
        }
        else {
            this.updateProfile();
        }
    };
    AgencyAdminTeacherstaffComponent.prototype.updateProfile = function () {
        var _this = this;
        if (this.profileForm.valid) {
            this.spinner.show();
            this.teacherDetailsVM.FirstName = this.profileForm.value.firstname;
            this.teacherDetailsVM.LastName = this.profileForm.value.lastname;
            this.teacherDetailsVM.Email = this.profileForm.value.email;
            this.teacherDetailsVM.PhoneNumber = 0;
            this.teacherDetailsVM.mPhoneNumber = this.profileForm.value.mobile;
            this.teacherDetailsVM.Address = this.profileForm.value.address;
            this.teacherDetailsVM.CityId = this.profileForm.value.city;
            this.teacherDetailsVM.StateId = this.profileForm.value.state;
            this.teacherDetailsVM.CountryId = this.profileForm.value.country;
            this.teacherDetailsVM.PostalCode = this.profileForm.value.zipcode;
            this.teacherDetailsVM.DateOfBirth = this.profileForm.value.birthdate;
            this.teacherDetailsVM.DateHired = this.profileForm.value.hiringdate;
            this.teacherDetailsVM.GrossPayPerHour = this.profileForm.value.grospay === '' ? 0 : this.profileForm.value.grospay;
            this.teacherDetailsVM.Certification = this.profileForm.value.certification;
            if (this.id === 0) {
                this.teacherDetailsVM.createdBy = this.commonService.getReleventUserId('userdetails');
            }
            else {
                this.teacherDetailsVM.updatedBy = this.commonService.getReleventUserId('userdetails');
            }
            this.teacherDetailsVM.mHomePhone = this.profileForm.value.homephone;
            this.teacherDetailsVM.Id = this.id;
            this.teacherDetailsVM.ImagePath = this.image;
            this.teacherDetailsVM.AgencyID = this.commonService.getAgencyId();
            this.teacherDetailsVM.Id = this.id;
            this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_8__["TeacherAPIURLs"].SaveTeacherDetails, this.teacherDetailsVM, null).subscribe(function (res) {
                if (res.body.statusCode === 200) {
                    _this.getAllTeachers();
                    _this.notification.success({
                        message: _this.id === 0 ?
                            'New user created successfully!' : 'User information updated successfully!',
                        title: ''
                    });
                    $('.addstaff').modal('hide');
                }
                else if (res.body.statusCode === 986) {
                    _this.spinner.hide();
                    _this.notification.warning({ message: ' User already exist !', title: '' });
                }
                else if (res.body.statusCode === 205) {
                    _this.spinner.hide();
                    _this.notification.warning({ message: 'Please enter valid name', title: '' });
                }
                else {
                    _this.spinner.hide();
                    _this.error.unknownError();
                }
            }, function (err) {
                _this.spinner.hide();
                _this.error.commonError(err);
            });
        }
        else {
            this.spinner.hide();
            this.commonService.validateAllFields(this.profileForm);
        }
    };
    AgencyAdminTeacherstaffComponent.prototype.allowOnlyNumber = function (event) {
        this.commonService.allowOnlyNumber(event);
    };
    AgencyAdminTeacherstaffComponent.prototype.clearStateCity = function () {
        this.profileForm.controls['state'].setValue('');
        this.profileForm.controls['city'].setValue('');
    };
    AgencyAdminTeacherstaffComponent.prototype.clearCity = function () {
        this.profileForm.controls['city'].setValue('');
    };
    AgencyAdminTeacherstaffComponent.prototype.processFile = function (event) {
        var self = this;
        if (event.target.files && event.target.files[0]) {
            if (event.target.files[0].type !== 'image/png' && event.target.files[0].type !== 'image/jpeg' &&
                event.target.files[0].type !== 'image/jpg') {
                self.fileData = null;
                self.profileimage = '';
                return false;
            }
            var reader_1 = new FileReader();
            this.formData.append('fileData', event.target.files[0], event.target.files[0].name);
            self.fileData = this.formData;
            reader_1.readAsDataURL(event.target.files[0]); // read file as data url
            setTimeout(function () {
                self.image = reader_1.result;
            }, 100);
            this.flag = true;
        }
    };
    AgencyAdminTeacherstaffComponent.prototype.UploadImage = function () {
        var _this = this;
        this.apiService.uploadImage(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_8__["TeacherAPIURLs"].UploadImage, this.fileData, null).subscribe(function (res) {
            if (res.status === 200) {
                _this.image = res.body.data;
                _this.updateProfile();
            }
        }, function (err) {
            console.log(err);
        });
    };
    // Get All teacher List
    AgencyAdminTeacherstaffComponent.prototype.getAllTeachers = function () {
        var _this = this;
        this.loader = true;
        this.teacherList = [];
        var req = {
            'agencyID': this.commonService.getAgencyId(),
            'ActivationType': this.activationType,
            'limit': this.limit,
            'page': this.pageNo,
            'TeacherName': this.nameSearch
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_10__["AgencyAPIURLs"].GetAllTeacherForAgency, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.totalRecord = res.body.totalRows;
                _this.teacherList = res.body.data;
                _this.loader = false;
                _this.spinner.hide();
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyAdminTeacherstaffComponent.prototype.cleareTeacherForm = function () {
        this.addMode = true;
        this.teacherDetailsVM = {};
        this.disableEmail = false;
        this.id = 0;
        this.image = '';
        this.createTeacherForm();
    };
    // Update Email
    AgencyAdminTeacherstaffComponent.prototype.newEmailCrateForm = function () {
        this.newEmailForm = this.fb.group({
            newemail: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].pattern(this.emailPattern)]]
        });
    };
    AgencyAdminTeacherstaffComponent.prototype.getteacherIdForEmailUpdate = function (data) {
        if (data) {
            this.tid = data.id;
        }
    };
    AgencyAdminTeacherstaffComponent.prototype.clearEmailForm = function () {
        this.newEmailCrateForm();
    };
    AgencyAdminTeacherstaffComponent.prototype.upateEmail = function () {
        var _this = this;
        if (this.newEmailForm.valid) {
            this.loader = true;
            this.spinner.show();
            var req = {
                'AgencyID': this.commonService.getAgencyId(),
                'id': this.tid,
                'Email': this.newEmailForm.controls.newemail.value.trim()
            };
            this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_10__["AgencyAPIURLs"].UpdateEmailForTeacher, req, null).subscribe(function (res) {
                if (res.body.statusCode === 200) {
                    $('.mailupdate').modal('hide');
                    _this.notification.success({ message: res.body.message, title: '' });
                    _this.getAllTeachers();
                }
                else {
                    _this.spinner.hide();
                    _this.notification.warning({ message: res.body.message, title: '' });
                }
            }, function (err) {
                _this.spinner.hide();
                _this.error.commonError(err);
            });
        }
        else {
            this.spinner.hide();
            this.commonService.validateAllFields(this.newEmailForm);
        }
    };
    // Method to delete/deactivate Teacher
    AgencyAdminTeacherstaffComponent.prototype.deleteTeacher = function (value) {
        var _this = this;
        this.confirmationService.confirm({
            message: 'Do you want to deactivate this user?',
            accept: function () {
                _this.spinner.show();
                var req = {
                    'AgencyID': _this.commonService.getAgencyId(),
                    'id': value.id,
                    'IsDeleted': true,
                    'DeletedDate': new Date(),
                    'DeletedBy': _this.commonService.getReleventUserId('userdetails')
                };
                _this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_8__["TeacherAPIURLs"].SaveTeacherDetails, req, null).subscribe(function (res) {
                    if (res.body.statusCode === 200) {
                        _this.deleteTeacherSuccess(value);
                    }
                    else {
                        _this.spinner.hide();
                        _this.error.unknownError();
                    }
                }, function (err) {
                    _this.spinner.hide();
                    _this.error.commonError(err);
                });
            }
        });
    };
    AgencyAdminTeacherstaffComponent.prototype.deleteTeacherSuccess = function (data) {
        this.getAllTeachers();
        this.notification.success({ message: 'This User has been deactivated', title: '' });
    };
    AgencyAdminTeacherstaffComponent.prototype.activateTeacher = function (value) {
        var _this = this;
        this.confirmationService.confirm({
            message: 'Do you want to activate this user?',
            accept: function () {
                _this.spinner.show();
                var req = {
                    'AgencyID': _this.commonService.getAgencyId(),
                    'id': value.id,
                    'IsDeleted': false,
                    'UpdateDate': new Date(),
                    'UpdatedBy': _this.commonService.getReleventUserId('userdetails')
                };
                _this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_10__["AgencyAPIURLs"].ActivateTeacher, req, null).subscribe(function (res) {
                    if (res.body.statusCode === 200) {
                        _this.notification.success({ message: 'This User has been activated', title: '' });
                        _this.getAllTeachers();
                    }
                    else {
                        _this.spinner.hide();
                        _this.error.unknownError();
                    }
                }, function (err) {
                    _this.spinner.hide();
                    _this.error.commonError(err);
                });
            }
        });
    };
    AgencyAdminTeacherstaffComponent.prototype.activateClockInTeacher = function (value) {
        var _this = this;
        this.confirmationService.confirm({
            message: 'This teacher clocked out, do you want to enable login?',
            accept: function () {
                _this.spinner.show();
                var req = {
                    'AgencyID': _this.commonService.getAgencyId(),
                    'id': value.id,
                    'IsDeleted': false,
                    'UpdateDate': new Date(),
                    'UpdatedBy': _this.commonService.getReleventUserId('userdetails'),
                    'TeacherDailyAttendenceID': value.teacherDailyAttendenceID
                };
                _this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_10__["AgencyAPIURLs"].ActivateClockInTeacher, req, null).subscribe(function (res) {
                    if (res.body.statusCode === 200) {
                        _this.notification.success({ message: 'This User has been activated', title: '' });
                        _this.getAllTeachers();
                    }
                    else {
                        _this.spinner.hide();
                        _this.error.unknownError();
                    }
                }, function (err) {
                    _this.spinner.hide();
                    _this.error.commonError(err);
                });
            }
        });
    };
    AgencyAdminTeacherstaffComponent.prototype.paginate = function (event) {
        this.pageNo = event.page;
        this.getAllTeachers();
    };
    AgencyAdminTeacherstaffComponent.prototype.keyDownFunction = function (event) {
        if (event.keyCode === 13) {
            this.getAllTeachers();
        }
    };
    AgencyAdminTeacherstaffComponent.prototype.processCSVFile = function (event) {
        var _this = this;
        this.spinner.show();
        this.formData = new FormData();
        if (event.target.files && event.target.files[0] && event.target.files[0].name.includes('.csv')) {
            this.formData.append('FileName', event.target.files[0], event.target.files[0].name);
            this.formData.append('AgencyId', this.commonService.getAgencyId().toString());
            this.formData.append('CreatedBy', this.commonService.getLoggedInUserId().toString());
            this.apiService.uploadImage(_shared_constatant__WEBPACK_IMPORTED_MODULE_10__["AgencyAPIURLs"].UploadTeacherUserWithFile, this.formData, null).subscribe(function (res) {
                if (res.body.statusCode === 200) {
                    _this.spinner.hide();
                    event.target.value = '';
                    _this.getAllTeachers();
                    _this.notification.success({ message: 'File uploaded successfully', title: 'Success' });
                }
                else if (res.body.statusCode === 987) {
                    _this.spinner.hide();
                    _this.getAllTeachers();
                    _this.rejectedUserList = res.body.data;
                    $('.rejectedUsr').modal('show');
                }
                else {
                    _this.spinner.hide();
                    _this.error.unknownError();
                }
            }, function (err) {
                _this.spinner.hide();
                _this.error.commonError(err);
                _this.notification.error({ message: 'Something went wrong', title: 'Error' });
            });
        }
        else {
            this.spinner.hide();
            this.notification.warning({ message: 'Unsupported file type', title: 'Warning' });
        }
    };
    AgencyAdminTeacherstaffComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-agency-admin-teacherstaff',
            template: __webpack_require__(/*! ./agency-admin-teacherstaff.component.html */ "./src/app/layout/agency-admin/components/agency-admin-teacherstaff/agency-admin-teacherstaff.component.html"),
            styles: [__webpack_require__(/*! ./agency-admin-teacherstaff.component.css */ "./src/app/layout/agency-admin/components/agency-admin-teacherstaff/agency-admin-teacherstaff.component.css")]
        }),
        __metadata("design:paramtypes", [_teacher_shared_services_teacher_api_service_teacher_api_service__WEBPACK_IMPORTED_MODULE_3__["TeacherApiService"], _shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_4__["ErrorHandlerService"],
            ngx_spinner__WEBPACK_IMPORTED_MODULE_5__["NgxSpinnerService"], _shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_6__["NotificationService"],
            _shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_7__["CommonService"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormBuilder"], primeng_api__WEBPACK_IMPORTED_MODULE_9__["ConfirmationService"]])
    ], AgencyAdminTeacherstaffComponent);
    return AgencyAdminTeacherstaffComponent;
}());



/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-teachertime/agency-admin-teachertime.component.css":
/*!****************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-teachertime/agency-admin-teachertime.component.css ***!
  \****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9hZ2VuY3ktYWRtaW4vY29tcG9uZW50cy9hZ2VuY3ktYWRtaW4tdGVhY2hlcnRpbWUvYWdlbmN5LWFkbWluLXRlYWNoZXJ0aW1lLmNvbXBvbmVudC5jc3MifQ== */"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-teachertime/agency-admin-teachertime.component.html":
/*!*****************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-teachertime/agency-admin-teachertime.component.html ***!
  \*****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<p>\r\n  agency-admin-teachertime works!\r\n</p>\r\n"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-teachertime/agency-admin-teachertime.component.ts":
/*!***************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-teachertime/agency-admin-teachertime.component.ts ***!
  \***************************************************************************************************************/
/*! exports provided: AgencyAdminTeachertimeComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AgencyAdminTeachertimeComponent", function() { return AgencyAdminTeachertimeComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var AgencyAdminTeachertimeComponent = /** @class */ (function () {
    function AgencyAdminTeachertimeComponent() {
    }
    AgencyAdminTeachertimeComponent.prototype.ngOnInit = function () {
    };
    AgencyAdminTeachertimeComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-agency-admin-teachertime',
            template: __webpack_require__(/*! ./agency-admin-teachertime.component.html */ "./src/app/layout/agency-admin/components/agency-admin-teachertime/agency-admin-teachertime.component.html"),
            styles: [__webpack_require__(/*! ./agency-admin-teachertime.component.css */ "./src/app/layout/agency-admin/components/agency-admin-teachertime/agency-admin-teachertime.component.css")]
        }),
        __metadata("design:paramtypes", [])
    ], AgencyAdminTeachertimeComponent);
    return AgencyAdminTeachertimeComponent;
}());



/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-viewchat/agency-admin-viewchat.component.css":
/*!**********************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-viewchat/agency-admin-viewchat.component.css ***!
  \**********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "  \r\n  .chat_people{ overflow:hidden; clear:both;}\r\n  .chat_list {\r\n    border-bottom: 1px solid #E2F0FF;\r\n    margin: 0;\r\n    padding: 15px;\r\n  }\r\n  .inbox_chat { height: 550px; overflow-y: auto;}\r\n  .active_chat{ background:#FF6C6C;color: #fff!important;}\r\n  .active_chat .kidname,.active_chat .chat_ib h5,.active_chat .chat_ib .status{color: #fff}\r\n  .view_chat{max-height:550px;}\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L2FnZW5jeS1hZG1pbi9jb21wb25lbnRzL2FnZW5jeS1hZG1pbi12aWV3Y2hhdC9hZ2VuY3ktYWRtaW4tdmlld2NoYXQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0VBQ0UsY0FBYyxlQUFlLEVBQUUsVUFBVSxDQUFDO0VBQzFDO0lBQ0UsZ0NBQWdDO0lBQ2hDLFNBQVM7SUFDVCxhQUFhO0VBQ2Y7RUFDQSxjQUFjLGFBQWEsRUFBRSxnQkFBZ0IsQ0FBQztFQUU5QyxjQUFjLGtCQUFrQixDQUFDLHFCQUFxQixDQUFDO0VBQ3ZELDZFQUE2RSxXQUFXO0VBQ3hGLFdBQVcsZ0JBQWdCLENBQUMiLCJmaWxlIjoic3JjL2FwcC9sYXlvdXQvYWdlbmN5LWFkbWluL2NvbXBvbmVudHMvYWdlbmN5LWFkbWluLXZpZXdjaGF0L2FnZW5jeS1hZG1pbi12aWV3Y2hhdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiICBcclxuICAuY2hhdF9wZW9wbGV7IG92ZXJmbG93OmhpZGRlbjsgY2xlYXI6Ym90aDt9XHJcbiAgLmNoYXRfbGlzdCB7XHJcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI0UyRjBGRjtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIHBhZGRpbmc6IDE1cHg7XHJcbiAgfVxyXG4gIC5pbmJveF9jaGF0IHsgaGVpZ2h0OiA1NTBweDsgb3ZlcmZsb3cteTogYXV0bzt9XHJcbiAgXHJcbiAgLmFjdGl2ZV9jaGF0eyBiYWNrZ3JvdW5kOiNGRjZDNkM7Y29sb3I6ICNmZmYhaW1wb3J0YW50O31cclxuICAuYWN0aXZlX2NoYXQgLmtpZG5hbWUsLmFjdGl2ZV9jaGF0IC5jaGF0X2liIGg1LC5hY3RpdmVfY2hhdCAuY2hhdF9pYiAuc3RhdHVze2NvbG9yOiAjZmZmfVxyXG4gIC52aWV3X2NoYXR7bWF4LWhlaWdodDo1NTBweDt9Il19 */"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-viewchat/agency-admin-viewchat.component.html":
/*!***********************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-viewchat/agency-admin-viewchat.component.html ***!
  \***********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"wrapper\">\r\n  <div class=\"container-fluid\">\r\n\r\n    <div class=\"pagetitle\">\r\n      <div>\r\n        <h2>Dashboard\r\n          <span>/ Message </span>\r\n        </h2>\r\n      </div>\r\n      <!-- <div>\r\n        <button type=\"submit\" class=\"btn btn-red\">Compose New Message</button>\r\n      </div> -->\r\n    </div>\r\n\r\n    <div class=\"subhead d-flex justify-content-between mt-20\"><div><h3>Message</h3></div> </div>        \r\n\r\n<div class=\"row mt-20\">\r\n\r\n<div class=\"col-lg-3 \">\r\n  <div class=\"inbox_people mesg\">\r\n    <div class=\"headind_srch\">\r\n      <div class=\"recent_heading\">\r\n        <!--<h4>Class L-KG - Student(35)</h4>-->\r\n        <select class=\"form-control\" id=\"exampleFormControlSelect1\">\r\n            <option>Toddler</option>\r\n            <option>Infant</option>\r\n            <option>LKG</option>\r\n            <option>1st Class</option>\r\n          </select>\r\n      </div>\r\n    </div>\r\n    \r\n    <div class=\"inbox_chat\">\r\n        <ng-scrollbar>\r\n      <div class=\"chat_list active_chat\">\r\n        <div class=\"chat_people\">\r\n          <div class=\"chat_img\">\r\n            <img src=\"https://ptetutorials.com/images/user-profile.png\" alt=\"sunil\"> </div>\r\n          <div class=\"chat_ib\">\r\n            <h5>ID : C123456\r\n            </h5>\r\n            <p class=\"kidname\">Dev James</p>\r\n           <!-- <p class=\"status\">Enjoying the dance</p>-->\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"chat_list\">\r\n        <div class=\"chat_people\">\r\n          <div class=\"chat_img\">\r\n            <img src=\"https://ptetutorials.com/images/user-profile.png\" alt=\"sunil\"> </div>\r\n          <div class=\"chat_ib\">\r\n            <h5>ID : C234561\r\n             \r\n            </h5>\r\n            <p class=\"kidname\">Mark Thomas</p>\r\n             <!-- <p class=\"status\">Enjoying the dance</p>-->\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"chat_list\">\r\n        <div class=\"chat_people\">\r\n          <div class=\"chat_img\">\r\n            <img src=\"https://ptetutorials.com/images/user-profile.png\" alt=\"sunil\"> </div>\r\n          <div class=\"chat_ib\">\r\n            <h5>ID : C334456\r\n             \r\n            </h5>\r\n            <p class=\"kidname\">Jessica M</p>\r\n            <!-- <p class=\"status\">Enjoying the dance</p>-->\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"chat_list\">\r\n        <div class=\"chat_people\">\r\n          <div class=\"chat_img\">\r\n            <img src=\"https://ptetutorials.com/images/user-profile.png\" alt=\"sunil\"> </div>\r\n          <div class=\"chat_ib\">\r\n            <h5>ID : C445233\r\n            \r\n            </h5>\r\n            <p class=\"kidname\">Jacob Thomas</p>\r\n         <!-- <p class=\"status\">Enjoying the dance</p>-->\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"chat_list\">\r\n        <div class=\"chat_people\">\r\n          <div class=\"chat_img\">\r\n            <img src=\"https://ptetutorials.com/images/user-profile.png\" alt=\"sunil\"> </div>\r\n          <div class=\"chat_ib\">\r\n            <h5>ID : C553546\r\n             \r\n            </h5>\r\n            <p class=\"kidname\">Natasha R</p>\r\n            <!-- <p class=\"status\">Enjoying the dance</p>-->\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"chat_list\">\r\n        <div class=\"chat_people\">\r\n          <div class=\"chat_img\">\r\n            <img src=\"https://ptetutorials.com/images/user-profile.png\" alt=\"sunil\"> </div>\r\n          <div class=\"chat_ib\">\r\n            <h5>ID : C344257\r\n              \r\n            </h5>\r\n            <p class=\"kidname\">Kim Possible</p>\r\n            <p class=\"status\">Enjoying the dance</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n\r\n      <!--Remove below -->\r\n\r\n      <div class=\"chat_list\">\r\n          <div class=\"chat_people\">\r\n            <div class=\"chat_img\">\r\n              <img src=\"https://ptetutorials.com/images/user-profile.png\" alt=\"sunil\"> </div>\r\n            <div class=\"chat_ib\">\r\n              <h5>ID : C344257\r\n                \r\n              </h5>\r\n              <p class=\"kidname\">Jerry Lane</p>\r\n              <p class=\"status\">Enjoying the dance</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"chat_list\">\r\n            <div class=\"chat_people\">\r\n              <div class=\"chat_img\">\r\n                <img src=\"https://ptetutorials.com/images/user-profile.png\" alt=\"sunil\"> </div>\r\n              <div class=\"chat_ib\">\r\n                <h5>ID : C344257\r\n                  \r\n                </h5>\r\n                <p class=\"kidname\">Tom Hanks</p>\r\n                <p class=\"status\">Enjoying the dance</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n\r\n\r\n    </ng-scrollbar>\r\n    </div>\r\n\r\n\r\n\r\n\r\n  </div>\r\n\r\n</div>\r\n\r\n\r\n<div class=\"col-lg-9\">\r\n  <div class=\"card viewchat\">\r\n    <div class=\"chat_people\">\r\n        <div class=\"chat_img\">\r\n          <img src=\"https://ptetutorials.com/images/user-profile.png\" alt=\"sunil\"> </div>\r\n        <div class=\"chat_ib\">\r\n          <h5>ID : C123456\r\n          </h5>\r\n          <p class=\"kidname\">Dev James</p>\r\n           <!-- <p class=\"status\">Enjoying the dance</p>-->\r\n        </div>\r\n      </div>\r\n    <div class=\"brdr\"></div>\r\n    <ng-scrollbar>\r\n    <div class=\"chatmsg\">\r\n        \r\n        <p class=\"text-center time_date\">Today, 12 Aug 2018</p>\r\n        <div class=\"incoming_msg\">\r\n          <div class=\"received_msg\">\r\n            <div class=\"received_withd_msg\">\r\n              <p>Test which is a new approach to have all solutions\r\n              </p>\r\n              <span class=\"time_date\">William - 11:01 AM | Today</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"incoming_msg\">\r\n            <div class=\"received_msg\">\r\n              <div class=\"received_withd_msg\">\r\n                <p>My kid is very happy\r\n                </p>\r\n                <span class=\"time_date\">William - 02:01 PM | Today</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n            <div class=\"incoming_msg\">\r\n                <div class=\"received_msg\">\r\n                  <div class=\"received_withd_msg\">\r\n                    <p>He likes to dance alot.\r\n                    </p>\r\n                    <span class=\"time_date\">William - 11:01 AM | Today</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n        <div class=\"incoming_msg\">\r\n          <div class=\"received_msg\">\r\n            <div class=\"received_withd_msg\">\r\n              <p>Yes, test will be conducted.\r\n              </p>\r\n              <span class=\"time_date\">Gerson - 11:01 AM | Today</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"outgoing_msg\">\r\n          <div class=\"sent_msg\">\r\n            <p>Apollo University, Delhi, India Test</p>\r\n            <span class=\"time_date\"> Jack - 11:15 AM | Today</span>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"outgoing_msg\">\r\n            <div class=\"sent_msg\">\r\n              <p>He is likes to play outside</p>\r\n              <span class=\"time_date\"> Jack - 05:15 PM | Today</span>\r\n            </div>\r\n          </div>\r\n      </div>\r\n      </ng-scrollbar> \r\n      <div class=\"type_msg\">\r\n          <div class=\"input_msg_write\">\r\n            <textarea type=\"text\" class=\"write_msg\" placeholder=\"Type a message\" ></textarea>\r\n           <div class=\"sndbtn text-right\">\r\n          <!--   <a href=\"\"> <i class=\"fa fa-video-camera\" aria-hidden=\"true\"></i>   </a>\r\n              <a href=\"\"><i class=\"fa fa-camera\" aria-hidden=\"true\"></i></a>-->\r\n            <button class=\"btn btn-send\" type=\"button\">Post</button>\r\n            </div>\r\n        </div>\r\n        </div>\r\n</div>\r\n</div>\r\n</div>\r\n\r\n\r\n   \r\n  </div>\r\n</div>\r\n"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-admin-viewchat/agency-admin-viewchat.component.ts":
/*!*********************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-admin-viewchat/agency-admin-viewchat.component.ts ***!
  \*********************************************************************************************************/
/*! exports provided: AgencyAdminViewchatComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AgencyAdminViewchatComponent", function() { return AgencyAdminViewchatComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var AgencyAdminViewchatComponent = /** @class */ (function () {
    function AgencyAdminViewchatComponent() {
    }
    AgencyAdminViewchatComponent.prototype.ngOnInit = function () {
    };
    AgencyAdminViewchatComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-agency-admin-viewchat',
            template: __webpack_require__(/*! ./agency-admin-viewchat.component.html */ "./src/app/layout/agency-admin/components/agency-admin-viewchat/agency-admin-viewchat.component.html"),
            styles: [__webpack_require__(/*! ./agency-admin-viewchat.component.css */ "./src/app/layout/agency-admin/components/agency-admin-viewchat/agency-admin-viewchat.component.css")]
        }),
        __metadata("design:paramtypes", [])
    ], AgencyAdminViewchatComponent);
    return AgencyAdminViewchatComponent;
}());



/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-student-break/agency-student-break.component.css":
/*!********************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-student-break/agency-student-break.component.css ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9hZ2VuY3ktYWRtaW4vY29tcG9uZW50cy9hZ2VuY3ktc3R1ZGVudC1icmVhay9hZ2VuY3ktc3R1ZGVudC1icmVhay5jb21wb25lbnQuY3NzIn0= */"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-student-break/agency-student-break.component.html":
/*!*********************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-student-break/agency-student-break.component.html ***!
  \*********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"wrapper\">\r\n  <div class=\"container-fluid\">\r\n\r\n    <div class=\"pagetitle\">\r\n      <div>\r\n        <h2> Attendance\r\n          <span>/ Breaks</span>\r\n        </h2>\r\n      </div>\r\n      <div *ngIf=\"isSubscriptionActive\">\r\n          <button type=\"submit\" *ngIf=\"!disableNewEntry\"  class=\"btn btn-red btn_current\"  data-target=\"#checkout\"\r\n          (click)=\"clearForm();openModalForNewEntry()\">\r\n          Add Entry</button>\r\n        <button type=\"submit\" *ngIf=\"disableNewEntry\" [disabled]=\"disableNewEntry\" class=\"btn btn-red btn_current\"  \r\n          >\r\n          Add Entry</button>\r\n      </div>\r\n     \r\n    </div>\r\n\r\n    <div class=\"subhead d-flex justify-content-between mt-20\">\r\n      <div>\r\n            <td *ngIf=\"(imagePath !== '')\">\r\n                <img src=\"{{imagePath}}\" alt=\"\" class=\"img-circle childimg\">\r\n              </td>\r\n              <td *ngIf=\"(imagePath == '')\">\r\n                <img src=\"assets/img/user.png\" alt=\"\" class=\"img-circle childimg\">\r\n              </td>\r\n            <h3>{{studentName}} / {{attendanceaDate|date}}</h3>  \r\n      </div>\r\n    </div>\r\n    <div class=\"innertable studentListSearch\">\r\n      <div class=\"table-responsive\">\r\n        <table class=\"table\">\r\n          <thead class=\"thead-light\">\r\n            <tr>\r\n              <th scope=\"col\">Break-Out Time</th>\r\n              <th scope=\"col\" class=\"text-center\">Break-In Time</th>\r\n              <th scope=\"col\" class=\"text-center\">Reason</th>\r\n              <th scope=\"col\">Break In</th>\r\n              <th scope=\"col\">Edit</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr *ngFor=\"let brek of breakList\">               \r\n              <td >\r\n                {{brek.breakOutTime|date: 'h:mm a'}}\r\n              </td>\r\n              <td *ngIf=\"brek.breakStatusId != 2\" class=\"text-center\">\r\n                 --\r\n              </td>\r\n              <td *ngIf=\"brek.breakStatusId == 2\" class=\"text-center\">\r\n                {{brek.breakInTime| date: 'h:mm a'}}\r\n              </td>\r\n\r\n              <td class=\"text-center\">\r\n                {{brek.breakReason}}\r\n              </td>\r\n          <td>\r\n            <button *ngIf=\"(brek.breakStatusId == 1 && allowedit)\"  class=\"btn btn-info \" data-target=\"#checkin\" (click)=\"getBreakId(brek)\" data-toggle=\"modal\">Break In</button>\r\n          </td>\r\n              <td>\r\n                  <div *ngIf=\"allowedit\">\r\n                      <a data-toggle=\"modal\" data-target=\"#checkout\" class=\"attedit\" title=\"Edit Breaked out time \"\r\n                        *ngIf=\"brek.breakStatusId == 1\" (click)=\"getBreakOutDetails(brek)\"><i class=\"fa fa-pencil attend1\"></i></a>\r\n                      <a data-toggle=\"modal\" data-target=\"#edittimecheckout\" class=\"attedit\" title=\"Edit Break \"\r\n                        *ngIf=\"brek.breakStatusId == 2\" (click)=\"getAllBreakInDetails(brek);clearTabs()\"><i class=\"fa fa-pencil attend1\"></i></a>\r\n                    </div>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <div class=\"text-center\">\r\n          <span *ngIf=\"breakList.length == 0\">No result found</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    \r\n<!-- Break Out Modal -->\r\n    <div class=\"modal fade BreakNew\" id=\"checkout\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"checkOutLabel\" aria-hidden=\"true\">\r\n        <div class=\"modal-dialog\" role=\"document\">\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n              <h5 class=\"modal-title\" id=\"checkoutLabel\">Update Break-out</h5>\r\n              <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n              <form [formGroup]=\"breakOutForm\">\r\n                <div class=\"row mb-20 mt-20\">\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Date</label>                     \r\n                      <input type=\"text\" placeholder=\"Date\" formControlName=\"outdate\" showWeekNumbers=\"false\" [maxDate]=\"today\"\r\n                        class=\"form-control\" [bsConfig]=\"dpConfig\" bsDatepicker [attr.disabled]=\"true\">\r\n                      <div class=\"form-group\">\r\n  \r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Reason </label>\r\n                      <input type=\"text \" formControlName=\"reason\" class=\"form-control\" id=\"\" aria-describedby=\"\">\r\n                      <div *ngIf=\"reason.invalid && (reason.dirty || reason.touched)\" class=\"text-left errormsg\">\r\n                          <span *ngIf=\"reason.errors.required\">\r\n                            <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please enter reason</span>\r\n                          </span>\r\n                        </div> \r\n                    </div>\r\n                  </div>\r\n                </div>\r\n  \r\n  \r\n             \r\n                <div class=\"row mb-20 mt-20\">\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Picked Up By</label>\r\n                      <select class=\"form-control\" formControlName=\"pickupby\" id=\"exampleFormControlSelect1\">\r\n                        <option value=\"\">Select option</option>\r\n                        <option *ngFor=\"let guardians of guardiansList\" [value]=\"guardians.guardianId\">{{guardians.guardianName}}</option>\r\n  \r\n                      </select>\r\n                      <div *ngIf=\"pickupby.invalid && (pickupby.dirty || pickupby.touched)\" class=\"text-left errormsg\">\r\n                        <span *ngIf=\"pickupby.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select option from list</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Breaked-out time</label>\r\n                     \r\n                      <p-calendar styleClass=\"form-control\" class=\"custom-textbox-checkedin\" formControlName=\"outtime\"  hourFormat=\"12\" [timeOnly]=\"true\" icon=\"pi pi-clock\"\r\n                        [showIcon]=\"true\"></p-calendar>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n  \r\n            </div>\r\n            <div class=\"modal-footer\">\r\n              <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n              <button type=\"button\" *ngIf=\"isSubscriptionActive\" class=\"btn btn-primary\" data-dismiss=\"modal\" [disabled]=\"!breakOutForm.valid\" (click)=\"saveBreakOut(1)\">Save\r\n                changes</button>            \r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n<!-- Break in modal -->\r\n<div class=\"modal fade\" id=\"checkin\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"checkinLabel\" aria-hidden=\"true\">\r\n        <div class=\"modal-dialog\" role=\"document\">\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n              <h5 class=\"modal-title\" id=\"checkinLabel\">Update Break-in </h5>\r\n              <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n  \r\n              <form [formGroup]=\"breakInForm\">\r\n                <div class=\"row mb-20 mt-20\">\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Date</label>\r\n                      <input type=\"text\" placeholder=\"Date\" formControlName=\"indate\" showWeekNumbers=\"false\" [maxDate]=\"today\"\r\n                        class=\"form-control\" [bsConfig]=\"dpConfig\" bsDatepicker [attr.disabled]=\"true\">\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-6\">\r\n                      <div class=\"form-group\">\r\n                        <label for=\"\">Drop-off By</label>\r\n                        <div class=\"form-group\">\r\n                          <select class=\"form-control\" formControlName=\"dropby\"\r\n                            id=\"exampleFormControlSelect1\">\r\n                            <option value=\"\">Select option</option>\r\n                            <option *ngFor=\"let guardians of guardiansList\" [value]=\"guardians.guardianId\">{{guardians.guardianName}}</option>\r\n                          </select>\r\n                          <div *ngIf=\"dropby.invalid && (dropby.dirty || dropby.touched)\" class=\"text-left errormsg\">\r\n                            <span *ngIf=\"dropby.errors.required\">\r\n                              <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select option </span>\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row mb-20 mt-20\">\r\n                   \r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Breaked-in time</label>\r\n                      <p-calendar class=\"custom-textbox-checkedin\" styleClass=\"form-control\" formControlName=\"intime\"  hourFormat=\"12\" [timeOnly]=\"true\" icon=\"pi pi-clock\"\r\n                        [showIcon]=\"true\"></p-calendar>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n              <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n              <button type=\"button\" *ngIf=\"isSubscriptionActive\" class=\"btn btn-primary\"  [disabled]=\"!breakInForm.valid\" (click)=\"saveBreakIn()\">Save\r\n                changes</button>             \r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n<!-- BREAK IN AND OUT MODAL -->\r\n<div class=\"modal fade\" id=\"edittimecheckout\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"checkoutLabel  \" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <h5 class=\"modal-title\" id=\"checkoutLabel\">Update Break </h5>\r\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <ul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\r\n            <li class=\"nav-item\" (click)=\"getBreakTabDetails('breakouttab')\">\r\n              <a class=\"nav-link active\" id=\"checkout-tab\"  data-toggle=\"tab\" href=\"#chekoutedit\" role=\"tab\"\r\n                aria-controls=\"editcheckout1\" aria-selected=\"false\">\r\n               Break out\r\n              </a>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link\" id=\"checkin-tab\"  (click)=\"getBreakTabDetails('breakintab')\"  data-toggle=\"tab\" href=\"#chekinedit\" role=\"tab\" aria-controls=\"meal\"\r\n                aria-selected=\"false\">\r\n                Breaked In\r\n              </a>\r\n            </li>\r\n          </ul>\r\n          <div class=\"tab-content\" id=\"myTabContent\">\r\n            <div class=\"tab-pane fade show active\" id=\"chekoutedit\" role=\"tabpanel\" aria-labelledby=\"checkout-tab\">\r\n              <form [formGroup]=\"breakOutForm\">\r\n                <div class=\"row mb-20 mt-20\">\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Date</label>                     \r\n                      <input type=\"text\" placeholder=\"Date\" formControlName=\"outdate\" showWeekNumbers=\"false\" [maxDate]=\"today\"\r\n                        class=\"form-control\" [bsConfig]=\"dpConfig\" bsDatepicker [attr.disabled]=\"true\">\r\n                      <div class=\"form-group\">\r\n  \r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Reason </label>\r\n                      <input type=\"text \" formControlName=\"reason\" class=\"form-control\" id=\"\" aria-describedby=\"\"\r\n                        >\r\n                      <div *ngIf=\"reason.invalid && (reason.dirty || reason.touched)\" class=\"text-left errormsg\">\r\n                      <span *ngIf=\"reason.errors.required\">\r\n                        <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please enter reason</span>\r\n                      </span>\r\n                    </div> \r\n                    </div>\r\n                  </div>\r\n                </div>\r\n  \r\n  \r\n                <!-- Checked out update -->\r\n                <div class=\"row mb-20 mt-20\">\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Picked Up By</label>\r\n                      <select class=\"form-control\" formControlName=\"pickupby\"\r\n                        id=\"exampleFormControlSelect1\">\r\n                        <option value=\"\">Select option</option>\r\n                        <option *ngFor=\"let guardians of guardiansList\" [value]=\"guardians.guardianId\">{{guardians.guardianName}}</option>\r\n  \r\n                      </select>\r\n                      <div *ngIf=\"pickupby.invalid && (pickupby.dirty || pickupby.touched)\" class=\"text-left errormsg\">\r\n                        <span *ngIf=\"pickupby.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select option from list</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Checked-out time</label>\r\n                      <p-calendar class=\"custom-textbox-checkedin\" styleClass=\"form-control\" formControlName=\"outtime\"  hourFormat=\"12\" [timeOnly]=\"true\" icon=\"pi pi-clock\"\r\n                        [showIcon]=\"true\"></p-calendar> \r\n                     \r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n  \r\n            <div class=\"tab-pane\" id=\"chekinedit\" role=\"tabpanel\" aria-labelledby=\"checkin-tab\">\r\n              <form [formGroup]=\"breakInForm\">\r\n                <div class=\"row mb-20 mt-20\">\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Date</label>\r\n                      <input type=\"text\" placeholder=\"Date\" formControlName=\"indate\" showWeekNumbers=\"false\" [maxDate]=\"today\"\r\n                        class=\"form-control\" [bsConfig]=\"dpConfig\" bsDatepicker [attr.disabled]=\"true\">\r\n                      <div class=\"form-group\">\r\n  \r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-6\">\r\n                      <div class=\"form-group\">\r\n                        <label for=\"\">Drop-off By</label>\r\n                        <div class=\"form-group\">\r\n                          <select class=\"form-control\" formControlName=\"dropby\" \r\n                            id=\"exampleFormControlSelect1\">\r\n                            <option value=\"\">Select option</option>\r\n                            <option *ngFor=\"let guardians of guardiansList\" [value]=\"guardians.guardianId\">{{guardians.guardianName}}</option>\r\n                          </select>\r\n                          <div *ngIf=\"dropby.invalid && (dropby.dirty || dropby.touched)\" class=\"text-left errormsg\">\r\n                            <span *ngIf=\"dropby.errors.required\">\r\n                              <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select option from list</span>\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row mb-20 mt-20\">\r\n                \r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Breaked-in time </label>                     \r\n                      <p-calendar class=\"custom-textbox-checkedin\" styleClass=\"form-control\" formControlName=\"intime\"  hourFormat=\"12\" [timeOnly]=\"true\" icon=\"pi pi-clock\"\r\n                        [showIcon]=\"true\"></p-calendar>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n          <button type=\"button\" *ngIf=\"((tabType == 'breakouttab') && isSubscriptionActive)\" class=\"btn btn-primary\" data-dismiss=\"modal\" [disabled]=\"!breakOutForm.valid\" (click)=\"saveBreakOut(2)\">Save\r\n            changes</button>\r\n            <button type=\"button\"  *ngIf=\"((tabType == 'breakintab')&& isSubscriptionActive)\"  class=\"btn btn-primary\"  [disabled]=\"!breakInForm.valid\" (click)=\"saveBreakIn()\">Save\r\n            changes</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  </div>\r\n</div>\r\n"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-student-break/agency-student-break.component.ts":
/*!*******************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-student-break/agency-student-break.component.ts ***!
  \*******************************************************************************************************/
/*! exports provided: AgencyStudentBreakComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AgencyStudentBreakComponent", function() { return AgencyStudentBreakComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var ngx_bootstrap__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ngx-bootstrap */ "./node_modules/ngx-bootstrap/esm5/ngx-bootstrap.js");
/* harmony import */ var _teacher_shared_services_teacher_api_service_teacher_api_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../teacher/shared/services/teacher-api-service/teacher-api.service */ "./src/app/layout/teacher/shared/services/teacher-api-service/teacher-api.service.ts");
/* harmony import */ var _shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../shared/services/error-handler/error-handler.service */ "./src/app/shared/services/error-handler/error-handler.service.ts");
/* harmony import */ var _shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../shared/services/notification-service/notification.service */ "./src/app/shared/services/notification-service/notification.service.ts");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ngx-spinner */ "./node_modules/ngx-spinner/fesm5/ngx-spinner.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _teacher_shared_constant__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../teacher/shared/constant */ "./src/app/layout/teacher/shared/constant.ts");
/* harmony import */ var _shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../shared/services/common/common.service */ "./src/app/shared/services/common/common.service.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};










var AgencyStudentBreakComponent = /** @class */ (function () {
    function AgencyStudentBreakComponent(apiService, fb, error, spinner, notification, commonService, router, routedata) {
        var _this = this;
        this.apiService = apiService;
        this.fb = fb;
        this.error = error;
        this.spinner = spinner;
        this.notification = notification;
        this.commonService = commonService;
        this.router = router;
        this.routedata = routedata;
        this.breakList = [];
        this.searchDate = new Date();
        this.mytime = new Date();
        this.guardiansList = [];
        this.tabType = 'breakouttab';
        this.idForBreakIn = 0;
        this.idForEditBreakout = 0;
        this.disableNewEntry = true;
        this.today = new Date();
        this.allowedit = false;
        this.dpConfig = new ngx_bootstrap__WEBPACK_IMPORTED_MODULE_2__["BsDatepickerConfig"]();
        this.isSubscriptionActive = this.commonService.getSubscriptionStatus();
        this.routedata.queryParams.subscribe(function (params) {
            _this.studentName = params['Name'];
            _this.imagePath = params['ImagePath'];
            _this.attendanceaDate = params['Date'];
            _this.attendanceStatus = params['attendenceStatusID'];
        });
    }
    AgencyStudentBreakComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.createBreakInForm();
        this.createBreakOutForm();
        this.routedata.params.subscribe(function (params) {
            _this.studentId = params['id'];
            _this.attendanceId = params['attendanceid'];
            _this.allowentry = params['allowedit'];
            var allowFlag = _this.allowEditMethod();
            if (_this.allowentry === 'true' && allowFlag === true) {
                _this.allowedit = true;
            }
            else {
                _this.allowedit = false;
            }
            _this.getAllStudentsBreakLogs();
            _this.getGuardianList();
        });
    };
    AgencyStudentBreakComponent.prototype.createBreakInForm = function () {
        this.breakInForm = this.fb.group({
            indate: [this.searchDate, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            inclass: [null],
            dropby: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            intime: [this.mytime, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
        });
    };
    AgencyStudentBreakComponent.prototype.createBreakOutForm = function () {
        this.breakOutForm = this.fb.group({
            outdate: [this.searchDate, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            reason: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            pickupby: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            outtime: [this.mytime, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
        });
    };
    Object.defineProperty(AgencyStudentBreakComponent.prototype, "outdate", {
        // Check In Form
        get: function () { return this.breakInForm.get('outdate'); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AgencyStudentBreakComponent.prototype, "inclass", {
        get: function () { return this.breakInForm.get('inclass'); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AgencyStudentBreakComponent.prototype, "dropby", {
        get: function () { return this.breakInForm.get('dropby'); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AgencyStudentBreakComponent.prototype, "indate", {
        // Check Out Form
        get: function () { return this.breakOutForm.get('indate'); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AgencyStudentBreakComponent.prototype, "reason", {
        get: function () { return this.breakOutForm.get('reason'); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AgencyStudentBreakComponent.prototype, "pickupby", {
        get: function () { return this.breakOutForm.get('pickupby'); },
        enumerable: true,
        configurable: true
    });
    AgencyStudentBreakComponent.prototype.getAllStudentsBreakLogs = function () {
        var _this = this;
        this.spinner.show();
        var data = {
            'agencyID': this.commonService.getAgencyId(),
            'studentID': this.studentId,
            'classAttendenceID': this.attendanceId
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_8__["TeacherAPIURLs"].GetStudentBreakLogs, data, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.spinner.hide();
                _this.breakList = res.body.data;
                if (_this.breakList.length > 0) {
                    if (res.body.data[(res.body.data.length - 1)].breakStatusId === 2) {
                        _this.disableNewEntry = false;
                    }
                    else {
                        _this.disableNewEntry = true;
                    }
                    _this.breakList.forEach(function (x) {
                        x.breakOutTime = new Date(_this.commonService.getLocalDateTimeFromUTC(x.breakOutTime));
                        x.breakInTime = new Date(_this.commonService.getLocalDateTimeFromUTC(x.breakInTime));
                    });
                }
                else {
                    _this.disableNewEntry = false;
                }
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    // Get check in Out Details
    AgencyStudentBreakComponent.prototype.getGuardianList = function () {
        var _this = this;
        var req = {
            'studentID': this.studentId,
            'agencyID': this.commonService.getAgencyId(),
            'isAuthorized': true
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_8__["TeacherAPIURLs"].GetAllGuardiansForStudents, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.guardiansList = res.body.data;
            }
            else {
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyStudentBreakComponent.prototype.saveBreakIn = function () {
        var _this = this;
        if (this.breakOutDateTime > this.breakInForm.value.intime) {
            this.notification.warning({ message: 'Break-In time should be greater than break-Out time', title: '' });
        }
        else {
            var data = {
                'id': this.idForBreakIn,
                'agencyID': this.commonService.getAgencyId(),
                'studentID': this.studentId,
                'classAttendenceID': this.attendanceId,
                'breakInTime': this.breakInForm.value.intime,
                'attendenceStatusID': 0,
                'attendanceDate': '2019-02-07T04:05:42.198Z',
                'dropedById': this.breakInForm.value.dropby,
                'dropedByOtherId': 0,
                'pickupById': 0,
                'pickupByOtherId': 0,
                'approvedDropedById': 0,
                'approvedPickupById': 0,
                'dropedByOtherNames': 'string',
                'pickupByOtherName': 'string',
                'breakStatusId': 2
            };
            this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_8__["TeacherAPIURLs"].BreakInAttendenceStudent, data, null).subscribe(function (res) {
                if (res.body.statusCode === 200) {
                    $('#checkin').modal('hide');
                    $('#edittimecheckout').modal('hide');
                    _this.notification.success({ message: 'Breaked In Successfully', title: '' });
                    _this.getAllStudentsBreakLogs();
                }
                else {
                    _this.error.unknownError();
                }
            }, function (err) {
                _this.spinner.hide();
                _this.error.commonError(err);
            });
        }
    };
    AgencyStudentBreakComponent.prototype.openModalForNewEntry = function () {
        if (this.allowEditMethod() && this.attendanceStatus === '3') {
            $('#checkout').modal('show');
            return true;
        }
        else if (this.attendanceStatus === '4' && this.allowEditMethod()) {
            this.notification.warning({ message: 'Student has been checked out', title: 'Break not allowed!' });
        }
        else {
            this.notification.warning({ message: 'You can create new entry for today only', title: '' });
            return false;
        }
    };
    AgencyStudentBreakComponent.prototype.allowEditMethod = function () {
        var today = this.commonService.getOnlyDate(new Date());
        var breakdate = this.commonService.getOnlyDate(this.attendanceaDate);
        if (today.toDateString() === breakdate.toDateString()) {
            return true;
        }
        else {
            return false;
        }
    };
    AgencyStudentBreakComponent.prototype.saveBreakOut = function (statusid) {
        var _this = this;
        var data = {
            'id': this.idForEditBreakout,
            'agencyID': this.commonService.getAgencyId(),
            'studentID': this.studentId,
            'classAttendenceID': this.attendanceId,
            'breakOutTime': this.breakOutForm.value.outtime,
            'attendenceStatusID': 0,
            'attendanceDate': '2019-02-07T04:05:42.198Z',
            'dropedById': 0,
            'dropedByOtherId': 0,
            'pickupById': this.breakOutForm.value.pickupby,
            'pickupByOtherId': 0,
            'approvedDropedById': 0,
            'approvedPickupById': 0,
            'dropedByOtherNames': 'string',
            'pickupByOtherName': 'string',
            'breakReason': this.breakOutForm.value.reason,
            'breakStatusId': statusid
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_8__["TeacherAPIURLs"].BreakOutAttendenceStudent, data, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.notification.success({ message: 'Breaked out Successfully', title: '' });
                _this.getAllStudentsBreakLogs();
            }
            else {
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyStudentBreakComponent.prototype.getBreakTabDetails = function (type) {
        this.tabType = type;
    };
    AgencyStudentBreakComponent.prototype.clearForm = function () {
        this.breakOutForm.controls['outtime'].setValue(new Date());
        this.idForEditBreakout = 0;
        this.createBreakInForm();
        this.createBreakOutForm();
    };
    AgencyStudentBreakComponent.prototype.clearTabs = function () {
        this.tabType = 'breakouttab';
        $('#checkout-tab').tab('show');
    };
    AgencyStudentBreakComponent.prototype.getBreakId = function (value) {
        this.idForBreakIn = value.id;
        this.idForEditBreakout = value.id;
        this.breakOutDateTime = this.commonService.getLocalDateTimeFromUTC(value.breakOutTime);
    };
    AgencyStudentBreakComponent.prototype.getBreakOutDetails = function (value) {
        this.idForEditBreakout = value.id;
        var outdate = this.commonService.getLocalDateTimeFromUTC(value.breakOutTime);
        this.breakOutForm.controls['outdate'].setValue(outdate);
        this.breakOutForm.controls['reason'].setValue(value.breakReason);
        this.breakOutForm.controls['pickupby'].setValue(value.pickupById);
        this.breakOutForm.controls['outtime'].setValue(new Date(this.commonService.getLocalDateTimeFromUTC(value.breakOutTime)));
    };
    AgencyStudentBreakComponent.prototype.getAllBreakInDetails = function (value) {
        this.idForEditBreakout = value.id;
        this.idForBreakIn = value.id;
        var indate = this.commonService.getLocalDateTimeFromUTC(value.breakInTime);
        var outdate = this.commonService.getLocalDateTimeFromUTC(value.breakOutTime);
        this.breakOutDateTime = outdate;
        this.breakOutForm.controls['outdate'].setValue(outdate);
        this.breakOutForm.controls['reason'].setValue(value.breakReason);
        this.breakOutForm.controls['pickupby'].setValue(value.pickupById);
        this.breakOutForm.controls['outtime'].setValue(new Date(this.commonService.getLocalDateTimeFromUTC(value.breakOutTime)));
        this.breakInForm.controls['indate'].setValue(indate);
        this.breakInForm.controls['dropby'].setValue(value.dropedById);
        this.breakInForm.controls['intime'].setValue(new Date(this.commonService.getLocalDateTimeFromUTC(value.breakInTime)));
    };
    AgencyStudentBreakComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-agency-student-break',
            template: __webpack_require__(/*! ./agency-student-break.component.html */ "./src/app/layout/agency-admin/components/agency-student-break/agency-student-break.component.html"),
            styles: [__webpack_require__(/*! ./agency-student-break.component.css */ "./src/app/layout/agency-admin/components/agency-student-break/agency-student-break.component.css")]
        }),
        __metadata("design:paramtypes", [_teacher_shared_services_teacher_api_service_teacher_api_service__WEBPACK_IMPORTED_MODULE_3__["TeacherApiService"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormBuilder"], _shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_4__["ErrorHandlerService"],
            ngx_spinner__WEBPACK_IMPORTED_MODULE_6__["NgxSpinnerService"], _shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_5__["NotificationService"], _shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_9__["CommonService"],
            _angular_router__WEBPACK_IMPORTED_MODULE_7__["Router"], _angular_router__WEBPACK_IMPORTED_MODULE_7__["ActivatedRoute"]])
    ], AgencyStudentBreakComponent);
    return AgencyStudentBreakComponent;
}());



/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-student-details/agency-student-details.component.css":
/*!************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-student-details/agency-student-details.component.css ***!
  \************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9hZ2VuY3ktYWRtaW4vY29tcG9uZW50cy9hZ2VuY3ktc3R1ZGVudC1kZXRhaWxzL2FnZW5jeS1zdHVkZW50LWRldGFpbHMuY29tcG9uZW50LmNzcyJ9 */"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-student-details/agency-student-details.component.html":
/*!*************************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-student-details/agency-student-details.component.html ***!
  \*************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"wrapper\">\r\n  <div class=\"container-fluid\">\r\n\r\n    <div class=\"pagetitle\">\r\n      <div>\r\n        <h2>Student\r\n          <span> / Student details </span>\r\n        </h2>\r\n      </div>\r\n      <div>\r\n        <!-- <button type=\"submit\" class=\"btn btn-red\">Add Kid</button> -->\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"subhead d-flex justify-content-between mt-20\">\r\n      <div>\r\n        <h3>{{studentName}}</h3>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"activitytimeline mt-20\">\r\n      <div class=\"row\">\r\n\r\n        <div class=\"col-lg-3\">\r\n\r\n          <div class=\"upload-profile\">\r\n            <div>\r\n              <img src=\"{{childVM.imagePath}}\" onError=\"this.src='assets/img/user.png'\" alt=\"\"\r\n                class=\"img-fluid img-circle\">\r\n            </div>\r\n\r\n            <div class=\"upload-btn-wrapper\">\r\n              <button class=\"btn btn-send\">Upload a file</button>\r\n              <input type=\"file\" name=\"myfile\" #input (change)=\"processFile($event)\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-lg-9\">\r\n\r\n          <ul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link active\" id=\"basicinfo-tab\" data-toggle=\"tab\" href=\"#basicinfo\" role=\"tab\"\r\n                aria-controls=\"basicinfo\" aria-selected=\"true\">Basic Information</a>\r\n            </li>\r\n\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link\" id=\"Allergies-tab\" data-toggle=\"tab\" href=\"#Allergies\" (click)=\"getStudentDetails()\"\r\n                role=\"tab\" aria-controls=\"Allergies\" aria-selected=\"false\">Allergies and Immunization</a>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link\" id=\"authperson-tab\" data-toggle=\"tab\" href=\"#authperson\" role=\"tab\"\r\n                (click)=\"getAuthorizedPersonByStudentId()\" aria-selected=\"false\">Authorized Person</a>\r\n            </li>\r\n\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link\" id=\"restrictedperson-tab\" data-toggle=\"tab\" href=\"#restrictedperson\" role=\"tab\"\r\n                (click)=\"getRestrictedPersonByStudentId()\" aria-selected=\"false\">Restricted Person</a>\r\n            </li>\r\n\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link\" id=\"studentfiles-tab\" data-toggle=\"tab\" href=\"#studentfiles\" role=\"tab\"\r\n                aria-controls=\"studentfiles\" (click)=\"getalluploadedByStudentId()\" aria-selected=\"false\">Student\r\n                Files</a>\r\n            </li>\r\n\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link\" id=\"recurringbilling-tab\" data-toggle=\"tab\" href=\"#recurringbilling\" role=\"tab\"\r\n                aria-controls=\"recurringbilling\" (click)=\"getRecurringBillingByStudentID()\" aria-selected=\"false\">Recurring\r\n                Billing</a>\r\n            </li>\r\n\r\n          </ul>\r\n          <div class=\"tab-content\" id=\"myTabContent\">\r\n\r\n            <div class=\"tab-pane fade show active\" id=\"basicinfo\" role=\"tabpanel\" aria-labelledby=\"basicinfo-tab\">\r\n              <!-- New HTML For Add Student  -->\r\n\r\n              <div class=\"d-flex justify-content-between mt-20 subhead\">\r\n                <div>\r\n                  <h3>Basic Information</h3>\r\n                </div>\r\n              </div>\r\n              <form [formGroup]=\"childForm\">\r\n                <div class=\"row  mt-20\">\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">First name*</label>\r\n                      <input type=\"text \" formControlName=\"firstname\" class=\"form-control\" id=\"\" aria-describedby=\"\"\r\n                        placeholder=\"Enter First Name\">\r\n                      <div *ngIf=\"f.firstname.invalid && (f.firstname.dirty || f.firstname.touched)\"\r\n                        class=\"text-left errormsg\">\r\n                        <span *ngIf=\"f.firstname.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please enter first name</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n\r\n                  </div>\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Last name*</label>\r\n                      <input type=\"text \" formControlName=\"lastname\" class=\"form-control\" id=\"\" aria-describedby=\"\"\r\n                        placeholder=\"Enter Last Name\">\r\n                      <div *ngIf=\"f.lastname.invalid && (f.lastname.dirty || f.lastname.touched)\"\r\n                        class=\"text-left errormsg\">\r\n                        <span *ngIf=\"f.lastname.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please enter last name</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n\r\n                <div class=\"row \">\r\n\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Contact Number*</label>\r\n                      <input type=\"text\" maxlength=\"10\" (keypress)=\"commonService.allowOnlyNumber($event)\"\r\n                        formControlName=\"mobile\" class=\"form-control\" id=\"\" aria-describedby=\"\" placeholder=\"Phone\">\r\n                      <div *ngIf=\"f.mobile.invalid && (f.mobile.dirty || f.mobile.touched)\" class=\"text-left errormsg\">\r\n                        <span *ngIf=\"f.mobile.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please enter contact number</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"exampleFormControlSelect1\">Gender*</label>\r\n                      <select class=\"form-control\" formControlName=\"gender\" id=\"exampleFormControlSelect1\">\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"1\">Male</option>\r\n                        <option value=\"2\">Female</option>\r\n                      </select>\r\n                      <div *ngIf=\"f.gender.invalid && (f.gender.dirty || f.gender.touched)\" class=\"text-left errormsg\">\r\n                        <span *ngIf=\"f.gender.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select gender</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"row \">\r\n\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Date of Birth*</label>\r\n                      <input type=\"text\" placeholder=\"Select date\" formControlName=\"birthdate\" showWeekNumbers=\"false\"\r\n                        [maxDate]=\"today\" container=\"\" class=\"form-control\" [bsConfig]=\"dpConfig\" bsDatepicker>\r\n                      <div *ngIf=\"f.birthdate.invalid && (f.birthdate.dirty || f.birthdate.touched)\"\r\n                        class=\"text-left errormsg\">\r\n                        <span *ngIf=\"f.birthdate.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select birthdate</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Address*</label>\r\n                      <input type=\"text \" formControlName=\"address\" class=\"form-control\" id=\"\" aria-describedby=\"\"\r\n                        placeholder=\"Address\">\r\n                      <div *ngIf=\"f.address.invalid && (f.address.dirty || f.address.touched)\"\r\n                        class=\"text-left errormsg\">\r\n                        <span *ngIf=\"f.address.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please enter address</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"row \">\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"exampleFormControlSelect1\">Country*</label>\r\n                      <select class=\"form-control\" placeholder=\"Country\" formControlName=\"country\"\r\n                        id=\"exampleFormControlSelect1\" (change)=\"getStatesList();clearStateCity()\">\r\n                        <option value=\"\">Select Country</option>\r\n                        <option *ngFor=\"let countries of countryList\" [value]=\"countries.id\">{{countries.countryName}}\r\n                        </option>\r\n                      </select>\r\n                      <div *ngIf=\"f.country.invalid && (f.country.dirty || f.country.touched)\"\r\n                        class=\"text-left errormsg\">\r\n                        <span *ngIf=\"f.country.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select country</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"exampleFormControlSelect1\">State*</label>\r\n                      <select class=\"form-control\" placeholder=\"State\" formControlName=\"state\"\r\n                        id=\"exampleFormControlSelect1\" (change)=\"getCitiesList();clearCity()\">\r\n                        <option value=\"\">Select State</option>\r\n                        <option *ngFor=\"let states of stateList\" [value]=\"states.id\">{{states.stateName}}</option>\r\n                      </select>\r\n                      <div *ngIf=\"f.state.invalid && (f.state.dirty || f.state.touched)\" class=\"text-left errormsg\">\r\n                        <span *ngIf=\"f.state.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select city</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                </div>\r\n\r\n                <div class=\"row \">\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">City*</label>\r\n                      <select class=\"form-control\" placeholder=\"City\" formControlName=\"city\"\r\n                        id=\"exampleFormControlSelect1\">\r\n                        <option value=\"\">Select City</option>\r\n                        <option *ngFor=\"let cities of cityList\" [value]=\"cities.id\">{{cities.cityName}}</option>\r\n                      </select>\r\n                      <div *ngIf=\"f.city.invalid && (f.city.dirty || f.city.touched)\" class=\"text-left errormsg\">\r\n                        <span *ngIf=\"f.city.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select city</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Child Start Date*</label>\r\n                      <input type=\"text\" placeholder=\"Select Start date\" formControlName=\"childstartdate\"\r\n                        showWeekNumbers=\"false\" class=\"form-control\" [bsConfig]=\"dpConfig\"\r\n                        bsDatepicker>\r\n                      <div *ngIf=\"a.childstartdate.invalid && (a.childstartdate.dirty || a.childstartdate.touched)\"\r\n                        class=\"text-left errormsg\">\r\n                        <span *ngIf=\"a.childstartdate.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select child start date</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n\r\n                </div>\r\n                <div class=\"row mb-20\">\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Zip Code</label>\r\n                      <input type=\"text \" maxlength=\"6\" formControlName=\"zipcode\"\r\n                        (keypress)=\"commonService.allowOnlyNumber($event)\" class=\"form-control\" id=\"\"\r\n                        aria-describedby=\"\" placeholder=\"Enter Zip Code\">\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Bus</label>\r\n                      <select class=\"form-control\" placeholder=\"Bus\" formControlName=\"bus\"\r\n                        id=\"exampleFormControlSelect1\">\r\n                        <option value=\"0\">Select Bus</option>\r\n                        <option *ngFor=\"let bus of busList\" [value]=\"bus.id\">{{bus.busName}}</option>\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"row \">\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Physician name</label>\r\n                      <input type=\"text\" class=\"form-control\" (keypress)=\"commonService.allowAlphabetOnly($event)\"\r\n                        formControlName=\"physicianname\" id=\"\" aria-describedby=\"\" placeholder=\"Physician name\">\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"exampleFormControlSelect1\">Physician Contact Number</label>\r\n                      <input type=\"text \" maxlength=\"10\" (keypress)=\"commonService.allowOnlyNumber($event)\"\r\n                        class=\"form-control\" formControlName=\"physicianContactNumber\" id=\"\" aria-describedby=\"\"\r\n                        placeholder=\"Physician Contact Number\">\r\n                    </div>\r\n                  </div>\r\n\r\n                </div>\r\n\r\n                <div class=\"row \">\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Physician Address</label>\r\n                      <input type=\"text\" class=\"form-control\"\r\n                        formControlName=\"physicianaddress\" id=\"\" aria-describedby=\"\" placeholder=\"Physician address\">\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"exampleFormControlSelect1\">Preferred hospital</label>\r\n                      <input type=\"text \" class=\"form-control\" formControlName=\"preferredhospital\" id=\"\"\r\n                        aria-describedby=\"\" placeholder=\"Preferred hospital\">\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"row \">\r\n                  <div class=\"col-lg-12\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Child Notes</label>\r\n                      <textarea class=\"form-control\" maxlength=\"200\" formControlName=\"childnotes\" aria-describedby=\"\"\r\n                        placeholder=\"Enter Child Notes\"></textarea>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"text-center\" *ngIf=\"isSubscriptionActive\">\r\n                  <button type=\"submit\" class=\"btn btn-send\" (click)=\"saveChildDetails('update')\">Save</button>\r\n                </div>\r\n\r\n              </form>\r\n            </div>\r\n\r\n            <div class=\"tab-pane fade\" id=\"Gurardianinfo\" role=\"tabpanel\" aria-labelledby=\"Gurardianinfo-tab\">\r\n\r\n\r\n              <div class=\"d-flex justify-content-between mt-20 subhead\">\r\n                <div>\r\n                  <h3>Guardian Information</h3>\r\n                </div>\r\n                <div *ngIf=\"isSubscriptionActive\">\r\n                  <button type=\"submit\" class=\"btn btn-send\" data-toggle=\"modal\" (click)=\"cleareGuardianForm()\"\r\n                    data-target=\".guardianinfo\">Add Guardian</button>\r\n                </div>\r\n              </div>\r\n              <div class=\"innertable\">\r\n                <div class=\"table-responsive\">\r\n                  <table class=\"table\">\r\n                    <thead class=\"thead-light\">\r\n                      <tr>\r\n                        <th scope=\"col\">First Name</th>\r\n                        <th scope=\"col\">Last Name</th>\r\n                        <th scope=\"col\">Relation</th>\r\n                        <th scope=\"col\">Phone No</th>\r\n                        <th scope=\"col\">Allow Pickup</th>\r\n                        <th scope=\"col\">Actions</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr *ngFor=\"let guardians of guardianList\">\r\n                        <td>{{guardians.firstName}}</td>\r\n                        <td> {{guardians.lastName}}</td>\r\n                        <td>{{guardians.relationTypeName}}</td>\r\n                        <td>{{guardians.mobile}}</td>\r\n                        <td *ngIf=\"guardians.isAuthorizedToPickup == false\">No</td>\r\n                        <td *ngIf=\"guardians.isAuthorizedToPickup == true\">Yes</td>\r\n                        <td>\r\n                          <!-- <a>\r\n                              <i class=\"fa fa-eye\" aria-hidden=\"true\"></i>\r\n                            </a> -->\r\n                          <a data-toggle=\"modal\" (click)=\"getPerticulerGuardianInfo(guardians)\"\r\n                            data-target=\".guardianinfo\">\r\n                            <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\r\n                          </a>\r\n                          <a *ngIf=\"isSubscriptionActive\">\r\n                            <i class=\"fa fa-trash\" (click)=\"deleteGuardian(guardians)\" aria-hidden=\"true\"></i>\r\n                          </a>\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                  <div class=\"text-center\">\r\n                    <span *ngIf=\"guardianList.length == 0 && !loader\">No record found</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"tab-pane fade\" id=\"Allergies\" role=\"tabpanel\" aria-labelledby=\"Allergies-tab\">\r\n              <div class=\"d-flex justify-content-between mt-20 subhead\">\r\n                <div>\r\n                  <h3>Immunization</h3>\r\n                </div>\r\n                <div *ngIf=\"isSubscriptionActive\">\r\n                  <button type=\"submit\" class=\"btn btn-send\" (click)=\"clearImmunization()\" data-toggle=\"modal\"\r\n                    data-target=\".immunization\">Add Immunization</button>\r\n                </div>\r\n              </div>\r\n              <div class=\"innertable\">\r\n                <div class=\"table-responsive\">\r\n                  <table class=\"table\">\r\n                    <thead class=\"thead-light\">\r\n                      <tr>\r\n                        <th scope=\"col\">Immunization</th>\r\n                        <th scope=\"col\">Date Received</th>\r\n                        <th scope=\"col\">Other Immunization</th>\r\n                        <th scope=\"col\">Abbreviation</th>\r\n                        <th scope=\"col\">Actions</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr *ngFor=\"let immun of immunizationList\">\r\n                        <td>{{immun.immunizationName}}</td>\r\n                        <td>{{immun.dateReceived| date}}</td>\r\n                        <td>{{immun.otherImmunization}}</td>\r\n                        <td>{{immun.abbreviation}}</td>\r\n                        <td>\r\n                          <!-- <a>\r\n                              <i class=\"fa fa-eye\" aria-hidden=\"true\"></i>\r\n                            </a> -->\r\n                          <a>\r\n                            <i class=\"fa fa-eye\" (click)=\"getPerticulerStudentimmunization(immun)\" data-toggle=\"modal\"\r\n                              data-target=\".immunization\" aria-hidden=\"true\"></i>\r\n                          </a>\r\n                          <a *ngIf=\"isSubscriptionActive\">\r\n                            <i class=\"fa fa-trash\" (click)=\"deleteimmunization(immun)\" aria-hidden=\"true\"></i>\r\n                          </a>\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                  <div class=\"text-center\">\r\n                    <span *ngIf=\"immunizationList.length == 0 && !loader\">No record found</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n\r\n\r\n              <div class=\"d-flex justify-content-between mt-20 subhead\">\r\n                <div>\r\n                  <h3>Allergies</h3>\r\n                </div>\r\n                <div *ngIf=\"isSubscriptionActive\">\r\n                  <button type=\"submit\" class=\"btn btn-send\" data-toggle=\"modal\" data-target=\".allergies\"\r\n                    (click)=\"clearallergy()\">Add\r\n                    Allergies</button>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"innertable\">\r\n                <div class=\"table-responsive\">\r\n                  <table class=\"table\">\r\n                    <thead class=\"thead-light\">\r\n                      <tr>\r\n                        <th scope=\"col\">Allergy</th>\r\n                        <th scope=\"col\">Allergy Name</th>\r\n                        <th scope=\"col\">Reaction</th>\r\n                        <th scope=\"col\">Treatement</th>\r\n                        <th scope=\"col\">Actions</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr *ngFor=\"let allergy of allergyList\">\r\n                        <td>{{allergy.allergyTypeName}}</td>\r\n                        <td>{{allergy.allergyName}}</td>\r\n                        <td>{{allergy.allergyReactionTypeName}} </td>\r\n                        <td>{{allergy.treatment}}</td>\r\n                        <td>\r\n                          <!-- <a >\r\n                              <i class=\"fa fa-eye\" aria-hidden=\"true\"></i>\r\n                            </a> -->\r\n                          <a>\r\n                            <i class=\"fa fa-eye\" (click)=\"getPerticulerAllergyDetaild(allergy)\" aria-hidden=\"true\"\r\n                              data-toggle=\"modal\" data-target=\".allergies\"></i>\r\n                          </a>\r\n                          <a *ngIf=\"isSubscriptionActive\">\r\n                            <i class=\"fa fa-trash\" (click)=\"deleteAllergy(allergy)\" aria-hidden=\"true\"></i>\r\n                          </a>\r\n                        </td>\r\n                      </tr>\r\n\r\n                    </tbody>\r\n                  </table>\r\n                  <div class=\"text-center\">\r\n                    <span *ngIf=\"allergyList.length == 0 && !loader\">No record found</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n\r\n\r\n\r\n\r\n              <div class=\"d-flex justify-content-between mt-20 subhead\">\r\n                <div>\r\n                  <h3>Medication</h3>\r\n                </div>\r\n                <div *ngIf=\"isSubscriptionActive\">\r\n                  <button type=\"submit\" class=\"btn btn-send\" (click)=\"clearMedicationForm()\" data-toggle=\"modal\"\r\n                    data-target=\".medication\">Add Medication</button>\r\n                </div>\r\n              </div>\r\n\r\n\r\n              <div class=\"innertable\">\r\n                <div class=\"table-responsive\">\r\n                  <table class=\"table\">\r\n                    <thead class=\"thead-light\">\r\n                      <tr>\r\n                        <th scope=\"col\">Medication</th>\r\n                        <th scope=\"col\">Strength</th>\r\n                        <th scope=\"col\">Units</th>\r\n                        <th scope=\"col\">Dose</th>\r\n                        <th scope=\"col\">How Taken?</th>\r\n                        <th scope=\"col\">Other Medication</th>\r\n                        <th scope=\"col\">Actions</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr *ngFor=\"let med of medicationList\">\r\n                        <td>{{med.medicationName}}</td>\r\n                        <td>{{med.strength}}</td>\r\n                        <td>{{med.units}} </td>\r\n                        <td>{{med.doseRepeatName}}</td>\r\n                        <td>{{med.howTaken}}</td>\r\n                        <td>{{med.otherMedication}}</td>\r\n                        <td>\r\n                          <!-- <a [routerLink]=\"['/dashboard/actvitydetail']\">\r\n                              <i class=\"fa fa-eye\" aria-hidden=\"true\"></i>\r\n                            </a> -->\r\n                          <a>\r\n                            <i class=\"fa fa-eye\" aria-hidden=\"true\" data-target=\".medication\" data-toggle=\"modal\"\r\n                              (click)=\"getPerticulerMedication(med)\"></i>\r\n                          </a>\r\n                          <a *ngIf=\"isSubscriptionActive\">\r\n                            <i class=\"fa fa-trash\" (click)=\"deleteMedication(med)\" aria-hidden=\"true\"></i>\r\n                          </a>\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                  <div class=\"text-center\">\r\n                    <span *ngIf=\"medicationList.length == 0 && !loader\">No record found</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n\r\n              <div class=\"d-flex justify-content-between mt-20 subhead\">\r\n                <div>\r\n                  <h3>Disability</h3>\r\n                </div>\r\n                <div *ngIf=\"isSubscriptionActive\">\r\n                  <button type=\"submit\" class=\"btn btn-send\" data-toggle=\"modal\" data-target=\".disability\"\r\n                    (click)=\"clearDisability()\">Add\r\n                    Disability</button>\r\n                </div>\r\n              </div>\r\n              <div class=\"innertable\">\r\n                <div class=\"table-responsive\">\r\n                  <table class=\"table\">\r\n                    <thead class=\"thead-light\">\r\n                      <tr>\r\n                        <th scope=\"col\">Description</th>\r\n\r\n                        <th scope=\"col\" class=\"text-center\">Action</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody *ngIf=\"disabilityList.length != 0\">\r\n                      <tr *ngFor=\"let disabilty of disabilityList\">\r\n                        <td>{{disabilty.description | slice:0:68}}</td>\r\n                        <td class=\"text-center\">\r\n                          <a data-toggle=\"modal\" data-target=\".disability\" (click)=\"disabiltyDetials(disabilty)\">\r\n                            <i class=\"fa fa-eye text-center\" aria-hidden=\"true\" title=\"view details\"></i>\r\n                          </a>\r\n                          <a *ngIf=\"isSubscriptionActive\">\r\n                            <i class=\"fa fa-trash\" (click)=\"deleteDisability(disabilty )\" aria-hidden=\"true\"></i>\r\n                          </a>\r\n                        </td>\r\n\r\n                      </tr>\r\n\r\n                    </tbody>\r\n                  </table>\r\n                  <div class=\"text-center\">\r\n                    <span *ngIf=\"disabilityList.length == 0 && !loader\">No record found</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n            <div class=\"tab-pane fade\" id=\"authperson\" role=\"tabpanel\" aria-labelledby=\"authperson-tab\">\r\n              <div class=\"subhead d-flex justify-content-between mt-20\">\r\n                <div>\r\n                  <h3>Authorized Person ({{emeregencyLable}})</h3>\r\n\r\n                </div>\r\n                <div id=\"emergcont\" title=\"Turn on to get emergency contact list\">\r\n                  <p-inputSwitch (onChange)=\"getAuthorizedPersonByStudentId();changelable()\" [(ngModel)]=\"showEmergency\"\r\n                    [ngModelOptions]=\"{standalone: true}\"></p-inputSwitch>\r\n\r\n                </div>\r\n\r\n              </div>\r\n              <div class=\"innertable\">\r\n                <div class=\"table-responsive\">\r\n                  <table class=\"table\">\r\n                    <thead class=\"thead-light\">\r\n                      <tr>\r\n                        <th scope=\"col\">Photo</th>\r\n                        <th scope=\"col\">Authorized Person</th>\r\n                        <!-- <th scope=\"col\">Parent Name</th> -->\r\n                        <th scope=\"col\">Mobile</th>\r\n                        <th scope=\"col\">Email</th>\r\n                        <!-- <th scope=\"col\">Associate Student</th> -->\r\n                        <th scope=\"col\" class=\"text-center\">Status</th>\r\n                        <th scope=\"col\" class=\"text-center\">Emergency Contact</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr *ngFor=\"let authPerson of authorizedPersonList\">\r\n                        <td>\r\n                          <img src=\"{{authPerson.imagePath}}\" onError=\"this.src='assets/img/user.png'\" alt=\"\"\r\n                            class=\"img-circle childimg\">\r\n                        </td>\r\n                        <td>{{authPerson.authorizedPersonName}}</td>\r\n                        <!-- <td>{{authPerson.parentName}}</td> -->\r\n                        <td>{{authPerson.mobile}}</td>\r\n                        <td>{{authPerson.emailId? authPerson.emailId : 'NA'}}</td>\r\n                        <td class=\"text-center\">{{authPerson.isDeleted ?  'Deactive': 'Active' }}</td>\r\n                        <td class=\"text-center\">{{authPerson.isEmergencyContact? 'Yes' : 'No'}}</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                  <div class=\"text-center\">\r\n                    <span *ngIf=\"!authorizedPersonList && !loader\">No record found</span>\r\n                  </div>\r\n                </div>\r\n\r\n              </div>\r\n\r\n            </div>\r\n\r\n            <div class=\"tab-pane fade\" id=\"restrictedperson\" role=\"tabpanel\" aria-labelledby=\"restrictedperson-tab\">\r\n              <div class=\"subhead d-flex justify-content-between mt-20\">\r\n                <div>\r\n                  <h3>Restricted Persons (Can't Pick UP)</h3>\r\n\r\n                </div>\r\n\r\n              </div>\r\n              <div class=\"innertable\">\r\n                <div class=\"table-responsive\">\r\n                  <table class=\"table\">\r\n                    <thead class=\"thead-light\">\r\n                      <tr>\r\n                        <th scope=\"col\">Photo</th>\r\n                        <th scope=\"col\">Name</th>\r\n                        <th scope=\"col\">Mobile</th>\r\n                        <th scope=\"col\">Email</th>\r\n                        <th scope=\"col\">Description</th>  \r\n                        <th scope=\"col\" >Status</th>                   \r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr *ngFor=\"let restrictPerson of restrictedPersonList\">\r\n                        <td>\r\n                          <img src=\"{{restrictPerson.imagePath}}\" onError=\"this.src='assets/img/user.png'\" alt=\"\"\r\n                            class=\"img-circle childimg\">\r\n                        </td>\r\n                        <td>{{restrictPerson.restrictedPersonName}}</td>\r\n                        <td>{{restrictPerson.mobile? restrictPerson.mobile : 'NA'}}</td>\r\n                        <td>{{restrictPerson.emailId? restrictPerson.emailId : 'NA'}}</td>\r\n                        <td>{{restrictPerson.description? restrictPerson.description : 'NA'}}</td>\r\n                        <td>{{restrictPerson.isDeleted ?  'Deactive': 'Active' }}</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                  <div class=\"text-center\">\r\n                    <span *ngIf=\"!restrictedPersonList && !loader\">No record found</span>\r\n                  </div>\r\n                </div>\r\n\r\n              </div>\r\n\r\n            </div>\r\n\r\n\r\n            <div class=\"tab-pane fade\" id=\"studentfiles\" role=\"tabpanel\" aria-labelledby=\"studentfiles-tab\">\r\n              <div class=\"d-flex justify-content-between mt-20 subhead\">\r\n                <div>\r\n                  <h3>Student Files</h3>\r\n                </div>\r\n                <div *ngIf=\"isSubscriptionActive\">\r\n                  <button type=\"submit\" class=\"btn btn-send\" data-toggle=\"modal\" data-target=\".studentfiles\"\r\n                    (click)=\"clearImage()\">Add Files</button>\r\n                </div>\r\n              </div>\r\n              <div class=\"innertable\">\r\n                <div class=\"table-responsive\">\r\n                  <table class=\"table\">\r\n                    <thead class=\"thead-light\">\r\n                      <tr>\r\n                        <th scope=\"col\">File Name</th>\r\n\r\n                        <th scope=\"col\" class=\"text-center\">Action</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody *ngIf=\"studentfileList.length != 0\">\r\n                      <tr *ngFor=\"let studentfiledetails of studentfileList\">\r\n                        <td>{{studentfiledetails.filePath | slice:108:300}}</td>\r\n                        <td class=\"text-center\">\r\n\r\n                          <a title=\"Download file\" href=\"{{studentfiledetails.filePath}}\" *ngIf=\"isSubscriptionActive\">\r\n                            <i class=\"fa fa-download\" aria-hidden=\"true\" title=\"Download file\"></i>\r\n                          </a>\r\n\r\n                          &nbsp;\r\n\r\n                          <a title=\"Delete file\" *ngIf=\"isSubscriptionActive\">\r\n                            <i class=\"fa fa-trash\" title=\"Delete file\" (click)=\"deleteStudentfiles(studentfiledetails)\"\r\n                              aria-hidden=\"true\"></i>\r\n                          </a>\r\n\r\n                        </td>\r\n\r\n                      </tr>\r\n\r\n                    </tbody>\r\n                  </table>\r\n                  <div class=\"text-center\">\r\n                    <span *ngIf=\"studentfileList.length == 0\">No record found</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n\r\n            <div class=\"tab-pane fade\" id=\"recurringbilling\" role=\"tabpanel\" aria-labelledby=\"recurringbilling-tab\">\r\n              <div class=\"d-flex justify-content-between mt-20 subhead\">\r\n                <div>\r\n                  <h3>Automatic Recurring Billing</h3>\r\n                </div>\r\n                <div *ngIf=\"isSubscriptionActive\">\r\n                  <button type=\"submit\" class=\"btn btn-send\" (click)=\"clearRecurringBilling()\" data-toggle=\"modal\"\r\n                    data-target=\".recurringbilling\">Add New Recurring Billing</button>\r\n                </div>\r\n              </div>\r\n              <div class=\"innertable\">\r\n                <div class=\"table-responsive\">\r\n                  <table class=\"table\">\r\n                    <thead class=\"thead-light\">\r\n                      <tr>\r\n                        <th scope=\"col\">Ledger Type</th>\r\n                        <th scope=\"col\">Transaction Type</th>\r\n                        <th scope=\"col\">Billing Frequency</th>\r\n                        <th scope=\"col\">Discription</th>\r\n                        <th scope=\"col\">Amount/Credit</th>\r\n                        <th scope=\"col\">Start Date</th>\r\n                        <th scope=\"col\">End Date</th>\r\n                        <th scope=\"col\">Actions</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr *ngFor=\"let recurringBilling of recurringBillingList\">\r\n                        <td>Sponsor</td>\r\n                        <td *ngIf=\"recurringBilling.transactionType == 1\">Tuition Charge</td>\r\n                        <td *ngIf=\"recurringBilling.transactionType == 2\">Other Charges</td>\r\n                        <td *ngIf=\"recurringBilling.transactionType == 3\">Credit</td>\r\n                        <td>{{recurringBilling.billingCycleName}}</td>\r\n                        <td>{{recurringBilling.billingDescription}}</td>\r\n                        <td>{{recurringBilling.amount}}</td>\r\n                        <td>{{recurringBilling.billingFromDate | date}} </td>\r\n                        <td>{{recurringBilling.billingToDate | date}} </td>\r\n                        <td>\r\n                          <!-- <a>\r\n                            <i class=\"fa fa-eye\" aria-hidden=\"true\" data-target=\".recurringbilling\" data-toggle=\"modal\"\r\n                              (click)=\"getPerticulerRecurringBilling(recurringBilling)\"></i>\r\n                          </a> -->\r\n                          <a *ngIf=\"isSubscriptionActive\">\r\n                            <i class=\"fa fa-trash\" aria-hidden=\"true\" (click)=\"deleteRecurringBilling(recurringBilling)\"></i>\r\n                          </a>\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                  <div class=\"text-center\">\r\n                   <span *ngIf=\"studentfileList.length == 0\">No record found</span>\r\n                 </div>\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      <!-- imminization -->\r\n      <div class=\"modal fade immunization\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myLargeModalLabel\"\r\n        aria-hidden=\"true\">\r\n        <div class=\"modal-dialog modal-lg\">\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n              <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Add Immunization</h5>\r\n              <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n              <form [formGroup]=\"immunizationForm\">\r\n                <div class=\"row  mt-20\">\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Immunization*</label>\r\n                      <!-- <input type=\"text \" class=\"form-control\" id=\"\" aria-describedby=\"\" placeholder=\"Enter First Name\"> -->\r\n                      <select class=\"form-control\" formControlName=\"immunization\" id=\"exampleFormControlSelect1\"\r\n                        (change)=\"CheckImmunizationType()\">\r\n                        <option value=\"\">Select</option>\r\n                        <option *ngFor=\"let imm of immunizationtypeListForDeopdown\" [value]=\"imm.value\">{{imm.label}}\r\n                        </option>\r\n                      </select>\r\n                      <div *ngIf=\"i.immunization.invalid && (i.immunization.dirty || i.immunization.touched)\"\r\n                        class=\"text-left errormsg\">\r\n                        <span *ngIf=\"i.immunization.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select immunization</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Date Received*</label>\r\n                      <!-- <input type=\"date \" class=\"form-control\" formControlName=\"date\"  id=\"\" aria-describedby=\"\" placeholder=\"Select Date\"> -->\r\n                      <input type=\"text\" placeholder=\"Select date\" formControlName=\"date\" showWeekNumbers=\"false\"\r\n                        container=\"\" class=\"form-control\" [bsConfig]=\"dpConfig\" bsDatepicker>\r\n                      <div *ngIf=\"i.date.invalid && (i.date.dirty || i.date.touched)\" class=\"text-left errormsg\">\r\n                        <span *ngIf=\"i.date.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select date</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n\r\n                <div class=\"row mb-20\" *ngIf=\"showOthwerImmunization\">\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Other Immunization</label>\r\n                      <input type=\"text \" formControlName=\"other\" class=\"form-control\" id=\"\" aria-describedby=\"\"\r\n                        placeholder=\"Other Immunization\">\r\n                    </div>\r\n                    <div *ngIf=\"i.other.invalid && (i.other.dirty || i.other.touched)\" class=\"text-left errormsg\">\r\n                      <span *ngIf=\"i.other.errors.required\">\r\n                        <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please enter other immunization</span>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Abbreviation </label>\r\n                      <input type=\"text \" formControlName=\"abbrivation\" class=\"form-control\" id=\"\" aria-describedby=\"\"\r\n                        placeholder=\"Abbreviation\">\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n              <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n              <button type=\"button\" *ngIf=\"isSubscriptionActive\" class=\"btn btn-primary\"\r\n                (click)=\"verifyImmunization()\">Save\r\n                Changes</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- allergies -->\r\n\r\n      <div class=\"modal fade allergies\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myLargeModalLabel\"\r\n        aria-hidden=\"true\">\r\n        <div class=\"modal-dialog modal-lg\">\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n              <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Add Allergies</h5>\r\n              <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n              <form [formGroup]=\"allergyForm\">\r\n                <div class=\"row  mt-20\">\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Allergy*</label>\r\n                      <!-- <input type=\"text \" class=\"form-control\" id=\"\" aria-describedby=\"\" placeholder=\"Enter First Name\"> -->\r\n                      <select class=\"form-control\" id=\"exampleFormControlSelect1\" formControlName=\"allergy\">\r\n                        <option value=\"\">Select</option>\r\n                        <option *ngFor=\"let all of allergyType\" [value]=\"all.value\">{{all.label}}</option>\r\n                      </select>\r\n                      <div *ngIf=\"al.allergy.invalid && (al.allergy.dirty || al.allergy.touched)\"\r\n                        class=\"text-left errormsg\">\r\n                        <span *ngIf=\"al.allergy.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select option</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Allergy Name*</label>\r\n                      <select class=\"form-control\" id=\"exampleFormControlSelect1\" formControlName=\"allergyname\">\r\n                        <option value=\"\">Select</option>\r\n                        <option *ngFor=\"let algname of allergyNameList\" [value]=\"algname.value\">{{algname.label}}\r\n                        </option>\r\n\r\n                      </select>\r\n                      <div *ngIf=\"al.allergyname.invalid && (al.allergyname.dirty || al.allergyname.touched)\"\r\n                        class=\"text-left errormsg\">\r\n                        <span *ngIf=\"al.allergyname.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select option</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Reaction</label>\r\n                      <!-- <input type=\"text \" class=\"form-control\" id=\"\" aria-describedby=\"\" placeholder=\"Enter Reaction\" > -->\r\n                      <select class=\"form-control\" id=\"exampleFormControlSelect1\" formControlName=\"reaction\">\r\n                        <option value=\"\">Select</option>\r\n                        <option *ngFor=\"let reaction of allergyReactionList\" [value]=\"reaction.value\">{{reaction.label}}\r\n                        </option>\r\n\r\n                      </select>\r\n                      <div *ngIf=\"al.reaction.invalid && (al.reaction.dirty || al.reaction.touched)\"\r\n                        class=\"text-left errormsg\">\r\n                        <span *ngIf=\"al.reaction.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select option</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Treatment* </label>\r\n                      <input type=\"text \" class=\"form-control\" id=\"\" aria-describedby=\"\" formControlName=\"treatment\"\r\n                        placeholder=\"Enter Treatment\">\r\n                      <div *ngIf=\"al.treatment.invalid && (al.treatment.dirty || al.treatment.touched)\"\r\n                        class=\"text-left errormsg\">\r\n                        <span *ngIf=\"al.treatment.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please enter treatment</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n\r\n                  </div>\r\n                </div>\r\n                <div class=\"row \">\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">First Observed</label>\r\n                      <input type=\"text\" [maxDate]=\"today\" placeholder=\"Select date\"\r\n                        formControlName=\"firstobserverddate\" showWeekNumbers=\"false\" container=\"\" class=\"form-control\"\r\n                        [bsConfig]=\"dpConfig\" bsDatepicker>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Last Observed</label>\r\n                      <input type=\"text\" [maxDate]=\"today\" placeholder=\"Select date\" formControlName=\"lastobserveddate\"\r\n                        showWeekNumbers=\"false\" container=\"\" class=\"form-control\" [bsConfig]=\"dpConfig\" bsDatepicker>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"row \">\r\n                  <div class=\"col-lg-12\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Comments</label>\r\n                      <textarea name=\"\" id=\"\" formControlName=\"comments\" class=\"form-control\" cols=\"30\"\r\n                        rows=\"10\"></textarea>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n              <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n              <button type=\"button\" *ngIf=\"isSubscriptionActive\" class=\"btn btn-primary\" (click)=\"verifyAllergy()\">Save\r\n                Changes</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- MEdication -->\r\n      <div class=\"modal fade medication\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myLargeModalLabel\"\r\n        aria-hidden=\"true\">\r\n        <div class=\"modal-dialog modal-lg\">\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n              <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Add Medication</h5>\r\n              <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n              <form [formGroup]=\"medicationForm\">\r\n                <div class=\"row  mt-20\">\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Medicine*</label>\r\n                      <input type=\"text \" formControlName=\"medication\" class=\"form-control\" id=\"\" aria-describedby=\"\"\r\n                        placeholder=\"Enter medicine name\">\r\n                      <div *ngIf=\"m.medication.invalid && (m.medication.dirty || m.medication.touched)\"\r\n                        class=\"text-left errormsg\">\r\n                        <span *ngIf=\"m.medication.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please enter medicine name</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Strength*</label>\r\n                      <input type=\"text \" class=\"form-control\" formControlName=\"strength\" id=\"\" aria-describedby=\"\"\r\n                        placeholder=\"Enter Strength\">\r\n                      <div *ngIf=\"m.strength.invalid && (m.strength.dirty || m.strength.touched)\"\r\n                        class=\"text-left errormsg\">\r\n                        <span *ngIf=\"m.strength.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please enter strength</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n\r\n                <div class=\"row \">\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Units*</label>\r\n                      <input type=\"text \" class=\"form-control\" (keypress)=\"commonService.allowOnlyNumber($event)\"\r\n                        formControlName=\"units\" id=\"\" aria-describedby=\"\" placeholder=\"Enter Unit\">\r\n                      <div *ngIf=\"m.units.invalid && (m.units.dirty || m.units.touched)\" class=\"text-left errormsg\">\r\n                        <span *ngIf=\"m.units.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please enter units</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Dose*</label>\r\n                      <!-- <input type=\"text \" class=\"form-control\" formControlName=\"dose\" id=\"\" aria-describedby=\"\" placeholder=\"Enter Dose\" > -->\r\n                      <select class=\"form-control\" placeholder=\"State\" formControlName=\"dose\"\r\n                        id=\"exampleFormControlSelect1\" (change)=\"getCitiesListAddMode();clearCityAddMode()\">\r\n                        <option value=\"\">Select Dose</option>\r\n                        <option *ngFor=\"let dose of doseList\" [value]=\"dose.value\">{{dose.label}}</option>\r\n                      </select>\r\n                      <div *ngIf=\"m.dose.invalid && (m.dose.dirty || m.dose.touched)\" class=\"text-left errormsg\">\r\n                        <span *ngIf=\"m.dose.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select dose</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">How to Take?*</label>\r\n                      <input type=\"text \" class=\"form-control\" formControlName=\"howtotake\" id=\"\" aria-describedby=\"\"\r\n                        placeholder=\"Enter How Taken?\">\r\n                      <div *ngIf=\"m.howtotake.invalid && (m.howtotake.dirty || m.howtotake.touched)\"\r\n                        class=\"text-left errormsg\">\r\n                        <span *ngIf=\"m.howtotake.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please enter valid data</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Other Medication </label>\r\n                      <input type=\"text \" class=\"form-control\" formControlName=\"othermedication\" id=\"\"\r\n                        aria-describedby=\"\" placeholder=\"Other Medication\">\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Start Date*</label>\r\n                      <!-- <input type=\"text \" class=\"form-control\" id=\"\" aria-describedby=\"\" placeholder=\"Enter How Taken?\" > -->\r\n                      <input type=\"text\" container=\"\" placeholder=\"Select date\" formControlName=\"startdate\"\r\n                        showWeekNumbers=\"false\" class=\"form-control\" [bsConfig]=\"dpConfig\" bsDatepicker>\r\n                      <div *ngIf=\"m.startdate.invalid && (m.startdate.dirty || m.startdate.touched)\"\r\n                        class=\"text-left errormsg\">\r\n                        <span *ngIf=\"m.startdate.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\">Select date</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">End Date*</label>\r\n                      <!-- <input type=\"text \" class=\"form-control\" id=\"\" aria-describedby=\"\" placeholder=\"Other Medication\" disabled > -->\r\n                      <input type=\"text\" container=\"\" placeholder=\"Select date\" formControlName=\"enddate\"\r\n                        showWeekNumbers=\"false\" class=\"form-control\" [bsConfig]=\"dpConfig\" bsDatepicker>\r\n                      <div *ngIf=\"m.enddate.invalid && (m.enddate.dirty || m.enddate.touched)\"\r\n                        class=\"text-left errormsg\">\r\n                        <span *ngIf=\"m.enddate.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\">Select date</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n              <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n              <button type=\"button\" *ngIf=\"isSubscriptionActive\" class=\"btn btn-primary\"\r\n                (click)=\"verifyMedication()\">Save\r\n                Changes</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Disability -->\r\n      <div class=\"modal fade disability\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myLargeModalLabel\"\r\n        aria-hidden=\"true\">\r\n        <div class=\"modal-dialog modal-lg\">\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n              <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Add Disability*</h5>\r\n              <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n              <div class=\"row  mt-20\">\r\n                <div class=\"col-lg-12\">\r\n                  <!-- <div class=\"form-group\">\r\n                    <label for=\"\">Description</label>\r\n                   <input type=\"textarea\" rows=\"4\"  [(ngModel)]=\"disabilitydiscription\" class=\"form-control\" id=\"\" aria-describedby=\"\" placeholder=\"Description\">\r\n                  </div> -->\r\n\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Description (Max Length 500 character)</label>\r\n                    <textarea name=\"\" id=\"\" maxlength=\"500\" [(ngModel)]=\"disabilitydiscription\" class=\"form-control\"\r\n                      cols=\"30\" rows=\"10\"></textarea>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n              <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n              <button type=\"button\" *ngIf=\"isSubscriptionActive\" class=\"btn btn-primary\"\r\n                (click)=\"verifyDisability()\">Save\r\n                Changes</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- guardian modal -->\r\n      <div class=\"modal fade guardianinfo\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myLargeModalLabel\"\r\n        aria-hidden=\"true\">\r\n        <div class=\"modal-dialog modal-lg\">\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n              <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Add Guardian</h5>\r\n              <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n\r\n              <form [formGroup]=\"guardianForm\">\r\n                <div class=\"upload-profile\">\r\n                  <div>\r\n                    <img src=\"{{addImagePreview}}\" onError=\"this.src='assets/img/user.png'\" alt=\"\"\r\n                      class=\"img-fluid img-circle\">\r\n                  </div>\r\n\r\n                  <div class=\"upload-btn-wrapper\">\r\n                    <button class=\"btn btn-send\">Upload a file</button>\r\n                    <input type=\"file\" name=\"myfile\" #input (change)=\"processFileGuardian($event)\" />\r\n                  </div>\r\n                </div>\r\n                <div class=\"row mt-20\">\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">First name</label>\r\n                      <input type=\"text \" (keypress)=\"commonService.allowAlphabetOnly($event)\"\r\n                        formControlName=\"firstname\" class=\"form-control\" id=\"\" aria-describedby=\"\"\r\n                        placeholder=\"Enter First Name\">\r\n                      <div *ngIf=\"g.firstname.invalid && (g.firstname.dirty || g.firstname.touched)\"\r\n                        class=\"text-left errormsg\">\r\n                        <span *ngIf=\"g.firstname.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please enter first name</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Last name</label>\r\n                      <input type=\"text \" (keypress)=\"commonService.allowAlphabetOnly($event)\"\r\n                        formControlName=\"lastname\" class=\"form-control\" id=\"\" aria-describedby=\"\"\r\n                        placeholder=\"Enter Last Name\">\r\n                      <div *ngIf=\"g.lastname.invalid && (g.lastname.dirty || g.lastname.touched)\"\r\n                        class=\"text-left errormsg\">\r\n                        <span *ngIf=\"g.lastname.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please enter first name</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"row \">\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Relation</label>\r\n                      <select class=\"form-control\" placeholder=\"Select relation\" formControlName=\"relation\"\r\n                        id=\"exampleFormControlSelect1\">\r\n                        <option value=\"\">Select Relation</option>\r\n                        <option *ngFor=\"let relation of relationTypeList\" [value]=\"relation.value\">{{relation.label}}\r\n                        </option>\r\n                      </select>\r\n                      <div *ngIf=\"g.relation.invalid && (g.relation.dirty || g.relation.touched)\"\r\n                        class=\"text-left errormsg\">\r\n                        <span *ngIf=\"g.relation.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select Realtion</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Phone number</label>\r\n                      <input type=\"number\" formControlName=\"mobile\" class=\"form-control\" id=\"\" aria-describedby=\"\"\r\n                        placeholder=\"Enter Phone number\">\r\n                      <div *ngIf=\"g.mobile.invalid && (g.mobile.dirty || g.mobile.touched)\" class=\"text-left errormsg\">\r\n                        <span *ngIf=\"g.mobile.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please enter Phone number</span>\r\n                        </span>\r\n                      </div>\r\n\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"checkin\">\r\n                  <label class=\"checkboxcustom\">\r\n                    <input type=\"checkbox\" id=\"checkbox-in\" class=\"abc\" (change)=\"markAsAllowToPickup()\"\r\n                      formControlName=\"allowpickup\">\r\n                    <span class=\"checkmark abc\"></span><label> Authorized pickup</label>\r\n                  </label>\r\n                </div>\r\n\r\n                <div class=\"row mt-20\">\r\n                  <div class=\"col-lg-12\">\r\n                    <div class=\"form-group\" id=\"desc1\" *ngIf=\"reasonNotToAllowbox\">\r\n                      <label for=\"\">Reason for not allowing pickup</label>\r\n                      <textarea class=\"form-control\" formControlName=\"notallowedreason\" aria-describedby=\"\"\r\n                        placeholder=\"Reason for not allowing for pickup\"></textarea>\r\n                      <div\r\n                        *ngIf=\"g.notallowedreason.invalid && (g.notallowedreason.dirty || g.notallowedreason.touched)\"\r\n                        class=\"text-left errormsg\">\r\n                        <span *ngIf=\"g.notallowedreason.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please enter reason</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n              <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n              <button type=\"button\" *ngIf=\"isSubscriptionActive\" class=\"btn btn-primary\"\r\n                (click)=\"verifyImageUploadForGuardian()\">Save\r\n                Changes</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- <div class=\"d-flex justify-content-between mt-20 subhead\"><div><h3>Kids List</h3></div> </div> -->\r\n\r\n\r\n      <!-- Add new Child Modal -->\r\n\r\n      <div class=\"modal fade addchild\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myLargeModalLabel\"\r\n        aria-hidden=\"true\">\r\n        <div class=\"modal-dialog modal-lg\">\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n              <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Save Changes</h5>\r\n              <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n\r\n              <div class=\"upload-profile\">\r\n                <div>\r\n                  <img src=\"{{addImagePreview}}\" onError=\"this.src='assets/img/user.png'\" alt=\"\"\r\n                    class=\"img-fluid img-circle\">\r\n                </div>\r\n\r\n                <div class=\"upload-btn-wrapper\">\r\n                  <button class=\"btn btn-send\">Upload a file</button>\r\n                  <input type=\"file\" name=\"myfile\" #input (change)=\"processFileAddMode($event)\" />\r\n                </div>\r\n              </div>\r\n              <form [formGroup]=\"addChildForm\">\r\n                <div class=\"row  mt-20\">\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">First name</label>\r\n                      <input type=\"text \" formControlName=\"firstname\" class=\"form-control\" id=\"\" aria-describedby=\"\"\r\n                        placeholder=\"Enter First Name\">\r\n                      <div *ngIf=\"a.firstname.invalid && (a.firstname.dirty || a.firstname.touched)\"\r\n                        class=\"text-left errormsg\">\r\n                        <span *ngIf=\"a.firstname.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please enter first name</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n\r\n                  </div>\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Last name</label>\r\n                      <input type=\"text \" formControlName=\"lastname\" class=\"form-control\" id=\"\" aria-describedby=\"\"\r\n                        placeholder=\"Enter Last Name\">\r\n                      <div *ngIf=\"a.lastname.invalid && (a.lastname.dirty || a.lastname.touched)\"\r\n                        class=\"text-left errormsg\">\r\n                        <span *ngIf=\"a.lastname.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please enter last name</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n\r\n                <div class=\"row \">\r\n\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Contact Number</label>\r\n                      <input type=\"number \" formControlName=\"mobile\" class=\"form-control\" id=\"\" aria-describedby=\"\"\r\n                        placeholder=\"Phone\">\r\n                      <div *ngIf=\"a.mobile.invalid && (a.mobile.dirty || a.mobile.touched)\" class=\"text-left errormsg\">\r\n                        <span *ngIf=\"a.mobile.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please enter contact number</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"exampleFormControlSelect1\">Gender</label>\r\n                      <select class=\"form-control\" formControlName=\"gender\" id=\"exampleFormControlSelect1\">\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"1\">Male</option>\r\n                        <option value=\"2\">Female</option>\r\n                      </select>\r\n                      <div *ngIf=\"a.gender.invalid && (a.gender.dirty || a.gender.touched)\" class=\"text-left errormsg\">\r\n                        <span *ngIf=\"a.gender.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select gender</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"row \">\r\n\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Date of Birth</label>\r\n                      <input type=\"text\" placeholder=\"Select date\" formControlName=\"birthdate\" showWeekNumbers=\"false\"\r\n                        [maxDate]=\"today\" container=\"\" class=\"form-control\" [bsConfig]=\"dpConfig\" bsDatepicker>\r\n                      <div *ngIf=\"a.birthdate.invalid && (a.birthdate.dirty || a.birthdate.touched)\"\r\n                        class=\"text-left errormsg\">\r\n                        <span *ngIf=\"a.birthdate.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select birthdate</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Address</label>\r\n                      <input type=\"text \" formControlName=\"address\" class=\"form-control\" id=\"\" aria-describedby=\"\"\r\n                        placeholder=\"Address\">\r\n                      <div *ngIf=\"a.address.invalid && (a.address.dirty || a.address.touched)\"\r\n                        class=\"text-left errormsg\">\r\n                        <span *ngIf=\"a.address.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please enter address</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"row \">\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"exampleFormControlSelect1\">Country</label>\r\n                      <select class=\"form-control\" placeholder=\"Country\" formControlName=\"country\"\r\n                        id=\"exampleFormControlSelect1\" (change)=\"getStatesListAddMode();clearStateCityAddMode()\">\r\n                        <option value=\"\">Select Country</option>\r\n                        <option *ngFor=\"let countries of countryListAddMode\" [value]=\"countries.id\">\r\n                          {{countries.countryName}}</option>\r\n                      </select>\r\n                      <div *ngIf=\"a.country.invalid && (a.country.dirty || a.country.touched)\"\r\n                        class=\"text-left errormsg\">\r\n                        <span *ngIf=\"a.country.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select country</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"exampleFormControlSelect1\">State</label>\r\n                      <select class=\"form-control\" placeholder=\"State\" formControlName=\"state\"\r\n                        id=\"exampleFormControlSelect1\" (change)=\"getCitiesListAddMode();clearCityAddMode()\">\r\n                        <option value=\"\">Select State</option>\r\n                        <option *ngFor=\"let states of stateListAddMode\" [value]=\"states.id\">{{states.stateName}}\r\n                        </option>\r\n                      </select>\r\n                      <div *ngIf=\"a.state.invalid && (a.state.dirty || a.state.touched)\" class=\"text-left errormsg\">\r\n                        <span *ngIf=\"a.state.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select city</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"row \">\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">City</label>\r\n                      <select class=\"form-control\" placeholder=\"City\" formControlName=\"city\"\r\n                        id=\"exampleFormControlSelect1\">\r\n                        <option value=\"\">Select City</option>\r\n                        <option *ngFor=\"let cities of cityListAddMode\" [value]=\"cities.id\">{{cities.cityName}}</option>\r\n                      </select>\r\n                      <div *ngIf=\"a.city.invalid && (a.city.dirty || a.city.touched)\" class=\"text-left errormsg\">\r\n                        <span *ngIf=\"a.city.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select city</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Zip Code</label>\r\n                      <input type=\"text \" maxlength=\"6\" (keypress)=\"commonService.allowOnlyNumber($event)\"\r\n                        formControlName=\"zipcode\" class=\"form-control\" id=\"\" aria-describedby=\"\"\r\n                        placeholder=\"Enter Zip Code\">\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"row mb-20\">\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Physician name</label>\r\n                      <input type=\"text\" class=\"form-control\" formControlName=\"physicianname\" id=\"\" aria-describedby=\"\"\r\n                        placeholder=\"Physician name\">\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"exampleFormControlSelect1\">Preferred hospital</label>\r\n                      <input type=\"text \" class=\"form-control\" formControlName=\"preferredhospital\" id=\"\"\r\n                        aria-describedby=\"\" placeholder=\"Preferred hospital\">\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n              <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n              <button type=\"button\" *ngIf=\"isSubscriptionActive\" class=\"btn btn-primary\"\r\n                (click)=\"saveChildDetails('add')\">Save\r\n                Changes</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      <!-- Student Files -->\r\n      <div class=\"modal fade studentfiles\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myLargeModalLabel\"\r\n        aria-hidden=\"true\">\r\n        <div class=\"modal-dialog modal-lg\">\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n              <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Add Files*</h5>\r\n              <button type=\"button\" class=\"close\" data-dismiss=\"modal\" (click)=\"clearImage()\" aria-label=\"Close\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n              <div class=\"row  mt-20\">\r\n                <div class=\"col-lg-12\">\r\n                  <div class=\"upload-profile\">\r\n                    <form [formGroup]=\"ImageUploadForm\">\r\n                      <div class=\"row mb-15 \">\r\n                        <div class=\"col-lg-12\">\r\n                          <div class=\"form-group\">\r\n                            <h4>Upload Files(Max Limit 3)</h4>\r\n                            <p-fileUpload name=\"myfile[]\" #pform uploadLabel=\"Upload\" maxFileSize=\"5000000\"\r\n                              [accept]=\"allowedImageFileType\" multiple=\"multiple\" (onSelect)=\"limitOnImageFiles($event)\"\r\n                              [showUploadButton]=\"showUploadBtn\" customUpload=\"true\"\r\n                              (uploadHandler)=\"myImageUploader($event)\"></p-fileUpload>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n              <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"clearImage()\">Close</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Recurring Billing List -->\r\n      <div class=\"modal fade recurringbilling\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myLargeModalLabel\"\r\n        aria-hidden=\"true\">\r\n        <div class=\"modal-dialog modal-lg\">\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n              <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">\r\n                {{addMode == true ? 'Add Recurring Billing' : 'Edit Recurring Billing'}}</h5>\r\n              <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n              <form [formGroup]=\"recurringBillingForm\">\r\n\r\n                <div class=\"row\">\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Billing Type*</label>\r\n                      <input type=\"text \" disabled=\"true\" formControlName=\"billingtype\" class=\"form-control\" id=\"\"\r\n                        aria-describedby=\"\" placeholder=\"Enter Billing Type\">\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Ledger Type*</label>\r\n                      <input type=\"text \" disabled=\"true\" formControlName=\"ledgertype\" class=\"form-control\" id=\"\"\r\n                        aria-describedby=\"\" placeholder=\"Enter Ledger Type\">\r\n                    </div>\r\n                  </div>\r\n\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Transaction Type*</label>\r\n                      <select class=\"form-control\" placeholder=\"Transaction type\" formControlName=\"transactiontype\"\r\n                        id=\"exampleFormControlSelect1\" (change)=\"getDescriptionList($event.target.value);\">\r\n                        <option value=\"\">Select Transaction Type*</option>\r\n                        <option value=\"1\">Tuition Charge</option>\r\n                        <option value=\"2\">Other Charge</option>\r\n                        <option value=\"3\">Credit</option>\r\n                      </select>\r\n                      <div *ngIf=\"c.transactiontype.invalid && (c.transactiontype.dirty || c.transactiontype.touched)\"\r\n                        class=\"text-left errormsg\">\r\n                        <span *ngIf=\"c.transactiontype.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select transaction type</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Billing Description*</label>\r\n                      <select class=\"form-control\" placeholder=\"Description\" formControlName=\"description\"\r\n                        id=\"exampleFormControlSelect1\" (change)=\"getAmount($event.target.value)\">\r\n                        <option value=\"\">Select Description</option>\r\n                        <option *ngFor=\"let description of descriptionList\" [value]=\"description.value\">\r\n                          {{description.name}}\r\n                      </select>\r\n                      <div *ngIf=\"c.description.invalid && (c.description.dirty || c.description.touched)\"\r\n                        class=\"text-left errormsg\">\r\n                        <span *ngIf=\"c.description.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select description</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n\r\n                <div class=\"row \">\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Billing Cycle*</label>\r\n                      <select class=\"form-control\" placeholder=\"Billing Cycle\" formControlName=\"billing\"\r\n                        id=\"exampleFormControlSelect1\">\r\n                        <option value=\"\">Select Billing Cycle</option>\r\n                        <option *ngFor=\"let feetype of feeTypeList\" [value]=\"feetype.feeTypeId\">{{feetype.feeTypeName}}\r\n                        </option>\r\n                      </select>\r\n                      <div *ngIf=\"c.billing.invalid && (c.billing.dirty || c.billing.touched)\"\r\n                        class=\"text-left errormsg\">\r\n                        <span *ngIf=\"c.billing.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please select billing\r\n                            cycle</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Amount/Credit</label>\r\n                      <input type=\"text \" (keypress)=\"commonService.allowOnlyNumber($event)\" class=\"form-control\"\r\n                        formControlName=\"amount\" id=\"\" aria-describedby=\"\" placeholder=\"Enter amount\">\r\n                      <div *ngIf=\"c.amount.invalid && (c.amount.dirty || c.amount.touched)\" class=\"text-left errormsg\">\r\n                        <span *ngIf=\"c.amount.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\"> Please enter amount</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Start Date*</label>\r\n                      <input type=\"text\" container=\"\" placeholder=\"Select start date\" formControlName=\"startdate\"\r\n                        showWeekNumbers=\"false\" [minDate]=\"tomorrow\" [maxDate]=\"EnrolEndtDate\" class=\"form-control\"\r\n                        [bsConfig]=\"dpConfig\" bsDatepicker>\r\n                      <div *ngIf=\"c.startdate.invalid && (c.startdate.dirty || c.startdate.touched)\"\r\n                        class=\"text-left errormsg\">\r\n                        <span *ngIf=\"c.startdate.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\">Please select start date</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-lg-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">End Date*</label>\r\n                      <input type=\"text\" container=\"\" placeholder=\"Select end date\" formControlName=\"enddate\"\r\n                        showWeekNumbers=\"false\" class=\"form-control\" [minDate]=\"today\" [maxDate]=\"EnrolEndtDate\"\r\n                        [bsConfig]=\"dpConfig\" bsDatepicker>\r\n                      <div *ngIf=\"c.enddate.invalid && (c.enddate.dirty || c.enddate.touched)\"\r\n                        class=\"text-left errormsg\">\r\n                        <span *ngIf=\"c.enddate.errors.required\">\r\n                          <i class=\"fa fa-exclamation-circle\"></i> <span class=\"\">Please select end date</span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n              </form>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n              <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n              <button type=\"button\" *ngIf=\"isSubscriptionActive\" class=\"btn btn-primary\"\r\n                (click)=\"verifyRecurringBillingForm()\">{{addMode == true ? 'Add Recurring Billing' : 'Save Changes'}}</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n\r\n    </div>\r\n\r\n\r\n  </div>\r\n</div>\r\n\r\n\r\n<ngx-spinner type=\"ball-atom\" size=\"medium\" color=\"#58A7FE\"></ngx-spinner>\r\n<app-confirm-box></app-confirm-box>"

/***/ }),

/***/ "./src/app/layout/agency-admin/components/agency-student-details/agency-student-details.component.ts":
/*!***********************************************************************************************************!*\
  !*** ./src/app/layout/agency-admin/components/agency-student-details/agency-student-details.component.ts ***!
  \***********************************************************************************************************/
/*! exports provided: AgencyStudentDetailsComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AgencyStudentDetailsComponent", function() { return AgencyStudentDetailsComponent; });
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _parent_shared_constant__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../parent/shared/constant */ "./src/app/layout/parent/shared/constant.ts");
/* harmony import */ var _teacher_shared_constant__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../teacher/shared/constant */ "./src/app/layout/teacher/shared/constant.ts");
/* harmony import */ var ngx_bootstrap__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ngx-bootstrap */ "./node_modules/ngx-bootstrap/esm5/ngx-bootstrap.js");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ngx-spinner */ "./node_modules/ngx-spinner/fesm5/ngx-spinner.js");
/* harmony import */ var _shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../shared/services/error-handler/error-handler.service */ "./src/app/shared/services/error-handler/error-handler.service.ts");
/* harmony import */ var _shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../shared/services/common/common.service */ "./src/app/shared/services/common/common.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var primeng_api__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! primeng/api */ "./node_modules/primeng/api.js");
/* harmony import */ var primeng_api__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(primeng_api__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var _shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../shared/services/notification-service/notification.service */ "./src/app/shared/services/notification-service/notification.service.ts");
/* harmony import */ var _shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../shared/services/agency-api-service/agency-api.service */ "./src/app/layout/agency-admin/components/shared/services/agency-api-service/agency-api.service.ts");
/* harmony import */ var _shared_constatant__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../shared/constatant */ "./src/app/layout/agency-admin/components/shared/constatant.ts");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};














var AgencyStudentDetailsComponent = /** @class */ (function () {
    function AgencyStudentDetailsComponent(apiService, error, spinner, notification, commonService, fb, route, confirmationService) {
        this.apiService = apiService;
        this.error = error;
        this.spinner = spinner;
        this.notification = notification;
        this.commonService = commonService;
        this.fb = fb;
        this.route = route;
        this.confirmationService = confirmationService;
        this.isImageUploaderDisplay = true;
        this.allowedImageFileType = 'application/pdf,image/*';
        this.studentName = '';
        this.parentId = 0;
        this.reqParentId = 0;
        this.childList = [];
        this.childVM = {};
        this.countryList = [];
        this.countryListAddMode = [];
        this.stateList = [];
        this.stateListAddMode = [];
        this.cityList = [];
        this.cityListAddMode = [];
        this.today = new Date();
        this.nextday = new Date();
        this.formData = new FormData();
        this.flag = false;
        this.loader = true;
        this.guardianList = [];
        this.guardianDetailsVm = {};
        this.allergyList = [];
        this.immunizationList = [];
        this.medicationList = [];
        this.disabilityList = [];
        this.classList = [];
        this.classListBilling = [];
        this.pageNo = 0;
        this.totalRecord = 0;
        this.doseList = [];
        this.relationTypeList = [];
        this.immunizationtypeListForDeopdown = [];
        this.reasonNotToAllowbox = true;
        this.medicationVM = {};
        this.classVM = {};
        this.billingVM = {};
        this.showOthwerImmunization = false;
        this.immunizationVM = {};
        this.disabilityId = 0;
        this.guardianImageUploadFlag = false;
        this.allergyType = [];
        this.allergyNameList = [];
        this.allergyReactionList = [];
        this.allergyVM = {};
        this.id = 0;
        this.authorizedPersonList = [];
        this.restrictedPersonList = [];
        this.studentfileList = [];
        this.classesList = [];
        this.feeTypeList = [];
        this.showEmergency = false;
        this.emeregencyLable = 'All Contact';
        this.imageUrlArray = [];
        this.showUploadBtn = true;
        this.descriptionList = [];
        this.recurringBillingList = [];
        this.recurringId = 0;
        this.busList = [];
        this.dpConfig = new ngx_bootstrap__WEBPACK_IMPORTED_MODULE_4__["BsDatepickerConfig"]();
        this.isSubscriptionActive = this.commonService.getSubscriptionStatus();
    }
    AgencyStudentDetailsComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.spinner.show();
        this.tomorrow = new Date();
        this.tomorrow.setDate(this.tomorrow.getDate() + 1);
        this.route.params.subscribe(function (params) {
            _this.id = params['id'];
            _this.reqParentId = params['parentid'];
        });
        this.agencyId = this.commonService.getAgencyId();
        this.dpConfig = Object.assign({}, { containerClass: 'theme-dark-blue' }, { showWeekNumbers: false });
        this.spinner.show();
        this.createImageUploadForm();
        this.getStudentAllDetails();
        this.childDetailsForm();
        this.childAddForm();
        this.guardianDetailsForm();
        this.createMedicationForm();
        this.createimmunizationForm();
        this.createAllergyForm();
        this.CreateRecurringBillingForm();
        this.getFeeType();
        this.getAllBusList();
        this.getallclassesByStudentId();
    };
    AgencyStudentDetailsComponent.prototype.limitOnImageFiles = function (event) {
        if (event.files.length > 3) {
            this.notification.warning({ message: 'You can upload maximum 3 images only', title: '' });
        }
    };
    AgencyStudentDetailsComponent.prototype.myImageUploader = function (event) {
        this.spinner.show();
        this.flag = true;
        this.isImageArray = true;
        this.formData = new FormData();
        var count = 0;
        if (event.files.length <= 3) {
            for (var index = 0; index < event.files.length; index++) {
                this.formData.append(event.files[index].name, event.files[index]);
                count = index;
                if (count === event.files.length - 1) {
                    this.uploadMedia();
                }
            }
        }
        else {
            this.spinner.hide();
            this.notification.warning({ message: 'You can upload maximum 3 files only', title: '' });
        }
    };
    AgencyStudentDetailsComponent.prototype.uploadMedia = function () {
        var _this = this;
        if (this.ImageUploadForm.valid) {
            this.imageUrlArray = [];
            var headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_13__["HttpHeaders"]();
            headers.set('Content-Type', null);
            headers.set('Accept', 'multipart/form-data');
            var params = headers;
            var loggedInId = this.commonService.getLoggedInUserId();
            var Id = loggedInId.toString();
            this.formData.append('loggedInId', Id);
            this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_3__["TeacherAPIURLs"].MultipleImageUpload, this.formData, params).subscribe(function (res) {
                if (res.body.statusCode === 200) {
                    _this.flag = false;
                    if (_this.isImageArray === true) {
                        res.body.data.forEach(function (x) {
                            _this.imageUrlArray.push({
                                'id': 0,
                                'FilePath': x
                            });
                        });
                    }
                    _this.savePost();
                    _this.formData = new FormData();
                }
                else {
                    _this.spinner.hide();
                    _this.error.unknownError();
                    _this.formData = new FormData();
                }
            }, function (err) {
                _this.spinner.hide();
                _this.error.commonError(err);
                _this.formData = new FormData();
            });
        }
        else {
            this.spinner.hide();
            this.commonService.validateAllFields(this.ImageUploadForm);
        }
    };
    // For Get School Bus
    AgencyStudentDetailsComponent.prototype.getAllBusList = function () {
        var _this = this;
        this.busList = [];
        var data = {
            'agencyID': this.commonService.getAgencyId()
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_12__["AgencyAPIURLs"].GetAllBus, data, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.busList = res.body.data;
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyStudentDetailsComponent.prototype.savePost = function () {
        var _this = this;
        if (this.ImageUploadForm.valid) {
            if (this.imageUrlArray.length > 0) {
                var data = {
                    'agencyID': this.commonService.getAgencyId(),
                    'studentID': this.id,
                    'studentFiles': this.imageUrlArray,
                    'createdBy': this.commonService.getLoggedInUserId()
                };
                this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_12__["AgencyAPIURLs"].SavestudentFiles, data, null).subscribe(function (res) {
                    if (res.body.statusCode === 200) {
                        $('.studentfiles').modal('hide');
                        _this.clearImage();
                        _this.spinner.hide();
                        _this.getalluploadedByStudentId();
                        _this.notification.success({ message: 'Student Files Upload successfully', title: '' });
                    }
                    else {
                        _this.spinner.hide();
                        _this.error.unknownError();
                    }
                }, function (err) {
                    _this.spinner.hide();
                    _this.error.commonError(err);
                });
            }
            else {
                this.spinner.hide();
                this.notification.warning({ message: 'Please upload Image or PDF Files', title: '' });
            }
        }
        else {
            this.spinner.hide();
            this.commonService.validateAllFields(this.ImageUploadForm);
        }
    };
    AgencyStudentDetailsComponent.prototype.clearImage = function () {
        this.createImageUploadForm();
        this.imageUrlArray = [];
        this.imageUrlArray.length = 0;
        this.pform.clear();
    };
    AgencyStudentDetailsComponent.prototype.createImageUploadForm = function () {
        this.ImageUploadForm = this.fb.group({
            isimage: ['Image']
        });
    };
    AgencyStudentDetailsComponent.prototype.getData = function () {
        var _this = this;
        setTimeout(function () {
            _this.spinner.hide();
        }, 500);
        //
    };
    AgencyStudentDetailsComponent.prototype.clearForm = function () {
        // this.participantsList = [];
        // this.studentList = [];
        // this.ImageUploadForm();
    };
    AgencyStudentDetailsComponent.prototype.closeDialog = function () {
        // this.closeModal = 'modal';
        $('.addimage').modal('hide');
    };
    AgencyStudentDetailsComponent.prototype.onUpload = function (event) {
        // for (const file of event.files) {
        this.formData.append('image', event.files[0]);
        // this.uploadedFiles.push(file);
        // }
    };
    AgencyStudentDetailsComponent.prototype.childDetailsForm = function () {
        this.childForm = this.fb.group({
            firstname: [this.childVM.firstName, _angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required],
            lastname: [this.childVM.lastName, _angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required],
            mobile: [this.childVM.ChildsContactNumber, _angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required],
            address: [this.childVM.address, _angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required],
            country: [this.childVM.countryId, _angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required],
            city: [this.childVM.cityId, _angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required],
            state: [this.childVM.stateId, _angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required],
            zipcode: [this.childVM.postalCode],
            birthdate: [this.childVM.dateOfBirth, _angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required],
            photo: [this.childVM.imagePath],
            gender: [this.childVM.genderID, _angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required],
            physicianname: [this.childVM.PhysicianName],
            preferredhospital: [this.childVM.PreferredHospital],
            physicianContactNumber: [this.childVM.physicianContactNumber],
            physicianaddress: [this.childVM.PhysicianAddress],
            childstartdate: [this.childVM.childStartDate, _angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required],
            childnotes: [this.childVM.ChildNotes],
            bus: [this.childVM.busID]
        });
    };
    AgencyStudentDetailsComponent.prototype.childAddForm = function () {
        this.addChildForm = this.fb.group({
            firstname: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required],
            lastname: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required],
            mobile: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required],
            address: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required],
            country: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required],
            city: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required],
            state: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required],
            zipcode: [''],
            birthdate: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required],
            photo: [''],
            gender: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required],
            physicianname: [''],
            preferredhospital: [''],
            physicianContactNumber: [''],
            physicianaddress: [''],
            childstartdate: [''],
            childnotes: [''],
            bus: [0]
        });
    };
    AgencyStudentDetailsComponent.prototype.guardianDetailsForm = function () {
        if (this.guardianDetailsVm.guardianId === undefined || this.guardianDetailsVm.guardianId === 0) {
            this.guardianForm = this.fb.group({
                firstname: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required],
                lastname: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required],
                relation: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required],
                mobile: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required],
                allowpickup: [false],
                notallowedreason: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required]
            });
        }
        else {
            this.guardianForm = this.fb.group({
                firstname: [this.guardianDetailsVm.firstName, _angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required],
                lastname: [this.guardianDetailsVm.lastName, _angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required],
                relation: [this.guardianDetailsVm.relationTypeId, _angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required],
                mobile: [this.guardianDetailsVm.mobile, _angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required],
                allowpickup: [this.guardianDetailsVm.isAuthorizedToPickup],
                notallowedreason: [this.guardianDetailsVm.reasonNotToAllow]
            });
        }
    };
    AgencyStudentDetailsComponent.prototype.createMedicationForm = function () {
        if (this.medicationVM.studentMedicationID === undefined || this.medicationVM.studentMedicationID === 0) {
            this.medicationForm = this.fb.group({
                medication: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required],
                strength: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required],
                units: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required],
                dose: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required],
                howtotake: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required],
                othermedication: [''],
                startdate: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required],
                enddate: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required]
            });
        }
        else {
            this.medicationForm = this.fb.group({
                medication: [this.medicationVM.medicationName, _angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required],
                strength: [this.medicationVM.strength, _angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required],
                units: [this.medicationVM.units, _angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required],
                dose: [this.medicationVM.doseRepeatID, _angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required],
                howtotake: [this.medicationVM.howTaken, _angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required],
                othermedication: [this.medicationVM.otherMedication],
                startdate: [this.medicationVM.startDate, _angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required],
                enddate: [this.medicationVM.endDate, _angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required]
            });
        }
    };
    AgencyStudentDetailsComponent.prototype.createimmunizationForm = function () {
        if (this.immunizationVM.studentImmunizationID === undefined || this.immunizationVM.studentImmunizationID === 0) {
            this.immunizationForm = this.fb.group({
                immunization: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required],
                date: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required],
                other: [''],
                abbrivation: ['']
            });
        }
        else {
            this.immunizationForm = this.fb.group({
                immunization: [this.immunizationVM.immunizationID, _angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required],
                date: [this.immunizationVM.dateReceived, _angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required],
                other: [this.immunizationVM.otherImmunization],
                abbrivation: [this.immunizationVM.abbreviation]
            });
        }
    };
    Object.defineProperty(AgencyStudentDetailsComponent.prototype, "f", {
        // convenience getter for easy access to form fields
        get: function () { return this.childForm.controls; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AgencyStudentDetailsComponent.prototype, "a", {
        get: function () { return this.addChildForm.controls; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AgencyStudentDetailsComponent.prototype, "g", {
        get: function () { return this.guardianForm.controls; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AgencyStudentDetailsComponent.prototype, "m", {
        get: function () { return this.medicationForm.controls; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AgencyStudentDetailsComponent.prototype, "i", {
        get: function () { return this.immunizationForm.controls; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AgencyStudentDetailsComponent.prototype, "k", {
        get: function () { return this.ImageUploadForm.controls; },
        enumerable: true,
        configurable: true
    });
    AgencyStudentDetailsComponent.prototype.getAllChildrenList = function () {
        var _this = this;
        // this.spinner.show();
        this.childList = [];
        var req = {
            'AgencyID': this.commonService.getAgencyId(),
            'classID': 0,
            'studentID': this.id,
            'parentID': this.commonService.getReleventUserId('userdetails'),
            'studentName': '',
        };
        this.apiService.postData(_parent_shared_constant__WEBPACK_IMPORTED_MODULE_2__["ParentAPIURLs"].GetAllStudentsOfParent, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                if (res.body.data.length > 0 && res.body.data !== []) {
                    _this.childList = res.body.data;
                    _this.childList[0].classActive = 'active';
                    _this.getChildDetails(_this.childList[0]);
                    console.log('chi', _this.childList);
                }
                //  this.spinner.hide();
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyStudentDetailsComponent.prototype.getStudentAllDetails = function () {
        var _this = this;
        var data = {
            'agencyID': this.commonService.getAgencyId(),
            'studentID': this.id,
            'ParentID': this.reqParentId
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_3__["TeacherAPIURLs"].GetStudentInformation, data, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                if (res.body.data) {
                    console.log(res.body.data, '     11111');
                    _this.studentName = res.body.data.studentName;
                    _this.getChildDetails(res.body.data);
                    _this.spinner.hide();
                }
                else {
                    _this.spinner.hide();
                }
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyStudentDetailsComponent.prototype.getChildDetails = function (value) {
        var _this = this;
        this.classList = [];
        if (value !== null || value !== undefined) {
            $('#basicinfo-tab').tab('show');
            this.childVM.address = value.address;
            this.childVM.firstName = value.firstName;
            this.childVM.lastName = value.lastName;
            this.childVM.genderID = value.genderID;
            this.childVM.PhysicianName = value.physicianName;
            this.childVM.ChildNotes = value.childNotes;
            this.childVM.PhysicianAddress = value.physicianAddress;
            if (value.childStartDate == null) {
                this.childVM.childStartDate = '';
            }
            else {
                this.childVM.childStartDate = new Date(value.childStartDate);
            }
            this.childVM.PreferredHospital = value.preferredHospital;
            this.childVM.countryId = value.countryId;
            this.childVM.stateId = value.stateId;
            this.childVM.cityId = value.cityId;
            this.childVM.postalCode = value.postalCode;
            this.childVM.ChildsContactNumber = value.childsContactNumber;
            this.childVM.address = value.address;
            this.childVM.dateOfBirth = new Date(value.dateOfBirth);
            this.childVM.imagePath = value.imagePath;
            this.childVM.studentId = value.studentId;
            this.parentId = value.parentID;
            this.classList = value.enrolledClassesInformation;
            this.childVM.physicianContactNumber = value.physicianContactNumber;
            this.childVM.busID = value.busID;
            // this.getStudentDetails();
            this.childDetailsForm();
            this.getAllCountries();
            this.getStatesList();
            this.getCitiesList();
            setTimeout(function () {
                _this.spinner.hide();
            }, 500);
        }
    };
    AgencyStudentDetailsComponent.prototype.getAllCountries = function () {
        var _this = this;
        this.spinner.show();
        this.countryList = [];
        var req = {
            'AgencyID': this.commonService.getAgencyId(),
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_3__["TeacherAPIURLs"].GetAllCountry, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.countryList = res.body.data;
                _this.spinner.hide();
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyStudentDetailsComponent.prototype.getStatesList = function () {
        var _this = this;
        this.spinner.show();
        this.stateList = [];
        this.cityList = [];
        var req = {
            'AgencyID': this.commonService.getAgencyId(),
            'CountryId': this.childForm.value.country
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_3__["TeacherAPIURLs"].GetAllStates, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.stateList = res.body.data;
                _this.spinner.hide();
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyStudentDetailsComponent.prototype.getCitiesList = function () {
        var _this = this;
        this.spinner.show();
        this.cityList = [];
        var req = {
            'AgencyID': this.commonService.getAgencyId(),
            'StateId': this.childForm.value.state
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_3__["TeacherAPIURLs"].GetAllCities, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.cityList = res.body.data;
                _this.spinner.hide();
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyStudentDetailsComponent.prototype.AddActivClassStudentList = function (data) {
        this.spinner.show();
        this.childList.forEach(function (x) {
            if (data.studentId === x.studentId) {
                x.classActive = 'active';
            }
            else {
                x.classActive = '';
            }
        });
        this.getChildDetails(data);
    };
    AgencyStudentDetailsComponent.prototype.clearStateCity = function () {
        this.childForm.controls['state'].setValue('');
        this.childForm.controls['city'].setValue('');
    };
    AgencyStudentDetailsComponent.prototype.clearCity = function () {
        this.childForm.controls['city'].setValue('');
    };
    AgencyStudentDetailsComponent.prototype.processFile = function (event) {
        var _this = this;
        this.formData = new FormData();
        var self = this;
        if (event.target.files && event.target.files[0]) {
            if (event.target.files[0].type !== 'image/png' && event.target.files[0].type !== 'image/jpeg' &&
                event.target.files[0].type !== 'image/jpg') {
                self.fileData = null;
                self.profileimage = '';
                this.notification.warning({ message: 'File not formatt not supported', title: '' });
                return false;
            }
            var reader_1 = new FileReader();
            this.formData = new FormData();
            this.formData.append('fileData', event.target.files[0], event.target.files[0].name);
            self.fileData = this.formData;
            reader_1.readAsDataURL(event.target.files[0]); // read file as data url
            setTimeout(function () {
                _this.image = reader_1.result;
                _this.childVM.imagePath = _this.image;
            }, 100);
            console.log('mge', this.image);
            this.flag = true;
        }
    };
    // Method for getting medication related information
    AgencyStudentDetailsComponent.prototype.getStudentDetails = function () {
        var _this = this;
        this.getAllDoseRepeat();
        this.getImmunizationType();
        this.getAllergyType();
        this.getAllergyName();
        this.getAllergyReactionType();
        this.spinner.show();
        this.allergyList = [];
        this.immunizationList = [];
        this.medicationList = [];
        this.disabilityList = [];
        this.classList = [];
        var data = {
            'agencyID': this.commonService.getAgencyId(),
            'studentID': this.childVM.studentId,
            'ParentID': this.reqParentId
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_3__["TeacherAPIURLs"].GetStudentInformation, data, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                if (res.body.data) {
                    _this.allergyList = res.body.data.studentAllergies;
                    _this.immunizationList = res.body.data.studentImmunizations;
                    _this.medicationList = res.body.data.studentMedications;
                    _this.disabilityList = res.body.data.studentDisabilities;
                    _this.classList = res.body.data.enrolledClassesInformation;
                    console.log('med', _this.disabilityList);
                    _this.spinner.hide();
                }
                else {
                    _this.spinner.hide();
                }
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyStudentDetailsComponent.prototype.saveChildDetails = function (type) {
        this.spinner.show();
        if (this.flag === true) {
            this.UploadImage(type);
            this.flag = false;
        }
        else {
            if (type === 'add') {
                this.verifyChildAddForm(type);
            }
            else {
                this.verifyChildUpdateForm(type);
            }
        }
    };
    AgencyStudentDetailsComponent.prototype.UploadImage = function (type) {
        var _this = this;
        this.apiService.uploadImage(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_3__["TeacherAPIURLs"].UploadImage, this.fileData, null).subscribe(function (res) {
            if (res.status === 200) {
                _this.image = res.body.data;
                if (type === 'add') {
                    _this.addImagePreview = res.body.data;
                    _this.verifyChildAddForm(type);
                }
                else {
                    _this.image = res.body.data;
                    _this.verifyChildUpdateForm(type);
                }
            }
        }, function (err) {
            _this.error.commonError(err);
        });
    };
    AgencyStudentDetailsComponent.prototype.verifyChildUpdateForm = function (type) {
        if (this.childForm.valid) {
            this.spinner.show();
            this.childVM.firstName = this.childForm.value.firstname;
            this.childVM.lastName = this.childForm.value.lastname;
            this.childVM.parentEmailAddress = this.childForm.value.email;
            this.childVM.ChildsContactNumber = this.childForm.value.mobile;
            this.childVM.address = this.childForm.value.address;
            this.childVM.cityId = this.childForm.value.city;
            this.childVM.stateId = this.childForm.value.state;
            this.childVM.countryId = this.childForm.value.country;
            this.childVM.postalCode = this.childForm.value.zipcode;
            this.childVM.dateOfBirth = this.childForm.value.birthdate;
            this.childVM.genderID = this.childForm.value.gender;
            this.childVM.PhysicianName = this.childForm.value.physicianname;
            this.childVM.ChildNotes = this.childForm.value.childnotes;
            this.childVM.PhysicianAddress = this.childForm.value.physicianaddress;
            this.childVM.childStartDate = this.childForm.value.childstartdate;
            this.childVM.PreferredHospital = this.childForm.value.preferredhospital;
            this.childVM.physicianContactNumber = this.childForm.value.physicianContactNumber;
            this.childVM.parentID = this.parentId;
            this.childVM.busID = this.childForm.value.bus;
            this.childVM.transportationID = 1; // change this static value
            this.childVM.feePaymentTypeID = 1; // change this static value
            this.childVM.studentId = (this.childVM.studentId !== undefined && this.childVM.studentId !== null) ? this.childVM.studentId : 0;
            this.childVM.imagePath = this.image === undefined ? this.childVM.imagePath : this.image;
            this.childVM.agencyID = this.agencyId;
            this.childVM.id = (this.childVM.studentId !== undefined && this.childVM.studentId !== null) ? this.childVM.studentId : 0;
            this.addUpdateChildDateUsingAPI(this.childVM, type);
        }
        else {
            this.spinner.hide();
            this.commonService.validateAllFields(this.childForm);
        }
    };
    AgencyStudentDetailsComponent.prototype.verifyChildAddForm = function (type) {
        if (this.addChildForm.valid) {
            this.spinner.show();
            this.childVM.firstName = this.addChildForm.value.firstname;
            this.childVM.lastName = this.addChildForm.value.lastname;
            this.childVM.parentEmailAddress = this.addChildForm.value.email;
            this.childVM.ChildsContactNumber = this.addChildForm.value.mobile;
            this.childVM.address = this.addChildForm.value.address;
            this.childVM.cityId = this.addChildForm.value.city;
            this.childVM.stateId = this.addChildForm.value.state;
            this.childVM.countryId = this.addChildForm.value.country;
            this.childVM.postalCode = this.addChildForm.value.zipcode;
            this.childVM.dateOfBirth = this.addChildForm.value.birthdate;
            this.childVM.genderID = this.addChildForm.value.gender;
            this.childVM.PhysicianName = this.addChildForm.value.physicianname;
            this.childVM.ChildNotes = this.childForm.value.childnotes;
            this.childVM.PhysicianAddress = this.childForm.value.physicianaddress;
            this.childVM.childStartDate = this.childForm.value.childstartdate;
            this.childVM.PreferredHospital = this.addChildForm.value.preferredhospital;
            this.childVM.physicianContactNumber = this.addChildForm.value.physicianContactNumber === '' ? 0 :
                this.addChildForm.value.physicianContactNumber;
            this.childVM.parentID = this.parentId;
            this.childVM.busID = this.childForm.value.bus;
            this.childVM.transportationID = 1; // change this static value
            this.childVM.feePaymentTypeID = 1; // change this static value
            this.childVM.studentId = 0;
            this.childVM.imagePath = this.addImagePreview;
            this.childVM.agencyID = this.agencyId;
            this.childVM.id = 0;
            this.addUpdateChildDateUsingAPI(this.childVM, type);
        }
        else {
            this.spinner.hide();
            this.commonService.validateAllFields(this.addChildForm);
        }
    };
    AgencyStudentDetailsComponent.prototype.addUpdateChildDateUsingAPI = function (req, type) {
        var _this = this;
        this.apiService.postDataV2(_parent_shared_constant__WEBPACK_IMPORTED_MODULE_2__["ParentAPIURLs"].SaveStudent, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                //  this.spinner.hide();
                _this.flag = false;
                _this.notification.success({
                    message: type === 'add' ? 'Student added successfully' :
                        'Student information updated successfully', title: ''
                });
                _this.getStudentAllDetails();
            }
            else if (res.body.statusCode === 205) {
                _this.spinner.hide();
                _this.notification.warning({ message: 'Please enter valid name', title: '' });
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyStudentDetailsComponent.prototype.clearAddChildForm = function () {
        this.getAllCountriesAddMode();
        this.addImagePreview = '';
        this.childAddForm();
    };
    AgencyStudentDetailsComponent.prototype.getAllCountriesAddMode = function () {
        var _this = this;
        this.countryListAddMode = [];
        var req = {
            'AgencyID': this.commonService.getAgencyId(),
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_3__["TeacherAPIURLs"].GetAllCountry, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.countryListAddMode = res.body.data;
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyStudentDetailsComponent.prototype.getStatesListAddMode = function () {
        var _this = this;
        this.stateListAddMode = [];
        this.cityListAddMode = [];
        var req = {
            'AgencyID': this.commonService.getAgencyId(),
            'CountryId': this.addChildForm.value.country
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_3__["TeacherAPIURLs"].GetAllStates, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.stateListAddMode = res.body.data;
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyStudentDetailsComponent.prototype.getCitiesListAddMode = function () {
        var _this = this;
        this.cityListAddMode = [];
        var req = {
            'AgencyID': this.commonService.getAgencyId(),
            'StateId': this.addChildForm.value.state
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_3__["TeacherAPIURLs"].GetAllCities, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.cityListAddMode = res.body.data;
                console.log('city', _this.cityList);
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyStudentDetailsComponent.prototype.clearStateCityAddMode = function () {
        this.addChildForm.controls['state'].setValue('');
        this.addChildForm.controls['city'].setValue('');
    };
    AgencyStudentDetailsComponent.prototype.clearCityAddMode = function () {
        this.addChildForm.controls['city'].setValue('');
    };
    // Image process for add chbild Mode
    AgencyStudentDetailsComponent.prototype.processFileAddMode = function (event) {
        var _this = this;
        var self = this;
        if (event.target.files && event.target.files[0]) {
            if (event.target.files[0].type !== 'image/png' && event.target.files[0].type !== 'image/jpeg' &&
                event.target.files[0].type !== 'image/jpg') {
                self.fileData = null;
                self.profileimage = '';
                this.notification.warning({ message: 'File not formatt not supported', title: '' });
                return false;
            }
            var reader_2 = new FileReader();
            this.formData = new FormData();
            this.formData.append('fileData', event.target.files[0], event.target.files[0].name);
            self.fileData = this.formData;
            reader_2.readAsDataURL(event.target.files[0]);
            setTimeout(function () {
                _this.addImagePreview = reader_2.result;
            }, 100);
            this.flag = true;
        }
    };
    // Get Guardin list
    AgencyStudentDetailsComponent.prototype.getGuardianInfo = function () {
        var _this = this;
        this.getRelationType();
        this.guardianList = [];
        this.spinner.show();
        var req = {
            'studentID': this.childVM.studentId,
            'agencyID': this.commonService.getAgencyId(),
            'isAuthorized': true
        };
        this.apiService.postData(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_3__["TeacherAPIURLs"].GetAllGuardiansForStudents, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.spinner.hide();
                _this.guardianList = res.body.data;
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyStudentDetailsComponent.prototype.saveStudentGaurdians = function () {
        this.spinner.show();
        if (this.guardianForm.valid) {
            this.guardianDetailsVm.agencyID = this.commonService.getAgencyId(),
                this.guardianDetailsVm.firstName = this.guardianForm.value.firstname;
            this.guardianDetailsVm.lastName = this.guardianForm.value.lastname;
            this.guardianDetailsVm.mobile = this.guardianForm.value.mobile;
            this.guardianDetailsVm.relationTypeId = this.guardianForm.value.relation;
            this.guardianDetailsVm.isAuthorizedToPickup = this.guardianForm.value.allowpickup;
            this.guardianDetailsVm.reasonNotToAllow = this.guardianForm.value.notallowedreason;
            this.guardianDetailsVm.guardianId = this.guardianDetailsVm.guardianId !== undefined ? this.guardianDetailsVm.guardianId : 0;
            this.guardianDetailsVm.countryId = 0;
            this.guardianDetailsVm.stateId = 0;
            this.guardianDetailsVm.cityId = 0;
            this.guardianDetailsVm.address = '';
            this.guardianDetailsVm.id = this.guardianDetailsVm.guardianId !== undefined ? this.guardianDetailsVm.guardianId : 0;
            this.guardianDetailsVm.studentId = this.childVM.studentId;
            this.guardianDetailsVm.imagePath = this.addImagePreview;
            var msg = '';
            if (this.guardianDetailsVm.guardianId === 0) {
                msg = 'Guardian added successfully ';
            }
            else {
                msg = 'Guardian information updated successfully ';
            }
            this.saveGuardianInfoWithAPI(msg);
        }
        else {
            this.spinner.hide();
            this.commonService.validateAllFields(this.guardianForm);
        }
    };
    AgencyStudentDetailsComponent.prototype.saveGuardianInfoWithAPI = function (msg) {
        var _this = this;
        this.apiService.postData(_parent_shared_constant__WEBPACK_IMPORTED_MODULE_2__["ParentAPIURLs"].SaveStudentGaurdians, this.guardianDetailsVm, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.notification.success({ message: msg, title: '' });
                _this.guardianImageUploadFlag = false;
                _this.getGuardianInfo();
                $('.guardianinfo').modal('hide');
            }
            else if (res.body.statusCode === 205) {
                _this.spinner.hide();
                _this.notification.warning({ message: 'Please enter valid name', title: '' });
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    // Method to delete Guardian
    AgencyStudentDetailsComponent.prototype.deleteGuardian = function (value) {
        var _this = this;
        this.confirmationService.confirm({
            message: 'Do you want to delete this record?',
            accept: function () {
                _this.spinner.show();
                var data = {
                    'guardianId': value.guardianId,
                    'agencyID': _this.commonService.getAgencyId(),
                    'id': value.guardianId,
                    'IsDeleted': true,
                    'DeletedDate': new Date(),
                    'DeletedBy': _this.commonService.getReleventUserId('userdetails'),
                    'studentID': _this.childVM.studentId,
                    'firstName': value.firstName,
                    'lastName': value.lastName
                };
                _this.apiService.postData(_parent_shared_constant__WEBPACK_IMPORTED_MODULE_2__["ParentAPIURLs"].SaveStudentGaurdians, data, null).subscribe(function (res) {
                    if (res.body.statusCode === 200) {
                        _this.deleteGuardianSuccess(value);
                    }
                    else {
                        _this.spinner.hide();
                        _this.error.unknownError();
                    }
                }, function (err) {
                    _this.spinner.hide();
                    _this.error.commonError(err);
                });
            }
        });
    };
    AgencyStudentDetailsComponent.prototype.deleteGuardianSuccess = function (data) {
        var index = this.guardianList.findIndex(function (r) { return r.guardianId === data.guardianId; });
        this.guardianList.splice(index, 1);
        this.spinner.hide();
        this.notification.success({ message: 'This guardian has been deleted successfully', title: '' });
    };
    AgencyStudentDetailsComponent.prototype.getPerticulerGuardianInfo = function (data) {
        this.guardianDetailsVm.isAuthorizedToPickup = data.isAuthorizedToPickup;
        this.guardianDetailsVm.firstName = data.firstName;
        this.guardianDetailsVm.lastName = data.lastName;
        this.guardianDetailsVm.mobile = data.mobile;
        this.guardianDetailsVm.relationTypeId = data.relationTypeId;
        this.guardianDetailsVm.reasonNotToAllow = data.reasonNotToAllow;
        this.guardianDetailsVm.isAuthorizedToPickup = data.isAuthorizedToPickup;
        if (this.guardianDetailsVm.isAuthorizedToPickup === true) {
            this.guardianForm.controls['notallowedreason'].setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].nullValidator);
            this.guardianForm.controls['notallowedreason'].updateValueAndValidity();
        }
        else {
            this.reasonNotToAllowbox = true;
            this.guardianForm.controls['notallowedreason'].setValue('');
            this.guardianForm.controls['notallowedreason'].setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required);
            this.guardianForm.controls['notallowedreason'].updateValueAndValidity();
        }
        this.guardianDetailsVm.guardianId = data.guardianId;
        this.addImagePreview = data.imagePath;
        if (this.guardianDetailsVm.isAuthorizedToPickup === true) {
            this.reasonNotToAllowbox = false;
        }
        else {
            this.reasonNotToAllowbox = true;
        }
        this.guardianDetailsForm();
    };
    AgencyStudentDetailsComponent.prototype.markAsAllowToPickup = function () {
        if (this.guardianForm.value.allowpickup === true) {
            this.reasonNotToAllowbox = false;
            this.guardianForm.controls['notallowedreason'].setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].nullValidator);
            this.guardianForm.controls['notallowedreason'].updateValueAndValidity();
        }
        else {
            this.reasonNotToAllowbox = true;
            this.guardianForm.controls['notallowedreason'].setValue('');
            this.guardianForm.controls['notallowedreason'].setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required);
            this.guardianForm.controls['notallowedreason'].updateValueAndValidity();
        }
    };
    AgencyStudentDetailsComponent.prototype.getRelationType = function () {
        var _this = this;
        this.relationTypeList = [];
        var data = {
            'agencyID': this.commonService.getAgencyId(),
            'studentID': this.childVM.studentId
        };
        this.apiService.postData(_parent_shared_constant__WEBPACK_IMPORTED_MODULE_2__["ParentAPIURLs"].GetRelationType, data, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.relationTypeList = res.body.data;
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyStudentDetailsComponent.prototype.processFileGuardian = function (event) {
        var _this = this;
        var self = this;
        if (event.target.files && event.target.files[0]) {
            if (event.target.files[0].type !== 'image/png' && event.target.files[0].type !== 'image/jpeg' &&
                event.target.files[0].type !== 'image/jpg') {
                self.fileData = null;
                self.profileimage = '';
                this.notification.warning({ message: 'File not formatt not supported', title: '' });
                return false;
            }
            var reader_3 = new FileReader();
            this.formData = new FormData();
            this.formData.append('fileData', event.target.files[0], event.target.files[0].name);
            self.fileData = this.formData;
            reader_3.readAsDataURL(event.target.files[0]); // read file as data url
            setTimeout(function () {
                _this.addImagePreview = reader_3.result;
            }, 100);
            this.guardianImageUploadFlag = true;
        }
    };
    AgencyStudentDetailsComponent.prototype.verifyImageUploadForGuardian = function () {
        if (this.guardianImageUploadFlag === true) {
            this.UploadImageForGuardian();
            this.guardianImageUploadFlag = false;
        }
        else {
            this.saveStudentGaurdians();
        }
    };
    AgencyStudentDetailsComponent.prototype.UploadImageForGuardian = function () {
        var _this = this;
        this.apiService.uploadImage(_teacher_shared_constant__WEBPACK_IMPORTED_MODULE_3__["TeacherAPIURLs"].UploadImage, this.fileData, null).subscribe(function (res) {
            if (res.status === 200) {
                _this.addImagePreview = res.body.data;
                _this.saveStudentGaurdians();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyStudentDetailsComponent.prototype.cleareGuardianForm = function () {
        this.addImagePreview = '';
        this.guardianDetailsVm = {};
        this.reasonNotToAllowbox = true;
        this.guardianDetailsForm();
    };
    // Medication section
    AgencyStudentDetailsComponent.prototype.verifyMedication = function () {
        this.spinner.show();
        if (this.medicationForm.valid) {
            if (this.medicationForm.value.enddate.setHours(0, 0, 0) < this.medicationForm.value.startdate.setHours(0, 0, 0)) {
                this.spinner.hide();
                this.notification.warning({ message: 'End date should be greater than or equal to start date', title: '' });
            }
            else {
                this.medicationVM.id = this.medicationVM.studentMedicationID !== undefined ? this.medicationVM.studentMedicationID : 0;
                this.medicationVM.studentMedicationID = this.medicationVM.studentMedicationID !== undefined ?
                    this.medicationVM.studentMedicationID : 0;
                this.medicationVM.medicationName = this.medicationForm.value.medication;
                this.medicationVM.strength = this.medicationForm.value.strength;
                this.medicationVM.units = this.medicationForm.value.units;
                this.medicationVM.doseRepeatID = this.medicationForm.value.dose;
                this.medicationVM.howTaken = this.medicationForm.value.howtotake;
                this.medicationVM.otherMedication = this.medicationForm.value.othermedication;
                this.medicationVM.startDate = new Date(this.medicationForm.value.startdate).toDateString();
                this.medicationVM.endDate = new Date(this.medicationForm.value.enddate).toDateString();
                this.medicationVM.studentID = this.childVM.studentId;
                this.medicationVM.agencyID = this.agencyId;
                this.medicationVM.dosageQuantityID = 2;
                var msg = '';
                if (this.medicationVM.studentMedicationID === 0) {
                    msg = 'Medication added successfully ';
                }
                else {
                    msg = 'Medication details updated successfully ';
                }
                this.saveMedication(msg);
            }
        }
        else {
            this.spinner.hide();
            this.commonService.validateAllFields(this.medicationForm);
        }
    };
    AgencyStudentDetailsComponent.prototype.saveMedication = function (msg) {
        var _this = this;
        this.apiService.postData(_parent_shared_constant__WEBPACK_IMPORTED_MODULE_2__["ParentAPIURLs"].SaveStudentMedication, this.medicationVM, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.notification.success({ message: msg, title: '' });
                _this.getStudentDetails();
                $('.medication').modal('hide');
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    // Method to delete medication
    AgencyStudentDetailsComponent.prototype.deleteMedication = function (value) {
        var _this = this;
        this.confirmationService.confirm({
            message: 'Do you want to delete this record?',
            accept: function () {
                _this.spinner.show();
                var data = {
                    'studentMedicationID': value.studentMedicationID,
                    'agencyID': _this.commonService.getAgencyId(),
                    'id': value.studentMedicationID,
                    'IsDeleted': true,
                    'DeletedDate': new Date(),
                    'DeletedBy': _this.commonService.getReleventUserId('userdetails'),
                    'studentID': _this.childVM.studentId,
                };
                _this.apiService.postData(_parent_shared_constant__WEBPACK_IMPORTED_MODULE_2__["ParentAPIURLs"].SaveStudentMedication, data, null).subscribe(function (res) {
                    if (res.body.statusCode === 200) {
                        _this.deleteMedicationSuccess(value);
                    }
                    else {
                        _this.spinner.hide();
                        _this.error.unknownError();
                    }
                }, function (err) {
                    _this.spinner.hide();
                    _this.error.commonError(err);
                });
            }
        });
    };
    AgencyStudentDetailsComponent.prototype.deleteMedicationSuccess = function (data) {
        var index = this.medicationList.findIndex(function (r) { return r.studentMedicationID === data.studentMedicationID; });
        this.medicationList.splice(index, 1);
        this.spinner.hide();
        this.notification.success({ message: 'This medication has been deleted successfully', title: '' });
    };
    AgencyStudentDetailsComponent.prototype.getPerticulerMedication = function (value) {
        this.medicationVM.id = value.id;
        this.medicationVM.studentMedicationID = value.studentMedicationID;
        this.medicationVM.medicationName = value.medicationName;
        this.medicationVM.strength = value.strength;
        this.medicationVM.units = value.units;
        this.medicationVM.doseRepeatID = value.doseRepeatID;
        this.medicationVM.howTaken = value.howTaken;
        this.medicationVM.otherMedication = value.otherMedication;
        this.medicationVM.startDate = new Date(value.startDate);
        this.medicationVM.endDate = new Date(value.endDate);
        this.medicationVM.studentID = this.childVM.studentId;
        this.medicationVM.agencyID = this.agencyId;
        this.medicationVM.dosageQuantityID = 2;
        this.createMedicationForm();
    };
    AgencyStudentDetailsComponent.prototype.getAllDoseRepeat = function () {
        var _this = this;
        this.doseList = [];
        var data = {
            'agencyID': this.commonService.getAgencyId()
        };
        this.apiService.postData(_parent_shared_constant__WEBPACK_IMPORTED_MODULE_2__["ParentAPIURLs"].GetAllDoseRepeat, data, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.doseList = res.body.data;
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    // Immunization section
    AgencyStudentDetailsComponent.prototype.getImmunizationType = function () {
        var _this = this;
        this.immunizationtypeListForDeopdown = [];
        var data = {
            'agencyID': this.commonService.getAgencyId()
        };
        this.apiService.postData(_parent_shared_constant__WEBPACK_IMPORTED_MODULE_2__["ParentAPIURLs"].GetImmunizationType, data, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.immunizationtypeListForDeopdown = res.body.data;
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyStudentDetailsComponent.prototype.CheckImmunizationType = function () {
        var _this = this;
        var index = this.immunizationForm.value.immunization;
        this.immunizationtypeListForDeopdown.forEach(function (x) {
            if (x.value.toString() === index) {
                if (x.label === 'other' || x.label === 'Other' || x.label === 'OTHER') {
                    _this.showOthwerImmunization = true;
                    _this.immunizationForm.controls['other'].setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required);
                    _this.immunizationForm.controls['other'].updateValueAndValidity();
                }
                else {
                    _this.showOthwerImmunization = false;
                    _this.immunizationForm.controls['other'].setValue('');
                    _this.immunizationForm.controls['abbrivation'].setValue('');
                    _this.immunizationForm.controls['other'].setValidators(_angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].nullValidator);
                    _this.immunizationForm.controls['other'].updateValueAndValidity();
                }
            }
        });
    };
    AgencyStudentDetailsComponent.prototype.verifyImmunization = function () {
        this.spinner.show();
        if (this.immunizationForm.valid) {
            this.immunizationVM.agencyID = this.agencyId;
            this.immunizationVM.studentID = this.childVM.studentId;
            this.immunizationVM.dateReceived = this.immunizationForm.value.date;
            this.immunizationVM.immunizationID = this.immunizationForm.value.immunization;
            this.immunizationVM.otherImmunization = this.immunizationForm.value.other;
            this.immunizationVM.abbreviation = this.immunizationForm.value.abbrivation;
            this.immunizationVM.studentImmunizationID = this.immunizationVM.studentImmunizationID !== undefined ?
                this.immunizationVM.studentImmunizationID : 0;
            this.immunizationVM.id = this.immunizationVM.studentImmunizationID !== undefined ? this.immunizationVM.studentImmunizationID : 0;
            this.saveImmunization();
        }
        else {
            this.spinner.hide();
            this.commonService.validateAllFields(this.immunizationForm);
        }
    };
    AgencyStudentDetailsComponent.prototype.saveImmunization = function () {
        var _this = this;
        this.apiService.postData(_parent_shared_constant__WEBPACK_IMPORTED_MODULE_2__["ParentAPIURLs"].SaveStudentImmunization, this.immunizationVM, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.getStudentDetails();
                $('.immunization').modal('hide');
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    // Method to delete immunization
    AgencyStudentDetailsComponent.prototype.deleteimmunization = function (value) {
        var _this = this;
        this.confirmationService.confirm({
            message: 'Do you want to delete this record?',
            accept: function () {
                _this.spinner.show();
                var data = {
                    'studentImmunizationID': value.studentImmunizationID,
                    'agencyID': _this.commonService.getAgencyId(),
                    'id': value.studentImmunizationID,
                    'IsDeleted': true,
                    'DeletedDate': new Date(),
                    'DeletedBy': _this.commonService.getReleventUserId('userdetails'),
                    'studentID': _this.childVM.studentId,
                };
                _this.apiService.postData(_parent_shared_constant__WEBPACK_IMPORTED_MODULE_2__["ParentAPIURLs"].SaveStudentImmunization, data, null).subscribe(function (res) {
                    if (res.body.statusCode === 200) {
                        _this.deleteimmunizationSuccess(value);
                    }
                    else {
                        _this.spinner.hide();
                        _this.error.unknownError();
                    }
                }, function (err) {
                    _this.spinner.hide();
                    _this.error.commonError(err);
                });
            }
        });
    };
    AgencyStudentDetailsComponent.prototype.deleteimmunizationSuccess = function (data) {
        var index = this.immunizationList.findIndex(function (r) { return r.studentImmunizationID === data.studentImmunizationID; });
        this.immunizationList.splice(index, 1);
        this.spinner.hide();
        this.notification.success({ message: 'This immunization has been deleted successfully', title: '' });
    };
    AgencyStudentDetailsComponent.prototype.getPerticulerStudentimmunization = function (value) {
        this.immunizationVM.agencyID = this.agencyId;
        this.immunizationVM.studentID = this.childVM.studentId;
        this.immunizationVM.dateReceived = new Date(value.dateReceived);
        this.immunizationVM.immunizationID = value.immunizationID;
        if (value.immunizationName === 'Other' || value.immunizationName === 'other' || value.immunizationName === 'OTHER') {
            this.showOthwerImmunization = true;
        }
        else {
            this.showOthwerImmunization = false;
        }
        this.immunizationVM.otherImmunization = value.otherImmunization;
        this.immunizationVM.abbreviation = value.abbreviation;
        this.immunizationVM.studentImmunizationID = value.studentImmunizationID;
        this.immunizationVM.id = value.studentImmunizationID;
        this.createimmunizationForm();
    };
    AgencyStudentDetailsComponent.prototype.clearImmunization = function () {
        this.showOthwerImmunization = false;
        this.immunizationVM = {};
        this.createimmunizationForm();
    };
    // Disability section
    AgencyStudentDetailsComponent.prototype.verifyDisability = function () {
        var _this = this;
        if (this.disabilitydiscription === '') {
            this.notification.warning({ message: 'Please enter description', title: '' });
        }
        else {
            this.spinner.show();
            var req = {
                'id': this.disabilityId,
                'studentID': this.childVM.studentId,
                'description': this.disabilitydiscription,
                'agencyID': this.agencyId,
            };
            this.apiService.postData(_parent_shared_constant__WEBPACK_IMPORTED_MODULE_2__["ParentAPIURLs"].SaveStudentDisabilities, req, null).subscribe(function (res) {
                if (res.body.statusCode === 200) {
                    _this.getStudentDetails();
                    $('.disability').modal('hide');
                }
                else {
                    _this.spinner.hide();
                    _this.error.unknownError();
                }
            }, function (err) {
                _this.spinner.hide();
                _this.error.commonError(err);
            });
        }
    };
    // Method to delete disability
    AgencyStudentDetailsComponent.prototype.deleteDisability = function (value) {
        var _this = this;
        this.confirmationService.confirm({
            message: 'Do you want to delete this record?',
            accept: function () {
                _this.spinner.show();
                var data = {
                    'agencyID': _this.commonService.getAgencyId(),
                    'id': value.id,
                    'IsDeleted': true,
                    'DeletedDate': new Date(),
                    'DeletedBy': _this.commonService.getReleventUserId('userdetails'),
                    'studentID': _this.childVM.studentId,
                    'description': value.description
                };
                _this.apiService.postData(_parent_shared_constant__WEBPACK_IMPORTED_MODULE_2__["ParentAPIURLs"].SaveStudentDisabilities, data, null).subscribe(function (res) {
                    if (res.body.statusCode === 200) {
                        _this.deleteDisabilitySuccess(value);
                    }
                    else {
                        _this.spinner.hide();
                        _this.error.unknownError();
                    }
                }, function (err) {
                    _this.spinner.hide();
                    _this.error.commonError(err);
                });
            }
        });
    };
    AgencyStudentDetailsComponent.prototype.deleteDisabilitySuccess = function (data) {
        var index = this.disabilityList.findIndex(function (r) { return r.id === data.id; });
        this.disabilityList.splice(index, 1);
        this.spinner.hide();
        this.notification.success({ message: 'This record has been deleted successfully', title: '' });
    };
    // Method to delete Student files
    AgencyStudentDetailsComponent.prototype.deleteStudentfiles = function (value) {
        var _this = this;
        this.confirmationService.confirm({
            message: 'Do you want to delete this files?',
            accept: function () {
                _this.spinner.show();
                var data = {
                    'agencyID': _this.commonService.getAgencyId(),
                    'id': value.id,
                    'DeletedBy': _this.commonService.getReleventUserId('userdetails')
                };
                _this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_12__["AgencyAPIURLs"].DeleteStudentFilesById, data, null).subscribe(function (res) {
                    if (res.body.statusCode === 200) {
                        _this.spinner.show();
                        _this.notification.success({ message: 'This files has been deleted successfully', title: '' });
                        _this.getalluploadedByStudentId();
                    }
                    else {
                        _this.spinner.hide();
                        _this.error.unknownError();
                    }
                }, function (err) {
                    _this.spinner.hide();
                    _this.error.commonError(err);
                });
            }
        });
    };
    AgencyStudentDetailsComponent.prototype.disabiltyDetials = function (value) {
        this.disabilityId = value.id;
        this.disabilitydiscription = value.description;
    };
    AgencyStudentDetailsComponent.prototype.clearDisability = function () {
        this.disabilitydiscription = '';
        this.disabilityId = 0;
    };
    // Child Allergy
    AgencyStudentDetailsComponent.prototype.createAllergyForm = function () {
        if (this.allergyVM.studentAllergiesID === undefined || this.allergyVM.studentAllergiesID === 0) {
            this.allergyForm = this.fb.group({
                allergy: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required],
                allergyname: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required],
                reaction: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required],
                treatment: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required],
                firstobserverddate: [''],
                lastobserveddate: [''],
                comments: ['']
            });
        }
        else {
            this.allergyForm = this.fb.group({
                allergy: [this.allergyVM.allergyTypeID, _angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required],
                allergyname: [this.allergyVM.allergyNameID, _angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required],
                reaction: [this.allergyVM.allergyReactionTypeID, _angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required],
                treatment: [this.allergyVM.treatment, _angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required],
                firstobserverddate: [this.allergyVM.firstAllergyObservation],
                lastobserveddate: [this.allergyVM.lastAllergyObservation],
                comments: [this.allergyVM.allergyComment]
            });
        }
    };
    Object.defineProperty(AgencyStudentDetailsComponent.prototype, "al", {
        get: function () { return this.allergyForm.controls; },
        enumerable: true,
        configurable: true
    });
    AgencyStudentDetailsComponent.prototype.getAllergyType = function () {
        var _this = this;
        var req = {
            'id': this.disabilityId,
            'studentID': this.childVM.studentId,
            'description': this.disabilitydiscription,
            'agencyID': this.agencyId,
        };
        this.apiService.postData(_parent_shared_constant__WEBPACK_IMPORTED_MODULE_2__["ParentAPIURLs"].GetAllergyType, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.allergyType = res.body.data;
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyStudentDetailsComponent.prototype.getAllergyName = function () {
        var _this = this;
        var req = {
            'id': this.disabilityId,
            'studentID': this.childVM.studentId,
            'description': this.disabilitydiscription,
            'agencyID': this.agencyId,
        };
        this.apiService.postData(_parent_shared_constant__WEBPACK_IMPORTED_MODULE_2__["ParentAPIURLs"].GetAllergyName, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.allergyNameList = res.body.data;
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyStudentDetailsComponent.prototype.getAllergyReactionType = function () {
        var _this = this;
        var req = {
            'id': this.disabilityId,
            'studentID': this.childVM.studentId,
            'description': this.disabilitydiscription,
            'agencyID': this.agencyId,
        };
        this.apiService.postData(_parent_shared_constant__WEBPACK_IMPORTED_MODULE_2__["ParentAPIURLs"].GetAllergyReactionType, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.allergyReactionList = res.body.data;
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyStudentDetailsComponent.prototype.verifyAllergy = function () {
        this.spinner.show();
        var firstObDate = this.commonService.getOnlyDate(this.allergyForm.value.firstobserverddate);
        var lastObDate = this.commonService.getOnlyDate(this.allergyForm.value.lastobserveddate);
        if (this.allergyForm.valid) {
            if (firstObDate > lastObDate
                && this.allergyForm.value.firstobserverddate !== '' && this.allergyForm.value.lastobserveddate !== '') {
                this.spinner.hide();
                this.notification.warning({ message: 'First observerd date should be less than Last Observed date', title: '' });
            }
            else {
                this.allergyVM.agencyID = this.agencyId;
                this.allergyVM.allergyTypeID = this.allergyForm.value.allergy;
                this.allergyVM.allergyNameID = this.allergyForm.value.allergyname;
                this.allergyVM.allergyReactionTypeID = this.allergyForm.value.reaction;
                this.allergyVM.treatment = this.allergyForm.value.treatment;
                this.allergyVM.firstAllergyObservation = this.allergyForm.value.firstobserverddate;
                this.allergyVM.lastAllergyObservation = this.allergyForm.value.lastobserveddate;
                this.allergyVM.studentID = this.childVM.studentId;
                this.allergyVM.allergyComment = this.allergyForm.value.comments;
                this.allergyVM.studentAllergiesID = this.allergyVM.studentAllergiesID === undefined ? 0 : this.allergyVM.studentAllergiesID;
                this.allergyVM.id = this.allergyVM.studentAllergiesID === undefined ? 0 : this.allergyVM.studentAllergiesID;
                this.allergyVM.createdBy = this.allergyVM.studentAllergiesID === undefined ? this.commonService.getLoggedInUserId() : null;
                this.allergyVM.modifiedBy = this.allergyVM.studentAllergiesID === undefined ? null : this.commonService.getLoggedInUserId();
                var msg = '';
                if (this.allergyVM.studentAllergiesID === 0) {
                    msg = 'Allergy added successfully';
                }
                else {
                    msg = 'Allergy details updated successfully';
                }
                this.saveAllergy(msg);
            }
        }
        else {
            this.spinner.hide();
            this.commonService.validateAllFields(this.allergyForm);
        }
    };
    AgencyStudentDetailsComponent.prototype.saveAllergy = function (msg) {
        var _this = this;
        this.apiService.postData(_parent_shared_constant__WEBPACK_IMPORTED_MODULE_2__["ParentAPIURLs"].SaveStudentAllergies, this.allergyVM, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.spinner.hide();
                _this.notification.success({ message: msg, title: '' });
                $('.allergies').modal('hide');
                _this.getStudentDetails();
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyStudentDetailsComponent.prototype.getPerticulerAllergyDetaild = function (value) {
        this.allergyVM.allergyTypeID = value.allergyTypeID;
        this.allergyVM.allergyNameID = value.allergyNameID;
        this.allergyVM.allergyReactionTypeID = value.allergyReactionTypeID;
        this.allergyVM.treatment = value.treatment;
        this.allergyVM.firstAllergyObservation = value.firstAllergyObservation !== null ?
            this.commonService.getLocalDateTimeFromUTC(value.firstAllergyObservation) : this.nullDate;
        this.allergyVM.lastAllergyObservation = value.lastAllergyObservation !== null ?
            this.commonService.getLocalDateTimeFromUTC(value.lastAllergyObservation) : this.nullDate;
        this.allergyVM.studentID = value.studentId;
        this.allergyVM.allergyComment = value.allergyComment;
        this.allergyVM.studentAllergiesID = value.studentAllergiesID;
        this.allergyVM.id = value.studentAllergiesID;
        this.createAllergyForm();
    };
    // Method to delete disability
    AgencyStudentDetailsComponent.prototype.deleteAllergy = function (value) {
        var _this = this;
        this.confirmationService.confirm({
            message: 'Do you want to delete this record?',
            accept: function () {
                _this.spinner.show();
                var data = {
                    'agencyID': _this.agencyId,
                    'id': value.studentAllergiesID,
                    'IsDeleted': true,
                    'DeletedDate': new Date(),
                    'DeletedBy': _this.commonService.getReleventUserId('userdetails'),
                    'studentID': _this.childVM.studentId,
                    'description': value.description,
                    'studentAllergiesID': value.studentAllergiesID,
                    'AllergyComment': value.allergyComment
                };
                _this.apiService.postData(_parent_shared_constant__WEBPACK_IMPORTED_MODULE_2__["ParentAPIURLs"].SaveStudentAllergies, data, null).subscribe(function (res) {
                    if (res.body.statusCode === 200) {
                        _this.deleteallergySuccess(value);
                    }
                    else {
                        _this.spinner.hide();
                        _this.error.unknownError();
                    }
                }, function (err) {
                    _this.spinner.hide();
                    _this.error.commonError(err);
                });
            }
        });
    };
    AgencyStudentDetailsComponent.prototype.deleteallergySuccess = function (data) {
        var index = this.allergyList.findIndex(function (r) { return r.studentAllergiesID === data.studentAllergiesID; });
        this.allergyList.splice(index, 1);
        this.spinner.hide();
        this.notification.success({ message: 'This record has been deleted successfully', title: '' });
    };
    AgencyStudentDetailsComponent.prototype.clearallergy = function () {
        this.allergyVM = {};
        this.createAllergyForm();
    };
    AgencyStudentDetailsComponent.prototype.clearMedicationForm = function () {
        this.medicationVM = {};
        this.createMedicationForm();
    };
    AgencyStudentDetailsComponent.prototype.getAuthorizedPersonByStudentId = function () {
        var _this = this;
        this.loader = true;
        this.spinner.show();
        this.authorizedPersonList = [];
        var req = {
            'AgencyID': this.commonService.getAgencyId(),
            'studentID': this.id,
            'IsEmergencyContact': this.showEmergency
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_12__["AgencyAPIURLs"].GetAuthorizedPersonByStudentId, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.authorizedPersonList = res.body.data;
                _this.loader = false;
                _this.spinner.hide();
            }
            else {
                _this.spinner.hide();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyStudentDetailsComponent.prototype.getRestrictedPersonByStudentId = function () {
        var _this = this;
        this.loader = true;
        this.spinner.show();
        this.restrictedPersonList = [];
        var req = {
            'AgencyID': this.commonService.getAgencyId(),
            'studentID': this.id
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_12__["AgencyAPIURLs"].GetRestrictedPersonByStudentId, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.restrictedPersonList = res.body.data;
                _this.loader = false;
                _this.spinner.hide();
            }
            else {
                _this.spinner.hide();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyStudentDetailsComponent.prototype.getalluploadedByStudentId = function () {
        var _this = this;
        this.loader = true;
        this.spinner.show();
        this.studentfileList = [];
        var req = {
            'AgencyID': this.commonService.getAgencyId(),
            'studentID': this.id
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_12__["AgencyAPIURLs"].GetUploadedFilesByStudentId, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.studentfileList = res.body.data;
                _this.loader = false;
                _this.spinner.hide();
            }
            else {
                _this.spinner.hide();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    // Change emeregency label
    AgencyStudentDetailsComponent.prototype.changelable = function () {
        if (this.emeregencyLable === 'All Contact') {
            this.emeregencyLable = 'Emergency Contact';
        }
        else {
            this.emeregencyLable = 'All Contact';
        }
    };
    AgencyStudentDetailsComponent.prototype.getFeeType = function () {
        var _this = this;
        this.loader = true;
        this.spinner.show();
        this.feeTypeList = [];
        var req = {
            'AgencyID': this.commonService.getAgencyId()
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_12__["AgencyAPIURLs"].GetFeeType, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.feeTypeList = res.body.data;
                console.log(_this.feeTypeList, '     FFFFFFFFFFFFFF');
                _this.loader = false;
                _this.spinner.hide();
            }
            else {
                _this.spinner.hide();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    // Recurring Billing Section......................
    AgencyStudentDetailsComponent.prototype.getallclassesByStudentId = function () {
        var _this = this;
        this.loader = true;
        this.spinner.show();
        this.classListBilling = [];
        var req = {
            'AgencyID': this.commonService.getAgencyId(),
            'studentID': this.id
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_12__["AgencyAPIURLs"].GetClassesByStudentID, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.classListBilling = res.body.data;
                _this.loader = false;
                _this.spinner.hide();
            }
            else {
                _this.spinner.hide();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyStudentDetailsComponent.prototype.getAllClassList = function () {
        var _this = this;
        this.classListBilling = [];
        var req = {
            'AgencyID': this.commonService.getAgencyId(),
            'limit': 0,
            'page': this.pageNo
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_12__["AgencyAPIURLs"].GetAllClasses, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.totalRecord = res.body.totalRows;
                _this.classListBilling = res.body.data;
                // this.spinner.hide();
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyStudentDetailsComponent.prototype.CreateRecurringBillingForm = function () {
        if (this.billingVM.Id === undefined || this.billingVM.Id === 0) {
            this.recurringBillingForm = this.fb.group({
                billingtype: ['Program Schedule Based', _angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required],
                ledgertype: ['Sponsor', _angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required],
                transactiontype: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required],
                description: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required],
                billing: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required],
                amount: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required],
                startdate: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required],
                enddate: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required],
                discount: ['']
            });
        }
        else {
            this.recurringBillingForm = this.fb.group({
                billingtype: ['Program Schedule Based', _angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required],
                ledgertype: ['Sponsor', _angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required],
                transactiontype: [this.billingVM.TransactionType, _angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required],
                description: [this.billingVM.BillingDescription, _angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required],
                billing: [this.billingVM.BillingCycle, _angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required],
                amount: [this.billingVM.Amount, _angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required],
                startdate: [this.billingVM.BillingFromDate, _angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required],
                enddate: [this.billingVM.BillingToDate, _angular_forms__WEBPACK_IMPORTED_MODULE_0__["Validators"].required],
                discount: ['']
            });
        }
    };
    AgencyStudentDetailsComponent.prototype.getPerticulerRecurringBilling = function (value) {
        this.billingVM.Id = value.id;
        this.billingVM.AgencyID = value.agencyID;
        this.billingVM.TransactionType = value.transactionType;
        // tslint:disable-next-line: triple-equals
        if (value.classesID != 0) {
            this.billingVM.BillingDescription = value.classesID;
        }
        else {
            this.billingVM.BillingDescription = value.billingDescription;
        }
        this.billingVM.BillingCycle = value.billingCycle;
        this.billingVM.Amount = value.amount;
        this.billingVM.BillingFromDate = new Date(value.billingFromDate);
        this.billingVM.BillingToDate = new Date(value.billingToDate);
        this.recurringId = value.id;
        this.getDescriptionList(value.transactionType);
        this.CreateRecurringBillingForm();
        this.addMode = false;
    };
    AgencyStudentDetailsComponent.prototype.clearRecurringBilling = function () {
        this.billingVM = {};
        this.addMode = true;
        this.recurringId = 0;
        this.descriptionList = [];
        this.CreateRecurringBillingForm();
    };
    Object.defineProperty(AgencyStudentDetailsComponent.prototype, "c", {
        get: function () { return this.recurringBillingForm.controls; },
        enumerable: true,
        configurable: true
    });
    // Update Enroll class data
    AgencyStudentDetailsComponent.prototype.verifyRecurringBillingForm = function () {
        this.spinner.show();
        if (this.recurringBillingForm.valid) {
            if (this.recurringBillingForm.value.enddate.setHours(0, 0, 0) < this.recurringBillingForm.value.startdate.setHours(0, 0, 0)) {
                this.spinner.hide();
                this.notification.warning({ message: 'End date should be greater than or equal to start date', title: '' });
            }
            else {
                this.billingVM.AgencyID = this.commonService.getAgencyId();
                this.billingVM.ParentID = this.reqParentId;
                this.billingVM.StudentID = this.id;
                this.billingVM.Id = this.recurringId;
                this.billingVM.Amount = this.recurringBillingForm.value.amount;
                this.billingVM.BillingFromDate = this.recurringBillingForm.value.startdate;
                this.billingVM.BillingToDate = this.recurringBillingForm.value.enddate;
                this.billingVM.BillingCycle = this.recurringBillingForm.value.billing;
                this.billingVM.BillingDescription = this.recurringBillingForm.value.description;
                this.billingVM.TransactionType = this.recurringBillingForm.value.transactiontype;
                this.addUpdateRecurringBillingUsingAPI(this.billingVM);
            }
        }
        else {
            this.spinner.hide();
            this.commonService.validateAllFields(this.recurringBillingForm);
        }
    };
    AgencyStudentDetailsComponent.prototype.addUpdateRecurringBillingUsingAPI = function (req) {
        var _this = this;
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_12__["AgencyAPIURLs"].SaveRecurringBillingByStudentID, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.spinner.hide();
                _this.flag = false;
                _this.notification.success({
                    // tslint:disable-next-line: triple-equals
                    message: _this.recurringId == 0 ? 'Recurring Billing added successfully' :
                        'Recurring Billing updated successfully', title: ''
                });
                $('.recurringbilling').modal('hide');
                _this.getRecurringBillingByStudentID();
                _this.getallclassesByStudentId();
                _this.spinner.hide();
            }
            else if (res.body.statusCode === 204) {
                _this.spinner.hide();
                _this.notification.warning({ message: 'Please First Enroll for this class', title: '' });
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyStudentDetailsComponent.prototype.getDescriptionList = function (type) {
        this.descriptionList = [];
        this.recurringBillingForm.controls['amount'].setValue('0');
        this.recurringBillingForm.controls['description'].setValue('');
        // tslint:disable-next-line: triple-equals
        if (type == 1) {
            this.getTuitionChargesList();
            // tslint:disable-next-line: triple-equals
        }
        else if (type == 2) {
            this.getOtherChargesList();
            // tslint:disable-next-line: triple-equals
        }
        else if (type == 3) {
            this.getCreditList();
            // tslint:disable-next-line: triple-equals
        }
        else {
            this.recurringBillingForm.controls['description'].setValue('');
        }
    };
    AgencyStudentDetailsComponent.prototype.getTuitionChargesList = function () {
        var _this = this;
        this.classListBilling.map(function (ele) {
            _this.descriptionList.push({ value: ele.classesID, name: ele.className, classEndDate: ele.classEndDate });
        });
    };
    AgencyStudentDetailsComponent.prototype.getOtherChargesList = function () {
        this.descriptionList =
            [
                { value: 'Deposit Charge', name: 'Deposit Charge' },
                { value: 'Parent Refund', name: 'Parent Refund' },
                { value: 'Return Check', name: 'Return Check' },
                { value: 'Tuition Late Fee', name: 'Tuition Late Fee' }
            ];
    };
    AgencyStudentDetailsComponent.prototype.getCreditList = function () {
        this.descriptionList =
            [
                { value: 'Deposit Refund', name: 'Deposit Refund' },
                { value: 'Sibling Discount', name: 'Sibling Discount' },
                { value: 'Subsidy', name: 'Subsidy' },
                { value: 'State Program', name: 'State Program' }
            ];
    };
    AgencyStudentDetailsComponent.prototype.getAmount = function (type) {
        // tslint:disable-next-line: triple-equals
        if (type == 'Deposit Charge') {
            this.recurringBillingForm.controls['amount'].setValue('50');
            // tslint:disable-next-line: triple-equals
        }
        else if (type == 'Parent Refund') {
            this.recurringBillingForm.controls['amount'].setValue('0');
            // tslint:disable-next-line: triple-equals
        }
        else if (type == 'Return Check') {
            this.recurringBillingForm.controls['amount'].setValue('35');
            // tslint:disable-next-line: triple-equals
        }
        else if (type == 'Tuition Late Fee') {
            this.recurringBillingForm.controls['amount'].setValue('25');
            // tslint:disable-next-line: triple-equals
        }
        else if (type == 'Deposit Refund') {
            this.recurringBillingForm.controls['amount'].setValue('0');
            // tslint:disable-next-line: triple-equals
        }
        else if (type == 'Sibling Discount') {
            this.recurringBillingForm.controls['amount'].setValue('5');
        }
        else if (type == 'Subsidy') {
            this.recurringBillingForm.controls['amount'].setValue('0');
        }
        else if (type == 'State Program') {
            this.recurringBillingForm.controls['amount'].setValue('0');
        }
        else {
            for (var i = 0; i < this.classListBilling.length; i++) {
                // tslint:disable-next-line: triple-equals
                if (this.classListBilling[i].classesID == type) {
                    this.recurringBillingForm.controls['amount'].setValue(this.classListBilling[i].fees);
                    this.EnrolEndtDate = new Date(this.classListBilling[i].classEndDate);
                    break;
                }
                else {
                    this.recurringBillingForm.controls['amount'].setValue('');
                    this.EnrolEndtDate = 0;
                }
            }
        }
    };
    AgencyStudentDetailsComponent.prototype.getRecurringBillingByStudentID = function () {
        var _this = this;
        this.recurringBillingList = [];
        var req = {
            'AgencyID': this.commonService.getAgencyId(),
            'ParentID': this.reqParentId,
            'StudentID': this.id
        };
        this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_12__["AgencyAPIURLs"].GetRecurringBillingByStudentID, req, null).subscribe(function (res) {
            if (res.body.statusCode === 200) {
                _this.recurringBillingList = res.body.data;
                console.log('Recurring Billing ...........', _this.recurringBillingList);
                _this.spinner.hide();
            }
            else {
                _this.spinner.hide();
                _this.error.unknownError();
            }
        }, function (err) {
            _this.spinner.hide();
            _this.error.commonError(err);
        });
    };
    AgencyStudentDetailsComponent.prototype.deleteRecurringBilling = function (value) {
        var _this = this;
        this.confirmationService.confirm({
            message: 'Do you want to delete this Recurring Billing?',
            accept: function () {
                _this.spinner.show();
                value.IsDeleted = true;
                value.DeletedDate = new Date();
                value.DeletedBy = _this.commonService.getAgencyId();
                _this.apiService.postData(_shared_constatant__WEBPACK_IMPORTED_MODULE_12__["AgencyAPIURLs"].SaveRecurringBillingByStudentID, value, null).subscribe(function (res) {
                    if (res.body.statusCode === 200) {
                        _this.getRecurringBillingByStudentID();
                    }
                    else if (res.body.statusCode === 988) {
                        _this.spinner.hide();
                        _this.notification.warning({ message: res.body.message, title: '' });
                    }
                    else if (res.body.statusCode === 903) {
                        _this.spinner.hide();
                        _this.notification.warning({ message: res.body.message, title: '' });
                    }
                    else {
                        _this.spinner.hide();
                        _this.notification.warning({ message: res.body.message, title: '' });
                    }
                }, function (err) {
                    _this.spinner.hide();
                    _this.error.commonError(err);
                });
            }
        });
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('pform'),
        __metadata("design:type", Object)
    ], AgencyStudentDetailsComponent.prototype, "pform", void 0);
    AgencyStudentDetailsComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-agency-student-details',
            template: __webpack_require__(/*! ./agency-student-details.component.html */ "./src/app/layout/agency-admin/components/agency-student-details/agency-student-details.component.html"),
            styles: [__webpack_require__(/*! ./agency-student-details.component.css */ "./src/app/layout/agency-admin/components/agency-student-details/agency-student-details.component.css")]
        }),
        __metadata("design:paramtypes", [_shared_services_agency_api_service_agency_api_service__WEBPACK_IMPORTED_MODULE_11__["AgencyApiService"], _shared_services_error_handler_error_handler_service__WEBPACK_IMPORTED_MODULE_6__["ErrorHandlerService"],
            ngx_spinner__WEBPACK_IMPORTED_MODULE_5__["NgxSpinnerService"], _shared_services_notification_service_notification_service__WEBPACK_IMPORTED_MODULE_10__["NotificationService"],
            _shared_services_common_common_service__WEBPACK_IMPORTED_MODULE_7__["CommonService"], _angular_forms__WEBPACK_IMPORTED_MODULE_0__["FormBuilder"], _angular_router__WEBPACK_IMPORTED_MODULE_8__["ActivatedRoute"],
            primeng_api__WEBPACK_IMPORTED_MODULE_9__["ConfirmationService"]])
    ], AgencyStudentDetailsComponent);
    return AgencyStudentDetailsComponent;
}());



/***/ })

}]);
//# sourceMappingURL=agency-admin-agency-admin-module.js.map