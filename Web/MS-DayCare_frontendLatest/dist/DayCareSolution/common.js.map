{"version":3,"sources":["webpack:///./node_modules/angular2-csv/Angular2-csv.js","webpack:///./src/app/layout/admin/shared/constant.ts","webpack:///./src/app/layout/admin/shared/services/admin-api.service.ts","webpack:///./src/app/layout/agency-admin/components/shared/services/agency-api-service/agency-api.service.ts","webpack:///./src/app/layout/parent/shared/services/parent-api-service.ts","webpack:///./src/app/shared/constdata.ts","webpack:///./src/app/shared/services/constant.ts","webpack:///./src/app/shared/services/lauout-api-service.ts"],"names":[],"mappings":";;;;;;;;;;AAAa;AACb;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,mBAAmB,aAAa,GAAG;AAC5E;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,gBAAgB;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,IAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,IAAI;AACnB;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,WAAW,IAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,IAAI;AACf,WAAW,MAAM;AACjB;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,oBAAoB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChLA;AAAA;AAAO,IAAM,YAAY,GAAG;IACxB,oBAAoB;IACpB,qBAAqB,EAAE,kCAAkC;IACzD,mBAAmB,EAAE,gCAAgC;IACrD,wBAAwB,EAAE,qC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","file":"common.js","sourcesContent":["\"use strict\";\nexports.__esModule = true;\nvar CsvConfigConsts = (function () {\n    function CsvConfigConsts() {\n    }\n    return CsvConfigConsts;\n}());\nCsvConfigConsts.EOL = \"\\r\\n\";\nCsvConfigConsts.BOM = \"\\ufeff\";\nCsvConfigConsts.DEFAULT_FIELD_SEPARATOR = ',';\nCsvConfigConsts.DEFAULT_DECIMAL_SEPARATOR = '.';\nCsvConfigConsts.DEFAULT_QUOTE = '\"';\nCsvConfigConsts.DEFAULT_SHOW_TITLE = false;\nCsvConfigConsts.DEFAULT_TITLE = 'My Report';\nCsvConfigConsts.DEFAULT_FILENAME = 'mycsv.csv';\nCsvConfigConsts.DEFAULT_SHOW_LABELS = false;\nCsvConfigConsts.DEFAULT_USE_BOM = true;\nCsvConfigConsts.DEFAULT_HEADER = [];\nexports.CsvConfigConsts = CsvConfigConsts;\nexports.ConfigDefaults = {\n    filename: CsvConfigConsts.DEFAULT_FILENAME,\n    fieldSeparator: CsvConfigConsts.DEFAULT_FIELD_SEPARATOR,\n    quoteStrings: CsvConfigConsts.DEFAULT_QUOTE,\n    decimalseparator: CsvConfigConsts.DEFAULT_DECIMAL_SEPARATOR,\n    showLabels: CsvConfigConsts.DEFAULT_SHOW_LABELS,\n    showTitle: CsvConfigConsts.DEFAULT_SHOW_TITLE,\n    title: CsvConfigConsts.DEFAULT_TITLE,\n    useBom: CsvConfigConsts.DEFAULT_USE_BOM,\n    headers: CsvConfigConsts.DEFAULT_HEADER\n};\nvar Angular2Csv = (function () {\n    function Angular2Csv(DataJSON, filename, options) {\n        this.csv = \"\";\n        var config = options || {};\n        this.data = typeof DataJSON != 'object' ? JSON.parse(DataJSON) : DataJSON;\n        this._options = objectAssign({}, exports.ConfigDefaults, config);\n        if (this._options.filename) {\n            this._options.filename = filename;\n        }\n        this.generateCsv();\n    }\n    /**\n     * Generate and Download Csv\n     */\n    Angular2Csv.prototype.generateCsv = function () {\n        if (this._options.useBom) {\n            this.csv += CsvConfigConsts.BOM;\n        }\n        if (this._options.showTitle) {\n            this.csv += this._options.title + '\\r\\n\\n';\n        }\n        this.getHeaders();\n        this.getBody();\n        if (this.csv == '') {\n            console.log(\"Invalid data\");\n            return;\n        }\n        var blob = new Blob([this.csv], { \"type\": \"text/csv;charset=utf8;\" });\n        if (navigator.msSaveBlob) {\n            var filename = this._options.filename.replace(/ /g, \"_\") + \".csv\";\n            navigator.msSaveBlob(blob, filename);\n        }\n        else {\n            var uri = 'data:attachment/csv;charset=utf-8,' + encodeURI(this.csv);\n            var link = document.createElement(\"a\");\n            link.href = URL.createObjectURL(blob);\n            link.setAttribute('visibility', 'hidden');\n            link.download = this._options.filename.replace(/ /g, \"_\") + \".csv\";\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        }\n    };\n    /**\n     * Create Headers\n     */\n    Angular2Csv.prototype.getHeaders = function () {\n        if (this._options.headers.length > 0) {\n            var row = \"\";\n            for (var _i = 0, _a = this._options.headers; _i < _a.length; _i++) {\n                var column = _a[_i];\n                row += column + this._options.fieldSeparator;\n            }\n            row = row.slice(0, -1);\n            this.csv += row + CsvConfigConsts.EOL;\n        }\n    };\n    /**\n     * Create Body\n     */\n    Angular2Csv.prototype.getBody = function () {\n        for (var i = 0; i < this.data.length; i++) {\n            var row = \"\";\n            for (var index in this.data[i]) {\n                row += this.formartData(this.data[i][index]) + this._options.fieldSeparator;\n                ;\n            }\n            row = row.slice(0, -1);\n            this.csv += row + CsvConfigConsts.EOL;\n        }\n    };\n    /**\n     * Format Data\n     * @param {any} data\n     */\n    Angular2Csv.prototype.formartData = function (data) {\n        if (this._options.decimalseparator === 'locale' && this.isFloat(data)) {\n            return data.toLocaleString();\n        }\n        if (this._options.decimalseparator !== '.' && this.isFloat(data)) {\n            return data.toString().replace('.', this._options.decimalseparator);\n        }\n        if (typeof data === 'string') {\n            data = data.replace(/\"/g, '\"\"');\n            if (this._options.quoteStrings || data.indexOf(',') > -1 || data.indexOf('\\n') > -1 || data.indexOf('\\r') > -1) {\n                data = this._options.quoteStrings + data + this._options.quoteStrings;\n            }\n            return data;\n        }\n        if (typeof data === 'boolean') {\n            return data ? 'TRUE' : 'FALSE';\n        }\n        return data;\n    };\n    /**\n     * Check if is Float\n     * @param {any} input\n     */\n    Angular2Csv.prototype.isFloat = function (input) {\n        return +input === input && (!isFinite(input) || Boolean(input % 1));\n    };\n    return Angular2Csv;\n}());\nexports.Angular2Csv = Angular2Csv;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n/**\n * Convet to Object\n * @param {any} val\n */\nfunction toObject(val) {\n    if (val === null || val === undefined) {\n        throw new TypeError('Object.assign cannot be called with null or undefined');\n    }\n    return Object(val);\n}\n/**\n * Assign data  to new Object\n * @param {any}   target\n * @param {any[]} ...source\n */\nfunction objectAssign(target) {\n    var source = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        source[_i - 1] = arguments[_i];\n    }\n    var from;\n    var to = toObject(target);\n    var symbols;\n    for (var s = 1; s < arguments.length; s++) {\n        from = Object(arguments[s]);\n        for (var key in from) {\n            if (hasOwnProperty.call(from, key)) {\n                to[key] = from[key];\n            }\n        }\n        if (Object.getOwnPropertySymbols) {\n            symbols = Object.getOwnPropertySymbols(from);\n            for (var i = 0; i < symbols.length; i++) {\n                if (propIsEnumerable.call(from, symbols[i])) {\n                    to[symbols[i]] = from[symbols[i]];\n                }\n            }\n        }\n    }\n    return to;\n}\n","export const AdminAPIURLs = {\r\n    // Agency admin list\r\n    SaveAgencyInformation: 'api/Agency/SaveAgencyInformation',\r\n    GetAllAgencyDetails: 'api/Agency/GetAllAgencyDetails',\r\n    GetAllPricingPlanDetails: 'api/Agency/GetAllPricingPlanDetails',\r\n    GetAllState: 'api/Masters/GetAllState',\r\n    // Pricing plan\r\n    SavePricingPlanInformation: 'api/Agency/SavePricingPlanInformation',\r\n    // For Parent List\r\n    GetClassroomJoinParent: 'api/Parent/GetClassroomJoinParent',\r\n\r\n     // Save State\r\n     SaveState: 'api/Masters/SaveState',\r\n\r\n      // Save State\r\n      SaveCity: 'api/Masters/SaveCity',\r\n\r\n    // Plan Page\r\n    SaveSubscriptionInformation: 'api/Agency/SaveSubscriptionInformation',\r\n    GetCountDetailsForSuperAdmin: 'api/Agency/GetCountDetailsForSuperAdmin',\r\n    GetAllAgencyPlanDetails : 'api/Agency/GetAllAgencyPlanDetails',\r\n    ActivateDeactivateAgency: 'api/Agency/ActivateDeactivateAgency',\r\n\r\n    // For Information Video\r\n    MultipleImageUpload : 'api/common/MultipleImageUpload',\r\n    SaveInfoVideo: 'api/Masters/SaveInfoVideo',\r\n\r\n    // For Text Plan\r\n    SaveTextMessagePlan: 'api/Message/SaveTextMessagePlan',\r\n    GetTextMessagePlan: 'api/Message/GetTextMessagePlan',\r\n    ActivateDeactivateTextMessagePlan: 'api/Message/ActivateDeactivateTextMessagePlan',\r\n};\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport { ApiService } from '../../../../shared/services/api-service/api.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminApiService {\r\n  constructor(private apiService: ApiService) { }\r\n\r\n  /**API to get projects by  user email  */\r\n\r\n  getData(url, data) {\r\n    return this.apiService.getData(url, data);\r\n  }\r\n\r\n  postData(url, data, params) {\r\n    return this.apiService.postData(url, data, params);\r\n  }\r\n\r\n  deleteData(url, params) {\r\n    return this.apiService.deleteData(url, params);\r\n  }\r\n  uploadImage(url, data, params) {\r\n\r\n      const headers = new HttpHeaders();\r\n      params = headers.set('Content-Type', 'multipart/form-data');\r\n      return this.apiService.postData(url, data, params);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ApiService } from '../../../../../../shared/services/api-service/api.service';\r\nimport { HttpHeaders } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AgencyApiService {\r\n\r\n  constructor(private apiService: ApiService) { }\r\n\r\n  /**API to get projects by  user email  */\r\n\r\n  getData(url, data) {\r\n    return this.apiService.getData(url, data);\r\n  }\r\n\r\n  postData(url, data, params) {\r\n    return this.apiService.postData(url, data, params);\r\n  }\r\n\r\n  deleteData(url, params) {\r\n    return this.apiService.deleteData(url, params);\r\n  }\r\n  uploadImage(url, data, params) {\r\n\r\n      const headers = new HttpHeaders();\r\n      params = headers.set('Content-Type', 'multipart/form-data');\r\n      return this.apiService.postData(url, data, params);\r\n    }\r\n\r\n    postDataV2(url, data, params) {\r\n      return this.apiService.postDataV2(url, data, params);\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { ApiService } from '../../../../shared/services/api-service/api.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ParentApiService {\r\n\r\n  constructor(private apiService: ApiService) { }\r\n\r\n  /**API to get projects by  user email  */\r\n\r\n  getData(url, data) {\r\n    return this.apiService.getData(url, data);\r\n  }\r\n\r\n  postData(url, data, params) {\r\n    return this.apiService.postData(url, data, params);\r\n  }\r\n\r\n  deleteData(url, params) {\r\n    return this.apiService.deleteData(url, params);\r\n  }\r\n  uploadImage(url, data, params) {\r\n\r\n      const headers = new HttpHeaders();\r\n      params = headers.set('Content-Type', 'multipart/form-data');\r\n      return this.apiService.postData(url, data, params);\r\n    }\r\n\r\n    postDataV2(url, data, params) {\r\n      return this.apiService.postDataV2(url, data, params);\r\n    }\r\n}\r\n","\r\n/** Following publish key use to payment againts subscription that will pay\r\n to Owner of this key (Super Admin) */\r\nexport const AdminStripKey = {\r\n    /**  Test publishable Key  */\r\n    // publishableKey: 'pk_test_2GT92tIJ9wYUNtjwQZS855N1',\r\n    /**  Live publishable Key  */\r\n     publishableKey: 'pk_live_EQuf8rr46EGcFyC0pNniomEF',\r\n\r\n};\r\n\r\n/**Client id is use to redirect to the stripe account create page */\r\n/**Following are two different keys for test and live */\r\nexport const StripClintID = {\r\n    /**Test Mode Client ID */\r\n    // ClientID: 'ca_EqyWiw8fq7VHqbfxp2vvUgpHLOZumCeS',\r\n    /**Live Mode Client ID */\r\n     ClientID: 'ca_EqyWgq54bDmWdEY0njt7JhCzm9YcEecI'\r\n};\r\n\r\n\r\n","export const LayoutAPIURLs = {\r\n    TeacherClockInClockOut: 'api/Teacher/TeacherClockInClockOut',\r\n    DeleteToken: 'api/Masters/DeleteDeviceToken'\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport { ApiService } from './api-service/api.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LayoutApiService {\r\n\r\n  constructor(private apiService: ApiService) { }\r\n\r\n  /**API to get projects by  user email  */\r\n\r\n  getData(url, data) {\r\n    return this.apiService.getData(url, data);\r\n  }\r\n\r\n  postData(url, data, params) {\r\n    return this.apiService.postData(url, data, params);\r\n  }\r\n\r\n  deleteData(url, params) {\r\n    return this.apiService.deleteData(url, params);\r\n  }\r\n}\r\n"],"sourceRoot":""}